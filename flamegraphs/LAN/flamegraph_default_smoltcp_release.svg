<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1014" onload="init(evt)" viewBox="0 0 1200 1014" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1014" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="997.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="997.00"> </text><svg id="frames" x="10" width="1180" total_samples="31033"><g><title>[ld-linux-x86-64.so.2] (4 samples, 0.01%)</title><rect x="0.0032%" y="933" width="0.0129%" height="15" fill="rgb(227,0,7)" fg:x="1" fg:w="4"/><text x="0.2532%" y="943.50"></text></g><g><title>[ld-linux-x86-64.so.2] (4 samples, 0.01%)</title><rect x="0.0032%" y="917" width="0.0129%" height="15" fill="rgb(217,0,24)" fg:x="1" fg:w="4"/><text x="0.2532%" y="927.50"></text></g><g><title>[ld-linux-x86-64.so.2] (4 samples, 0.01%)</title><rect x="0.0032%" y="901" width="0.0129%" height="15" fill="rgb(221,193,54)" fg:x="1" fg:w="4"/><text x="0.2532%" y="911.50"></text></g><g><title>[ld-linux-x86-64.so.2] (4 samples, 0.01%)</title><rect x="0.0032%" y="885" width="0.0129%" height="15" fill="rgb(248,212,6)" fg:x="1" fg:w="4"/><text x="0.2532%" y="895.50"></text></g><g><title>[ld-linux-x86-64.so.2] (4 samples, 0.01%)</title><rect x="0.0032%" y="869" width="0.0129%" height="15" fill="rgb(208,68,35)" fg:x="1" fg:w="4"/><text x="0.2532%" y="879.50"></text></g><g><title>proxy (24 samples, 0.08%)</title><rect x="0.0032%" y="949" width="0.0773%" height="15" fill="rgb(232,128,0)" fg:x="1" fg:w="24"/><text x="0.2532%" y="959.50"></text></g><g><title>ret_from_fork (16 samples, 0.05%)</title><rect x="0.0290%" y="933" width="0.0516%" height="15" fill="rgb(207,160,47)" fg:x="9" fg:w="16"/><text x="0.2790%" y="943.50"></text></g><g><title>schedule_tail (16 samples, 0.05%)</title><rect x="0.0290%" y="917" width="0.0516%" height="15" fill="rgb(228,23,34)" fg:x="9" fg:w="16"/><text x="0.2790%" y="927.50"></text></g><g><title>finish_task_switch.isra.0 (16 samples, 0.05%)</title><rect x="0.0290%" y="901" width="0.0516%" height="15" fill="rgb(218,30,26)" fg:x="9" fg:w="16"/><text x="0.2790%" y="911.50"></text></g><g><title>__perf_event_task_sched_in (16 samples, 0.05%)</title><rect x="0.0290%" y="885" width="0.0516%" height="15" fill="rgb(220,122,19)" fg:x="9" fg:w="16"/><text x="0.2790%" y="895.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (16 samples, 0.05%)</title><rect x="0.0290%" y="869" width="0.0516%" height="15" fill="rgb(250,228,42)" fg:x="9" fg:w="16"/><text x="0.2790%" y="879.50"></text></g><g><title>send (4 samples, 0.01%)</title><rect x="0.0902%" y="917" width="0.0129%" height="15" fill="rgb(240,193,28)" fg:x="28" fg:w="4"/><text x="0.3402%" y="927.50"></text></g><g><title>entry_SYSCALL_64 (4 samples, 0.01%)</title><rect x="0.0902%" y="901" width="0.0129%" height="15" fill="rgb(216,20,37)" fg:x="28" fg:w="4"/><text x="0.3402%" y="911.50"></text></g><g><title>[[heap]] (8 samples, 0.03%)</title><rect x="0.0806%" y="933" width="0.0258%" height="15" fill="rgb(206,188,39)" fg:x="25" fg:w="8"/><text x="0.3306%" y="943.50"></text></g><g><title>asm_exc_page_fault (4 samples, 0.01%)</title><rect x="0.1063%" y="837" width="0.0129%" height="15" fill="rgb(217,207,13)" fg:x="33" fg:w="4"/><text x="0.3563%" y="847.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (43 samples, 0.14%)</title><rect x="0.1063%" y="885" width="0.1386%" height="15" fill="rgb(231,73,38)" fg:x="33" fg:w="43"/><text x="0.3563%" y="895.50"></text></g><g><title>&lt;std::io::stdio::StdoutRaw as std::io::Write&gt;::write_all (43 samples, 0.14%)</title><rect x="0.1063%" y="869" width="0.1386%" height="15" fill="rgb(225,20,46)" fg:x="33" fg:w="43"/><text x="0.3563%" y="879.50"></text></g><g><title>__write (43 samples, 0.14%)</title><rect x="0.1063%" y="853" width="0.1386%" height="15" fill="rgb(210,31,41)" fg:x="33" fg:w="43"/><text x="0.3563%" y="863.50"></text></g><g><title>entry_SYSCALL_64 (39 samples, 0.13%)</title><rect x="0.1192%" y="837" width="0.1257%" height="15" fill="rgb(221,200,47)" fg:x="37" fg:w="39"/><text x="0.3692%" y="847.50"></text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write_all (44 samples, 0.14%)</title><rect x="0.1063%" y="917" width="0.1418%" height="15" fill="rgb(226,26,5)" fg:x="33" fg:w="44"/><text x="0.3563%" y="927.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_all (44 samples, 0.14%)</title><rect x="0.1063%" y="901" width="0.1418%" height="15" fill="rgb(249,33,26)" fg:x="33" fg:w="44"/><text x="0.3563%" y="911.50"></text></g><g><title>[anon] (48 samples, 0.15%)</title><rect x="0.1063%" y="933" width="0.1547%" height="15" fill="rgb(235,183,28)" fg:x="33" fg:w="48"/><text x="0.3563%" y="943.50"></text></g><g><title>&lt;tokio::time::sleep::Sleep as core::future::future::Future&gt;::poll (4 samples, 0.01%)</title><rect x="0.2481%" y="917" width="0.0129%" height="15" fill="rgb(221,5,38)" fg:x="77" fg:w="4"/><text x="0.4981%" y="927.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::register_by_ref (4 samples, 0.01%)</title><rect x="0.2481%" y="901" width="0.0129%" height="15" fill="rgb(247,18,42)" fg:x="77" fg:w="4"/><text x="0.4981%" y="911.50"></text></g><g><title>mio::sys::unix::waker::eventfd::WakerInternal::wake (4 samples, 0.01%)</title><rect x="0.2481%" y="885" width="0.0129%" height="15" fill="rgb(241,131,45)" fg:x="77" fg:w="4"/><text x="0.4981%" y="895.50"></text></g><g><title>&lt;&amp;std::process::ChildStdin as std::io::Write&gt;::write (4 samples, 0.01%)</title><rect x="0.2481%" y="869" width="0.0129%" height="15" fill="rgb(249,31,29)" fg:x="77" fg:w="4"/><text x="0.4981%" y="879.50"></text></g><g><title>__write (4 samples, 0.01%)</title><rect x="0.2481%" y="853" width="0.0129%" height="15" fill="rgb(225,111,53)" fg:x="77" fg:w="4"/><text x="0.4981%" y="863.50"></text></g><g><title>entry_SYSCALL_64 (4 samples, 0.01%)</title><rect x="0.2481%" y="837" width="0.0129%" height="15" fill="rgb(238,160,17)" fg:x="77" fg:w="4"/><text x="0.4981%" y="847.50"></text></g><g><title>std::sys::pal::unix::thread::guard::current (9 samples, 0.03%)</title><rect x="0.2610%" y="869" width="0.0290%" height="15" fill="rgb(214,148,48)" fg:x="81" fg:w="9"/><text x="0.5110%" y="879.50"></text></g><g><title>pthread_getattr_np (9 samples, 0.03%)</title><rect x="0.2610%" y="853" width="0.0290%" height="15" fill="rgb(232,36,49)" fg:x="81" fg:w="9"/><text x="0.5110%" y="863.50"></text></g><g><title>malloc (9 samples, 0.03%)</title><rect x="0.2610%" y="837" width="0.0290%" height="15" fill="rgb(209,103,24)" fg:x="81" fg:w="9"/><text x="0.5110%" y="847.50"></text></g><g><title>[libc.so.6] (9 samples, 0.03%)</title><rect x="0.2610%" y="821" width="0.0290%" height="15" fill="rgb(229,88,8)" fg:x="81" fg:w="9"/><text x="0.5110%" y="831.50"></text></g><g><title>[libc.so.6] (9 samples, 0.03%)</title><rect x="0.2610%" y="805" width="0.0290%" height="15" fill="rgb(213,181,19)" fg:x="81" fg:w="9"/><text x="0.5110%" y="815.50"></text></g><g><title>[libc.so.6] (9 samples, 0.03%)</title><rect x="0.2610%" y="789" width="0.0290%" height="15" fill="rgb(254,191,54)" fg:x="81" fg:w="9"/><text x="0.5110%" y="799.50"></text></g><g><title>asm_exc_page_fault (4 samples, 0.01%)</title><rect x="0.2771%" y="773" width="0.0129%" height="15" fill="rgb(241,83,37)" fg:x="86" fg:w="4"/><text x="0.5271%" y="783.50"></text></g><g><title>exc_page_fault (4 samples, 0.01%)</title><rect x="0.2771%" y="757" width="0.0129%" height="15" fill="rgb(233,36,39)" fg:x="86" fg:w="4"/><text x="0.5271%" y="767.50"></text></g><g><title>do_user_addr_fault (4 samples, 0.01%)</title><rect x="0.2771%" y="741" width="0.0129%" height="15" fill="rgb(226,3,54)" fg:x="86" fg:w="4"/><text x="0.5271%" y="751.50"></text></g><g><title>down_read (4 samples, 0.01%)</title><rect x="0.2771%" y="725" width="0.0129%" height="15" fill="rgb(245,192,40)" fg:x="86" fg:w="4"/><text x="0.5271%" y="735.50"></text></g><g><title>rwsem_down_read_slowpath (4 samples, 0.01%)</title><rect x="0.2771%" y="709" width="0.0129%" height="15" fill="rgb(238,167,29)" fg:x="86" fg:w="4"/><text x="0.5271%" y="719.50"></text></g><g><title>schedule_preempt_disabled (4 samples, 0.01%)</title><rect x="0.2771%" y="693" width="0.0129%" height="15" fill="rgb(232,182,51)" fg:x="86" fg:w="4"/><text x="0.5271%" y="703.50"></text></g><g><title>schedule (4 samples, 0.01%)</title><rect x="0.2771%" y="677" width="0.0129%" height="15" fill="rgb(231,60,39)" fg:x="86" fg:w="4"/><text x="0.5271%" y="687.50"></text></g><g><title>__schedule (4 samples, 0.01%)</title><rect x="0.2771%" y="661" width="0.0129%" height="15" fill="rgb(208,69,12)" fg:x="86" fg:w="4"/><text x="0.5271%" y="671.50"></text></g><g><title>finish_task_switch.isra.0 (4 samples, 0.01%)</title><rect x="0.2771%" y="645" width="0.0129%" height="15" fill="rgb(235,93,37)" fg:x="86" fg:w="4"/><text x="0.5271%" y="655.50"></text></g><g><title>__perf_event_task_sched_in (4 samples, 0.01%)</title><rect x="0.2771%" y="629" width="0.0129%" height="15" fill="rgb(213,116,39)" fg:x="86" fg:w="4"/><text x="0.5271%" y="639.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (4 samples, 0.01%)</title><rect x="0.2771%" y="613" width="0.0129%" height="15" fill="rgb(222,207,29)" fg:x="86" fg:w="4"/><text x="0.5271%" y="623.50"></text></g><g><title>std::sys::pal::unix::locks::futex_mutex::Mutex::lock_contended (21 samples, 0.07%)</title><rect x="0.2900%" y="837" width="0.0677%" height="15" fill="rgb(206,96,30)" fg:x="90" fg:w="21"/><text x="0.5400%" y="847.50"></text></g><g><title>syscall (21 samples, 0.07%)</title><rect x="0.2900%" y="821" width="0.0677%" height="15" fill="rgb(218,138,4)" fg:x="90" fg:w="21"/><text x="0.5400%" y="831.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (21 samples, 0.07%)</title><rect x="0.2900%" y="805" width="0.0677%" height="15" fill="rgb(250,191,14)" fg:x="90" fg:w="21"/><text x="0.5400%" y="815.50"></text></g><g><title>do_syscall_64 (21 samples, 0.07%)</title><rect x="0.2900%" y="789" width="0.0677%" height="15" fill="rgb(239,60,40)" fg:x="90" fg:w="21"/><text x="0.5400%" y="799.50"></text></g><g><title>__x64_sys_futex (21 samples, 0.07%)</title><rect x="0.2900%" y="773" width="0.0677%" height="15" fill="rgb(206,27,48)" fg:x="90" fg:w="21"/><text x="0.5400%" y="783.50"></text></g><g><title>do_futex (21 samples, 0.07%)</title><rect x="0.2900%" y="757" width="0.0677%" height="15" fill="rgb(225,35,8)" fg:x="90" fg:w="21"/><text x="0.5400%" y="767.50"></text></g><g><title>futex_wait (21 samples, 0.07%)</title><rect x="0.2900%" y="741" width="0.0677%" height="15" fill="rgb(250,213,24)" fg:x="90" fg:w="21"/><text x="0.5400%" y="751.50"></text></g><g><title>futex_wait_queue_me (21 samples, 0.07%)</title><rect x="0.2900%" y="725" width="0.0677%" height="15" fill="rgb(247,123,22)" fg:x="90" fg:w="21"/><text x="0.5400%" y="735.50"></text></g><g><title>schedule (21 samples, 0.07%)</title><rect x="0.2900%" y="709" width="0.0677%" height="15" fill="rgb(231,138,38)" fg:x="90" fg:w="21"/><text x="0.5400%" y="719.50"></text></g><g><title>__schedule (21 samples, 0.07%)</title><rect x="0.2900%" y="693" width="0.0677%" height="15" fill="rgb(231,145,46)" fg:x="90" fg:w="21"/><text x="0.5400%" y="703.50"></text></g><g><title>finish_task_switch.isra.0 (21 samples, 0.07%)</title><rect x="0.2900%" y="677" width="0.0677%" height="15" fill="rgb(251,118,11)" fg:x="90" fg:w="21"/><text x="0.5400%" y="687.50"></text></g><g><title>__perf_event_task_sched_in (21 samples, 0.07%)</title><rect x="0.2900%" y="661" width="0.0677%" height="15" fill="rgb(217,147,25)" fg:x="90" fg:w="21"/><text x="0.5400%" y="671.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (21 samples, 0.07%)</title><rect x="0.2900%" y="645" width="0.0677%" height="15" fill="rgb(247,81,37)" fg:x="90" fg:w="21"/><text x="0.5400%" y="655.50"></text></g><g><title>__floattidf (5 samples, 0.02%)</title><rect x="0.8217%" y="741" width="0.0161%" height="15" fill="rgb(209,12,38)" fg:x="255" fg:w="5"/><text x="1.0717%" y="751.50"></text></g><g><title>@plt (9 samples, 0.03%)</title><rect x="0.8572%" y="725" width="0.0290%" height="15" fill="rgb(227,1,9)" fg:x="266" fg:w="9"/><text x="1.1072%" y="735.50"></text></g><g><title>powf64 (46 samples, 0.15%)</title><rect x="0.8378%" y="741" width="0.1482%" height="15" fill="rgb(248,47,43)" fg:x="260" fg:w="46"/><text x="1.0878%" y="751.50"></text></g><g><title>[libm.so.6] (31 samples, 0.10%)</title><rect x="0.8862%" y="725" width="0.0999%" height="15" fill="rgb(221,10,30)" fg:x="275" fg:w="31"/><text x="1.1362%" y="735.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (76 samples, 0.24%)</title><rect x="0.9860%" y="741" width="0.2449%" height="15" fill="rgb(210,229,1)" fg:x="306" fg:w="76"/><text x="1.2360%" y="751.50"></text></g><g><title>clock_gettime (72 samples, 0.23%)</title><rect x="0.9989%" y="725" width="0.2320%" height="15" fill="rgb(222,148,37)" fg:x="310" fg:w="72"/><text x="1.2489%" y="735.50"></text></g><g><title>__vdso_clock_gettime (38 samples, 0.12%)</title><rect x="1.1085%" y="709" width="0.1225%" height="15" fill="rgb(234,67,33)" fg:x="344" fg:w="38"/><text x="1.3585%" y="719.50"></text></g><g><title>std::time::Instant::now (8 samples, 0.03%)</title><rect x="1.2309%" y="741" width="0.0258%" height="15" fill="rgb(247,98,35)" fg:x="382" fg:w="8"/><text x="1.4809%" y="751.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::transition_worker_to_parked (11 samples, 0.04%)</title><rect x="1.2567%" y="741" width="0.0354%" height="15" fill="rgb(247,138,52)" fg:x="390" fg:w="11"/><text x="1.5067%" y="751.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into (89 samples, 0.29%)</title><rect x="1.2986%" y="741" width="0.2868%" height="15" fill="rgb(213,79,30)" fg:x="403" fg:w="89"/><text x="1.5486%" y="751.50"></text></g><g><title>intel_pmu_disable_all (19 samples, 0.06%)</title><rect x="2.3201%" y="533" width="0.0612%" height="15" fill="rgb(246,177,23)" fg:x="720" fg:w="19"/><text x="2.5701%" y="543.50"></text></g><g><title>__perf_event_task_sched_out (27 samples, 0.09%)</title><rect x="2.2976%" y="549" width="0.0870%" height="15" fill="rgb(230,62,27)" fg:x="713" fg:w="27"/><text x="2.5476%" y="559.50"></text></g><g><title>cpuacct_charge (17 samples, 0.05%)</title><rect x="2.4619%" y="501" width="0.0548%" height="15" fill="rgb(216,154,8)" fg:x="764" fg:w="17"/><text x="2.7119%" y="511.50"></text></g><g><title>update_curr (28 samples, 0.09%)</title><rect x="2.4393%" y="517" width="0.0902%" height="15" fill="rgb(244,35,45)" fg:x="757" fg:w="28"/><text x="2.6893%" y="527.50"></text></g><g><title>update_min_vruntime (4 samples, 0.01%)</title><rect x="2.5167%" y="501" width="0.0129%" height="15" fill="rgb(251,115,12)" fg:x="781" fg:w="4"/><text x="2.7667%" y="511.50"></text></g><g><title>dequeue_entity (37 samples, 0.12%)</title><rect x="2.4200%" y="533" width="0.1192%" height="15" fill="rgb(240,54,50)" fg:x="751" fg:w="37"/><text x="2.6700%" y="543.50"></text></g><g><title>dequeue_task_fair (49 samples, 0.16%)</title><rect x="2.3846%" y="549" width="0.1579%" height="15" fill="rgb(233,84,52)" fg:x="740" fg:w="49"/><text x="2.6346%" y="559.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (58 samples, 0.19%)</title><rect x="2.6166%" y="517" width="0.1869%" height="15" fill="rgb(207,117,47)" fg:x="812" fg:w="58"/><text x="2.8666%" y="527.50"></text></g><g><title>__perf_event_task_sched_in (74 samples, 0.24%)</title><rect x="2.5876%" y="533" width="0.2385%" height="15" fill="rgb(249,43,39)" fg:x="803" fg:w="74"/><text x="2.8376%" y="543.50"></text></g><g><title>__raw_callee_save___pv_queued_spin_unlock (7 samples, 0.02%)</title><rect x="2.8035%" y="517" width="0.0226%" height="15" fill="rgb(209,38,44)" fg:x="870" fg:w="7"/><text x="3.0535%" y="527.50"></text></g><g><title>__raw_callee_save___pv_queued_spin_unlock (4 samples, 0.01%)</title><rect x="2.8260%" y="533" width="0.0129%" height="15" fill="rgb(236,212,23)" fg:x="877" fg:w="4"/><text x="3.0760%" y="543.50"></text></g><g><title>asm_sysvec_hyperv_callback (5 samples, 0.02%)</title><rect x="2.8389%" y="533" width="0.0161%" height="15" fill="rgb(242,79,21)" fg:x="881" fg:w="5"/><text x="3.0889%" y="543.50"></text></g><g><title>sysvec_hyperv_callback (5 samples, 0.02%)</title><rect x="2.8389%" y="517" width="0.0161%" height="15" fill="rgb(211,96,35)" fg:x="881" fg:w="5"/><text x="3.0889%" y="527.50"></text></g><g><title>irq_exit_rcu (5 samples, 0.02%)</title><rect x="2.8389%" y="501" width="0.0161%" height="15" fill="rgb(253,215,40)" fg:x="881" fg:w="5"/><text x="3.0889%" y="511.50"></text></g><g><title>__softirqentry_text_start (5 samples, 0.02%)</title><rect x="2.8389%" y="485" width="0.0161%" height="15" fill="rgb(211,81,21)" fg:x="881" fg:w="5"/><text x="3.0889%" y="495.50"></text></g><g><title>net_rx_action (5 samples, 0.02%)</title><rect x="2.8389%" y="469" width="0.0161%" height="15" fill="rgb(208,190,38)" fg:x="881" fg:w="5"/><text x="3.0889%" y="479.50"></text></g><g><title>__napi_poll (5 samples, 0.02%)</title><rect x="2.8389%" y="453" width="0.0161%" height="15" fill="rgb(235,213,38)" fg:x="881" fg:w="5"/><text x="3.0889%" y="463.50"></text></g><g><title>netvsc_poll (5 samples, 0.02%)</title><rect x="2.8389%" y="437" width="0.0161%" height="15" fill="rgb(237,122,38)" fg:x="881" fg:w="5"/><text x="3.0889%" y="447.50"></text></g><g><title>finish_task_switch.isra.0 (98 samples, 0.32%)</title><rect x="2.5425%" y="549" width="0.3158%" height="15" fill="rgb(244,218,35)" fg:x="789" fg:w="98"/><text x="2.7925%" y="559.50"></text></g><g><title>pick_next_task_fair (21 samples, 0.07%)</title><rect x="2.8679%" y="549" width="0.0677%" height="15" fill="rgb(240,68,47)" fg:x="890" fg:w="21"/><text x="3.1179%" y="559.50"></text></g><g><title>newidle_balance (14 samples, 0.05%)</title><rect x="2.8905%" y="533" width="0.0451%" height="15" fill="rgb(210,16,53)" fg:x="897" fg:w="14"/><text x="3.1405%" y="543.50"></text></g><g><title>pick_next_task_idle (8 samples, 0.03%)</title><rect x="2.9356%" y="549" width="0.0258%" height="15" fill="rgb(235,124,12)" fg:x="911" fg:w="8"/><text x="3.1856%" y="559.50"></text></g><g><title>put_prev_task_fair (9 samples, 0.03%)</title><rect x="2.9614%" y="549" width="0.0290%" height="15" fill="rgb(224,169,11)" fg:x="919" fg:w="9"/><text x="3.2114%" y="559.50"></text></g><g><title>put_prev_entity (4 samples, 0.01%)</title><rect x="2.9775%" y="533" width="0.0129%" height="15" fill="rgb(250,166,2)" fg:x="924" fg:w="4"/><text x="3.2275%" y="543.50"></text></g><g><title>futex_wait_queue_me (278 samples, 0.90%)</title><rect x="2.1107%" y="597" width="0.8958%" height="15" fill="rgb(242,216,29)" fg:x="655" fg:w="278"/><text x="2.3607%" y="607.50"></text></g><g><title>schedule (257 samples, 0.83%)</title><rect x="2.1783%" y="581" width="0.8282%" height="15" fill="rgb(230,116,27)" fg:x="676" fg:w="257"/><text x="2.4283%" y="591.50"></text></g><g><title>__schedule (245 samples, 0.79%)</title><rect x="2.2170%" y="565" width="0.7895%" height="15" fill="rgb(228,99,48)" fg:x="688" fg:w="245"/><text x="2.4670%" y="575.50"></text></g><g><title>update_rq_clock (4 samples, 0.01%)</title><rect x="2.9936%" y="549" width="0.0129%" height="15" fill="rgb(253,11,6)" fg:x="929" fg:w="4"/><text x="3.2436%" y="559.50"></text></g><g><title>get_futex_key (6 samples, 0.02%)</title><rect x="3.0580%" y="581" width="0.0193%" height="15" fill="rgb(247,143,39)" fg:x="949" fg:w="6"/><text x="3.3080%" y="591.50"></text></g><g><title>__x64_sys_futex (333 samples, 1.07%)</title><rect x="2.0204%" y="645" width="1.0731%" height="15" fill="rgb(236,97,10)" fg:x="627" fg:w="333"/><text x="2.2704%" y="655.50"></text></g><g><title>do_futex (329 samples, 1.06%)</title><rect x="2.0333%" y="629" width="1.0602%" height="15" fill="rgb(233,208,19)" fg:x="631" fg:w="329"/><text x="2.2833%" y="639.50"></text></g><g><title>futex_wait (311 samples, 1.00%)</title><rect x="2.0913%" y="613" width="1.0022%" height="15" fill="rgb(216,164,2)" fg:x="649" fg:w="311"/><text x="2.3413%" y="623.50"></text></g><g><title>futex_wait_setup (27 samples, 0.09%)</title><rect x="3.0065%" y="597" width="0.0870%" height="15" fill="rgb(220,129,5)" fg:x="933" fg:w="27"/><text x="3.2565%" y="607.50"></text></g><g><title>hash_futex (5 samples, 0.02%)</title><rect x="3.0774%" y="581" width="0.0161%" height="15" fill="rgb(242,17,10)" fg:x="955" fg:w="5"/><text x="3.3274%" y="591.50"></text></g><g><title>__get_user_8 (21 samples, 0.07%)</title><rect x="3.2159%" y="597" width="0.0677%" height="15" fill="rgb(242,107,0)" fg:x="998" fg:w="21"/><text x="3.4659%" y="607.50"></text></g><g><title>__rseq_handle_notify_resume (32 samples, 0.10%)</title><rect x="3.1902%" y="613" width="0.1031%" height="15" fill="rgb(251,28,31)" fg:x="990" fg:w="32"/><text x="3.4402%" y="623.50"></text></g><g><title>blkcg_maybe_throttle_current (4 samples, 0.01%)</title><rect x="3.2933%" y="613" width="0.0129%" height="15" fill="rgb(233,223,10)" fg:x="1022" fg:w="4"/><text x="3.5433%" y="623.50"></text></g><g><title>mem_cgroup_handle_over_high (4 samples, 0.01%)</title><rect x="3.3062%" y="613" width="0.0129%" height="15" fill="rgb(215,21,27)" fg:x="1026" fg:w="4"/><text x="3.5562%" y="623.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (431 samples, 1.39%)</title><rect x="1.9592%" y="677" width="1.3888%" height="15" fill="rgb(232,23,21)" fg:x="608" fg:w="431"/><text x="2.2092%" y="687.50"></text></g><g><title>do_syscall_64 (420 samples, 1.35%)</title><rect x="1.9947%" y="661" width="1.3534%" height="15" fill="rgb(244,5,23)" fg:x="619" fg:w="420"/><text x="2.2447%" y="671.50"></text></g><g><title>syscall_exit_to_user_mode (79 samples, 0.25%)</title><rect x="3.0935%" y="645" width="0.2546%" height="15" fill="rgb(226,81,46)" fg:x="960" fg:w="79"/><text x="3.3435%" y="655.50"></text></g><g><title>exit_to_user_mode_prepare (72 samples, 0.23%)</title><rect x="3.1160%" y="629" width="0.2320%" height="15" fill="rgb(247,70,30)" fg:x="967" fg:w="72"/><text x="3.3660%" y="639.50"></text></g><g><title>switch_fpu_return (9 samples, 0.03%)</title><rect x="3.3190%" y="613" width="0.0290%" height="15" fill="rgb(212,68,19)" fg:x="1030" fg:w="9"/><text x="3.5690%" y="623.50"></text></g><g><title>std::sys::pal::unix::locks::futex_condvar::Condvar::wait (494 samples, 1.59%)</title><rect x="1.7884%" y="709" width="1.5919%" height="15" fill="rgb(240,187,13)" fg:x="555" fg:w="494"/><text x="2.0384%" y="719.50"></text></g><g><title>syscall (460 samples, 1.48%)</title><rect x="1.8980%" y="693" width="1.4823%" height="15" fill="rgb(223,113,26)" fg:x="589" fg:w="460"/><text x="2.1480%" y="703.50"></text></g><g><title>syscall_return_via_sysret (10 samples, 0.03%)</title><rect x="3.3480%" y="677" width="0.0322%" height="15" fill="rgb(206,192,2)" fg:x="1039" fg:w="10"/><text x="3.5980%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;[core::option::Option&lt;core::task::wake::Waker&gt;: 32]&gt; (22 samples, 0.07%)</title><rect x="3.4286%" y="693" width="0.0709%" height="15" fill="rgb(241,108,4)" fg:x="1064" fg:w="22"/><text x="3.6786%" y="703.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time (68 samples, 0.22%)</title><rect x="3.3803%" y="709" width="0.2191%" height="15" fill="rgb(247,173,49)" fg:x="1049" fg:w="68"/><text x="3.6303%" y="719.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::poll (25 samples, 0.08%)</title><rect x="3.5188%" y="693" width="0.0806%" height="15" fill="rgb(224,114,35)" fg:x="1092" fg:w="25"/><text x="3.7688%" y="703.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (20 samples, 0.06%)</title><rect x="3.5349%" y="677" width="0.0644%" height="15" fill="rgb(245,159,27)" fg:x="1097" fg:w="20"/><text x="3.7849%" y="687.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_expiration (17 samples, 0.05%)</title><rect x="3.5446%" y="661" width="0.0548%" height="15" fill="rgb(245,172,44)" fg:x="1100" fg:w="17"/><text x="3.7946%" y="671.50"></text></g><g><title>__vdso_clock_gettime (32 samples, 0.10%)</title><rect x="3.7605%" y="661" width="0.1031%" height="15" fill="rgb(236,23,11)" fg:x="1167" fg:w="32"/><text x="4.0105%" y="671.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (65 samples, 0.21%)</title><rect x="3.6574%" y="693" width="0.2095%" height="15" fill="rgb(205,117,38)" fg:x="1135" fg:w="65"/><text x="3.9074%" y="703.50"></text></g><g><title>clock_gettime (58 samples, 0.19%)</title><rect x="3.6800%" y="677" width="0.1869%" height="15" fill="rgb(237,72,25)" fg:x="1142" fg:w="58"/><text x="3.9300%" y="687.50"></text></g><g><title>std::time::Instant::now (14 samples, 0.05%)</title><rect x="3.8765%" y="693" width="0.0451%" height="15" fill="rgb(244,70,9)" fg:x="1203" fg:w="14"/><text x="4.1265%" y="703.50"></text></g><g><title>&lt;mio::event::events::Iter as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.04%)</title><rect x="3.9957%" y="677" width="0.0354%" height="15" fill="rgb(217,125,39)" fg:x="1240" fg:w="11"/><text x="4.2457%" y="687.50"></text></g><g><title>[libc.so.6] (9 samples, 0.03%)</title><rect x="4.2213%" y="645" width="0.0290%" height="15" fill="rgb(235,36,10)" fg:x="1310" fg:w="9"/><text x="4.4713%" y="655.50"></text></g><g><title>entry_SYSCALL_64 (8 samples, 0.03%)</title><rect x="4.2503%" y="645" width="0.0258%" height="15" fill="rgb(251,123,47)" fg:x="1319" fg:w="8"/><text x="4.5003%" y="655.50"></text></g><g><title>__fdget (6 samples, 0.02%)</title><rect x="4.5145%" y="581" width="0.0193%" height="15" fill="rgb(221,13,13)" fg:x="1401" fg:w="6"/><text x="4.7645%" y="591.50"></text></g><g><title>__fget_light (21 samples, 0.07%)</title><rect x="4.5339%" y="581" width="0.0677%" height="15" fill="rgb(238,131,9)" fg:x="1407" fg:w="21"/><text x="4.7839%" y="591.50"></text></g><g><title>__fget_files (11 samples, 0.04%)</title><rect x="4.5661%" y="565" width="0.0354%" height="15" fill="rgb(211,50,8)" fg:x="1417" fg:w="11"/><text x="4.8161%" y="575.50"></text></g><g><title>__put_user_nocheck_4 (18 samples, 0.06%)</title><rect x="4.6112%" y="581" width="0.0580%" height="15" fill="rgb(245,182,24)" fg:x="1431" fg:w="18"/><text x="4.8612%" y="591.50"></text></g><g><title>_raw_write_lock_irq (4 samples, 0.01%)</title><rect x="4.6757%" y="581" width="0.0129%" height="15" fill="rgb(242,14,37)" fg:x="1451" fg:w="4"/><text x="4.9257%" y="591.50"></text></g><g><title>ep_done_scan (5 samples, 0.02%)</title><rect x="4.6886%" y="581" width="0.0161%" height="15" fill="rgb(246,228,12)" fg:x="1455" fg:w="5"/><text x="4.9386%" y="591.50"></text></g><g><title>eventfd_poll (8 samples, 0.03%)</title><rect x="4.7401%" y="565" width="0.0258%" height="15" fill="rgb(213,55,15)" fg:x="1471" fg:w="8"/><text x="4.9901%" y="575.50"></text></g><g><title>ep_item_poll.isra.0 (33 samples, 0.11%)</title><rect x="4.7047%" y="581" width="0.1063%" height="15" fill="rgb(209,9,3)" fg:x="1460" fg:w="33"/><text x="4.9547%" y="591.50"></text></g><g><title>tun_chr_poll (13 samples, 0.04%)</title><rect x="4.7691%" y="565" width="0.0419%" height="15" fill="rgb(230,59,30)" fg:x="1480" fg:w="13"/><text x="5.0191%" y="575.50"></text></g><g><title>tun_get (8 samples, 0.03%)</title><rect x="4.7852%" y="549" width="0.0258%" height="15" fill="rgb(209,121,21)" fg:x="1485" fg:w="8"/><text x="5.0352%" y="559.50"></text></g><g><title>fput (6 samples, 0.02%)</title><rect x="4.8110%" y="581" width="0.0193%" height="15" fill="rgb(220,109,13)" fg:x="1493" fg:w="6"/><text x="5.0610%" y="591.50"></text></g><g><title>fput_many (4 samples, 0.01%)</title><rect x="4.8303%" y="581" width="0.0129%" height="15" fill="rgb(232,18,1)" fg:x="1499" fg:w="4"/><text x="5.0803%" y="591.50"></text></g><g><title>mutex_lock (14 samples, 0.05%)</title><rect x="4.8432%" y="581" width="0.0451%" height="15" fill="rgb(215,41,42)" fg:x="1503" fg:w="14"/><text x="5.0932%" y="591.50"></text></g><g><title>queued_write_lock_slowpath (5 samples, 0.02%)</title><rect x="4.8916%" y="581" width="0.0161%" height="15" fill="rgb(224,123,36)" fg:x="1518" fg:w="5"/><text x="5.1416%" y="591.50"></text></g><g><title>hrtimer_active (4 samples, 0.01%)</title><rect x="4.9302%" y="565" width="0.0129%" height="15" fill="rgb(240,125,3)" fg:x="1530" fg:w="4"/><text x="5.1802%" y="575.50"></text></g><g><title>hrtimer_init_sleeper (4 samples, 0.01%)</title><rect x="4.9431%" y="565" width="0.0129%" height="15" fill="rgb(205,98,50)" fg:x="1534" fg:w="4"/><text x="5.1931%" y="575.50"></text></g><g><title>hrtimer_start_range_ns (5 samples, 0.02%)</title><rect x="4.9560%" y="565" width="0.0161%" height="15" fill="rgb(205,185,37)" fg:x="1538" fg:w="5"/><text x="5.2060%" y="575.50"></text></g><g><title>hrtimer_try_to_cancel.part.0 (8 samples, 0.03%)</title><rect x="4.9721%" y="565" width="0.0258%" height="15" fill="rgb(238,207,15)" fg:x="1543" fg:w="8"/><text x="5.2221%" y="575.50"></text></g><g><title>intel_pmu_disable_all (23 samples, 0.07%)</title><rect x="5.1042%" y="517" width="0.0741%" height="15" fill="rgb(213,199,42)" fg:x="1584" fg:w="23"/><text x="5.3542%" y="527.50"></text></g><g><title>__perf_event_task_sched_out (31 samples, 0.10%)</title><rect x="5.0881%" y="533" width="0.0999%" height="15" fill="rgb(235,201,11)" fg:x="1579" fg:w="31"/><text x="5.3381%" y="543.50"></text></g><g><title>cpuacct_charge (16 samples, 0.05%)</title><rect x="5.3201%" y="485" width="0.0516%" height="15" fill="rgb(207,46,11)" fg:x="1651" fg:w="16"/><text x="5.5701%" y="495.50"></text></g><g><title>update_curr (36 samples, 0.12%)</title><rect x="5.2589%" y="501" width="0.1160%" height="15" fill="rgb(241,35,35)" fg:x="1632" fg:w="36"/><text x="5.5089%" y="511.50"></text></g><g><title>dequeue_task_fair (62 samples, 0.20%)</title><rect x="5.1880%" y="533" width="0.1998%" height="15" fill="rgb(243,32,47)" fg:x="1610" fg:w="62"/><text x="5.4380%" y="543.50"></text></g><g><title>dequeue_entity (50 samples, 0.16%)</title><rect x="5.2267%" y="517" width="0.1611%" height="15" fill="rgb(247,202,23)" fg:x="1622" fg:w="50"/><text x="5.4767%" y="527.50"></text></g><g><title>update_load_avg (4 samples, 0.01%)</title><rect x="5.3749%" y="501" width="0.0129%" height="15" fill="rgb(219,102,11)" fg:x="1668" fg:w="4"/><text x="5.6249%" y="511.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (378 samples, 1.22%)</title><rect x="5.4684%" y="501" width="1.2181%" height="15" fill="rgb(243,110,44)" fg:x="1697" fg:w="378"/><text x="5.7184%" y="511.50"></text></g><g><title>__perf_event_task_sched_in (393 samples, 1.27%)</title><rect x="5.4426%" y="517" width="1.2664%" height="15" fill="rgb(222,74,54)" fg:x="1689" fg:w="393"/><text x="5.6926%" y="527.50"></text></g><g><title>__raw_callee_save___pv_queued_spin_unlock (7 samples, 0.02%)</title><rect x="6.6864%" y="501" width="0.0226%" height="15" fill="rgb(216,99,12)" fg:x="2075" fg:w="7"/><text x="6.9364%" y="511.50"></text></g><g><title>__raw_callee_save___pv_queued_spin_unlock (5 samples, 0.02%)</title><rect x="6.7090%" y="517" width="0.0161%" height="15" fill="rgb(226,22,26)" fg:x="2082" fg:w="5"/><text x="6.9590%" y="527.50"></text></g><g><title>finish_task_switch.isra.0 (418 samples, 1.35%)</title><rect x="5.3878%" y="533" width="1.3470%" height="15" fill="rgb(217,163,10)" fg:x="1672" fg:w="418"/><text x="5.6378%" y="543.50"></text></g><g><title>pick_next_task_fair (11 samples, 0.04%)</title><rect x="6.7348%" y="533" width="0.0354%" height="15" fill="rgb(213,25,53)" fg:x="2090" fg:w="11"/><text x="6.9848%" y="543.50"></text></g><g><title>newidle_balance (10 samples, 0.03%)</title><rect x="6.7380%" y="517" width="0.0322%" height="15" fill="rgb(252,105,26)" fg:x="2091" fg:w="10"/><text x="6.9880%" y="527.50"></text></g><g><title>pick_next_task_idle (9 samples, 0.03%)</title><rect x="6.7702%" y="533" width="0.0290%" height="15" fill="rgb(220,39,43)" fg:x="2101" fg:w="9"/><text x="7.0202%" y="543.50"></text></g><g><title>__update_idle_core (6 samples, 0.02%)</title><rect x="6.7799%" y="517" width="0.0193%" height="15" fill="rgb(229,68,48)" fg:x="2104" fg:w="6"/><text x="7.0299%" y="527.50"></text></g><g><title>put_prev_task_fair (6 samples, 0.02%)</title><rect x="6.7992%" y="533" width="0.0193%" height="15" fill="rgb(252,8,32)" fg:x="2110" fg:w="6"/><text x="7.0492%" y="543.50"></text></g><g><title>schedule_hrtimeout_range_clock (598 samples, 1.93%)</title><rect x="4.9141%" y="581" width="1.9270%" height="15" fill="rgb(223,20,43)" fg:x="1525" fg:w="598"/><text x="5.1641%" y="591.50">s..</text></g><g><title>schedule (572 samples, 1.84%)</title><rect x="4.9979%" y="565" width="1.8432%" height="15" fill="rgb(229,81,49)" fg:x="1551" fg:w="572"/><text x="5.2479%" y="575.50">s..</text></g><g><title>__schedule (565 samples, 1.82%)</title><rect x="5.0205%" y="549" width="1.8206%" height="15" fill="rgb(236,28,36)" fg:x="1558" fg:w="565"/><text x="5.2705%" y="559.50">_..</text></g><g><title>update_rq_clock (5 samples, 0.02%)</title><rect x="6.8250%" y="533" width="0.0161%" height="15" fill="rgb(249,185,26)" fg:x="2118" fg:w="5"/><text x="7.0750%" y="543.50"></text></g><g><title>sched_clock_cpu (4 samples, 0.01%)</title><rect x="6.8282%" y="517" width="0.0129%" height="15" fill="rgb(249,174,33)" fg:x="2119" fg:w="4"/><text x="7.0782%" y="527.50"></text></g><g><title>do_epoll_wait (767 samples, 2.47%)</title><rect x="4.3792%" y="597" width="2.4716%" height="15" fill="rgb(233,201,37)" fg:x="1359" fg:w="767"/><text x="4.6292%" y="607.50">do..</text></g><g><title>ktime_get_ts64 (10 samples, 0.03%)</title><rect x="6.8508%" y="597" width="0.0322%" height="15" fill="rgb(221,78,26)" fg:x="2126" fg:w="10"/><text x="7.1008%" y="607.50"></text></g><g><title>__x64_sys_epoll_wait (794 samples, 2.56%)</title><rect x="4.3373%" y="613" width="2.5586%" height="15" fill="rgb(250,127,30)" fg:x="1346" fg:w="794"/><text x="4.5873%" y="623.50">__..</text></g><g><title>timespec64_add_safe (4 samples, 0.01%)</title><rect x="6.8830%" y="597" width="0.0129%" height="15" fill="rgb(230,49,44)" fg:x="2136" fg:w="4"/><text x="7.1330%" y="607.50"></text></g><g><title>amd_clear_divider (4 samples, 0.01%)</title><rect x="6.9088%" y="597" width="0.0129%" height="15" fill="rgb(229,67,23)" fg:x="2144" fg:w="4"/><text x="7.1588%" y="607.50"></text></g><g><title>__get_user_8 (19 samples, 0.06%)</title><rect x="7.0022%" y="565" width="0.0612%" height="15" fill="rgb(249,83,47)" fg:x="2173" fg:w="19"/><text x="7.2522%" y="575.50"></text></g><g><title>__rseq_handle_notify_resume (33 samples, 0.11%)</title><rect x="6.9603%" y="581" width="0.1063%" height="15" fill="rgb(215,43,3)" fg:x="2160" fg:w="33"/><text x="7.2103%" y="591.50"></text></g><g><title>blkcg_maybe_throttle_current (9 samples, 0.03%)</title><rect x="7.0667%" y="581" width="0.0290%" height="15" fill="rgb(238,154,13)" fg:x="2193" fg:w="9"/><text x="7.3167%" y="591.50"></text></g><g><title>mem_cgroup_handle_over_high (7 samples, 0.02%)</title><rect x="7.0957%" y="581" width="0.0226%" height="15" fill="rgb(219,56,2)" fg:x="2202" fg:w="7"/><text x="7.3457%" y="591.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (887 samples, 2.86%)</title><rect x="4.2761%" y="645" width="2.8582%" height="15" fill="rgb(233,0,4)" fg:x="1327" fg:w="887"/><text x="4.5261%" y="655.50">en..</text></g><g><title>do_syscall_64 (877 samples, 2.83%)</title><rect x="4.3083%" y="629" width="2.8260%" height="15" fill="rgb(235,30,7)" fg:x="1337" fg:w="877"/><text x="4.5583%" y="639.50">do..</text></g><g><title>syscall_exit_to_user_mode (74 samples, 0.24%)</title><rect x="6.8959%" y="613" width="0.2385%" height="15" fill="rgb(250,79,13)" fg:x="2140" fg:w="74"/><text x="7.1459%" y="623.50"></text></g><g><title>exit_to_user_mode_prepare (66 samples, 0.21%)</title><rect x="6.9217%" y="597" width="0.2127%" height="15" fill="rgb(211,146,34)" fg:x="2148" fg:w="66"/><text x="7.1717%" y="607.50"></text></g><g><title>switch_fpu_return (5 samples, 0.02%)</title><rect x="7.1182%" y="581" width="0.0161%" height="15" fill="rgb(228,22,38)" fg:x="2209" fg:w="5"/><text x="7.3682%" y="591.50"></text></g><g><title>mio::sys::unix::selector::epoll::Selector::select (968 samples, 3.12%)</title><rect x="4.0409%" y="677" width="3.1193%" height="15" fill="rgb(235,168,5)" fg:x="1254" fg:w="968"/><text x="4.2909%" y="687.50">mio..</text></g><g><title>epoll_wait (945 samples, 3.05%)</title><rect x="4.1150%" y="661" width="3.0451%" height="15" fill="rgb(221,155,16)" fg:x="1277" fg:w="945"/><text x="4.3650%" y="671.50">epo..</text></g><g><title>syscall_return_via_sysret (8 samples, 0.03%)</title><rect x="7.1343%" y="645" width="0.0258%" height="15" fill="rgb(215,215,53)" fg:x="2214" fg:w="8"/><text x="7.3843%" y="655.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::schedule (7 samples, 0.02%)</title><rect x="7.1762%" y="645" width="0.0226%" height="15" fill="rgb(223,4,10)" fg:x="2227" fg:w="7"/><text x="7.4262%" y="655.50"></text></g><g><title>tokio::runtime::io::driver::Driver::turn (1,020 samples, 3.29%)</title><rect x="3.9216%" y="693" width="3.2868%" height="15" fill="rgb(234,103,6)" fg:x="1217" fg:w="1020"/><text x="4.1716%" y="703.50">tok..</text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::wake (15 samples, 0.05%)</title><rect x="7.1601%" y="677" width="0.0483%" height="15" fill="rgb(227,97,0)" fg:x="2222" fg:w="15"/><text x="7.4101%" y="687.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (10 samples, 0.03%)</title><rect x="7.1762%" y="661" width="0.0322%" height="15" fill="rgb(234,150,53)" fg:x="2227" fg:w="10"/><text x="7.4262%" y="671.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Parker::park (1,722 samples, 5.55%)</title><rect x="1.6789%" y="725" width="5.5489%" height="15" fill="rgb(228,201,54)" fg:x="521" fg:w="1722"/><text x="1.9289%" y="735.50">tokio::..</text></g><g><title>tokio::runtime::time::Driver::park_internal (1,126 samples, 3.63%)</title><rect x="3.5994%" y="709" width="3.6284%" height="15" fill="rgb(222,22,37)" fg:x="1117" fg:w="1126"/><text x="3.8494%" y="719.50">toki..</text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (6 samples, 0.02%)</title><rect x="7.2085%" y="693" width="0.0193%" height="15" fill="rgb(237,53,32)" fg:x="2237" fg:w="6"/><text x="7.4585%" y="703.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_expiration (6 samples, 0.02%)</title><rect x="7.2085%" y="677" width="0.0193%" height="15" fill="rgb(233,25,53)" fg:x="2237" fg:w="6"/><text x="7.4585%" y="687.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park_timeout (1,750 samples, 5.64%)</title><rect x="1.5983%" y="741" width="5.6392%" height="15" fill="rgb(210,40,34)" fg:x="496" fg:w="1750"/><text x="1.8483%" y="751.50">tokio::..</text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="7.4952%" y="709" width="0.0129%" height="15" fill="rgb(241,220,44)" fg:x="2326" fg:w="4"/><text x="7.7452%" y="719.50"></text></g><g><title>asm_sysvec_hyperv_callback (5 samples, 0.02%)</title><rect x="7.6757%" y="597" width="0.0161%" height="15" fill="rgb(235,28,35)" fg:x="2382" fg:w="5"/><text x="7.9257%" y="607.50"></text></g><g><title>sysvec_hyperv_callback (5 samples, 0.02%)</title><rect x="7.6757%" y="581" width="0.0161%" height="15" fill="rgb(210,56,17)" fg:x="2382" fg:w="5"/><text x="7.9257%" y="591.50"></text></g><g><title>irq_exit_rcu (5 samples, 0.02%)</title><rect x="7.6757%" y="565" width="0.0161%" height="15" fill="rgb(224,130,29)" fg:x="2382" fg:w="5"/><text x="7.9257%" y="575.50"></text></g><g><title>__softirqentry_text_start (5 samples, 0.02%)</title><rect x="7.6757%" y="549" width="0.0161%" height="15" fill="rgb(235,212,8)" fg:x="2382" fg:w="5"/><text x="7.9257%" y="559.50"></text></g><g><title>net_rx_action (5 samples, 0.02%)</title><rect x="7.6757%" y="533" width="0.0161%" height="15" fill="rgb(223,33,50)" fg:x="2382" fg:w="5"/><text x="7.9257%" y="543.50"></text></g><g><title>__napi_poll (5 samples, 0.02%)</title><rect x="7.6757%" y="517" width="0.0161%" height="15" fill="rgb(219,149,13)" fg:x="2382" fg:w="5"/><text x="7.9257%" y="527.50"></text></g><g><title>netvsc_poll (5 samples, 0.02%)</title><rect x="7.6757%" y="501" width="0.0161%" height="15" fill="rgb(250,156,29)" fg:x="2382" fg:w="5"/><text x="7.9257%" y="511.50"></text></g><g><title>select_task_rq_fair (14 samples, 0.05%)</title><rect x="7.7015%" y="597" width="0.0451%" height="15" fill="rgb(216,193,19)" fg:x="2390" fg:w="14"/><text x="7.9515%" y="607.50"></text></g><g><title>available_idle_cpu (5 samples, 0.02%)</title><rect x="7.7305%" y="581" width="0.0161%" height="15" fill="rgb(216,135,14)" fg:x="2399" fg:w="5"/><text x="7.9805%" y="591.50"></text></g><g><title>__smp_call_single_queue (5 samples, 0.02%)</title><rect x="7.7595%" y="581" width="0.0161%" height="15" fill="rgb(241,47,5)" fg:x="2408" fg:w="5"/><text x="8.0095%" y="591.50"></text></g><g><title>hv_send_ipi (11 samples, 0.04%)</title><rect x="7.7756%" y="581" width="0.0354%" height="15" fill="rgb(233,42,35)" fg:x="2413" fg:w="11"/><text x="8.0256%" y="591.50"></text></g><g><title>__send_ipi_one (6 samples, 0.02%)</title><rect x="7.7917%" y="565" width="0.0193%" height="15" fill="rgb(231,13,6)" fg:x="2418" fg:w="6"/><text x="8.0417%" y="575.50"></text></g><g><title>__x64_sys_futex (92 samples, 0.30%)</title><rect x="7.5339%" y="677" width="0.2965%" height="15" fill="rgb(207,181,40)" fg:x="2338" fg:w="92"/><text x="7.7839%" y="687.50"></text></g><g><title>do_futex (90 samples, 0.29%)</title><rect x="7.5404%" y="661" width="0.2900%" height="15" fill="rgb(254,173,49)" fg:x="2340" fg:w="90"/><text x="7.7904%" y="671.50"></text></g><g><title>futex_wake (85 samples, 0.27%)</title><rect x="7.5565%" y="645" width="0.2739%" height="15" fill="rgb(221,1,38)" fg:x="2345" fg:w="85"/><text x="7.8065%" y="655.50"></text></g><g><title>wake_up_q (56 samples, 0.18%)</title><rect x="7.6499%" y="629" width="0.1805%" height="15" fill="rgb(206,124,46)" fg:x="2374" fg:w="56"/><text x="7.8999%" y="639.50"></text></g><g><title>try_to_wake_up (54 samples, 0.17%)</title><rect x="7.6564%" y="613" width="0.1740%" height="15" fill="rgb(249,21,11)" fg:x="2376" fg:w="54"/><text x="7.9064%" y="623.50"></text></g><g><title>ttwu_queue_wakelist (26 samples, 0.08%)</title><rect x="7.7466%" y="597" width="0.0838%" height="15" fill="rgb(222,201,40)" fg:x="2404" fg:w="26"/><text x="7.9966%" y="607.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (108 samples, 0.35%)</title><rect x="7.5081%" y="709" width="0.3480%" height="15" fill="rgb(235,61,29)" fg:x="2330" fg:w="108"/><text x="7.7581%" y="719.50"></text></g><g><title>do_syscall_64 (106 samples, 0.34%)</title><rect x="7.5146%" y="693" width="0.3416%" height="15" fill="rgb(219,207,3)" fg:x="2332" fg:w="106"/><text x="7.7646%" y="703.50"></text></g><g><title>syscall_exit_to_user_mode (6 samples, 0.02%)</title><rect x="7.8368%" y="677" width="0.0193%" height="15" fill="rgb(222,56,46)" fg:x="2432" fg:w="6"/><text x="8.0868%" y="687.50"></text></g><g><title>syscall (120 samples, 0.39%)</title><rect x="7.4759%" y="725" width="0.3867%" height="15" fill="rgb(239,76,54)" fg:x="2320" fg:w="120"/><text x="7.7259%" y="735.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::worker_to_notify (6 samples, 0.02%)</title><rect x="7.8626%" y="725" width="0.0193%" height="15" fill="rgb(231,124,27)" fg:x="2440" fg:w="6"/><text x="8.1126%" y="735.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="7.9367%" y="661" width="0.0129%" height="15" fill="rgb(249,195,6)" fg:x="2463" fg:w="4"/><text x="8.1867%" y="671.50"></text></g><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="7.9496%" y="661" width="0.0129%" height="15" fill="rgb(237,174,47)" fg:x="2467" fg:w="4"/><text x="8.1996%" y="671.50"></text></g><g><title>__fdget_pos (7 samples, 0.02%)</title><rect x="7.9915%" y="613" width="0.0226%" height="15" fill="rgb(206,201,31)" fg:x="2480" fg:w="7"/><text x="8.2415%" y="623.50"></text></g><g><title>__fget_light (7 samples, 0.02%)</title><rect x="7.9915%" y="597" width="0.0226%" height="15" fill="rgb(231,57,52)" fg:x="2480" fg:w="7"/><text x="8.2415%" y="607.50"></text></g><g><title>__fget_files (5 samples, 0.02%)</title><rect x="7.9979%" y="581" width="0.0161%" height="15" fill="rgb(248,177,22)" fg:x="2482" fg:w="5"/><text x="8.2479%" y="591.50"></text></g><g><title>select_task_rq_fair (4 samples, 0.01%)</title><rect x="8.1462%" y="485" width="0.0129%" height="15" fill="rgb(215,211,37)" fg:x="2528" fg:w="4"/><text x="8.3962%" y="495.50"></text></g><g><title>__wake_up_common (19 samples, 0.06%)</title><rect x="8.1139%" y="533" width="0.0612%" height="15" fill="rgb(241,128,51)" fg:x="2518" fg:w="19"/><text x="8.3639%" y="543.50"></text></g><g><title>ep_autoremove_wake_function (18 samples, 0.06%)</title><rect x="8.1172%" y="517" width="0.0580%" height="15" fill="rgb(227,165,31)" fg:x="2519" fg:w="18"/><text x="8.3672%" y="527.50"></text></g><g><title>try_to_wake_up (15 samples, 0.05%)</title><rect x="8.1268%" y="501" width="0.0483%" height="15" fill="rgb(228,167,24)" fg:x="2522" fg:w="15"/><text x="8.3768%" y="511.50"></text></g><g><title>ttwu_queue_wakelist (5 samples, 0.02%)</title><rect x="8.1591%" y="485" width="0.0161%" height="15" fill="rgb(228,143,12)" fg:x="2532" fg:w="5"/><text x="8.4091%" y="495.50"></text></g><g><title>__wake_up_common_lock (23 samples, 0.07%)</title><rect x="8.1139%" y="549" width="0.0741%" height="15" fill="rgb(249,149,8)" fg:x="2518" fg:w="23"/><text x="8.3639%" y="559.50"></text></g><g><title>_raw_spin_lock_irqsave (4 samples, 0.01%)</title><rect x="8.1752%" y="533" width="0.0129%" height="15" fill="rgb(243,35,44)" fg:x="2537" fg:w="4"/><text x="8.4252%" y="543.50"></text></g><g><title>__pv_queued_spin_lock_slowpath (4 samples, 0.01%)</title><rect x="8.1752%" y="517" width="0.0129%" height="15" fill="rgb(246,89,9)" fg:x="2537" fg:w="4"/><text x="8.4252%" y="527.50"></text></g><g><title>__wake_up_common (39 samples, 0.13%)</title><rect x="8.0688%" y="581" width="0.1257%" height="15" fill="rgb(233,213,13)" fg:x="2504" fg:w="39"/><text x="8.3188%" y="591.50"></text></g><g><title>ep_poll_callback (35 samples, 0.11%)</title><rect x="8.0817%" y="565" width="0.1128%" height="15" fill="rgb(233,141,41)" fg:x="2508" fg:w="35"/><text x="8.3317%" y="575.50"></text></g><g><title>_copy_from_user (4 samples, 0.01%)</title><rect x="8.1977%" y="581" width="0.0129%" height="15" fill="rgb(239,167,4)" fg:x="2544" fg:w="4"/><text x="8.4477%" y="591.50"></text></g><g><title>_raw_spin_lock_irq (4 samples, 0.01%)</title><rect x="8.2106%" y="581" width="0.0129%" height="15" fill="rgb(209,217,16)" fg:x="2548" fg:w="4"/><text x="8.4606%" y="591.50"></text></g><g><title>eventfd_write (50 samples, 0.16%)</title><rect x="8.0656%" y="597" width="0.1611%" height="15" fill="rgb(219,88,35)" fg:x="2503" fg:w="50"/><text x="8.3156%" y="607.50"></text></g><g><title>ksys_write (78 samples, 0.25%)</title><rect x="7.9850%" y="629" width="0.2513%" height="15" fill="rgb(220,193,23)" fg:x="2478" fg:w="78"/><text x="8.2350%" y="639.50"></text></g><g><title>vfs_write (68 samples, 0.22%)</title><rect x="8.0173%" y="613" width="0.2191%" height="15" fill="rgb(230,90,52)" fg:x="2488" fg:w="68"/><text x="8.2673%" y="623.50"></text></g><g><title>mio::sys::unix::waker::eventfd::WakerInternal::wake (103 samples, 0.33%)</title><rect x="7.9077%" y="709" width="0.3319%" height="15" fill="rgb(252,106,19)" fg:x="2454" fg:w="103"/><text x="8.1577%" y="719.50"></text></g><g><title>&lt;&amp;std::process::ChildStdin as std::io::Write&gt;::write (102 samples, 0.33%)</title><rect x="7.9109%" y="693" width="0.3287%" height="15" fill="rgb(206,74,20)" fg:x="2455" fg:w="102"/><text x="8.1609%" y="703.50"></text></g><g><title>__write (99 samples, 0.32%)</title><rect x="7.9206%" y="677" width="0.3190%" height="15" fill="rgb(230,138,44)" fg:x="2458" fg:w="99"/><text x="8.1706%" y="687.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (86 samples, 0.28%)</title><rect x="7.9625%" y="661" width="0.2771%" height="15" fill="rgb(235,182,43)" fg:x="2471" fg:w="86"/><text x="8.2125%" y="671.50"></text></g><g><title>do_syscall_64 (85 samples, 0.27%)</title><rect x="7.9657%" y="645" width="0.2739%" height="15" fill="rgb(242,16,51)" fg:x="2472" fg:w="85"/><text x="8.2157%" y="655.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Unparker::unpark (112 samples, 0.36%)</title><rect x="7.8819%" y="725" width="0.3609%" height="15" fill="rgb(248,9,4)" fg:x="2446" fg:w="112"/><text x="8.1319%" y="735.50"></text></g><g><title>&lt;tokio::runtime::task::core::TaskIdGuard as core::ops::drop::Drop&gt;::drop (8 samples, 0.03%)</title><rect x="8.4136%" y="693" width="0.0258%" height="15" fill="rgb(210,31,22)" fg:x="2611" fg:w="8"/><text x="8.6636%" y="703.50"></text></g><g><title>&lt;smoltcp::wire::ip::Protocol as core::convert::From&lt;u8&gt;&gt;::from (10 samples, 0.03%)</title><rect x="9.1354%" y="661" width="0.0322%" height="15" fill="rgb(239,54,39)" fg:x="2835" fg:w="10"/><text x="9.3854%" y="671.50"></text></g><g><title>&lt;tokio::runtime::time::entry::TimerEntry as core::ops::drop::Drop&gt;::drop (15 samples, 0.05%)</title><rect x="9.1773%" y="661" width="0.0483%" height="15" fill="rgb(230,99,41)" fg:x="2848" fg:w="15"/><text x="9.4273%" y="671.50"></text></g><g><title>&lt;tokio::sync::notify::Notified as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="9.2257%" y="661" width="0.0387%" height="15" fill="rgb(253,106,12)" fg:x="2863" fg:w="12"/><text x="9.4757%" y="671.50"></text></g><g><title>&lt;tokio::sync::notify::Notified as core::future::future::Future&gt;::poll (8 samples, 0.03%)</title><rect x="9.3191%" y="645" width="0.0258%" height="15" fill="rgb(213,46,41)" fg:x="2892" fg:w="8"/><text x="9.5691%" y="655.50"></text></g><g><title>&lt;std::time::Instant as core::ops::arith::Add&lt;core::time::Duration&gt;&gt;::add (4 samples, 0.01%)</title><rect x="9.3836%" y="629" width="0.0129%" height="15" fill="rgb(215,133,35)" fg:x="2912" fg:w="4"/><text x="9.6336%" y="639.50"></text></g><g><title>std::time::Instant::checked_duration_since (6 samples, 0.02%)</title><rect x="9.3964%" y="629" width="0.0193%" height="15" fill="rgb(213,28,5)" fg:x="2916" fg:w="6"/><text x="9.6464%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (10 samples, 0.03%)</title><rect x="9.4996%" y="565" width="0.0322%" height="15" fill="rgb(215,77,49)" fg:x="2948" fg:w="10"/><text x="9.7496%" y="575.50"></text></g><g><title>[libc.so.6] (6 samples, 0.02%)</title><rect x="9.5318%" y="565" width="0.0193%" height="15" fill="rgb(248,100,22)" fg:x="2958" fg:w="6"/><text x="9.7818%" y="575.50"></text></g><g><title>__fdget_pos (11 samples, 0.04%)</title><rect x="9.5962%" y="517" width="0.0354%" height="15" fill="rgb(208,67,9)" fg:x="2978" fg:w="11"/><text x="9.8462%" y="527.50"></text></g><g><title>__fget_light (11 samples, 0.04%)</title><rect x="9.5962%" y="501" width="0.0354%" height="15" fill="rgb(219,133,21)" fg:x="2978" fg:w="11"/><text x="9.8462%" y="511.50"></text></g><g><title>__fget_files (9 samples, 0.03%)</title><rect x="9.6027%" y="485" width="0.0290%" height="15" fill="rgb(246,46,29)" fg:x="2980" fg:w="9"/><text x="9.8527%" y="495.50"></text></g><g><title>_raw_spin_lock_irqsave (4 samples, 0.01%)</title><rect x="9.8154%" y="389" width="0.0129%" height="15" fill="rgb(246,185,52)" fg:x="3046" fg:w="4"/><text x="10.0654%" y="399.50"></text></g><g><title>select_task_rq_fair (14 samples, 0.05%)</title><rect x="9.8347%" y="389" width="0.0451%" height="15" fill="rgb(252,136,11)" fg:x="3052" fg:w="14"/><text x="10.0847%" y="399.50"></text></g><g><title>available_idle_cpu (8 samples, 0.03%)</title><rect x="9.8540%" y="373" width="0.0258%" height="15" fill="rgb(219,138,53)" fg:x="3058" fg:w="8"/><text x="10.1040%" y="383.50"></text></g><g><title>__raw_callee_save_hv_vcpu_is_preempted (4 samples, 0.01%)</title><rect x="9.8669%" y="357" width="0.0129%" height="15" fill="rgb(211,51,23)" fg:x="3062" fg:w="4"/><text x="10.1169%" y="367.50"></text></g><g><title>__smp_call_single_queue (4 samples, 0.01%)</title><rect x="9.9056%" y="373" width="0.0129%" height="15" fill="rgb(247,221,28)" fg:x="3074" fg:w="4"/><text x="10.1556%" y="383.50"></text></g><g><title>llist_add_batch (4 samples, 0.01%)</title><rect x="9.9056%" y="357" width="0.0129%" height="15" fill="rgb(251,222,45)" fg:x="3074" fg:w="4"/><text x="10.1556%" y="367.50"></text></g><g><title>hv_send_ipi (9 samples, 0.03%)</title><rect x="9.9185%" y="373" width="0.0290%" height="15" fill="rgb(217,162,53)" fg:x="3078" fg:w="9"/><text x="10.1685%" y="383.50"></text></g><g><title>__send_ipi_one (8 samples, 0.03%)</title><rect x="9.9217%" y="357" width="0.0258%" height="15" fill="rgb(229,93,14)" fg:x="3079" fg:w="8"/><text x="10.1717%" y="367.50"></text></g><g><title>__wake_up_common (59 samples, 0.19%)</title><rect x="9.7638%" y="437" width="0.1901%" height="15" fill="rgb(209,67,49)" fg:x="3030" fg:w="59"/><text x="10.0138%" y="447.50"></text></g><g><title>ep_autoremove_wake_function (53 samples, 0.17%)</title><rect x="9.7831%" y="421" width="0.1708%" height="15" fill="rgb(213,87,29)" fg:x="3036" fg:w="53"/><text x="10.0331%" y="431.50"></text></g><g><title>try_to_wake_up (48 samples, 0.15%)</title><rect x="9.7992%" y="405" width="0.1547%" height="15" fill="rgb(205,151,52)" fg:x="3041" fg:w="48"/><text x="10.0492%" y="415.50"></text></g><g><title>ttwu_queue_wakelist (23 samples, 0.07%)</title><rect x="9.8798%" y="389" width="0.0741%" height="15" fill="rgb(253,215,39)" fg:x="3066" fg:w="23"/><text x="10.1298%" y="399.50"></text></g><g><title>__wake_up_common_lock (72 samples, 0.23%)</title><rect x="9.7574%" y="453" width="0.2320%" height="15" fill="rgb(221,220,41)" fg:x="3028" fg:w="72"/><text x="10.0074%" y="463.50"></text></g><g><title>_raw_spin_lock_irqsave (11 samples, 0.04%)</title><rect x="9.9539%" y="437" width="0.0354%" height="15" fill="rgb(218,133,21)" fg:x="3089" fg:w="11"/><text x="10.2039%" y="447.50"></text></g><g><title>__pv_queued_spin_lock_slowpath (11 samples, 0.04%)</title><rect x="9.9539%" y="421" width="0.0354%" height="15" fill="rgb(221,193,43)" fg:x="3089" fg:w="11"/><text x="10.2039%" y="431.50"></text></g><g><title>_raw_read_lock_irqsave (5 samples, 0.02%)</title><rect x="9.9894%" y="453" width="0.0161%" height="15" fill="rgb(240,128,52)" fg:x="3100" fg:w="5"/><text x="10.2394%" y="463.50"></text></g><g><title>__wake_up_common (99 samples, 0.32%)</title><rect x="9.6961%" y="485" width="0.3190%" height="15" fill="rgb(253,114,12)" fg:x="3009" fg:w="99"/><text x="9.9461%" y="495.50"></text></g><g><title>ep_poll_callback (95 samples, 0.31%)</title><rect x="9.7090%" y="469" width="0.3061%" height="15" fill="rgb(215,223,47)" fg:x="3013" fg:w="95"/><text x="9.9590%" y="479.50"></text></g><g><title>_copy_from_user (5 samples, 0.02%)</title><rect x="10.0151%" y="485" width="0.0161%" height="15" fill="rgb(248,225,23)" fg:x="3108" fg:w="5"/><text x="10.2651%" y="495.50"></text></g><g><title>_raw_spin_lock_irq (11 samples, 0.04%)</title><rect x="10.0313%" y="485" width="0.0354%" height="15" fill="rgb(250,108,0)" fg:x="3113" fg:w="11"/><text x="10.2813%" y="495.50"></text></g><g><title>__pv_queued_spin_lock_slowpath (4 samples, 0.01%)</title><rect x="10.0538%" y="469" width="0.0129%" height="15" fill="rgb(228,208,7)" fg:x="3120" fg:w="4"/><text x="10.3038%" y="479.50"></text></g><g><title>eventfd_write (126 samples, 0.41%)</title><rect x="9.6704%" y="501" width="0.4060%" height="15" fill="rgb(244,45,10)" fg:x="3001" fg:w="126"/><text x="9.9204%" y="511.50"></text></g><g><title>ksys_write (157 samples, 0.51%)</title><rect x="9.5737%" y="533" width="0.5059%" height="15" fill="rgb(207,125,25)" fg:x="2971" fg:w="157"/><text x="9.8237%" y="543.50"></text></g><g><title>vfs_write (137 samples, 0.44%)</title><rect x="9.6381%" y="517" width="0.4415%" height="15" fill="rgb(210,195,18)" fg:x="2991" fg:w="137"/><text x="9.8881%" y="527.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (165 samples, 0.53%)</title><rect x="9.5543%" y="565" width="0.5317%" height="15" fill="rgb(249,80,12)" fg:x="2965" fg:w="165"/><text x="9.8043%" y="575.50"></text></g><g><title>do_syscall_64 (161 samples, 0.52%)</title><rect x="9.5672%" y="549" width="0.5188%" height="15" fill="rgb(221,65,9)" fg:x="2969" fg:w="161"/><text x="9.8172%" y="559.50"></text></g><g><title>mio::sys::unix::waker::eventfd::WakerInternal::wake (200 samples, 0.64%)</title><rect x="9.4545%" y="613" width="0.6445%" height="15" fill="rgb(235,49,36)" fg:x="2934" fg:w="200"/><text x="9.7045%" y="623.50"></text></g><g><title>&lt;&amp;std::process::ChildStdin as std::io::Write&gt;::write (197 samples, 0.63%)</title><rect x="9.4641%" y="597" width="0.6348%" height="15" fill="rgb(225,32,20)" fg:x="2937" fg:w="197"/><text x="9.7141%" y="607.50"></text></g><g><title>__write (194 samples, 0.63%)</title><rect x="9.4738%" y="581" width="0.6251%" height="15" fill="rgb(215,141,46)" fg:x="2940" fg:w="194"/><text x="9.7238%" y="591.50"></text></g><g><title>syscall_return_via_sysret (4 samples, 0.01%)</title><rect x="10.0860%" y="565" width="0.0129%" height="15" fill="rgb(250,160,47)" fg:x="3130" fg:w="4"/><text x="10.3360%" y="575.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::reregister (233 samples, 0.75%)</title><rect x="9.4158%" y="629" width="0.7508%" height="15" fill="rgb(216,222,40)" fg:x="2922" fg:w="233"/><text x="9.6658%" y="639.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::insert (20 samples, 0.06%)</title><rect x="10.1021%" y="613" width="0.0644%" height="15" fill="rgb(234,217,39)" fg:x="3135" fg:w="20"/><text x="10.3521%" y="623.50"></text></g><g><title>tokio::runtime::task::waker::clone_waker (6 samples, 0.02%)</title><rect x="10.2053%" y="613" width="0.0193%" height="15" fill="rgb(207,178,40)" fg:x="3167" fg:w="6"/><text x="10.4553%" y="623.50"></text></g><g><title>&lt;tokio::time::sleep::Sleep as core::future::future::Future&gt;::poll (274 samples, 0.88%)</title><rect x="9.3449%" y="645" width="0.8829%" height="15" fill="rgb(221,136,13)" fg:x="2900" fg:w="274"/><text x="9.5949%" y="655.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::register_by_ref (19 samples, 0.06%)</title><rect x="10.1666%" y="629" width="0.0612%" height="15" fill="rgb(249,199,10)" fg:x="3155" fg:w="19"/><text x="10.4166%" y="639.50"></text></g><g><title>tokio::runtime::coop::Budget::has_remaining (12 samples, 0.04%)</title><rect x="10.2278%" y="645" width="0.0387%" height="15" fill="rgb(249,222,13)" fg:x="3174" fg:w="12"/><text x="10.4778%" y="655.50"></text></g><g><title>&lt;tokio::time::timeout::Timeout&lt;T&gt; as core::future::future::Future&gt;::poll (354 samples, 1.14%)</title><rect x="9.2643%" y="661" width="1.1407%" height="15" fill="rgb(244,185,38)" fg:x="2875" fg:w="354"/><text x="9.5143%" y="671.50"></text></g><g><title>tokio::sync::notify::Notified::poll_notified (43 samples, 0.14%)</title><rect x="10.2665%" y="645" width="0.1386%" height="15" fill="rgb(236,202,9)" fg:x="3186" fg:w="43"/><text x="10.5165%" y="655.50"></text></g><g><title>tokio::runtime::task::waker::clone_waker (6 samples, 0.02%)</title><rect x="10.3857%" y="629" width="0.0193%" height="15" fill="rgb(250,229,37)" fg:x="3223" fg:w="6"/><text x="10.6357%" y="639.50"></text></g><g><title>[libc.so.6] (19 samples, 0.06%)</title><rect x="10.4051%" y="661" width="0.0612%" height="15" fill="rgb(206,174,23)" fg:x="3229" fg:w="19"/><text x="10.6551%" y="671.50"></text></g><g><title>netstack_smoltcp::packet::IpPacket&lt;&amp;T&gt;::payload (6 samples, 0.02%)</title><rect x="10.4695%" y="661" width="0.0193%" height="15" fill="rgb(211,33,43)" fg:x="3249" fg:w="6"/><text x="10.7195%" y="671.50"></text></g><g><title>&lt;tokio::sync::mpsc::bounded::Semaphore as tokio::sync::mpsc::chan::Semaphore&gt;::add_permit (64 samples, 0.21%)</title><rect x="10.6693%" y="629" width="0.2062%" height="15" fill="rgb(245,58,50)" fg:x="3311" fg:w="64"/><text x="10.9193%" y="639.50"></text></g><g><title>&lt;tokio::sync::mpsc::bounded::Semaphore as tokio::sync::mpsc::chan::Semaphore&gt;::is_closed (7 samples, 0.02%)</title><rect x="10.8755%" y="629" width="0.0226%" height="15" fill="rgb(244,68,36)" fg:x="3375" fg:w="7"/><text x="11.1255%" y="639.50"></text></g><g><title>[libc.so.6] (26 samples, 0.08%)</title><rect x="11.3718%" y="597" width="0.0838%" height="15" fill="rgb(232,229,15)" fg:x="3529" fg:w="26"/><text x="11.6218%" y="607.50"></text></g><g><title>dequeue_task_fair (5 samples, 0.02%)</title><rect x="11.5039%" y="453" width="0.0161%" height="15" fill="rgb(254,30,23)" fg:x="3570" fg:w="5"/><text x="11.7539%" y="463.50"></text></g><g><title>dequeue_entity (4 samples, 0.01%)</title><rect x="11.5071%" y="437" width="0.0129%" height="15" fill="rgb(235,160,14)" fg:x="3571" fg:w="4"/><text x="11.7571%" y="447.50"></text></g><g><title>futex_wait_queue_me (15 samples, 0.05%)</title><rect x="11.4910%" y="501" width="0.0483%" height="15" fill="rgb(212,155,44)" fg:x="3566" fg:w="15"/><text x="11.7410%" y="511.50"></text></g><g><title>schedule (15 samples, 0.05%)</title><rect x="11.4910%" y="485" width="0.0483%" height="15" fill="rgb(226,2,50)" fg:x="3566" fg:w="15"/><text x="11.7410%" y="495.50"></text></g><g><title>__schedule (14 samples, 0.05%)</title><rect x="11.4942%" y="469" width="0.0451%" height="15" fill="rgb(234,177,6)" fg:x="3567" fg:w="14"/><text x="11.7442%" y="479.50"></text></g><g><title>get_futex_key (4 samples, 0.01%)</title><rect x="11.5554%" y="485" width="0.0129%" height="15" fill="rgb(217,24,9)" fg:x="3586" fg:w="4"/><text x="11.8054%" y="495.50"></text></g><g><title>__x64_sys_futex (32 samples, 0.10%)</title><rect x="11.4717%" y="549" width="0.1031%" height="15" fill="rgb(220,13,46)" fg:x="3560" fg:w="32"/><text x="11.7217%" y="559.50"></text></g><g><title>do_futex (32 samples, 0.10%)</title><rect x="11.4717%" y="533" width="0.1031%" height="15" fill="rgb(239,221,27)" fg:x="3560" fg:w="32"/><text x="11.7217%" y="543.50"></text></g><g><title>futex_wait (29 samples, 0.09%)</title><rect x="11.4813%" y="517" width="0.0934%" height="15" fill="rgb(222,198,25)" fg:x="3563" fg:w="29"/><text x="11.7313%" y="527.50"></text></g><g><title>futex_wait_setup (11 samples, 0.04%)</title><rect x="11.5393%" y="501" width="0.0354%" height="15" fill="rgb(211,99,13)" fg:x="3581" fg:w="11"/><text x="11.7893%" y="511.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (35 samples, 0.11%)</title><rect x="11.4717%" y="581" width="0.1128%" height="15" fill="rgb(232,111,31)" fg:x="3560" fg:w="35"/><text x="11.7217%" y="591.50"></text></g><g><title>do_syscall_64 (35 samples, 0.11%)</title><rect x="11.4717%" y="565" width="0.1128%" height="15" fill="rgb(245,82,37)" fg:x="3560" fg:w="35"/><text x="11.7217%" y="575.50"></text></g><g><title>__lll_lock_wait_private (42 samples, 0.14%)</title><rect x="11.4555%" y="597" width="0.1353%" height="15" fill="rgb(227,149,46)" fg:x="3555" fg:w="42"/><text x="11.7055%" y="607.50"></text></g><g><title>tlb_finish_mmu (12 samples, 0.04%)</title><rect x="11.6102%" y="501" width="0.0387%" height="15" fill="rgb(218,36,50)" fg:x="3603" fg:w="12"/><text x="11.8602%" y="511.50"></text></g><g><title>release_pages (7 samples, 0.02%)</title><rect x="11.6263%" y="485" width="0.0226%" height="15" fill="rgb(226,80,48)" fg:x="3608" fg:w="7"/><text x="11.8763%" y="495.50"></text></g><g><title>__x64_sys_madvise (22 samples, 0.07%)</title><rect x="11.5973%" y="549" width="0.0709%" height="15" fill="rgb(238,224,15)" fg:x="3599" fg:w="22"/><text x="11.8473%" y="559.50"></text></g><g><title>do_madvise.part.0 (22 samples, 0.07%)</title><rect x="11.5973%" y="533" width="0.0709%" height="15" fill="rgb(241,136,10)" fg:x="3599" fg:w="22"/><text x="11.8473%" y="543.50"></text></g><g><title>zap_page_range (20 samples, 0.06%)</title><rect x="11.6038%" y="517" width="0.0644%" height="15" fill="rgb(208,32,45)" fg:x="3601" fg:w="20"/><text x="11.8538%" y="527.50"></text></g><g><title>unmap_page_range (6 samples, 0.02%)</title><rect x="11.6489%" y="501" width="0.0193%" height="15" fill="rgb(207,135,9)" fg:x="3615" fg:w="6"/><text x="11.8989%" y="511.50"></text></g><g><title>[libc.so.6] (199 samples, 0.64%)</title><rect x="11.0302%" y="613" width="0.6413%" height="15" fill="rgb(206,86,44)" fg:x="3423" fg:w="199"/><text x="11.2802%" y="623.50"></text></g><g><title>__madvise (25 samples, 0.08%)</title><rect x="11.5909%" y="597" width="0.0806%" height="15" fill="rgb(245,177,15)" fg:x="3597" fg:w="25"/><text x="11.8409%" y="607.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (24 samples, 0.08%)</title><rect x="11.5941%" y="581" width="0.0773%" height="15" fill="rgb(206,64,50)" fg:x="3598" fg:w="24"/><text x="11.8441%" y="591.50"></text></g><g><title>do_syscall_64 (24 samples, 0.08%)</title><rect x="11.5941%" y="565" width="0.0773%" height="15" fill="rgb(234,36,40)" fg:x="3598" fg:w="24"/><text x="11.8441%" y="575.50"></text></g><g><title>__x64_sys_futex (13 samples, 0.04%)</title><rect x="11.6908%" y="565" width="0.0419%" height="15" fill="rgb(213,64,8)" fg:x="3628" fg:w="13"/><text x="11.9408%" y="575.50"></text></g><g><title>do_futex (13 samples, 0.04%)</title><rect x="11.6908%" y="549" width="0.0419%" height="15" fill="rgb(210,75,36)" fg:x="3628" fg:w="13"/><text x="11.9408%" y="559.50"></text></g><g><title>futex_wake (9 samples, 0.03%)</title><rect x="11.7037%" y="533" width="0.0290%" height="15" fill="rgb(229,88,21)" fg:x="3632" fg:w="9"/><text x="11.9537%" y="543.50"></text></g><g><title>__libc_free (260 samples, 0.84%)</title><rect x="10.8981%" y="629" width="0.8378%" height="15" fill="rgb(252,204,47)" fg:x="3382" fg:w="260"/><text x="11.1481%" y="639.50"></text></g><g><title>__lll_lock_wake_private (20 samples, 0.06%)</title><rect x="11.6714%" y="613" width="0.0644%" height="15" fill="rgb(208,77,27)" fg:x="3622" fg:w="20"/><text x="11.9214%" y="623.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (15 samples, 0.05%)</title><rect x="11.6876%" y="597" width="0.0483%" height="15" fill="rgb(221,76,26)" fg:x="3627" fg:w="15"/><text x="11.9376%" y="607.50"></text></g><g><title>do_syscall_64 (14 samples, 0.05%)</title><rect x="11.6908%" y="581" width="0.0451%" height="15" fill="rgb(225,139,18)" fg:x="3628" fg:w="14"/><text x="11.9408%" y="591.50"></text></g><g><title>__rdl_dealloc (7 samples, 0.02%)</title><rect x="11.7359%" y="629" width="0.0226%" height="15" fill="rgb(230,137,11)" fg:x="3642" fg:w="7"/><text x="11.9859%" y="639.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or (6 samples, 0.02%)</title><rect x="12.1032%" y="613" width="0.0193%" height="15" fill="rgb(212,28,1)" fg:x="3756" fg:w="6"/><text x="12.3532%" y="623.50"></text></g><g><title>smoltcp::socket::tcp::Socket::accepts (13 samples, 0.04%)</title><rect x="12.2869%" y="597" width="0.0419%" height="15" fill="rgb(248,164,17)" fg:x="3813" fg:w="13"/><text x="12.5369%" y="607.50"></text></g><g><title>&lt;smoltcp::wire::tcp::SeqNumber as core::ops::arith::Add&lt;usize&gt;&gt;::add (5 samples, 0.02%)</title><rect x="12.7864%" y="581" width="0.0161%" height="15" fill="rgb(222,171,42)" fg:x="3968" fg:w="5"/><text x="13.0364%" y="591.50"></text></g><g><title>smoltcp::storage::assembler::Assembler::add (10 samples, 0.03%)</title><rect x="12.8025%" y="581" width="0.0322%" height="15" fill="rgb(243,84,45)" fg:x="3973" fg:w="10"/><text x="13.0525%" y="591.50"></text></g><g><title>smoltcp::socket::tcp::Socket::process (289 samples, 0.93%)</title><rect x="12.3288%" y="597" width="0.9313%" height="15" fill="rgb(252,49,23)" fg:x="3826" fg:w="289"/><text x="12.5788%" y="607.50"></text></g><g><title>smoltcp::storage::ring_buffer::RingBuffer&lt;T&gt;::write_unallocated (132 samples, 0.43%)</title><rect x="12.8347%" y="581" width="0.4254%" height="15" fill="rgb(215,19,7)" fg:x="3983" fg:w="132"/><text x="13.0847%" y="591.50"></text></g><g><title>[libc.so.6] (92 samples, 0.30%)</title><rect x="12.9636%" y="565" width="0.2965%" height="15" fill="rgb(238,81,41)" fg:x="4023" fg:w="92"/><text x="13.2136%" y="575.50"></text></g><g><title>smoltcp::wire::ip::checksum::data (361 samples, 1.16%)</title><rect x="13.3439%" y="581" width="1.1633%" height="15" fill="rgb(210,199,37)" fg:x="4141" fg:w="361"/><text x="13.5939%" y="591.50"></text></g><g><title>smoltcp::iface::interface::InterfaceInner::process_tcp (766 samples, 2.47%)</title><rect x="12.1226%" y="613" width="2.4683%" height="15" fill="rgb(244,192,49)" fg:x="3762" fg:w="766"/><text x="12.3726%" y="623.50">sm..</text></g><g><title>smoltcp::wire::tcp::Repr::parse (413 samples, 1.33%)</title><rect x="13.2601%" y="597" width="1.3308%" height="15" fill="rgb(226,211,11)" fg:x="4115" fg:w="413"/><text x="13.5101%" y="607.50"></text></g><g><title>smoltcp::wire::ip::checksum::pseudo_header (26 samples, 0.08%)</title><rect x="14.5071%" y="581" width="0.0838%" height="15" fill="rgb(236,162,54)" fg:x="4502" fg:w="26"/><text x="14.7571%" y="591.50"></text></g><g><title>smoltcp::iface::route::Routes::lookup (41 samples, 0.13%)</title><rect x="14.5909%" y="613" width="0.1321%" height="15" fill="rgb(220,229,9)" fg:x="4528" fg:w="41"/><text x="14.8409%" y="623.50"></text></g><g><title>smoltcp::wire::ip::Cidr::contains_addr (16 samples, 0.05%)</title><rect x="14.6715%" y="597" width="0.0516%" height="15" fill="rgb(250,87,22)" fg:x="4553" fg:w="16"/><text x="14.9215%" y="607.50"></text></g><g><title>&lt;smoltcp::wire::ip::Protocol as core::convert::From&lt;u8&gt;&gt;::from (14 samples, 0.05%)</title><rect x="14.7649%" y="597" width="0.0451%" height="15" fill="rgb(239,43,17)" fg:x="4582" fg:w="14"/><text x="15.0149%" y="607.50"></text></g><g><title>smoltcp::iface::interface::InterfaceInner::process_ip (958 samples, 3.09%)</title><rect x="11.7681%" y="629" width="3.0870%" height="15" fill="rgb(231,177,25)" fg:x="3652" fg:w="958"/><text x="12.0181%" y="639.50">smo..</text></g><g><title>smoltcp::wire::ipv4::Repr::parse (41 samples, 0.13%)</title><rect x="14.7230%" y="613" width="0.1321%" height="15" fill="rgb(219,179,1)" fg:x="4569" fg:w="41"/><text x="14.9730%" y="623.50"></text></g><g><title>smoltcp::wire::ip::checksum::data (14 samples, 0.05%)</title><rect x="14.8100%" y="597" width="0.0451%" height="15" fill="rgb(238,219,53)" fg:x="4596" fg:w="14"/><text x="15.0600%" y="607.50"></text></g><g><title>&lt;netstack_smoltcp::device::VirtualRxToken as smoltcp::phy::RxToken&gt;::consume (1,349 samples, 4.35%)</title><rect x="10.6177%" y="645" width="4.3470%" height="15" fill="rgb(232,167,36)" fg:x="3295" fg:w="1349"/><text x="10.8677%" y="655.50">&lt;nets..</text></g><g><title>tokio::sync::batch_semaphore::Semaphore::add_permits_locked (34 samples, 0.11%)</title><rect x="14.8552%" y="629" width="0.1096%" height="15" fill="rgb(244,19,51)" fg:x="4610" fg:w="34"/><text x="15.1052%" y="639.50"></text></g><g><title>smoltcp::iface::socket_meta::Meta::egress_permitted (5 samples, 0.02%)</title><rect x="14.9647%" y="645" width="0.0161%" height="15" fill="rgb(224,6,22)" fg:x="4644" fg:w="5"/><text x="15.2147%" y="655.50"></text></g><g><title>smoltcp::iface::socket_set::SocketSet::items (6 samples, 0.02%)</title><rect x="14.9808%" y="645" width="0.0193%" height="15" fill="rgb(224,145,5)" fg:x="4649" fg:w="6"/><text x="15.2308%" y="655.50"></text></g><g><title>&lt;smoltcp::wire::tcp::SeqNumber as core::ops::arith::Add&lt;usize&gt;&gt;::add (4 samples, 0.01%)</title><rect x="15.3804%" y="629" width="0.0129%" height="15" fill="rgb(234,130,49)" fg:x="4773" fg:w="4"/><text x="15.6304%" y="639.50"></text></g><g><title>&lt;smoltcp::wire::tcp::SeqNumber as core::ops::arith::Sub&gt;::sub (10 samples, 0.03%)</title><rect x="15.3933%" y="629" width="0.0322%" height="15" fill="rgb(254,6,2)" fg:x="4777" fg:w="10"/><text x="15.6433%" y="639.50"></text></g><g><title>__libc_calloc (49 samples, 0.16%)</title><rect x="15.4803%" y="597" width="0.1579%" height="15" fill="rgb(208,96,46)" fg:x="4804" fg:w="49"/><text x="15.7303%" y="607.50"></text></g><g><title>[libc.so.6] (24 samples, 0.08%)</title><rect x="15.5609%" y="581" width="0.0773%" height="15" fill="rgb(239,3,39)" fg:x="4829" fg:w="24"/><text x="15.8109%" y="591.50"></text></g><g><title>__rdl_alloc_zeroed (5 samples, 0.02%)</title><rect x="15.6382%" y="597" width="0.0161%" height="15" fill="rgb(233,210,1)" fg:x="4853" fg:w="5"/><text x="15.8882%" y="607.50"></text></g><g><title>smoltcp::wire::ip::checksum::data (4 samples, 0.01%)</title><rect x="15.8122%" y="565" width="0.0129%" height="15" fill="rgb(244,137,37)" fg:x="4907" fg:w="4"/><text x="16.0622%" y="575.50"></text></g><g><title>smoltcp::iface::packet::Packet::emit_payload (58 samples, 0.19%)</title><rect x="15.6640%" y="597" width="0.1869%" height="15" fill="rgb(240,136,2)" fg:x="4861" fg:w="58"/><text x="15.9140%" y="607.50"></text></g><g><title>smoltcp::wire::tcp::Repr::emit (43 samples, 0.14%)</title><rect x="15.7123%" y="581" width="0.1386%" height="15" fill="rgb(239,18,37)" fg:x="4876" fg:w="43"/><text x="15.9623%" y="591.50"></text></g><g><title>smoltcp::wire::ip::checksum::pseudo_header (8 samples, 0.03%)</title><rect x="15.8251%" y="565" width="0.0258%" height="15" fill="rgb(218,185,22)" fg:x="4911" fg:w="8"/><text x="16.0751%" y="575.50"></text></g><g><title>smoltcp::wire::ipv4::Repr::emit (18 samples, 0.06%)</title><rect x="15.8509%" y="597" width="0.0580%" height="15" fill="rgb(225,218,4)" fg:x="4919" fg:w="18"/><text x="16.1009%" y="607.50"></text></g><g><title>smoltcp::wire::ip::checksum::data (8 samples, 0.03%)</title><rect x="15.8831%" y="581" width="0.0258%" height="15" fill="rgb(230,182,32)" fg:x="4929" fg:w="8"/><text x="16.1331%" y="591.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::schedule (6 samples, 0.02%)</title><rect x="15.9089%" y="581" width="0.0193%" height="15" fill="rgb(242,56,43)" fg:x="4937" fg:w="6"/><text x="16.1589%" y="591.50"></text></g><g><title>tokio::runtime::context::with_scheduler (5 samples, 0.02%)</title><rect x="15.9121%" y="565" width="0.0161%" height="15" fill="rgb(233,99,24)" fg:x="4938" fg:w="5"/><text x="16.1621%" y="575.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (9 samples, 0.03%)</title><rect x="15.9089%" y="597" width="0.0290%" height="15" fill="rgb(234,209,42)" fg:x="4937" fg:w="9"/><text x="16.1589%" y="607.50"></text></g><g><title>tokio::sync::mpsc::list::Tx&lt;T&gt;::push (23 samples, 0.07%)</title><rect x="15.9379%" y="597" width="0.0741%" height="15" fill="rgb(227,7,12)" fg:x="4946" fg:w="23"/><text x="16.1879%" y="607.50"></text></g><g><title>&lt;netstack_smoltcp::device::VirtualTxToken as smoltcp::phy::TxToken&gt;::consume (180 samples, 0.58%)</title><rect x="15.4577%" y="613" width="0.5800%" height="15" fill="rgb(245,203,43)" fg:x="4797" fg:w="180"/><text x="15.7077%" y="623.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::wake (8 samples, 0.03%)</title><rect x="16.0120%" y="597" width="0.0258%" height="15" fill="rgb(238,205,33)" fg:x="4969" fg:w="8"/><text x="16.2620%" y="607.50"></text></g><g><title>smoltcp::iface::interface::InterfaceInner::dispatch_ip (195 samples, 0.63%)</title><rect x="15.4255%" y="629" width="0.6284%" height="15" fill="rgb(231,56,7)" fg:x="4787" fg:w="195"/><text x="15.6755%" y="639.50"></text></g><g><title>smoltcp::wire::ip::Address::is_unspecified (5 samples, 0.02%)</title><rect x="16.0378%" y="613" width="0.0161%" height="15" fill="rgb(244,186,29)" fg:x="4977" fg:w="5"/><text x="16.2878%" y="623.50"></text></g><g><title>smoltcp::socket::tcp::Socket::ack_to_transmit (20 samples, 0.06%)</title><rect x="16.0539%" y="629" width="0.0644%" height="15" fill="rgb(234,111,31)" fg:x="4982" fg:w="20"/><text x="16.3039%" y="639.50"></text></g><g><title>smoltcp::socket::tcp::Socket::seq_to_transmit (43 samples, 0.14%)</title><rect x="16.1183%" y="629" width="0.1386%" height="15" fill="rgb(241,149,10)" fg:x="5002" fg:w="43"/><text x="16.3683%" y="639.50"></text></g><g><title>smoltcp::socket::tcp::Socket::window_to_update (18 samples, 0.06%)</title><rect x="16.2569%" y="629" width="0.0580%" height="15" fill="rgb(249,206,44)" fg:x="5045" fg:w="18"/><text x="16.5069%" y="639.50"></text></g><g><title>smoltcp::wire::ip::Repr::new (6 samples, 0.02%)</title><rect x="16.3149%" y="629" width="0.0193%" height="15" fill="rgb(251,153,30)" fg:x="5063" fg:w="6"/><text x="16.5649%" y="639.50"></text></g><g><title>smoltcp::wire::tcp::Repr::buffer_len (9 samples, 0.03%)</title><rect x="16.3342%" y="629" width="0.0290%" height="15" fill="rgb(239,152,38)" fg:x="5069" fg:w="9"/><text x="16.5842%" y="639.50"></text></g><g><title>smoltcp::socket::tcp::Socket::dispatch (431 samples, 1.39%)</title><rect x="15.0002%" y="645" width="1.3888%" height="15" fill="rgb(249,139,47)" fg:x="4655" fg:w="431"/><text x="15.2502%" y="655.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::try_acquire (8 samples, 0.03%)</title><rect x="16.3632%" y="629" width="0.0258%" height="15" fill="rgb(244,64,35)" fg:x="5078" fg:w="8"/><text x="16.6132%" y="639.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::try_acquire (18 samples, 0.06%)</title><rect x="16.3890%" y="645" width="0.0580%" height="15" fill="rgb(216,46,15)" fg:x="5086" fg:w="18"/><text x="16.6390%" y="655.50"></text></g><g><title>&lt;tokio::sync::mpsc::unbounded::Semaphore as tokio::sync::mpsc::chan::Semaphore&gt;::add_permit (18 samples, 0.06%)</title><rect x="16.5340%" y="629" width="0.0580%" height="15" fill="rgb(250,74,19)" fg:x="5131" fg:w="18"/><text x="16.7840%" y="639.50"></text></g><g><title>smoltcp::iface::interface::Interface::poll (1,929 samples, 6.22%)</title><rect x="10.4888%" y="661" width="6.2160%" height="15" fill="rgb(249,42,33)" fg:x="3255" fg:w="1929"/><text x="10.7388%" y="671.50">smoltcp:..</text></g><g><title>tokio::sync::mpsc::chan::Rx&lt;T,S&gt;::try_recv (80 samples, 0.26%)</title><rect x="16.4470%" y="645" width="0.2578%" height="15" fill="rgb(242,149,17)" fg:x="5104" fg:w="80"/><text x="16.6970%" y="655.50"></text></g><g><title>tokio::sync::mpsc::list::Rx&lt;T&gt;::pop (35 samples, 0.11%)</title><rect x="16.5920%" y="629" width="0.1128%" height="15" fill="rgb(244,29,21)" fg:x="5149" fg:w="35"/><text x="16.8420%" y="639.50"></text></g><g><title>smoltcp::iface::interface::Interface::poll_delay (66 samples, 0.21%)</title><rect x="16.7048%" y="661" width="0.2127%" height="15" fill="rgb(220,130,37)" fg:x="5184" fg:w="66"/><text x="16.9548%" y="671.50"></text></g><g><title>smoltcp::iface::interface::Interface::poll_at (62 samples, 0.20%)</title><rect x="16.7177%" y="645" width="0.1998%" height="15" fill="rgb(211,67,2)" fg:x="5188" fg:w="62"/><text x="16.9677%" y="655.50"></text></g><g><title>smoltcp::socket::tcp::Socket::poll_at (42 samples, 0.14%)</title><rect x="16.7821%" y="629" width="0.1353%" height="15" fill="rgb(235,68,52)" fg:x="5208" fg:w="42"/><text x="17.0321%" y="639.50"></text></g><g><title>smoltcp::socket::tcp::Socket::seq_to_transmit (15 samples, 0.05%)</title><rect x="16.8691%" y="613" width="0.0483%" height="15" fill="rgb(246,142,3)" fg:x="5235" fg:w="15"/><text x="17.1191%" y="623.50"></text></g><g><title>smoltcp::storage::ring_buffer::RingBuffer&lt;T&gt;::enqueue_slice (138 samples, 0.44%)</title><rect x="16.9175%" y="661" width="0.4447%" height="15" fill="rgb(241,25,7)" fg:x="5250" fg:w="138"/><text x="17.1675%" y="671.50"></text></g><g><title>[libc.so.6] (133 samples, 0.43%)</title><rect x="16.9336%" y="645" width="0.4286%" height="15" fill="rgb(242,119,39)" fg:x="5255" fg:w="133"/><text x="17.1836%" y="655.50"></text></g><g><title>smoltcp::time::&lt;impl core::convert::From&lt;smoltcp::time::Duration&gt; for core::time::Duration&gt;::from (9 samples, 0.03%)</title><rect x="17.3622%" y="661" width="0.0290%" height="15" fill="rgb(241,98,45)" fg:x="5388" fg:w="9"/><text x="17.6122%" y="671.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (70 samples, 0.23%)</title><rect x="17.4363%" y="645" width="0.2256%" height="15" fill="rgb(254,28,30)" fg:x="5411" fg:w="70"/><text x="17.6863%" y="655.50"></text></g><g><title>clock_gettime (64 samples, 0.21%)</title><rect x="17.4556%" y="629" width="0.2062%" height="15" fill="rgb(241,142,54)" fg:x="5417" fg:w="64"/><text x="17.7056%" y="639.50"></text></g><g><title>__vdso_clock_gettime (42 samples, 0.14%)</title><rect x="17.5265%" y="613" width="0.1353%" height="15" fill="rgb(222,85,15)" fg:x="5439" fg:w="42"/><text x="17.7765%" y="623.50"></text></g><g><title>std::time::SystemTime::duration_since (16 samples, 0.05%)</title><rect x="17.6618%" y="645" width="0.0516%" height="15" fill="rgb(210,85,47)" fg:x="5481" fg:w="16"/><text x="17.9118%" y="655.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::sub_timespec (6 samples, 0.02%)</title><rect x="17.6941%" y="629" width="0.0193%" height="15" fill="rgb(224,206,25)" fg:x="5491" fg:w="6"/><text x="17.9441%" y="639.50"></text></g><g><title>smoltcp::time::Instant::now (108 samples, 0.35%)</title><rect x="17.3912%" y="661" width="0.3480%" height="15" fill="rgb(243,201,19)" fg:x="5397" fg:w="108"/><text x="17.6412%" y="671.50"></text></g><g><title>std::time::SystemTime::now (8 samples, 0.03%)</title><rect x="17.7134%" y="645" width="0.0258%" height="15" fill="rgb(236,59,4)" fg:x="5497" fg:w="8"/><text x="17.9634%" y="655.50"></text></g><g><title>smoltcp::wire::ip::Version::of_packet (33 samples, 0.11%)</title><rect x="17.7392%" y="661" width="0.1063%" height="15" fill="rgb(254,179,45)" fg:x="5505" fg:w="33"/><text x="17.9892%" y="671.50"></text></g><g><title>smoltcp::wire::ipv4::Address::from_bytes (12 samples, 0.04%)</title><rect x="17.8455%" y="661" width="0.0387%" height="15" fill="rgb(226,14,10)" fg:x="5538" fg:w="12"/><text x="18.0955%" y="671.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (36 samples, 0.12%)</title><rect x="17.8842%" y="661" width="0.1160%" height="15" fill="rgb(244,27,41)" fg:x="5550" fg:w="36"/><text x="18.1342%" y="671.50"></text></g><g><title>clock_gettime (35 samples, 0.11%)</title><rect x="17.8874%" y="645" width="0.1128%" height="15" fill="rgb(235,35,32)" fg:x="5551" fg:w="35"/><text x="18.1374%" y="655.50"></text></g><g><title>__vdso_clock_gettime (27 samples, 0.09%)</title><rect x="17.9132%" y="629" width="0.0870%" height="15" fill="rgb(218,68,31)" fg:x="5559" fg:w="27"/><text x="18.1632%" y="639.50"></text></g><g><title>std::time::Instant::now (7 samples, 0.02%)</title><rect x="18.0002%" y="661" width="0.0226%" height="15" fill="rgb(207,120,37)" fg:x="5586" fg:w="7"/><text x="18.2502%" y="671.50"></text></g><g><title>tokio::macros::support::thread_rng_n (18 samples, 0.06%)</title><rect x="18.0227%" y="661" width="0.0580%" height="15" fill="rgb(227,98,0)" fg:x="5593" fg:w="18"/><text x="18.2727%" y="671.50"></text></g><g><title>syscall (4 samples, 0.01%)</title><rect x="18.1484%" y="613" width="0.0129%" height="15" fill="rgb(207,7,3)" fg:x="5632" fg:w="4"/><text x="18.3984%" y="623.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (4 samples, 0.01%)</title><rect x="18.1484%" y="597" width="0.0129%" height="15" fill="rgb(206,98,19)" fg:x="5632" fg:w="4"/><text x="18.3984%" y="607.50"></text></g><g><title>do_syscall_64 (4 samples, 0.01%)</title><rect x="18.1484%" y="581" width="0.0129%" height="15" fill="rgb(217,5,26)" fg:x="5632" fg:w="4"/><text x="18.3984%" y="591.50"></text></g><g><title>ksys_write (8 samples, 0.03%)</title><rect x="18.1710%" y="517" width="0.0258%" height="15" fill="rgb(235,190,38)" fg:x="5639" fg:w="8"/><text x="18.4210%" y="527.50"></text></g><g><title>vfs_write (8 samples, 0.03%)</title><rect x="18.1710%" y="501" width="0.0258%" height="15" fill="rgb(247,86,24)" fg:x="5639" fg:w="8"/><text x="18.4210%" y="511.50"></text></g><g><title>eventfd_write (7 samples, 0.02%)</title><rect x="18.1742%" y="485" width="0.0226%" height="15" fill="rgb(205,101,16)" fg:x="5640" fg:w="7"/><text x="18.4242%" y="495.50"></text></g><g><title>__wake_up_common (6 samples, 0.02%)</title><rect x="18.1774%" y="469" width="0.0193%" height="15" fill="rgb(246,168,33)" fg:x="5641" fg:w="6"/><text x="18.4274%" y="479.50"></text></g><g><title>ep_poll_callback (6 samples, 0.02%)</title><rect x="18.1774%" y="453" width="0.0193%" height="15" fill="rgb(231,114,1)" fg:x="5641" fg:w="6"/><text x="18.4274%" y="463.50"></text></g><g><title>__wake_up_common_lock (5 samples, 0.02%)</title><rect x="18.1806%" y="437" width="0.0161%" height="15" fill="rgb(207,184,53)" fg:x="5642" fg:w="5"/><text x="18.4306%" y="447.50"></text></g><g><title>__wake_up_common (5 samples, 0.02%)</title><rect x="18.1806%" y="421" width="0.0161%" height="15" fill="rgb(224,95,51)" fg:x="5642" fg:w="5"/><text x="18.4306%" y="431.50"></text></g><g><title>ep_autoremove_wake_function (5 samples, 0.02%)</title><rect x="18.1806%" y="405" width="0.0161%" height="15" fill="rgb(212,188,45)" fg:x="5642" fg:w="5"/><text x="18.4306%" y="415.50"></text></g><g><title>try_to_wake_up (5 samples, 0.02%)</title><rect x="18.1806%" y="389" width="0.0161%" height="15" fill="rgb(223,154,38)" fg:x="5642" fg:w="5"/><text x="18.4306%" y="399.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Unparker::unpark (12 samples, 0.04%)</title><rect x="18.1613%" y="613" width="0.0387%" height="15" fill="rgb(251,22,52)" fg:x="5636" fg:w="12"/><text x="18.4113%" y="623.50"></text></g><g><title>mio::sys::unix::waker::eventfd::WakerInternal::wake (10 samples, 0.03%)</title><rect x="18.1678%" y="597" width="0.0322%" height="15" fill="rgb(229,209,22)" fg:x="5638" fg:w="10"/><text x="18.4178%" y="607.50"></text></g><g><title>&lt;&amp;std::process::ChildStdin as std::io::Write&gt;::write (10 samples, 0.03%)</title><rect x="18.1678%" y="581" width="0.0322%" height="15" fill="rgb(234,138,34)" fg:x="5638" fg:w="10"/><text x="18.4178%" y="591.50"></text></g><g><title>__write (10 samples, 0.03%)</title><rect x="18.1678%" y="565" width="0.0322%" height="15" fill="rgb(212,95,11)" fg:x="5638" fg:w="10"/><text x="18.4178%" y="575.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (9 samples, 0.03%)</title><rect x="18.1710%" y="549" width="0.0290%" height="15" fill="rgb(240,179,47)" fg:x="5639" fg:w="9"/><text x="18.4210%" y="559.50"></text></g><g><title>do_syscall_64 (9 samples, 0.03%)</title><rect x="18.1710%" y="533" width="0.0290%" height="15" fill="rgb(240,163,11)" fg:x="5639" fg:w="9"/><text x="18.4210%" y="543.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::schedule (27 samples, 0.09%)</title><rect x="18.1259%" y="645" width="0.0870%" height="15" fill="rgb(236,37,12)" fg:x="5625" fg:w="27"/><text x="18.3759%" y="655.50"></text></g><g><title>tokio::runtime::context::with_scheduler (25 samples, 0.08%)</title><rect x="18.1323%" y="629" width="0.0806%" height="15" fill="rgb(232,164,16)" fg:x="5627" fg:w="25"/><text x="18.3823%" y="639.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_local (4 samples, 0.01%)</title><rect x="18.2000%" y="613" width="0.0129%" height="15" fill="rgb(244,205,15)" fg:x="5648" fg:w="4"/><text x="18.4500%" y="623.50"></text></g><g><title>tokio::runtime::task::raw::schedule (8 samples, 0.03%)</title><rect x="18.2129%" y="645" width="0.0258%" height="15" fill="rgb(223,117,47)" fg:x="5652" fg:w="8"/><text x="18.4629%" y="655.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (66 samples, 0.21%)</title><rect x="18.0808%" y="661" width="0.2127%" height="15" fill="rgb(244,107,35)" fg:x="5611" fg:w="66"/><text x="18.3308%" y="671.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_notified_by_val (17 samples, 0.05%)</title><rect x="18.2386%" y="645" width="0.0548%" height="15" fill="rgb(205,140,8)" fg:x="5660" fg:w="17"/><text x="18.4886%" y="655.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::clear_entry (34 samples, 0.11%)</title><rect x="18.2934%" y="661" width="0.1096%" height="15" fill="rgb(228,84,46)" fg:x="5677" fg:w="34"/><text x="18.5434%" y="671.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::remove (11 samples, 0.04%)</title><rect x="18.3675%" y="645" width="0.0354%" height="15" fill="rgb(254,188,9)" fg:x="5700" fg:w="11"/><text x="18.6175%" y="655.50"></text></g><g><title>&lt;tokio::runtime::coop::RestoreOnPending as core::ops::drop::Drop&gt;::drop (11 samples, 0.04%)</title><rect x="18.4739%" y="645" width="0.0354%" height="15" fill="rgb(206,112,54)" fg:x="5733" fg:w="11"/><text x="18.7239%" y="655.50"></text></g><g><title>&lt;tokio::sync::mpsc::bounded::Semaphore as tokio::sync::mpsc::chan::Semaphore&gt;::add_permit (26 samples, 0.08%)</title><rect x="18.5093%" y="645" width="0.0838%" height="15" fill="rgb(216,84,49)" fg:x="5744" fg:w="26"/><text x="18.7593%" y="655.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::add_permits_locked (44 samples, 0.14%)</title><rect x="18.5931%" y="645" width="0.1418%" height="15" fill="rgb(214,194,35)" fg:x="5770" fg:w="44"/><text x="18.8431%" y="655.50"></text></g><g><title>tokio::sync::mpsc::list::Rx&lt;T&gt;::pop (58 samples, 0.19%)</title><rect x="18.7349%" y="645" width="0.1869%" height="15" fill="rgb(249,28,3)" fg:x="5814" fg:w="58"/><text x="18.9849%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (5 samples, 0.02%)</title><rect x="18.9057%" y="629" width="0.0161%" height="15" fill="rgb(222,56,52)" fg:x="5867" fg:w="5"/><text x="19.1557%" y="639.50"></text></g><g><title>tokio::sync::mpsc::chan::Rx&lt;T,S&gt;::recv (170 samples, 0.55%)</title><rect x="18.4030%" y="661" width="0.5478%" height="15" fill="rgb(245,217,50)" fg:x="5711" fg:w="170"/><text x="18.6530%" y="671.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::register_by_ref (9 samples, 0.03%)</title><rect x="18.9218%" y="645" width="0.0290%" height="15" fill="rgb(213,201,24)" fg:x="5872" fg:w="9"/><text x="19.1718%" y="655.50"></text></g><g><title>tokio::sync::mpsc::chan::Rx&lt;T,S&gt;::try_recv (70 samples, 0.23%)</title><rect x="18.9508%" y="661" width="0.2256%" height="15" fill="rgb(248,116,28)" fg:x="5881" fg:w="70"/><text x="19.2008%" y="671.50"></text></g><g><title>tokio::sync::mpsc::list::Rx&lt;T&gt;::pop (43 samples, 0.14%)</title><rect x="19.0378%" y="645" width="0.1386%" height="15" fill="rgb(219,72,43)" fg:x="5908" fg:w="43"/><text x="19.2878%" y="655.50"></text></g><g><title>[libc.so.6] (37 samples, 0.12%)</title><rect x="19.0571%" y="629" width="0.1192%" height="15" fill="rgb(209,138,14)" fg:x="5914" fg:w="37"/><text x="19.3071%" y="639.50"></text></g><g><title>tokio::sync::mpsc::list::Tx&lt;T&gt;::push (51 samples, 0.16%)</title><rect x="19.1764%" y="661" width="0.1643%" height="15" fill="rgb(222,18,33)" fg:x="5951" fg:w="51"/><text x="19.4264%" y="671.50"></text></g><g><title>tokio::sync::notify::Notify::notified (15 samples, 0.05%)</title><rect x="19.3407%" y="661" width="0.0483%" height="15" fill="rgb(213,199,7)" fg:x="6002" fg:w="15"/><text x="19.5907%" y="671.50"></text></g><g><title>tokio::sync::notify::Notify::notify_one (29 samples, 0.09%)</title><rect x="19.3890%" y="661" width="0.0934%" height="15" fill="rgb(250,110,10)" fg:x="6017" fg:w="29"/><text x="19.6390%" y="671.50"></text></g><g><title>tokio::sync::notify::notify_locked (6 samples, 0.02%)</title><rect x="19.4632%" y="645" width="0.0193%" height="15" fill="rgb(248,123,6)" fg:x="6040" fg:w="6"/><text x="19.7132%" y="655.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::wake (25 samples, 0.08%)</title><rect x="19.4825%" y="661" width="0.0806%" height="15" fill="rgb(206,91,31)" fg:x="6046" fg:w="25"/><text x="19.7325%" y="671.50"></text></g><g><title>tokio::time::instant::Instant::checked_add (8 samples, 0.03%)</title><rect x="19.5630%" y="661" width="0.0258%" height="15" fill="rgb(211,154,13)" fg:x="6071" fg:w="8"/><text x="19.8130%" y="671.50"></text></g><g><title>std::time::SystemTime::checked_add (5 samples, 0.02%)</title><rect x="19.5727%" y="645" width="0.0161%" height="15" fill="rgb(225,148,7)" fg:x="6074" fg:w="5"/><text x="19.8227%" y="655.50"></text></g><g><title>tokio::time::sleep::Sleep::new_timeout (35 samples, 0.11%)</title><rect x="19.5985%" y="661" width="0.1128%" height="15" fill="rgb(220,160,43)" fg:x="6082" fg:w="35"/><text x="19.8485%" y="671.50"></text></g><g><title>tracing::__macro_support::__is_enabled (10 samples, 0.03%)</title><rect x="19.7113%" y="661" width="0.0322%" height="15" fill="rgb(213,52,39)" fg:x="6117" fg:w="10"/><text x="19.9613%" y="671.50"></text></g><g><title>&lt;tracing_subscriber::fmt::Subscriber&lt;N,E,F,W&gt; as tracing_core::subscriber::Subscriber&gt;::event (4 samples, 0.01%)</title><rect x="19.8015%" y="645" width="0.0129%" height="15" fill="rgb(243,137,7)" fg:x="6145" fg:w="4"/><text x="20.0515%" y="655.50"></text></g><g><title>[libc.so.6] (9 samples, 0.03%)</title><rect x="20.1882%" y="549" width="0.0290%" height="15" fill="rgb(230,79,13)" fg:x="6265" fg:w="9"/><text x="20.4382%" y="559.50"></text></g><g><title>entry_SYSCALL_64 (8 samples, 0.03%)</title><rect x="20.2204%" y="549" width="0.0258%" height="15" fill="rgb(247,105,23)" fg:x="6275" fg:w="8"/><text x="20.4704%" y="559.50"></text></g><g><title>__x64_sys_write (5 samples, 0.02%)</title><rect x="20.2752%" y="517" width="0.0161%" height="15" fill="rgb(223,179,41)" fg:x="6292" fg:w="5"/><text x="20.5252%" y="527.50"></text></g><g><title>__fget_light (37 samples, 0.12%)</title><rect x="20.3171%" y="485" width="0.1192%" height="15" fill="rgb(218,9,34)" fg:x="6305" fg:w="37"/><text x="20.5671%" y="495.50"></text></g><g><title>__fget_files (27 samples, 0.09%)</title><rect x="20.3493%" y="469" width="0.0870%" height="15" fill="rgb(222,106,8)" fg:x="6315" fg:w="27"/><text x="20.5993%" y="479.50"></text></g><g><title>__fdget_pos (47 samples, 0.15%)</title><rect x="20.3139%" y="501" width="0.1515%" height="15" fill="rgb(211,220,0)" fg:x="6304" fg:w="47"/><text x="20.5639%" y="511.50"></text></g><g><title>mutex_lock (9 samples, 0.03%)</title><rect x="20.4363%" y="485" width="0.0290%" height="15" fill="rgb(229,52,16)" fg:x="6342" fg:w="9"/><text x="20.6863%" y="495.50"></text></g><g><title>fput (5 samples, 0.02%)</title><rect x="20.4653%" y="501" width="0.0161%" height="15" fill="rgb(212,155,18)" fg:x="6351" fg:w="5"/><text x="20.7153%" y="511.50"></text></g><g><title>mutex_unlock (8 samples, 0.03%)</title><rect x="20.4879%" y="501" width="0.0258%" height="15" fill="rgb(242,21,14)" fg:x="6358" fg:w="8"/><text x="20.7379%" y="511.50"></text></g><g><title>__fsnotify_parent (12 samples, 0.04%)</title><rect x="20.6168%" y="485" width="0.0387%" height="15" fill="rgb(222,19,48)" fg:x="6398" fg:w="12"/><text x="20.8668%" y="495.50"></text></g><g><title>down_write (13 samples, 0.04%)</title><rect x="20.6780%" y="453" width="0.0419%" height="15" fill="rgb(232,45,27)" fg:x="6417" fg:w="13"/><text x="20.9280%" y="463.50"></text></g><g><title>ext4_generic_write_checks (29 samples, 0.09%)</title><rect x="20.7199%" y="453" width="0.0934%" height="15" fill="rgb(249,103,42)" fg:x="6430" fg:w="29"/><text x="20.9699%" y="463.50"></text></g><g><title>generic_write_checks (27 samples, 0.09%)</title><rect x="20.7263%" y="437" width="0.0870%" height="15" fill="rgb(246,81,33)" fg:x="6432" fg:w="27"/><text x="20.9763%" y="447.50"></text></g><g><title>generic_write_check_limits (20 samples, 0.06%)</title><rect x="20.7489%" y="421" width="0.0644%" height="15" fill="rgb(252,33,42)" fg:x="6439" fg:w="20"/><text x="20.9989%" y="431.50"></text></g><g><title>file_modified (18 samples, 0.06%)</title><rect x="20.8133%" y="453" width="0.0580%" height="15" fill="rgb(209,212,41)" fg:x="6459" fg:w="18"/><text x="21.0633%" y="463.50"></text></g><g><title>file_remove_privs (14 samples, 0.05%)</title><rect x="20.8262%" y="437" width="0.0451%" height="15" fill="rgb(207,154,6)" fg:x="6463" fg:w="14"/><text x="21.0762%" y="447.50"></text></g><g><title>current_time (10 samples, 0.03%)</title><rect x="20.8778%" y="437" width="0.0322%" height="15" fill="rgb(223,64,47)" fg:x="6479" fg:w="10"/><text x="21.1278%" y="447.50"></text></g><g><title>ktime_get_coarse_real_ts64 (6 samples, 0.02%)</title><rect x="20.8907%" y="421" width="0.0193%" height="15" fill="rgb(211,161,38)" fg:x="6483" fg:w="6"/><text x="21.1407%" y="431.50"></text></g><g><title>file_update_time (15 samples, 0.05%)</title><rect x="20.8713%" y="453" width="0.0483%" height="15" fill="rgb(219,138,40)" fg:x="6477" fg:w="15"/><text x="21.1213%" y="463.50"></text></g><g><title>__cond_resched (11 samples, 0.04%)</title><rect x="20.9551%" y="437" width="0.0354%" height="15" fill="rgb(241,228,46)" fg:x="6503" fg:w="11"/><text x="21.2051%" y="447.50"></text></g><g><title>rcu_all_qs (9 samples, 0.03%)</title><rect x="20.9616%" y="421" width="0.0290%" height="15" fill="rgb(223,209,38)" fg:x="6505" fg:w="9"/><text x="21.2116%" y="431.50"></text></g><g><title>balance_dirty_pages_ratelimited (15 samples, 0.05%)</title><rect x="20.9906%" y="437" width="0.0483%" height="15" fill="rgb(236,164,45)" fg:x="6514" fg:w="15"/><text x="21.2406%" y="447.50"></text></g><g><title>copy_page_from_iter_atomic (28 samples, 0.09%)</title><rect x="21.0389%" y="437" width="0.0902%" height="15" fill="rgb(231,15,5)" fg:x="6529" fg:w="28"/><text x="21.2889%" y="447.50"></text></g><g><title>copy_user_enhanced_fast_string (19 samples, 0.06%)</title><rect x="21.0679%" y="421" width="0.0612%" height="15" fill="rgb(252,35,15)" fg:x="6538" fg:w="19"/><text x="21.3179%" y="431.50"></text></g><g><title>clean_bdev_aliases (6 samples, 0.02%)</title><rect x="21.2065%" y="405" width="0.0193%" height="15" fill="rgb(248,181,18)" fg:x="6581" fg:w="6"/><text x="21.4565%" y="415.50"></text></g><g><title>pagevec_lookup_range (5 samples, 0.02%)</title><rect x="21.2097%" y="389" width="0.0161%" height="15" fill="rgb(233,39,42)" fg:x="6582" fg:w="5"/><text x="21.4597%" y="399.50"></text></g><g><title>find_get_pages_range (5 samples, 0.02%)</title><rect x="21.2097%" y="373" width="0.0161%" height="15" fill="rgb(238,110,33)" fg:x="6582" fg:w="5"/><text x="21.4597%" y="383.50"></text></g><g><title>create_page_buffers (5 samples, 0.02%)</title><rect x="21.2258%" y="405" width="0.0161%" height="15" fill="rgb(233,195,10)" fg:x="6587" fg:w="5"/><text x="21.4758%" y="415.50"></text></g><g><title>ext4_da_get_block_prep (8 samples, 0.03%)</title><rect x="21.2419%" y="405" width="0.0258%" height="15" fill="rgb(254,105,3)" fg:x="6592" fg:w="8"/><text x="21.4919%" y="415.50"></text></g><g><title>__block_write_begin_int (35 samples, 0.11%)</title><rect x="21.1710%" y="421" width="0.1128%" height="15" fill="rgb(221,225,9)" fg:x="6570" fg:w="35"/><text x="21.4210%" y="431.50"></text></g><g><title>zero_user_segments (5 samples, 0.02%)</title><rect x="21.2677%" y="405" width="0.0161%" height="15" fill="rgb(224,227,45)" fg:x="6600" fg:w="5"/><text x="21.5177%" y="415.50"></text></g><g><title>memset_erms (5 samples, 0.02%)</title><rect x="21.2677%" y="389" width="0.0161%" height="15" fill="rgb(229,198,43)" fg:x="6600" fg:w="5"/><text x="21.5177%" y="399.50"></text></g><g><title>ext4_nonda_switch (10 samples, 0.03%)</title><rect x="21.2838%" y="421" width="0.0322%" height="15" fill="rgb(206,209,35)" fg:x="6605" fg:w="10"/><text x="21.5338%" y="431.50"></text></g><g><title>__alloc_pages (6 samples, 0.02%)</title><rect x="21.4642%" y="389" width="0.0193%" height="15" fill="rgb(245,195,53)" fg:x="6661" fg:w="6"/><text x="21.7142%" y="399.50"></text></g><g><title>get_page_from_freelist (6 samples, 0.02%)</title><rect x="21.4642%" y="373" width="0.0193%" height="15" fill="rgb(240,92,26)" fg:x="6661" fg:w="6"/><text x="21.7142%" y="383.50"></text></g><g><title>__mem_cgroup_charge (4 samples, 0.01%)</title><rect x="21.4868%" y="357" width="0.0129%" height="15" fill="rgb(207,40,23)" fg:x="6668" fg:w="4"/><text x="21.7368%" y="367.50"></text></g><g><title>__add_to_page_cache_locked (16 samples, 0.05%)</title><rect x="21.4836%" y="373" width="0.0516%" height="15" fill="rgb(223,111,35)" fg:x="6667" fg:w="16"/><text x="21.7336%" y="383.50"></text></g><g><title>add_to_page_cache_lru (19 samples, 0.06%)</title><rect x="21.4836%" y="389" width="0.0612%" height="15" fill="rgb(229,147,28)" fg:x="6667" fg:w="19"/><text x="21.7336%" y="399.50"></text></g><g><title>ext4_da_write_begin (184 samples, 0.59%)</title><rect x="21.1291%" y="437" width="0.5929%" height="15" fill="rgb(211,29,28)" fg:x="6557" fg:w="184"/><text x="21.3791%" y="447.50"></text></g><g><title>grab_cache_page_write_begin (126 samples, 0.41%)</title><rect x="21.3160%" y="421" width="0.4060%" height="15" fill="rgb(228,72,33)" fg:x="6615" fg:w="126"/><text x="21.5660%" y="431.50"></text></g><g><title>pagecache_get_page (120 samples, 0.39%)</title><rect x="21.3354%" y="405" width="0.3867%" height="15" fill="rgb(205,214,31)" fg:x="6621" fg:w="120"/><text x="21.5854%" y="415.50"></text></g><g><title>xas_load (55 samples, 0.18%)</title><rect x="21.5448%" y="389" width="0.1772%" height="15" fill="rgb(224,111,15)" fg:x="6686" fg:w="55"/><text x="21.7948%" y="399.50"></text></g><g><title>xas_start (21 samples, 0.07%)</title><rect x="21.6544%" y="373" width="0.0677%" height="15" fill="rgb(253,21,26)" fg:x="6720" fg:w="21"/><text x="21.9044%" y="383.50"></text></g><g><title>ext4_da_write_end (19 samples, 0.06%)</title><rect x="21.7220%" y="437" width="0.0612%" height="15" fill="rgb(245,139,43)" fg:x="6741" fg:w="19"/><text x="21.9720%" y="447.50"></text></g><g><title>fault_in_iov_iter_readable (29 samples, 0.09%)</title><rect x="21.7833%" y="437" width="0.0934%" height="15" fill="rgb(252,170,7)" fg:x="6760" fg:w="29"/><text x="22.0333%" y="447.50"></text></g><g><title>fault_in_readable (27 samples, 0.09%)</title><rect x="21.7897%" y="421" width="0.0870%" height="15" fill="rgb(231,118,14)" fg:x="6762" fg:w="27"/><text x="22.0397%" y="431.50"></text></g><g><title>__get_user_nocheck_1 (17 samples, 0.05%)</title><rect x="21.8219%" y="405" width="0.0548%" height="15" fill="rgb(238,83,0)" fg:x="6772" fg:w="17"/><text x="22.0719%" y="415.50"></text></g><g><title>__set_page_dirty (5 samples, 0.02%)</title><rect x="21.9573%" y="389" width="0.0161%" height="15" fill="rgb(221,39,39)" fg:x="6814" fg:w="5"/><text x="22.2073%" y="399.50"></text></g><g><title>__block_commit_write.constprop.0.isra.0 (23 samples, 0.07%)</title><rect x="21.9122%" y="421" width="0.0741%" height="15" fill="rgb(222,119,46)" fg:x="6800" fg:w="23"/><text x="22.1622%" y="431.50"></text></g><g><title>mark_buffer_dirty (16 samples, 0.05%)</title><rect x="21.9347%" y="405" width="0.0516%" height="15" fill="rgb(222,165,49)" fg:x="6807" fg:w="16"/><text x="22.1847%" y="415.50"></text></g><g><title>kmem_cache_free (6 samples, 0.02%)</title><rect x="22.1023%" y="373" width="0.0193%" height="15" fill="rgb(219,113,52)" fg:x="6859" fg:w="6"/><text x="22.3523%" y="383.50"></text></g><g><title>kmem_cache_free.part.0 (17 samples, 0.05%)</title><rect x="22.1216%" y="373" width="0.0548%" height="15" fill="rgb(214,7,15)" fg:x="6865" fg:w="17"/><text x="22.3716%" y="383.50"></text></g><g><title>_raw_spin_lock_irqsave (12 samples, 0.04%)</title><rect x="22.2537%" y="341" width="0.0387%" height="15" fill="rgb(235,32,4)" fg:x="6906" fg:w="12"/><text x="22.5037%" y="351.50"></text></g><g><title>__ext4_journal_stop (76 samples, 0.24%)</title><rect x="22.0539%" y="405" width="0.2449%" height="15" fill="rgb(238,90,54)" fg:x="6844" fg:w="76"/><text x="22.3039%" y="415.50"></text></g><g><title>jbd2_journal_stop (74 samples, 0.24%)</title><rect x="22.0604%" y="389" width="0.2385%" height="15" fill="rgb(213,208,19)" fg:x="6846" fg:w="74"/><text x="22.3104%" y="399.50"></text></g><g><title>stop_this_handle (38 samples, 0.12%)</title><rect x="22.1764%" y="373" width="0.1225%" height="15" fill="rgb(233,156,4)" fg:x="6882" fg:w="38"/><text x="22.4264%" y="383.50"></text></g><g><title>__wake_up_common_lock (30 samples, 0.10%)</title><rect x="22.2022%" y="357" width="0.0967%" height="15" fill="rgb(207,194,5)" fg:x="6890" fg:w="30"/><text x="22.4522%" y="367.50"></text></g><g><title>ext4_journal_check_start (7 samples, 0.02%)</title><rect x="22.3343%" y="373" width="0.0226%" height="15" fill="rgb(206,111,30)" fg:x="6931" fg:w="7"/><text x="22.5843%" y="383.50"></text></g><g><title>kmem_cache_alloc (29 samples, 0.09%)</title><rect x="22.3891%" y="357" width="0.0934%" height="15" fill="rgb(243,70,54)" fg:x="6948" fg:w="29"/><text x="22.6391%" y="367.50"></text></g><g><title>_raw_read_lock (16 samples, 0.05%)</title><rect x="22.5180%" y="341" width="0.0516%" height="15" fill="rgb(242,28,8)" fg:x="6988" fg:w="16"/><text x="22.7680%" y="351.50"></text></g><g><title>__ext4_journal_start_sb (96 samples, 0.31%)</title><rect x="22.3150%" y="389" width="0.3093%" height="15" fill="rgb(219,106,18)" fg:x="6925" fg:w="96"/><text x="22.5650%" y="399.50"></text></g><g><title>jbd2__journal_start (83 samples, 0.27%)</title><rect x="22.3568%" y="373" width="0.2675%" height="15" fill="rgb(244,222,10)" fg:x="6938" fg:w="83"/><text x="22.6068%" y="383.50"></text></g><g><title>start_this_handle (44 samples, 0.14%)</title><rect x="22.4825%" y="357" width="0.1418%" height="15" fill="rgb(236,179,52)" fg:x="6977" fg:w="44"/><text x="22.7325%" y="367.50"></text></g><g><title>add_transaction_credits (17 samples, 0.05%)</title><rect x="22.5695%" y="341" width="0.0548%" height="15" fill="rgb(213,23,39)" fg:x="7004" fg:w="17"/><text x="22.8195%" y="351.50"></text></g><g><title>__ext4_handle_dirty_metadata (8 samples, 0.03%)</title><rect x="22.8660%" y="357" width="0.0258%" height="15" fill="rgb(238,48,10)" fg:x="7096" fg:w="8"/><text x="23.1160%" y="367.50"></text></g><g><title>jbd2_journal_dirty_metadata (4 samples, 0.01%)</title><rect x="22.8789%" y="341" width="0.0129%" height="15" fill="rgb(251,196,23)" fg:x="7100" fg:w="4"/><text x="23.1289%" y="351.50"></text></g><g><title>_raw_spin_lock (10 samples, 0.03%)</title><rect x="22.8982%" y="357" width="0.0322%" height="15" fill="rgb(250,152,24)" fg:x="7106" fg:w="10"/><text x="23.1482%" y="367.50"></text></g><g><title>ext4_fc_track_template (12 samples, 0.04%)</title><rect x="22.9659%" y="341" width="0.0387%" height="15" fill="rgb(209,150,17)" fg:x="7127" fg:w="12"/><text x="23.2159%" y="351.50"></text></g><g><title>ext4_fc_track_inode (27 samples, 0.09%)</title><rect x="22.9304%" y="357" width="0.0870%" height="15" fill="rgb(234,202,34)" fg:x="7116" fg:w="27"/><text x="23.1804%" y="367.50"></text></g><g><title>ext4_inode_journal_mode (4 samples, 0.01%)</title><rect x="23.0045%" y="341" width="0.0129%" height="15" fill="rgb(253,148,53)" fg:x="7139" fg:w="4"/><text x="23.2545%" y="351.50"></text></g><g><title>__crc32c_le (7 samples, 0.02%)</title><rect x="23.1141%" y="309" width="0.0226%" height="15" fill="rgb(218,129,16)" fg:x="7173" fg:w="7"/><text x="23.3641%" y="319.50"></text></g><g><title>chksum_update (158 samples, 0.51%)</title><rect x="23.0722%" y="325" width="0.5091%" height="15" fill="rgb(216,85,19)" fg:x="7160" fg:w="158"/><text x="23.3222%" y="335.50"></text></g><g><title>crc32_body (138 samples, 0.44%)</title><rect x="23.1367%" y="309" width="0.4447%" height="15" fill="rgb(235,228,7)" fg:x="7180" fg:w="138"/><text x="23.3867%" y="319.50"></text></g><g><title>ext4_inode_csum_set (177 samples, 0.57%)</title><rect x="23.0174%" y="357" width="0.5704%" height="15" fill="rgb(245,175,0)" fg:x="7143" fg:w="177"/><text x="23.2674%" y="367.50"></text></g><g><title>ext4_inode_csum (169 samples, 0.54%)</title><rect x="23.0432%" y="341" width="0.5446%" height="15" fill="rgb(208,168,36)" fg:x="7151" fg:w="169"/><text x="23.2932%" y="351.50"></text></g><g><title>ext4_mark_iloc_dirty (312 samples, 1.01%)</title><rect x="22.6307%" y="373" width="1.0054%" height="15" fill="rgb(246,171,24)" fg:x="7023" fg:w="312"/><text x="22.8807%" y="383.50"></text></g><g><title>map_id_up (13 samples, 0.04%)</title><rect x="23.5942%" y="357" width="0.0419%" height="15" fill="rgb(215,142,24)" fg:x="7322" fg:w="13"/><text x="23.8442%" y="367.50"></text></g><g><title>__ext4_journal_get_write_access (19 samples, 0.06%)</title><rect x="23.6458%" y="357" width="0.0612%" height="15" fill="rgb(250,187,7)" fg:x="7338" fg:w="19"/><text x="23.8958%" y="367.50"></text></g><g><title>jbd2_journal_get_write_access (5 samples, 0.02%)</title><rect x="23.6909%" y="341" width="0.0161%" height="15" fill="rgb(228,66,33)" fg:x="7352" fg:w="5"/><text x="23.9409%" y="351.50"></text></g><g><title>__getblk_gfp (38 samples, 0.12%)</title><rect x="23.7940%" y="325" width="0.1225%" height="15" fill="rgb(234,215,21)" fg:x="7384" fg:w="38"/><text x="24.0440%" y="335.50"></text></g><g><title>__find_get_block (31 samples, 0.10%)</title><rect x="23.8166%" y="309" width="0.0999%" height="15" fill="rgb(222,191,20)" fg:x="7391" fg:w="31"/><text x="24.0666%" y="319.50"></text></g><g><title>mark_page_accessed (6 samples, 0.02%)</title><rect x="23.8971%" y="293" width="0.0193%" height="15" fill="rgb(245,79,54)" fg:x="7416" fg:w="6"/><text x="24.1471%" y="303.50"></text></g><g><title>ext4_get_group_desc (12 samples, 0.04%)</title><rect x="23.9165%" y="325" width="0.0387%" height="15" fill="rgb(240,10,37)" fg:x="7422" fg:w="12"/><text x="24.1665%" y="335.50"></text></g><g><title>__mark_inode_dirty (618 samples, 1.99%)</title><rect x="21.9863%" y="421" width="1.9914%" height="15" fill="rgb(214,192,32)" fg:x="6823" fg:w="618"/><text x="22.2363%" y="431.50">_..</text></g><g><title>ext4_dirty_inode (521 samples, 1.68%)</title><rect x="22.2988%" y="405" width="1.6789%" height="15" fill="rgb(209,36,54)" fg:x="6920" fg:w="521"/><text x="22.5488%" y="415.50"></text></g><g><title>__ext4_mark_inode_dirty (420 samples, 1.35%)</title><rect x="22.6243%" y="389" width="1.3534%" height="15" fill="rgb(220,10,11)" fg:x="7021" fg:w="420"/><text x="22.8743%" y="399.50"></text></g><g><title>ext4_reserve_inode_write (106 samples, 0.34%)</title><rect x="23.6361%" y="373" width="0.3416%" height="15" fill="rgb(221,106,17)" fg:x="7335" fg:w="106"/><text x="23.8861%" y="383.50"></text></g><g><title>ext4_get_inode_loc (84 samples, 0.27%)</title><rect x="23.7070%" y="357" width="0.2707%" height="15" fill="rgb(251,142,44)" fg:x="7357" fg:w="84"/><text x="23.9570%" y="367.50"></text></g><g><title>__ext4_get_inode_loc (81 samples, 0.26%)</title><rect x="23.7167%" y="341" width="0.2610%" height="15" fill="rgb(238,13,15)" fg:x="7360" fg:w="81"/><text x="23.9667%" y="351.50"></text></g><g><title>ext4_inode_table (7 samples, 0.02%)</title><rect x="23.9551%" y="325" width="0.0226%" height="15" fill="rgb(208,107,27)" fg:x="7434" fg:w="7"/><text x="24.2051%" y="335.50"></text></g><g><title>ext4_buffered_write_iter (1,037 samples, 3.34%)</title><rect x="20.6683%" y="469" width="3.3416%" height="15" fill="rgb(205,136,37)" fg:x="6414" fg:w="1037"/><text x="20.9183%" y="479.50">ext..</text></g><g><title>generic_perform_write (959 samples, 3.09%)</title><rect x="20.9197%" y="453" width="3.0903%" height="15" fill="rgb(250,205,27)" fg:x="6492" fg:w="959"/><text x="21.1697%" y="463.50">gen..</text></g><g><title>generic_write_end (662 samples, 2.13%)</title><rect x="21.8767%" y="437" width="2.1332%" height="15" fill="rgb(210,80,43)" fg:x="6789" fg:w="662"/><text x="22.1267%" y="447.50">g..</text></g><g><title>unlock_page (10 samples, 0.03%)</title><rect x="23.9777%" y="421" width="0.0322%" height="15" fill="rgb(247,160,36)" fg:x="7441" fg:w="10"/><text x="24.2277%" y="431.50"></text></g><g><title>ext4_file_write_iter (7 samples, 0.02%)</title><rect x="24.0099%" y="469" width="0.0226%" height="15" fill="rgb(234,13,49)" fg:x="7451" fg:w="7"/><text x="24.2599%" y="479.50"></text></g><g><title>new_sync_write (1,049 samples, 3.38%)</title><rect x="20.6554%" y="485" width="3.3803%" height="15" fill="rgb(234,122,0)" fg:x="6410" fg:w="1049"/><text x="20.9054%" y="495.50">new..</text></g><g><title>ksys_write (1,172 samples, 3.78%)</title><rect x="20.2913%" y="517" width="3.7766%" height="15" fill="rgb(207,146,38)" fg:x="6297" fg:w="1172"/><text x="20.5413%" y="527.50">ksys..</text></g><g><title>vfs_write (1,103 samples, 3.55%)</title><rect x="20.5136%" y="501" width="3.5543%" height="15" fill="rgb(207,177,25)" fg:x="6366" fg:w="1103"/><text x="20.7636%" y="511.50">vfs_..</text></g><g><title>security_file_permission (9 samples, 0.03%)</title><rect x="24.0389%" y="485" width="0.0290%" height="15" fill="rgb(211,178,42)" fg:x="7460" fg:w="9"/><text x="24.2889%" y="495.50"></text></g><g><title>syscall_enter_from_user_mode (5 samples, 0.02%)</title><rect x="24.0679%" y="517" width="0.0161%" height="15" fill="rgb(230,69,54)" fg:x="7469" fg:w="5"/><text x="24.3179%" y="527.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1,200 samples, 3.87%)</title><rect x="20.2462%" y="549" width="3.8669%" height="15" fill="rgb(214,135,41)" fg:x="6283" fg:w="1200"/><text x="20.4962%" y="559.50">entr..</text></g><g><title>do_syscall_64 (1,195 samples, 3.85%)</title><rect x="20.2623%" y="533" width="3.8507%" height="15" fill="rgb(237,67,25)" fg:x="6288" fg:w="1195"/><text x="20.5123%" y="543.50">do_s..</text></g><g><title>syscall_exit_to_user_mode (9 samples, 0.03%)</title><rect x="24.0840%" y="517" width="0.0290%" height="15" fill="rgb(222,189,50)" fg:x="7474" fg:w="9"/><text x="24.3340%" y="527.50"></text></g><g><title>exit_to_user_mode_prepare (7 samples, 0.02%)</title><rect x="24.0905%" y="501" width="0.0226%" height="15" fill="rgb(245,148,34)" fg:x="7476" fg:w="7"/><text x="24.3405%" y="511.50"></text></g><g><title>&lt;std::io::stdio::StdoutRaw as std::io::Write&gt;::write_all (1,252 samples, 4.03%)</title><rect x="20.0947%" y="581" width="4.0344%" height="15" fill="rgb(222,29,6)" fg:x="6236" fg:w="1252"/><text x="20.3447%" y="591.50">&lt;std..</text></g><g><title>__write (1,236 samples, 3.98%)</title><rect x="20.1463%" y="565" width="3.9829%" height="15" fill="rgb(221,189,43)" fg:x="6252" fg:w="1236"/><text x="20.3963%" y="575.50">__wr..</text></g><g><title>syscall_return_via_sysret (5 samples, 0.02%)</title><rect x="24.1130%" y="549" width="0.0161%" height="15" fill="rgb(207,36,27)" fg:x="7483" fg:w="5"/><text x="24.3630%" y="559.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (1,308 samples, 4.21%)</title><rect x="20.0367%" y="597" width="4.2149%" height="15" fill="rgb(217,90,24)" fg:x="6218" fg:w="1308"/><text x="20.2867%" y="607.50">&lt;std:..</text></g><g><title>[libc.so.6] (38 samples, 0.12%)</title><rect x="24.1292%" y="581" width="0.1225%" height="15" fill="rgb(224,66,35)" fg:x="7488" fg:w="38"/><text x="24.3792%" y="591.50"></text></g><g><title>__errno_location (4 samples, 0.01%)</title><rect x="24.4546%" y="581" width="0.0129%" height="15" fill="rgb(221,13,50)" fg:x="7589" fg:w="4"/><text x="24.7046%" y="591.50"></text></g><g><title>intel_pmu_disable_all (4 samples, 0.01%)</title><rect x="24.6028%" y="421" width="0.0129%" height="15" fill="rgb(236,68,49)" fg:x="7635" fg:w="4"/><text x="24.8528%" y="431.50"></text></g><g><title>__perf_event_task_sched_out (9 samples, 0.03%)</title><rect x="24.5932%" y="437" width="0.0290%" height="15" fill="rgb(229,146,28)" fg:x="7632" fg:w="9"/><text x="24.8432%" y="447.50"></text></g><g><title>update_curr (5 samples, 0.02%)</title><rect x="24.6415%" y="405" width="0.0161%" height="15" fill="rgb(225,31,38)" fg:x="7647" fg:w="5"/><text x="24.8915%" y="415.50"></text></g><g><title>dequeue_task_fair (13 samples, 0.04%)</title><rect x="24.6222%" y="437" width="0.0419%" height="15" fill="rgb(250,208,3)" fg:x="7641" fg:w="13"/><text x="24.8722%" y="447.50"></text></g><g><title>dequeue_entity (9 samples, 0.03%)</title><rect x="24.6351%" y="421" width="0.0290%" height="15" fill="rgb(246,54,23)" fg:x="7645" fg:w="9"/><text x="24.8851%" y="431.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (7 samples, 0.02%)</title><rect x="24.6898%" y="405" width="0.0226%" height="15" fill="rgb(243,76,11)" fg:x="7662" fg:w="7"/><text x="24.9398%" y="415.50"></text></g><g><title>finish_task_switch.isra.0 (16 samples, 0.05%)</title><rect x="24.6641%" y="437" width="0.0516%" height="15" fill="rgb(245,21,50)" fg:x="7654" fg:w="16"/><text x="24.9141%" y="447.50"></text></g><g><title>__perf_event_task_sched_in (12 samples, 0.04%)</title><rect x="24.6770%" y="421" width="0.0387%" height="15" fill="rgb(228,9,43)" fg:x="7658" fg:w="12"/><text x="24.9270%" y="431.50"></text></g><g><title>put_prev_task_fair (4 samples, 0.01%)</title><rect x="24.7317%" y="437" width="0.0129%" height="15" fill="rgb(208,100,47)" fg:x="7675" fg:w="4"/><text x="24.9817%" y="447.50"></text></g><g><title>put_prev_entity (4 samples, 0.01%)</title><rect x="24.7317%" y="421" width="0.0129%" height="15" fill="rgb(232,26,8)" fg:x="7675" fg:w="4"/><text x="24.9817%" y="431.50"></text></g><g><title>futex_wait_queue_me (64 samples, 0.21%)</title><rect x="24.5416%" y="485" width="0.2062%" height="15" fill="rgb(216,166,38)" fg:x="7616" fg:w="64"/><text x="24.7916%" y="495.50"></text></g><g><title>schedule (61 samples, 0.20%)</title><rect x="24.5513%" y="469" width="0.1966%" height="15" fill="rgb(251,202,51)" fg:x="7619" fg:w="61"/><text x="24.8013%" y="479.50"></text></g><g><title>__schedule (58 samples, 0.19%)</title><rect x="24.5610%" y="453" width="0.1869%" height="15" fill="rgb(254,216,34)" fg:x="7622" fg:w="58"/><text x="24.8110%" y="463.50"></text></g><g><title>__x64_sys_futex (91 samples, 0.29%)</title><rect x="24.5029%" y="533" width="0.2932%" height="15" fill="rgb(251,32,27)" fg:x="7604" fg:w="91"/><text x="24.7529%" y="543.50"></text></g><g><title>do_futex (89 samples, 0.29%)</title><rect x="24.5094%" y="517" width="0.2868%" height="15" fill="rgb(208,127,28)" fg:x="7606" fg:w="89"/><text x="24.7594%" y="527.50"></text></g><g><title>futex_wait (85 samples, 0.27%)</title><rect x="24.5223%" y="501" width="0.2739%" height="15" fill="rgb(224,137,22)" fg:x="7610" fg:w="85"/><text x="24.7723%" y="511.50"></text></g><g><title>futex_wait_setup (15 samples, 0.05%)</title><rect x="24.7478%" y="485" width="0.0483%" height="15" fill="rgb(254,70,32)" fg:x="7680" fg:w="15"/><text x="24.9978%" y="495.50"></text></g><g><title>__get_user_8 (5 samples, 0.02%)</title><rect x="24.8220%" y="485" width="0.0161%" height="15" fill="rgb(229,75,37)" fg:x="7703" fg:w="5"/><text x="25.0720%" y="495.50"></text></g><g><title>__rseq_handle_notify_resume (8 samples, 0.03%)</title><rect x="24.8155%" y="501" width="0.0258%" height="15" fill="rgb(252,64,23)" fg:x="7701" fg:w="8"/><text x="25.0655%" y="511.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (113 samples, 0.36%)</title><rect x="24.4868%" y="565" width="0.3641%" height="15" fill="rgb(232,162,48)" fg:x="7599" fg:w="113"/><text x="24.7368%" y="575.50"></text></g><g><title>do_syscall_64 (111 samples, 0.36%)</title><rect x="24.4933%" y="549" width="0.3577%" height="15" fill="rgb(246,160,12)" fg:x="7601" fg:w="111"/><text x="24.7433%" y="559.50"></text></g><g><title>syscall_exit_to_user_mode (17 samples, 0.05%)</title><rect x="24.7962%" y="533" width="0.0548%" height="15" fill="rgb(247,166,0)" fg:x="7695" fg:w="17"/><text x="25.0462%" y="543.50"></text></g><g><title>exit_to_user_mode_prepare (17 samples, 0.05%)</title><rect x="24.7962%" y="517" width="0.0548%" height="15" fill="rgb(249,219,21)" fg:x="7695" fg:w="17"/><text x="25.0462%" y="527.50"></text></g><g><title>std::sys::pal::unix::locks::futex_mutex::Mutex::lock_contended (188 samples, 0.61%)</title><rect x="24.2516%" y="597" width="0.6058%" height="15" fill="rgb(205,209,3)" fg:x="7526" fg:w="188"/><text x="24.5016%" y="607.50"></text></g><g><title>syscall (121 samples, 0.39%)</title><rect x="24.4675%" y="581" width="0.3899%" height="15" fill="rgb(243,44,1)" fg:x="7593" fg:w="121"/><text x="24.7175%" y="591.50"></text></g><g><title>[[kernel.kallsyms]] (32 samples, 0.10%)</title><rect x="24.8735%" y="581" width="0.1031%" height="15" fill="rgb(206,159,16)" fg:x="7719" fg:w="32"/><text x="25.1235%" y="591.50"></text></g><g><title>entry_SYSCALL_64 (4 samples, 0.01%)</title><rect x="24.9766%" y="581" width="0.0129%" height="15" fill="rgb(244,77,30)" fg:x="7751" fg:w="4"/><text x="25.2266%" y="591.50"></text></g><g><title>_raw_spin_lock (8 samples, 0.03%)</title><rect x="25.1603%" y="501" width="0.0258%" height="15" fill="rgb(218,69,12)" fg:x="7808" fg:w="8"/><text x="25.4103%" y="511.50"></text></g><g><title>mark_wake_futex (14 samples, 0.05%)</title><rect x="25.2054%" y="501" width="0.0451%" height="15" fill="rgb(212,87,7)" fg:x="7822" fg:w="14"/><text x="25.4554%" y="511.50"></text></g><g><title>__unqueue_futex (9 samples, 0.03%)</title><rect x="25.2215%" y="485" width="0.0290%" height="15" fill="rgb(245,114,25)" fg:x="7827" fg:w="9"/><text x="25.4715%" y="495.50"></text></g><g><title>asm_sysvec_hyperv_callback (4 samples, 0.01%)</title><rect x="25.3182%" y="469" width="0.0129%" height="15" fill="rgb(210,61,42)" fg:x="7857" fg:w="4"/><text x="25.5682%" y="479.50"></text></g><g><title>select_task_rq_fair (10 samples, 0.03%)</title><rect x="25.3375%" y="469" width="0.0322%" height="15" fill="rgb(211,52,33)" fg:x="7863" fg:w="10"/><text x="25.5875%" y="479.50"></text></g><g><title>available_idle_cpu (8 samples, 0.03%)</title><rect x="25.3440%" y="453" width="0.0258%" height="15" fill="rgb(234,58,33)" fg:x="7865" fg:w="8"/><text x="25.5940%" y="463.50"></text></g><g><title>__smp_call_single_queue (14 samples, 0.05%)</title><rect x="25.4471%" y="453" width="0.0451%" height="15" fill="rgb(220,115,36)" fg:x="7897" fg:w="14"/><text x="25.6971%" y="463.50"></text></g><g><title>llist_add_batch (13 samples, 0.04%)</title><rect x="25.4503%" y="437" width="0.0419%" height="15" fill="rgb(243,153,54)" fg:x="7898" fg:w="13"/><text x="25.7003%" y="447.50"></text></g><g><title>hv_send_ipi (15 samples, 0.05%)</title><rect x="25.4922%" y="453" width="0.0483%" height="15" fill="rgb(251,47,18)" fg:x="7911" fg:w="15"/><text x="25.7422%" y="463.50"></text></g><g><title>__send_ipi_one (10 samples, 0.03%)</title><rect x="25.5083%" y="437" width="0.0322%" height="15" fill="rgb(242,102,42)" fg:x="7916" fg:w="10"/><text x="25.7583%" y="447.50"></text></g><g><title>sched_clock_cpu (9 samples, 0.03%)</title><rect x="25.5438%" y="453" width="0.0290%" height="15" fill="rgb(234,31,38)" fg:x="7927" fg:w="9"/><text x="25.7938%" y="463.50"></text></g><g><title>read_hv_sched_clock_tsc (8 samples, 0.03%)</title><rect x="25.5470%" y="437" width="0.0258%" height="15" fill="rgb(221,117,51)" fg:x="7928" fg:w="8"/><text x="25.7970%" y="447.50"></text></g><g><title>__x64_sys_futex (182 samples, 0.59%)</title><rect x="24.9960%" y="549" width="0.5865%" height="15" fill="rgb(212,20,18)" fg:x="7757" fg:w="182"/><text x="25.2460%" y="559.50"></text></g><g><title>do_futex (174 samples, 0.56%)</title><rect x="25.0218%" y="533" width="0.5607%" height="15" fill="rgb(245,133,36)" fg:x="7765" fg:w="174"/><text x="25.2718%" y="543.50"></text></g><g><title>futex_wake (159 samples, 0.51%)</title><rect x="25.0701%" y="517" width="0.5124%" height="15" fill="rgb(212,6,19)" fg:x="7780" fg:w="159"/><text x="25.3201%" y="527.50"></text></g><g><title>wake_up_q (101 samples, 0.33%)</title><rect x="25.2570%" y="501" width="0.3255%" height="15" fill="rgb(218,1,36)" fg:x="7838" fg:w="101"/><text x="25.5070%" y="511.50"></text></g><g><title>try_to_wake_up (96 samples, 0.31%)</title><rect x="25.2731%" y="485" width="0.3093%" height="15" fill="rgb(246,84,54)" fg:x="7843" fg:w="96"/><text x="25.5231%" y="495.50"></text></g><g><title>ttwu_queue_wakelist (66 samples, 0.21%)</title><rect x="25.3698%" y="469" width="0.2127%" height="15" fill="rgb(242,110,6)" fg:x="7873" fg:w="66"/><text x="25.6198%" y="479.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (186 samples, 0.60%)</title><rect x="24.9895%" y="581" width="0.5994%" height="15" fill="rgb(214,47,5)" fg:x="7755" fg:w="186"/><text x="25.2395%" y="591.50"></text></g><g><title>do_syscall_64 (185 samples, 0.60%)</title><rect x="24.9927%" y="565" width="0.5961%" height="15" fill="rgb(218,159,25)" fg:x="7756" fg:w="185"/><text x="25.2427%" y="575.50"></text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write_all (1,772 samples, 5.71%)</title><rect x="19.8821%" y="629" width="5.7101%" height="15" fill="rgb(215,211,28)" fg:x="6170" fg:w="1772"/><text x="20.1321%" y="639.50">&lt;std::i..</text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_all (1,769 samples, 5.70%)</title><rect x="19.8917%" y="613" width="5.7004%" height="15" fill="rgb(238,59,32)" fg:x="6173" fg:w="1769"/><text x="20.1417%" y="623.50">&lt;&amp;std::..</text></g><g><title>syscall (228 samples, 0.73%)</title><rect x="24.8574%" y="597" width="0.7347%" height="15" fill="rgb(226,82,3)" fg:x="7714" fg:w="228"/><text x="25.1074%" y="607.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_fmt (7 samples, 0.02%)</title><rect x="25.7726%" y="613" width="0.0226%" height="15" fill="rgb(240,164,32)" fg:x="7998" fg:w="7"/><text x="26.0226%" y="623.50"></text></g><g><title>&lt;tracing_core::event::Event as tracing_log::NormalizeEvent&gt;::normalized_metadata (23 samples, 0.07%)</title><rect x="25.7951%" y="613" width="0.0741%" height="15" fill="rgb(232,46,7)" fg:x="8005" fg:w="23"/><text x="26.0451%" y="623.50"></text></g><g><title>tracing_log::level_to_cs (12 samples, 0.04%)</title><rect x="25.8306%" y="597" width="0.0387%" height="15" fill="rgb(229,129,53)" fg:x="8016" fg:w="12"/><text x="26.0806%" y="607.50"></text></g><g><title>&lt;tracing_subscriber::fmt::time::datetime::DateTime as core::convert::From&lt;std::time::SystemTime&gt;&gt;::from (27 samples, 0.09%)</title><rect x="25.8886%" y="597" width="0.0870%" height="15" fill="rgb(234,188,29)" fg:x="8034" fg:w="27"/><text x="26.1386%" y="607.50"></text></g><g><title>core::fmt::Formatter::write_fmt (4 samples, 0.01%)</title><rect x="26.1012%" y="565" width="0.0129%" height="15" fill="rgb(246,141,4)" fg:x="8100" fg:w="4"/><text x="26.3512%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (27 samples, 0.09%)</title><rect x="26.2076%" y="549" width="0.0870%" height="15" fill="rgb(229,23,39)" fg:x="8133" fg:w="27"/><text x="26.4576%" y="559.50"></text></g><g><title>[libc.so.6] (17 samples, 0.05%)</title><rect x="26.2398%" y="533" width="0.0548%" height="15" fill="rgb(206,12,3)" fg:x="8143" fg:w="17"/><text x="26.4898%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (7 samples, 0.02%)</title><rect x="26.3526%" y="533" width="0.0226%" height="15" fill="rgb(252,226,20)" fg:x="8178" fg:w="7"/><text x="26.6026%" y="543.50"></text></g><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="26.3623%" y="517" width="0.0129%" height="15" fill="rgb(216,123,35)" fg:x="8181" fg:w="4"/><text x="26.6123%" y="527.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for isize&gt;::fmt (38 samples, 0.12%)</title><rect x="26.2946%" y="549" width="0.1225%" height="15" fill="rgb(212,68,40)" fg:x="8160" fg:w="38"/><text x="26.5446%" y="559.50"></text></g><g><title>core::fmt::Formatter::pad_integral (13 samples, 0.04%)</title><rect x="26.3751%" y="533" width="0.0419%" height="15" fill="rgb(254,125,32)" fg:x="8185" fg:w="13"/><text x="26.6251%" y="543.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (7 samples, 0.02%)</title><rect x="26.3945%" y="517" width="0.0226%" height="15" fill="rgb(253,97,22)" fg:x="8191" fg:w="7"/><text x="26.6445%" y="527.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (23 samples, 0.07%)</title><rect x="26.4170%" y="549" width="0.0741%" height="15" fill="rgb(241,101,14)" fg:x="8198" fg:w="23"/><text x="26.6670%" y="559.50"></text></g><g><title>core::fmt::Formatter::pad_integral (7 samples, 0.02%)</title><rect x="26.4686%" y="533" width="0.0226%" height="15" fill="rgb(238,103,29)" fg:x="8214" fg:w="7"/><text x="26.7186%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4 samples, 0.01%)</title><rect x="26.5202%" y="533" width="0.0129%" height="15" fill="rgb(233,195,47)" fg:x="8230" fg:w="4"/><text x="26.7702%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_char (6 samples, 0.02%)</title><rect x="26.5975%" y="517" width="0.0193%" height="15" fill="rgb(246,218,30)" fg:x="8254" fg:w="6"/><text x="26.8475%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (8 samples, 0.03%)</title><rect x="26.6168%" y="517" width="0.0258%" height="15" fill="rgb(219,145,47)" fg:x="8260" fg:w="8"/><text x="26.8668%" y="527.50"></text></g><g><title>core::fmt::write (212 samples, 0.68%)</title><rect x="25.9756%" y="597" width="0.6831%" height="15" fill="rgb(243,12,26)" fg:x="8061" fg:w="212"/><text x="26.2256%" y="607.50"></text></g><g><title>&lt;tracing_subscriber::fmt::time::datetime::DateTime as core::fmt::Display&gt;::fmt (210 samples, 0.68%)</title><rect x="25.9820%" y="581" width="0.6767%" height="15" fill="rgb(214,87,16)" fg:x="8063" fg:w="210"/><text x="26.2320%" y="591.50"></text></g><g><title>core::fmt::write (169 samples, 0.54%)</title><rect x="26.1141%" y="565" width="0.5446%" height="15" fill="rgb(208,99,42)" fg:x="8104" fg:w="169"/><text x="26.3641%" y="575.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u8&gt;::fmt (52 samples, 0.17%)</title><rect x="26.4912%" y="549" width="0.1676%" height="15" fill="rgb(253,99,2)" fg:x="8221" fg:w="52"/><text x="26.7412%" y="559.50"></text></g><g><title>core::fmt::Formatter::pad_integral (39 samples, 0.13%)</title><rect x="26.5330%" y="533" width="0.1257%" height="15" fill="rgb(220,168,23)" fg:x="8234" fg:w="39"/><text x="26.7830%" y="543.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (5 samples, 0.02%)</title><rect x="26.6426%" y="517" width="0.0161%" height="15" fill="rgb(242,38,24)" fg:x="8268" fg:w="5"/><text x="26.8926%" y="527.50"></text></g><g><title>&lt;tracing_subscriber::fmt::time::SystemTime as tracing_subscriber::fmt::time::FormatTime&gt;::format_time (257 samples, 0.83%)</title><rect x="25.8757%" y="613" width="0.8282%" height="15" fill="rgb(225,182,9)" fg:x="8030" fg:w="257"/><text x="26.1257%" y="623.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (14 samples, 0.05%)</title><rect x="26.6587%" y="597" width="0.0451%" height="15" fill="rgb(243,178,37)" fg:x="8273" fg:w="14"/><text x="26.9087%" y="607.50"></text></g><g><title>clock_gettime (13 samples, 0.04%)</title><rect x="26.6619%" y="581" width="0.0419%" height="15" fill="rgb(232,139,19)" fg:x="8274" fg:w="13"/><text x="26.9119%" y="591.50"></text></g><g><title>__vdso_clock_gettime (11 samples, 0.04%)</title><rect x="26.6684%" y="565" width="0.0354%" height="15" fill="rgb(225,201,24)" fg:x="8276" fg:w="11"/><text x="26.9184%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (20 samples, 0.06%)</title><rect x="26.8295%" y="597" width="0.0644%" height="15" fill="rgb(221,47,46)" fg:x="8326" fg:w="20"/><text x="27.0795%" y="607.50"></text></g><g><title>[libc.so.6] (15 samples, 0.05%)</title><rect x="26.8456%" y="581" width="0.0483%" height="15" fill="rgb(249,23,13)" fg:x="8331" fg:w="15"/><text x="27.0956%" y="591.50"></text></g><g><title>&lt;nu_ansi_term::ansi::Prefix as core::fmt::Display&gt;::fmt (5 samples, 0.02%)</title><rect x="26.8940%" y="597" width="0.0161%" height="15" fill="rgb(219,9,5)" fg:x="8346" fg:w="5"/><text x="27.1440%" y="607.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (6 samples, 0.02%)</title><rect x="26.9520%" y="565" width="0.0193%" height="15" fill="rgb(254,171,16)" fg:x="8364" fg:w="6"/><text x="27.2020%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (6 samples, 0.02%)</title><rect x="26.9713%" y="565" width="0.0193%" height="15" fill="rgb(230,171,20)" fg:x="8370" fg:w="6"/><text x="27.2213%" y="575.50"></text></g><g><title>[libc.so.6] (5 samples, 0.02%)</title><rect x="26.9745%" y="549" width="0.0161%" height="15" fill="rgb(210,71,41)" fg:x="8371" fg:w="5"/><text x="27.2245%" y="559.50"></text></g><g><title>&lt;str as core::fmt::Display&gt;::fmt (6 samples, 0.02%)</title><rect x="26.9906%" y="565" width="0.0193%" height="15" fill="rgb(206,173,20)" fg:x="8376" fg:w="6"/><text x="27.2406%" y="575.50"></text></g><g><title>&lt;nu_ansi_term::ansi::Suffix as core::fmt::Display&gt;::fmt (37 samples, 0.12%)</title><rect x="26.9101%" y="597" width="0.1192%" height="15" fill="rgb(233,88,34)" fg:x="8351" fg:w="37"/><text x="27.1601%" y="607.50"></text></g><g><title>core::fmt::write (27 samples, 0.09%)</title><rect x="26.9423%" y="581" width="0.0870%" height="15" fill="rgb(223,209,46)" fg:x="8361" fg:w="27"/><text x="27.1923%" y="591.50"></text></g><g><title>core::fmt::Formatter::pad (6 samples, 0.02%)</title><rect x="27.0100%" y="565" width="0.0193%" height="15" fill="rgb(250,43,18)" fg:x="8382" fg:w="6"/><text x="27.2600%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (10 samples, 0.03%)</title><rect x="27.0583%" y="581" width="0.0322%" height="15" fill="rgb(208,13,10)" fg:x="8397" fg:w="10"/><text x="27.3083%" y="591.50"></text></g><g><title>[libc.so.6] (5 samples, 0.02%)</title><rect x="27.0744%" y="565" width="0.0161%" height="15" fill="rgb(212,200,36)" fg:x="8402" fg:w="5"/><text x="27.3244%" y="575.50"></text></g><g><title>&lt;nu_ansi_term::ansi::Suffix as core::fmt::Display&gt;::fmt (19 samples, 0.06%)</title><rect x="27.1550%" y="565" width="0.0612%" height="15" fill="rgb(225,90,30)" fg:x="8427" fg:w="19"/><text x="27.4050%" y="575.50"></text></g><g><title>core::fmt::write (13 samples, 0.04%)</title><rect x="27.1743%" y="549" width="0.0419%" height="15" fill="rgb(236,182,39)" fg:x="8433" fg:w="13"/><text x="27.4243%" y="559.50"></text></g><g><title>core::fmt::Formatter::pad (5 samples, 0.02%)</title><rect x="27.2001%" y="533" width="0.0161%" height="15" fill="rgb(212,144,35)" fg:x="8441" fg:w="5"/><text x="27.4501%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_char (4 samples, 0.01%)</title><rect x="27.3386%" y="533" width="0.0129%" height="15" fill="rgb(228,63,44)" fg:x="8484" fg:w="4"/><text x="27.5886%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (7 samples, 0.02%)</title><rect x="27.3515%" y="533" width="0.0226%" height="15" fill="rgb(228,109,6)" fg:x="8488" fg:w="7"/><text x="27.6015%" y="543.50"></text></g><g><title>&lt;nu_ansi_term::display::AnsiGenericString&lt;str&gt; as core::fmt::Display&gt;::fmt (110 samples, 0.35%)</title><rect x="27.0293%" y="597" width="0.3545%" height="15" fill="rgb(238,117,24)" fg:x="8388" fg:w="110"/><text x="27.2793%" y="607.50"></text></g><g><title>core::fmt::write (87 samples, 0.28%)</title><rect x="27.1034%" y="581" width="0.2803%" height="15" fill="rgb(242,26,26)" fg:x="8411" fg:w="87"/><text x="27.3534%" y="591.50"></text></g><g><title>nu_ansi_term::ansi::&lt;impl nu_ansi_term::style::Style&gt;::write_prefix (52 samples, 0.17%)</title><rect x="27.2162%" y="565" width="0.1676%" height="15" fill="rgb(221,92,48)" fg:x="8446" fg:w="52"/><text x="27.4662%" y="575.50"></text></g><g><title>core::fmt::write (31 samples, 0.10%)</title><rect x="27.2839%" y="549" width="0.0999%" height="15" fill="rgb(209,209,32)" fg:x="8467" fg:w="31"/><text x="27.5339%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (9 samples, 0.03%)</title><rect x="27.4933%" y="549" width="0.0290%" height="15" fill="rgb(221,70,22)" fg:x="8532" fg:w="9"/><text x="27.7433%" y="559.50"></text></g><g><title>[libc.so.6] (6 samples, 0.02%)</title><rect x="27.5030%" y="533" width="0.0193%" height="15" fill="rgb(248,145,5)" fg:x="8535" fg:w="6"/><text x="27.7530%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_fmt (4 samples, 0.01%)</title><rect x="27.5255%" y="549" width="0.0129%" height="15" fill="rgb(226,116,26)" fg:x="8542" fg:w="4"/><text x="27.7755%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (5 samples, 0.02%)</title><rect x="27.6093%" y="501" width="0.0161%" height="15" fill="rgb(244,5,17)" fg:x="8568" fg:w="5"/><text x="27.8593%" y="511.50"></text></g><g><title>&lt;nu_ansi_term::ansi::Suffix as core::fmt::Display&gt;::fmt (18 samples, 0.06%)</title><rect x="27.5739%" y="533" width="0.0580%" height="15" fill="rgb(252,159,33)" fg:x="8557" fg:w="18"/><text x="27.8239%" y="543.50"></text></g><g><title>core::fmt::write (14 samples, 0.05%)</title><rect x="27.5868%" y="517" width="0.0451%" height="15" fill="rgb(206,71,0)" fg:x="8561" fg:w="14"/><text x="27.8368%" y="527.50"></text></g><g><title>core::fmt::write (12 samples, 0.04%)</title><rect x="27.6512%" y="517" width="0.0387%" height="15" fill="rgb(233,118,54)" fg:x="8581" fg:w="12"/><text x="27.9012%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (5 samples, 0.02%)</title><rect x="27.6738%" y="501" width="0.0161%" height="15" fill="rgb(234,83,48)" fg:x="8588" fg:w="5"/><text x="27.9238%" y="511.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::FmtLevel as core::fmt::Display&gt;::fmt (107 samples, 0.34%)</title><rect x="27.3838%" y="597" width="0.3448%" height="15" fill="rgb(228,3,54)" fg:x="8498" fg:w="107"/><text x="27.6338%" y="607.50"></text></g><g><title>core::fmt::write (90 samples, 0.29%)</title><rect x="27.4385%" y="581" width="0.2900%" height="15" fill="rgb(226,155,13)" fg:x="8515" fg:w="90"/><text x="27.6885%" y="591.50"></text></g><g><title>&lt;nu_ansi_term::display::AnsiGenericString&lt;str&gt; as core::fmt::Display&gt;::fmt (79 samples, 0.25%)</title><rect x="27.4740%" y="565" width="0.2546%" height="15" fill="rgb(241,28,37)" fg:x="8526" fg:w="79"/><text x="27.7240%" y="575.50"></text></g><g><title>core::fmt::write (59 samples, 0.19%)</title><rect x="27.5384%" y="549" width="0.1901%" height="15" fill="rgb(233,93,10)" fg:x="8546" fg:w="59"/><text x="27.7884%" y="559.50"></text></g><g><title>nu_ansi_term::ansi::&lt;impl nu_ansi_term::style::Style&gt;::write_prefix (30 samples, 0.10%)</title><rect x="27.6319%" y="533" width="0.0967%" height="15" fill="rgb(225,113,19)" fg:x="8575" fg:w="30"/><text x="27.8819%" y="543.50"></text></g><g><title>nu_ansi_term::ansi::&lt;impl nu_ansi_term::style::Color&gt;::write_foreground_code (12 samples, 0.04%)</title><rect x="27.6899%" y="517" width="0.0387%" height="15" fill="rgb(241,2,18)" fg:x="8593" fg:w="12"/><text x="27.9399%" y="527.50"></text></g><g><title>core::fmt::write (9 samples, 0.03%)</title><rect x="27.6995%" y="501" width="0.0290%" height="15" fill="rgb(228,207,21)" fg:x="8596" fg:w="9"/><text x="27.9495%" y="511.50"></text></g><g><title>core::fmt::Formatter::write_fmt (8 samples, 0.03%)</title><rect x="27.8574%" y="581" width="0.0258%" height="15" fill="rgb(213,211,35)" fg:x="8645" fg:w="8"/><text x="28.1074%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_char (4 samples, 0.01%)</title><rect x="27.9154%" y="565" width="0.0129%" height="15" fill="rgb(209,83,10)" fg:x="8663" fg:w="4"/><text x="28.1654%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (20 samples, 0.06%)</title><rect x="27.9283%" y="565" width="0.0644%" height="15" fill="rgb(209,164,1)" fg:x="8667" fg:w="20"/><text x="28.1783%" y="575.50"></text></g><g><title>[libc.so.6] (8 samples, 0.03%)</title><rect x="27.9670%" y="549" width="0.0258%" height="15" fill="rgb(213,184,43)" fg:x="8679" fg:w="8"/><text x="28.2170%" y="559.50"></text></g><g><title>core::fmt::write (404 samples, 1.30%)</title><rect x="26.7038%" y="613" width="1.3018%" height="15" fill="rgb(231,61,34)" fg:x="8287" fg:w="404"/><text x="26.9538%" y="623.50"></text></g><g><title>nu_ansi_term::ansi::&lt;impl nu_ansi_term::style::Style&gt;::write_prefix (86 samples, 0.28%)</title><rect x="27.7285%" y="597" width="0.2771%" height="15" fill="rgb(235,75,3)" fg:x="8605" fg:w="86"/><text x="27.9785%" y="607.50"></text></g><g><title>core::fmt::write (38 samples, 0.12%)</title><rect x="27.8832%" y="581" width="0.1225%" height="15" fill="rgb(220,106,47)" fg:x="8653" fg:w="38"/><text x="28.1332%" y="591.50"></text></g><g><title>&lt;char as core::fmt::Display&gt;::fmt (4 samples, 0.01%)</title><rect x="27.9928%" y="565" width="0.0129%" height="15" fill="rgb(210,196,33)" fg:x="8687" fg:w="4"/><text x="28.2428%" y="575.50"></text></g><g><title>&lt;core::fmt::Arguments as tracing_core::field::Value&gt;::record (8 samples, 0.03%)</title><rect x="28.0411%" y="597" width="0.0258%" height="15" fill="rgb(229,154,42)" fg:x="8702" fg:w="8"/><text x="28.2911%" y="607.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (8 samples, 0.03%)</title><rect x="28.1185%" y="565" width="0.0258%" height="15" fill="rgb(228,114,26)" fg:x="8726" fg:w="8"/><text x="28.3685%" y="575.50"></text></g><g><title>&lt;core::fmt::Arguments as core::fmt::Debug&gt;::fmt (8 samples, 0.03%)</title><rect x="28.1442%" y="565" width="0.0258%" height="15" fill="rgb(208,144,1)" fg:x="8734" fg:w="8"/><text x="28.3942%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (5 samples, 0.02%)</title><rect x="28.2022%" y="549" width="0.0161%" height="15" fill="rgb(239,112,37)" fg:x="8752" fg:w="5"/><text x="28.4522%" y="559.50"></text></g><g><title>[libc.so.6] (5 samples, 0.02%)</title><rect x="28.2022%" y="533" width="0.0161%" height="15" fill="rgb(210,96,50)" fg:x="8752" fg:w="5"/><text x="28.4522%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4 samples, 0.01%)</title><rect x="28.2764%" y="517" width="0.0129%" height="15" fill="rgb(222,178,2)" fg:x="8775" fg:w="4"/><text x="28.5264%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_char (4 samples, 0.01%)</title><rect x="28.3730%" y="485" width="0.0129%" height="15" fill="rgb(226,74,18)" fg:x="8805" fg:w="4"/><text x="28.6230%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (6 samples, 0.02%)</title><rect x="28.3859%" y="485" width="0.0193%" height="15" fill="rgb(225,67,54)" fg:x="8809" fg:w="6"/><text x="28.6359%" y="495.50"></text></g><g><title>core::fmt::write (93 samples, 0.30%)</title><rect x="28.1120%" y="581" width="0.2997%" height="15" fill="rgb(251,92,32)" fg:x="8724" fg:w="93"/><text x="28.3620%" y="591.50"></text></g><g><title>core::fmt::write (75 samples, 0.24%)</title><rect x="28.1700%" y="565" width="0.2417%" height="15" fill="rgb(228,149,22)" fg:x="8742" fg:w="75"/><text x="28.4200%" y="575.50"></text></g><g><title>&lt;smoltcp::time::Duration as core::fmt::Display&gt;::fmt (60 samples, 0.19%)</title><rect x="28.2183%" y="549" width="0.1933%" height="15" fill="rgb(243,54,13)" fg:x="8757" fg:w="60"/><text x="28.4683%" y="559.50"></text></g><g><title>core::fmt::write (55 samples, 0.18%)</title><rect x="28.2345%" y="533" width="0.1772%" height="15" fill="rgb(243,180,28)" fg:x="8762" fg:w="55"/><text x="28.4845%" y="543.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (38 samples, 0.12%)</title><rect x="28.2892%" y="517" width="0.1225%" height="15" fill="rgb(208,167,24)" fg:x="8779" fg:w="38"/><text x="28.5392%" y="527.50"></text></g><g><title>core::fmt::Formatter::pad_integral (26 samples, 0.08%)</title><rect x="28.3279%" y="501" width="0.0838%" height="15" fill="rgb(245,73,45)" fg:x="8791" fg:w="26"/><text x="28.5779%" y="511.50"></text></g><g><title>tracing_core::field::ValueSet::record (135 samples, 0.44%)</title><rect x="28.0057%" y="613" width="0.4350%" height="15" fill="rgb(237,203,48)" fg:x="8691" fg:w="135"/><text x="28.2557%" y="623.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::DefaultVisitor as tracing_core::field::Visit&gt;::record_debug (116 samples, 0.37%)</title><rect x="28.0669%" y="597" width="0.3738%" height="15" fill="rgb(211,197,16)" fg:x="8710" fg:w="116"/><text x="28.3169%" y="607.50"></text></g><g><title>tracing_core::field::Field::name (9 samples, 0.03%)</title><rect x="28.4117%" y="581" width="0.0290%" height="15" fill="rgb(243,99,51)" fg:x="8817" fg:w="9"/><text x="28.6617%" y="591.50"></text></g><g><title>tracing_subscriber::fmt::format::Writer::write_fmt (20 samples, 0.06%)</title><rect x="28.4407%" y="613" width="0.0644%" height="15" fill="rgb(215,123,29)" fg:x="8826" fg:w="20"/><text x="28.6907%" y="623.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::Format&lt;tracing_subscriber::fmt::format::Full,T&gt; as tracing_subscriber::fmt::format::FormatEvent&lt;S,N&gt;&gt;::format_event (927 samples, 2.99%)</title><rect x="25.5921%" y="629" width="2.9871%" height="15" fill="rgb(239,186,37)" fg:x="7942" fg:w="927"/><text x="25.8421%" y="639.50">&lt;tr..</text></g><g><title>tracing_subscriber::layer::context::Context&lt;S&gt;::event_scope (23 samples, 0.07%)</title><rect x="28.5051%" y="613" width="0.0741%" height="15" fill="rgb(252,136,39)" fg:x="8846" fg:w="23"/><text x="28.7551%" y="623.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::current_span (19 samples, 0.06%)</title><rect x="28.5180%" y="597" width="0.0612%" height="15" fill="rgb(223,213,32)" fg:x="8850" fg:w="19"/><text x="28.7680%" y="607.50"></text></g><g><title>&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_event (2,737 samples, 8.82%)</title><rect x="19.8144%" y="645" width="8.8196%" height="15" fill="rgb(233,115,5)" fg:x="6149" fg:w="2737"/><text x="20.0644%" y="655.50">&lt;tracing_sub..</text></g><g><title>std::io::stdio::stdout (17 samples, 0.05%)</title><rect x="28.5793%" y="629" width="0.0548%" height="15" fill="rgb(207,226,44)" fg:x="8869" fg:w="17"/><text x="28.8293%" y="639.50"></text></g><g><title>&lt;tracing_subscriber::fmt::Subscriber&lt;N,E,F,W&gt; as tracing_core::subscriber::Subscriber&gt;::event_enabled (10 samples, 0.03%)</title><rect x="28.6663%" y="629" width="0.0322%" height="15" fill="rgb(208,126,0)" fg:x="8896" fg:w="10"/><text x="28.9163%" y="639.50"></text></g><g><title>netstack_smoltcp::tcp::TcpListenerRunner::create::{{closure}} (6,306 samples, 20.32%)</title><rect x="8.4394%" y="693" width="20.3203%" height="15" fill="rgb(244,66,21)" fg:x="2619" fg:w="6306"/><text x="8.6894%" y="703.50">netstack_smoltcp::tcp::TcpListen..</text></g><g><title>netstack_smoltcp::tcp::TcpListenerRunner::create::{{closure}}::{{closure}} (6,280 samples, 20.24%)</title><rect x="8.5232%" y="677" width="20.2365%" height="15" fill="rgb(222,97,12)" fg:x="2645" fg:w="6280"/><text x="8.7732%" y="687.50">netstack_smoltcp::tcp::TcpListen..</text></g><g><title>tracing_core::event::Event::dispatch (2,798 samples, 9.02%)</title><rect x="19.7435%" y="661" width="9.0162%" height="15" fill="rgb(219,213,19)" fg:x="6127" fg:w="2798"/><text x="19.9935%" y="671.50">tracing_core:..</text></g><g><title>tracing_core::dispatcher::get_default (39 samples, 0.13%)</title><rect x="28.6340%" y="645" width="0.1257%" height="15" fill="rgb(252,169,30)" fg:x="8886" fg:w="39"/><text x="28.8840%" y="655.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::event_enabled (19 samples, 0.06%)</title><rect x="28.6985%" y="629" width="0.0612%" height="15" fill="rgb(206,32,51)" fg:x="8906" fg:w="19"/><text x="28.9485%" y="639.50"></text></g><g><title>std::panicking::try (6,333 samples, 20.41%)</title><rect x="8.3685%" y="709" width="20.4073%" height="15" fill="rgb(250,172,42)" fg:x="2597" fg:w="6333"/><text x="8.6185%" y="719.50">std::panicking::try</text></g><g><title>tokio::runtime::task::core::TaskIdGuard::enter (4 samples, 0.01%)</title><rect x="28.7629%" y="693" width="0.0129%" height="15" fill="rgb(209,34,43)" fg:x="8926" fg:w="4"/><text x="29.0129%" y="703.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (4 samples, 0.01%)</title><rect x="28.8435%" y="677" width="0.0129%" height="15" fill="rgb(223,11,35)" fg:x="8951" fg:w="4"/><text x="29.0935%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (10 samples, 0.03%)</title><rect x="28.8596%" y="661" width="0.0322%" height="15" fill="rgb(251,219,26)" fg:x="8956" fg:w="10"/><text x="29.1096%" y="671.50"></text></g><g><title>get_futex_key (4 samples, 0.01%)</title><rect x="29.0078%" y="581" width="0.0129%" height="15" fill="rgb(231,119,3)" fg:x="9002" fg:w="4"/><text x="29.2578%" y="591.50"></text></g><g><title>select_task_rq_fair (21 samples, 0.07%)</title><rect x="29.0884%" y="549" width="0.0677%" height="15" fill="rgb(216,97,11)" fg:x="9027" fg:w="21"/><text x="29.3384%" y="559.50"></text></g><g><title>available_idle_cpu (7 samples, 0.02%)</title><rect x="29.1335%" y="533" width="0.0226%" height="15" fill="rgb(223,59,9)" fg:x="9041" fg:w="7"/><text x="29.3835%" y="543.50"></text></g><g><title>__smp_call_single_queue (4 samples, 0.01%)</title><rect x="29.1689%" y="533" width="0.0129%" height="15" fill="rgb(233,93,31)" fg:x="9052" fg:w="4"/><text x="29.4189%" y="543.50"></text></g><g><title>llist_add_batch (4 samples, 0.01%)</title><rect x="29.1689%" y="517" width="0.0129%" height="15" fill="rgb(239,81,33)" fg:x="9052" fg:w="4"/><text x="29.4189%" y="527.50"></text></g><g><title>hv_send_ipi (8 samples, 0.03%)</title><rect x="29.1818%" y="533" width="0.0258%" height="15" fill="rgb(213,120,34)" fg:x="9056" fg:w="8"/><text x="29.4318%" y="543.50"></text></g><g><title>__send_ipi_one (7 samples, 0.02%)</title><rect x="29.1851%" y="517" width="0.0226%" height="15" fill="rgb(243,49,53)" fg:x="9057" fg:w="7"/><text x="29.4351%" y="527.50"></text></g><g><title>__x64_sys_futex (93 samples, 0.30%)</title><rect x="28.9208%" y="629" width="0.2997%" height="15" fill="rgb(247,216,33)" fg:x="8975" fg:w="93"/><text x="29.1708%" y="639.50"></text></g><g><title>do_futex (87 samples, 0.28%)</title><rect x="28.9402%" y="613" width="0.2803%" height="15" fill="rgb(226,26,14)" fg:x="8981" fg:w="87"/><text x="29.1902%" y="623.50"></text></g><g><title>futex_wake (79 samples, 0.25%)</title><rect x="28.9659%" y="597" width="0.2546%" height="15" fill="rgb(215,49,53)" fg:x="8989" fg:w="79"/><text x="29.2159%" y="607.50"></text></g><g><title>wake_up_q (58 samples, 0.19%)</title><rect x="29.0336%" y="581" width="0.1869%" height="15" fill="rgb(245,162,40)" fg:x="9010" fg:w="58"/><text x="29.2836%" y="591.50"></text></g><g><title>try_to_wake_up (57 samples, 0.18%)</title><rect x="29.0368%" y="565" width="0.1837%" height="15" fill="rgb(229,68,17)" fg:x="9011" fg:w="57"/><text x="29.2868%" y="575.50"></text></g><g><title>ttwu_queue_wakelist (20 samples, 0.06%)</title><rect x="29.1561%" y="549" width="0.0644%" height="15" fill="rgb(213,182,10)" fg:x="9048" fg:w="20"/><text x="29.4061%" y="559.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (101 samples, 0.33%)</title><rect x="28.8983%" y="661" width="0.3255%" height="15" fill="rgb(245,125,30)" fg:x="8968" fg:w="101"/><text x="29.1483%" y="671.50"></text></g><g><title>do_syscall_64 (98 samples, 0.32%)</title><rect x="28.9079%" y="645" width="0.3158%" height="15" fill="rgb(232,202,2)" fg:x="8971" fg:w="98"/><text x="29.1579%" y="655.50"></text></g><g><title>syscall (116 samples, 0.37%)</title><rect x="28.8564%" y="677" width="0.3738%" height="15" fill="rgb(237,140,51)" fg:x="8955" fg:w="116"/><text x="29.1064%" y="687.50"></text></g><g><title>__fdget_pos (4 samples, 0.01%)</title><rect x="29.3301%" y="565" width="0.0129%" height="15" fill="rgb(236,157,25)" fg:x="9102" fg:w="4"/><text x="29.5801%" y="575.50"></text></g><g><title>__fget_light (4 samples, 0.01%)</title><rect x="29.3301%" y="549" width="0.0129%" height="15" fill="rgb(219,209,0)" fg:x="9102" fg:w="4"/><text x="29.5801%" y="559.50"></text></g><g><title>__wake_up_common_lock (9 samples, 0.03%)</title><rect x="29.3848%" y="501" width="0.0290%" height="15" fill="rgb(240,116,54)" fg:x="9119" fg:w="9"/><text x="29.6348%" y="511.50"></text></g><g><title>__wake_up_common (9 samples, 0.03%)</title><rect x="29.3848%" y="485" width="0.0290%" height="15" fill="rgb(216,10,36)" fg:x="9119" fg:w="9"/><text x="29.6348%" y="495.50"></text></g><g><title>ep_autoremove_wake_function (8 samples, 0.03%)</title><rect x="29.3881%" y="469" width="0.0258%" height="15" fill="rgb(222,72,44)" fg:x="9120" fg:w="8"/><text x="29.6381%" y="479.50"></text></g><g><title>try_to_wake_up (8 samples, 0.03%)</title><rect x="29.3881%" y="453" width="0.0258%" height="15" fill="rgb(232,159,9)" fg:x="9120" fg:w="8"/><text x="29.6381%" y="463.50"></text></g><g><title>__wake_up_common (18 samples, 0.06%)</title><rect x="29.3623%" y="533" width="0.0580%" height="15" fill="rgb(210,39,32)" fg:x="9112" fg:w="18"/><text x="29.6123%" y="543.50"></text></g><g><title>ep_poll_callback (16 samples, 0.05%)</title><rect x="29.3687%" y="517" width="0.0516%" height="15" fill="rgb(216,194,45)" fg:x="9114" fg:w="16"/><text x="29.6187%" y="527.50"></text></g><g><title>_copy_from_user (4 samples, 0.01%)</title><rect x="29.4235%" y="533" width="0.0129%" height="15" fill="rgb(218,18,35)" fg:x="9131" fg:w="4"/><text x="29.6735%" y="543.50"></text></g><g><title>eventfd_write (28 samples, 0.09%)</title><rect x="29.3558%" y="549" width="0.0902%" height="15" fill="rgb(207,83,51)" fg:x="9110" fg:w="28"/><text x="29.6058%" y="559.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (41 samples, 0.13%)</title><rect x="29.3172%" y="613" width="0.1321%" height="15" fill="rgb(225,63,43)" fg:x="9098" fg:w="41"/><text x="29.5672%" y="623.50"></text></g><g><title>do_syscall_64 (41 samples, 0.13%)</title><rect x="29.3172%" y="597" width="0.1321%" height="15" fill="rgb(207,57,36)" fg:x="9098" fg:w="41"/><text x="29.5672%" y="607.50"></text></g><g><title>ksys_write (38 samples, 0.12%)</title><rect x="29.3268%" y="581" width="0.1225%" height="15" fill="rgb(216,99,33)" fg:x="9101" fg:w="38"/><text x="29.5768%" y="591.50"></text></g><g><title>vfs_write (32 samples, 0.10%)</title><rect x="29.3462%" y="565" width="0.1031%" height="15" fill="rgb(225,42,16)" fg:x="9107" fg:w="32"/><text x="29.5962%" y="575.50"></text></g><g><title>mio::sys::unix::waker::eventfd::WakerInternal::wake (49 samples, 0.16%)</title><rect x="29.2946%" y="661" width="0.1579%" height="15" fill="rgb(220,201,45)" fg:x="9091" fg:w="49"/><text x="29.5446%" y="671.50"></text></g><g><title>&lt;&amp;std::process::ChildStdin as std::io::Write&gt;::write (49 samples, 0.16%)</title><rect x="29.2946%" y="645" width="0.1579%" height="15" fill="rgb(225,33,4)" fg:x="9091" fg:w="49"/><text x="29.5446%" y="655.50"></text></g><g><title>__write (47 samples, 0.15%)</title><rect x="29.3011%" y="629" width="0.1515%" height="15" fill="rgb(224,33,50)" fg:x="9093" fg:w="47"/><text x="29.5511%" y="639.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Unparker::unpark (71 samples, 0.23%)</title><rect x="29.2302%" y="677" width="0.2288%" height="15" fill="rgb(246,198,51)" fg:x="9071" fg:w="71"/><text x="29.4802%" y="687.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::yield_now (249 samples, 0.80%)</title><rect x="28.7758%" y="709" width="0.8024%" height="15" fill="rgb(205,22,4)" fg:x="8930" fg:w="249"/><text x="29.0258%" y="719.50"></text></g><g><title>tokio::runtime::context::with_scheduler (242 samples, 0.78%)</title><rect x="28.7984%" y="693" width="0.7798%" height="15" fill="rgb(206,3,8)" fg:x="8937" fg:w="242"/><text x="29.0484%" y="703.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_local (37 samples, 0.12%)</title><rect x="29.4590%" y="677" width="0.1192%" height="15" fill="rgb(251,23,15)" fg:x="9142" fg:w="37"/><text x="29.7090%" y="687.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::worker_to_notify (32 samples, 0.10%)</title><rect x="29.4751%" y="661" width="0.1031%" height="15" fill="rgb(252,88,28)" fg:x="9147" fg:w="32"/><text x="29.7251%" y="671.50"></text></g><g><title>&lt;tokio::runtime::task::core::TaskIdGuard as core::ops::drop::Drop&gt;::drop (5 samples, 0.02%)</title><rect x="29.6620%" y="693" width="0.0161%" height="15" fill="rgb(212,127,14)" fg:x="9205" fg:w="5"/><text x="29.9120%" y="703.50"></text></g><g><title>smoltcp::storage::ring_buffer::RingBuffer&lt;T&gt;::dequeue_slice (134 samples, 0.43%)</title><rect x="29.9294%" y="629" width="0.4318%" height="15" fill="rgb(247,145,37)" fg:x="9288" fg:w="134"/><text x="30.1794%" y="639.50"></text></g><g><title>[libc.so.6] (123 samples, 0.40%)</title><rect x="29.9649%" y="613" width="0.3964%" height="15" fill="rgb(209,117,53)" fg:x="9299" fg:w="123"/><text x="30.2149%" y="623.50"></text></g><g><title>tokio::runtime::task::waker::clone_waker (9 samples, 0.03%)</title><rect x="30.3612%" y="629" width="0.0290%" height="15" fill="rgb(212,90,42)" fg:x="9422" fg:w="9"/><text x="30.6112%" y="639.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (15 samples, 0.05%)</title><rect x="30.3935%" y="629" width="0.0483%" height="15" fill="rgb(218,164,37)" fg:x="9432" fg:w="15"/><text x="30.6435%" y="639.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_notified_by_val (6 samples, 0.02%)</title><rect x="30.4225%" y="613" width="0.0193%" height="15" fill="rgb(246,65,34)" fg:x="9441" fg:w="6"/><text x="30.6725%" y="623.50"></text></g><g><title>&lt;netstack_smoltcp::tcp::TcpStream as tokio::io::async_read::AsyncRead&gt;::poll_read (196 samples, 0.63%)</title><rect x="29.8650%" y="645" width="0.6316%" height="15" fill="rgb(231,100,33)" fg:x="9268" fg:w="196"/><text x="30.1150%" y="655.50"></text></g><g><title>tokio::sync::notify::Notify::notify_one (17 samples, 0.05%)</title><rect x="30.4418%" y="629" width="0.0548%" height="15" fill="rgb(228,126,14)" fg:x="9447" fg:w="17"/><text x="30.6918%" y="639.50"></text></g><g><title>[libc.so.6] (14 samples, 0.05%)</title><rect x="30.6287%" y="565" width="0.0451%" height="15" fill="rgb(215,173,21)" fg:x="9505" fg:w="14"/><text x="30.8787%" y="575.50"></text></g><g><title>entry_SYSCALL_64 (5 samples, 0.02%)</title><rect x="30.6738%" y="565" width="0.0161%" height="15" fill="rgb(210,6,40)" fg:x="9519" fg:w="5"/><text x="30.9238%" y="575.50"></text></g><g><title>inet_sendmsg (9 samples, 0.03%)</title><rect x="30.7962%" y="501" width="0.0290%" height="15" fill="rgb(212,48,18)" fg:x="9557" fg:w="9"/><text x="31.0462%" y="511.50"></text></g><g><title>sockfd_lookup_light (25 samples, 0.08%)</title><rect x="30.8253%" y="501" width="0.0806%" height="15" fill="rgb(230,214,11)" fg:x="9566" fg:w="25"/><text x="31.0753%" y="511.50"></text></g><g><title>__fget_light (23 samples, 0.07%)</title><rect x="30.8317%" y="485" width="0.0741%" height="15" fill="rgb(254,105,39)" fg:x="9568" fg:w="23"/><text x="31.0817%" y="495.50"></text></g><g><title>__fget_files (13 samples, 0.04%)</title><rect x="30.8639%" y="469" width="0.0419%" height="15" fill="rgb(245,158,5)" fg:x="9578" fg:w="13"/><text x="31.1139%" y="479.50"></text></g><g><title>_raw_spin_unlock_bh (6 samples, 0.02%)</title><rect x="30.9155%" y="485" width="0.0193%" height="15" fill="rgb(249,208,11)" fg:x="9594" fg:w="6"/><text x="31.1655%" y="495.50"></text></g><g><title>__raw_callee_save___pv_queued_spin_unlock (5 samples, 0.02%)</title><rect x="30.9187%" y="469" width="0.0161%" height="15" fill="rgb(210,39,28)" fg:x="9595" fg:w="5"/><text x="31.1687%" y="479.50"></text></g><g><title>lock_sock_nested (29 samples, 0.09%)</title><rect x="30.9348%" y="485" width="0.0934%" height="15" fill="rgb(211,56,53)" fg:x="9600" fg:w="29"/><text x="31.1848%" y="495.50"></text></g><g><title>_raw_spin_lock_bh (26 samples, 0.08%)</title><rect x="30.9445%" y="469" width="0.0838%" height="15" fill="rgb(226,201,30)" fg:x="9603" fg:w="26"/><text x="31.1945%" y="479.50"></text></g><g><title>__pv_queued_spin_lock_slowpath (18 samples, 0.06%)</title><rect x="30.9703%" y="453" width="0.0580%" height="15" fill="rgb(239,101,34)" fg:x="9611" fg:w="18"/><text x="31.2203%" y="463.50"></text></g><g><title>dev_hard_start_xmit (4 samples, 0.01%)</title><rect x="31.0863%" y="309" width="0.0129%" height="15" fill="rgb(226,209,5)" fg:x="9647" fg:w="4"/><text x="31.3363%" y="319.50"></text></g><g><title>netvsc_xmit (4 samples, 0.01%)</title><rect x="31.0863%" y="293" width="0.0129%" height="15" fill="rgb(250,105,47)" fg:x="9647" fg:w="4"/><text x="31.3363%" y="303.50"></text></g><g><title>netvsc_send (4 samples, 0.01%)</title><rect x="31.0863%" y="277" width="0.0129%" height="15" fill="rgb(230,72,3)" fg:x="9647" fg:w="4"/><text x="31.3363%" y="287.50"></text></g><g><title>__ip_queue_xmit (7 samples, 0.02%)</title><rect x="31.0798%" y="373" width="0.0226%" height="15" fill="rgb(232,218,39)" fg:x="9645" fg:w="7"/><text x="31.3298%" y="383.50"></text></g><g><title>ip_finish_output2 (7 samples, 0.02%)</title><rect x="31.0798%" y="357" width="0.0226%" height="15" fill="rgb(248,166,6)" fg:x="9645" fg:w="7"/><text x="31.3298%" y="367.50"></text></g><g><title>__dev_queue_xmit (6 samples, 0.02%)</title><rect x="31.0830%" y="341" width="0.0193%" height="15" fill="rgb(247,89,20)" fg:x="9646" fg:w="6"/><text x="31.3330%" y="351.50"></text></g><g><title>sch_direct_xmit (5 samples, 0.02%)</title><rect x="31.0863%" y="325" width="0.0161%" height="15" fill="rgb(248,130,54)" fg:x="9647" fg:w="5"/><text x="31.3363%" y="335.50"></text></g><g><title>__tcp_transmit_skb (8 samples, 0.03%)</title><rect x="31.0798%" y="389" width="0.0258%" height="15" fill="rgb(234,196,4)" fg:x="9645" fg:w="8"/><text x="31.3298%" y="399.50"></text></g><g><title>__tcp_push_pending_frames (9 samples, 0.03%)</title><rect x="31.0798%" y="421" width="0.0290%" height="15" fill="rgb(250,143,31)" fg:x="9645" fg:w="9"/><text x="31.3298%" y="431.50"></text></g><g><title>tcp_write_xmit (9 samples, 0.03%)</title><rect x="31.0798%" y="405" width="0.0290%" height="15" fill="rgb(211,110,34)" fg:x="9645" fg:w="9"/><text x="31.3298%" y="415.50"></text></g><g><title>tcp_ack (7 samples, 0.02%)</title><rect x="31.1088%" y="421" width="0.0226%" height="15" fill="rgb(215,124,48)" fg:x="9654" fg:w="7"/><text x="31.3588%" y="431.50"></text></g><g><title>__release_sock (19 samples, 0.06%)</title><rect x="31.0734%" y="469" width="0.0612%" height="15" fill="rgb(216,46,13)" fg:x="9643" fg:w="19"/><text x="31.3234%" y="479.50"></text></g><g><title>tcp_v4_do_rcv (18 samples, 0.06%)</title><rect x="31.0766%" y="453" width="0.0580%" height="15" fill="rgb(205,184,25)" fg:x="9644" fg:w="18"/><text x="31.3266%" y="463.50"></text></g><g><title>tcp_rcv_established (18 samples, 0.06%)</title><rect x="31.0766%" y="437" width="0.0580%" height="15" fill="rgb(228,1,10)" fg:x="9644" fg:w="18"/><text x="31.3266%" y="447.50"></text></g><g><title>_raw_spin_lock_bh (16 samples, 0.05%)</title><rect x="31.1346%" y="469" width="0.0516%" height="15" fill="rgb(213,116,27)" fg:x="9662" fg:w="16"/><text x="31.3846%" y="479.50"></text></g><g><title>release_sock (52 samples, 0.17%)</title><rect x="31.0283%" y="485" width="0.1676%" height="15" fill="rgb(241,95,50)" fg:x="9629" fg:w="52"/><text x="31.2783%" y="495.50"></text></g><g><title>__virt_addr_valid (19 samples, 0.06%)</title><rect x="31.3924%" y="453" width="0.0612%" height="15" fill="rgb(238,48,32)" fg:x="9742" fg:w="19"/><text x="31.6424%" y="463.50"></text></g><g><title>__check_object_size (30 samples, 0.10%)</title><rect x="31.3666%" y="469" width="0.0967%" height="15" fill="rgb(235,113,49)" fg:x="9734" fg:w="30"/><text x="31.6166%" y="479.50"></text></g><g><title>ip_finish_output2 (4 samples, 0.01%)</title><rect x="31.5567%" y="405" width="0.0129%" height="15" fill="rgb(205,127,43)" fg:x="9793" fg:w="4"/><text x="31.8067%" y="415.50"></text></g><g><title>__dev_queue_xmit (4 samples, 0.01%)</title><rect x="31.5567%" y="389" width="0.0129%" height="15" fill="rgb(250,162,2)" fg:x="9793" fg:w="4"/><text x="31.8067%" y="399.50"></text></g><g><title>__ip_queue_xmit (8 samples, 0.03%)</title><rect x="31.5471%" y="421" width="0.0258%" height="15" fill="rgb(220,13,41)" fg:x="9790" fg:w="8"/><text x="31.7971%" y="431.50"></text></g><g><title>__tcp_transmit_skb (11 samples, 0.04%)</title><rect x="31.5406%" y="437" width="0.0354%" height="15" fill="rgb(249,221,25)" fg:x="9788" fg:w="11"/><text x="31.7906%" y="447.50"></text></g><g><title>read_hv_clock_tsc (9 samples, 0.03%)</title><rect x="31.6083%" y="421" width="0.0290%" height="15" fill="rgb(215,208,19)" fg:x="9809" fg:w="9"/><text x="31.8583%" y="431.50"></text></g><g><title>ktime_get (23 samples, 0.07%)</title><rect x="31.5761%" y="437" width="0.0741%" height="15" fill="rgb(236,175,2)" fg:x="9799" fg:w="23"/><text x="31.8261%" y="447.50"></text></g><g><title>read_hv_clock_tsc_cs (4 samples, 0.01%)</title><rect x="31.6373%" y="421" width="0.0129%" height="15" fill="rgb(241,52,2)" fg:x="9818" fg:w="4"/><text x="31.8873%" y="431.50"></text></g><g><title>rb_first (10 samples, 0.03%)</title><rect x="31.6502%" y="437" width="0.0322%" height="15" fill="rgb(248,140,14)" fg:x="9822" fg:w="10"/><text x="31.9002%" y="447.50"></text></g><g><title>__tcp_push_pending_frames (72 samples, 0.23%)</title><rect x="31.4633%" y="469" width="0.2320%" height="15" fill="rgb(253,22,42)" fg:x="9764" fg:w="72"/><text x="31.7133%" y="479.50"></text></g><g><title>tcp_write_xmit (70 samples, 0.23%)</title><rect x="31.4697%" y="453" width="0.2256%" height="15" fill="rgb(234,61,47)" fg:x="9766" fg:w="70"/><text x="31.7197%" y="463.50"></text></g><g><title>_copy_from_iter (163 samples, 0.53%)</title><rect x="31.6953%" y="469" width="0.5252%" height="15" fill="rgb(208,226,15)" fg:x="9836" fg:w="163"/><text x="31.9453%" y="479.50"></text></g><g><title>copy_user_enhanced_fast_string (152 samples, 0.49%)</title><rect x="31.7307%" y="453" width="0.4898%" height="15" fill="rgb(217,221,4)" fg:x="9847" fg:w="152"/><text x="31.9807%" y="463.50"></text></g><g><title>__list_del_entry_valid (15 samples, 0.05%)</title><rect x="32.2914%" y="405" width="0.0483%" height="15" fill="rgb(212,174,34)" fg:x="10021" fg:w="15"/><text x="32.5414%" y="415.50"></text></g><g><title>get_page_from_freelist (29 samples, 0.09%)</title><rect x="32.2657%" y="421" width="0.0934%" height="15" fill="rgb(253,83,4)" fg:x="10013" fg:w="29"/><text x="32.5157%" y="431.50"></text></g><g><title>sk_page_frag_refill (44 samples, 0.14%)</title><rect x="32.2205%" y="469" width="0.1418%" height="15" fill="rgb(250,195,49)" fg:x="9999" fg:w="44"/><text x="32.4705%" y="479.50"></text></g><g><title>skb_page_frag_refill (44 samples, 0.14%)</title><rect x="32.2205%" y="453" width="0.1418%" height="15" fill="rgb(241,192,25)" fg:x="9999" fg:w="44"/><text x="32.4705%" y="463.50"></text></g><g><title>__alloc_pages (36 samples, 0.12%)</title><rect x="32.2463%" y="437" width="0.1160%" height="15" fill="rgb(208,124,10)" fg:x="10007" fg:w="36"/><text x="32.4963%" y="447.50"></text></g><g><title>__kmalloc_track_caller (7 samples, 0.02%)</title><rect x="32.3849%" y="437" width="0.0226%" height="15" fill="rgb(222,33,0)" fg:x="10050" fg:w="7"/><text x="32.6349%" y="447.50"></text></g><g><title>sk_stream_alloc_skb (21 samples, 0.07%)</title><rect x="32.3623%" y="469" width="0.0677%" height="15" fill="rgb(234,209,28)" fg:x="10043" fg:w="21"/><text x="32.6123%" y="479.50"></text></g><g><title>__alloc_skb (20 samples, 0.06%)</title><rect x="32.3655%" y="453" width="0.0644%" height="15" fill="rgb(224,11,23)" fg:x="10044" fg:w="20"/><text x="32.6155%" y="463.50"></text></g><g><title>kmem_cache_alloc (5 samples, 0.02%)</title><rect x="32.4139%" y="437" width="0.0161%" height="15" fill="rgb(232,99,1)" fg:x="10059" fg:w="5"/><text x="32.6639%" y="447.50"></text></g><g><title>tcp_push (9 samples, 0.03%)</title><rect x="32.4300%" y="469" width="0.0290%" height="15" fill="rgb(237,95,45)" fg:x="10064" fg:w="9"/><text x="32.6800%" y="479.50"></text></g><g><title>tcp_send_mss (22 samples, 0.07%)</title><rect x="32.4687%" y="469" width="0.0709%" height="15" fill="rgb(208,109,11)" fg:x="10076" fg:w="22"/><text x="32.7187%" y="479.50"></text></g><g><title>tcp_current_mss (22 samples, 0.07%)</title><rect x="32.4687%" y="453" width="0.0709%" height="15" fill="rgb(216,190,48)" fg:x="10076" fg:w="22"/><text x="32.7187%" y="463.50"></text></g><g><title>ipv4_mtu (9 samples, 0.03%)</title><rect x="32.5106%" y="437" width="0.0290%" height="15" fill="rgb(251,171,36)" fg:x="10089" fg:w="9"/><text x="32.7606%" y="447.50"></text></g><g><title>__x64_sys_sendto (569 samples, 1.83%)</title><rect x="30.7254%" y="533" width="1.8335%" height="15" fill="rgb(230,62,22)" fg:x="9535" fg:w="569"/><text x="30.9754%" y="543.50">_..</text></g><g><title>__sys_sendto (564 samples, 1.82%)</title><rect x="30.7415%" y="517" width="1.8174%" height="15" fill="rgb(225,114,35)" fg:x="9540" fg:w="564"/><text x="30.9915%" y="527.50">_..</text></g><g><title>tcp_sendmsg (513 samples, 1.65%)</title><rect x="30.9058%" y="501" width="1.6531%" height="15" fill="rgb(215,118,42)" fg:x="9591" fg:w="513"/><text x="31.1558%" y="511.50"></text></g><g><title>tcp_sendmsg_locked (423 samples, 1.36%)</title><rect x="31.1958%" y="485" width="1.3631%" height="15" fill="rgb(243,119,21)" fg:x="9681" fg:w="423"/><text x="31.4458%" y="495.50"></text></g><g><title>tcp_write_xmit (4 samples, 0.01%)</title><rect x="32.5460%" y="469" width="0.0129%" height="15" fill="rgb(252,177,53)" fg:x="10100" fg:w="4"/><text x="32.7960%" y="479.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (583 samples, 1.88%)</title><rect x="30.6899%" y="565" width="1.8786%" height="15" fill="rgb(237,209,29)" fg:x="9524" fg:w="583"/><text x="30.9399%" y="575.50">e..</text></g><g><title>do_syscall_64 (578 samples, 1.86%)</title><rect x="30.7060%" y="549" width="1.8625%" height="15" fill="rgb(212,65,23)" fg:x="9529" fg:w="578"/><text x="30.9560%" y="559.50">d..</text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write (628 samples, 2.02%)</title><rect x="30.5513%" y="613" width="2.0237%" height="15" fill="rgb(230,222,46)" fg:x="9481" fg:w="628"/><text x="30.8013%" y="623.50">&lt;..</text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (626 samples, 2.02%)</title><rect x="30.5578%" y="597" width="2.0172%" height="15" fill="rgb(215,135,32)" fg:x="9483" fg:w="626"/><text x="30.8078%" y="607.50">&lt;..</text></g><g><title>send (614 samples, 1.98%)</title><rect x="30.5965%" y="581" width="1.9785%" height="15" fill="rgb(246,101,22)" fg:x="9495" fg:w="614"/><text x="30.8465%" y="591.50">s..</text></g><g><title>&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_write::AsyncWrite&gt;::poll_write (665 samples, 2.14%)</title><rect x="30.5062%" y="645" width="2.1429%" height="15" fill="rgb(206,107,13)" fg:x="9467" fg:w="665"/><text x="30.7562%" y="655.50">&lt;..</text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_write_priv (660 samples, 2.13%)</title><rect x="30.5223%" y="629" width="2.1268%" height="15" fill="rgb(250,100,44)" fg:x="9472" fg:w="660"/><text x="30.7723%" y="639.50">t..</text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (23 samples, 0.07%)</title><rect x="32.5750%" y="613" width="0.0741%" height="15" fill="rgb(231,147,38)" fg:x="10109" fg:w="23"/><text x="32.8250%" y="623.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness (6 samples, 0.02%)</title><rect x="32.6298%" y="597" width="0.0193%" height="15" fill="rgb(229,8,40)" fg:x="10126" fg:w="6"/><text x="32.8798%" y="607.50"></text></g><g><title>&lt;tokio::runtime::coop::RestoreOnPending as core::ops::drop::Drop&gt;::drop (13 samples, 0.04%)</title><rect x="32.6491%" y="645" width="0.0419%" height="15" fill="rgb(221,135,30)" fg:x="10132" fg:w="13"/><text x="32.8991%" y="655.50"></text></g><g><title>proxy::handle_inbound_stream::{{closure}}::{{closure}} (955 samples, 3.08%)</title><rect x="29.6781%" y="693" width="3.0774%" height="15" fill="rgb(249,193,18)" fg:x="9210" fg:w="955"/><text x="29.9281%" y="703.50">pro..</text></g><g><title>tokio::io::util::copy_bidirectional::transfer_one_direction (939 samples, 3.03%)</title><rect x="29.7296%" y="677" width="3.0258%" height="15" fill="rgb(209,133,39)" fg:x="9226" fg:w="939"/><text x="29.9796%" y="687.50">tok..</text></g><g><title>tokio::io::util::copy::CopyBuffer::poll_copy (923 samples, 2.97%)</title><rect x="29.7812%" y="661" width="2.9743%" height="15" fill="rgb(232,100,14)" fg:x="9242" fg:w="923"/><text x="30.0312%" y="671.50">tok..</text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_read_priv (20 samples, 0.06%)</title><rect x="32.6910%" y="645" width="0.0644%" height="15" fill="rgb(224,185,1)" fg:x="10145" fg:w="20"/><text x="32.9410%" y="655.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (15 samples, 0.05%)</title><rect x="32.7071%" y="629" width="0.0483%" height="15" fill="rgb(223,139,8)" fg:x="10150" fg:w="15"/><text x="32.9571%" y="639.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness (12 samples, 0.04%)</title><rect x="32.7168%" y="613" width="0.0387%" height="15" fill="rgb(232,213,38)" fg:x="10153" fg:w="12"/><text x="32.9668%" y="623.50"></text></g><g><title>&lt;smoltcp::wire::ip::Protocol as core::convert::From&lt;u8&gt;&gt;::from (15 samples, 0.05%)</title><rect x="33.3484%" y="645" width="0.0483%" height="15" fill="rgb(207,94,22)" fg:x="10349" fg:w="15"/><text x="33.5984%" y="655.50"></text></g><g><title>smoltcp::wire::ip::Version::of_packet (6 samples, 0.02%)</title><rect x="33.3999%" y="645" width="0.0193%" height="15" fill="rgb(219,183,54)" fg:x="10365" fg:w="6"/><text x="33.6499%" y="655.50"></text></g><g><title>smoltcp::wire::ipv4::Address::from_bytes (6 samples, 0.02%)</title><rect x="33.4193%" y="645" width="0.0193%" height="15" fill="rgb(216,185,54)" fg:x="10371" fg:w="6"/><text x="33.6693%" y="655.50"></text></g><g><title>syscall (15 samples, 0.05%)</title><rect x="33.4515%" y="597" width="0.0483%" height="15" fill="rgb(254,217,39)" fg:x="10381" fg:w="15"/><text x="33.7015%" y="607.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (14 samples, 0.05%)</title><rect x="33.4547%" y="581" width="0.0451%" height="15" fill="rgb(240,178,23)" fg:x="10382" fg:w="14"/><text x="33.7047%" y="591.50"></text></g><g><title>do_syscall_64 (14 samples, 0.05%)</title><rect x="33.4547%" y="565" width="0.0451%" height="15" fill="rgb(218,11,47)" fg:x="10382" fg:w="14"/><text x="33.7047%" y="575.50"></text></g><g><title>__x64_sys_futex (12 samples, 0.04%)</title><rect x="33.4612%" y="549" width="0.0387%" height="15" fill="rgb(218,51,51)" fg:x="10384" fg:w="12"/><text x="33.7112%" y="559.50"></text></g><g><title>do_futex (12 samples, 0.04%)</title><rect x="33.4612%" y="533" width="0.0387%" height="15" fill="rgb(238,126,27)" fg:x="10384" fg:w="12"/><text x="33.7112%" y="543.50"></text></g><g><title>futex_wake (12 samples, 0.04%)</title><rect x="33.4612%" y="517" width="0.0387%" height="15" fill="rgb(249,202,22)" fg:x="10384" fg:w="12"/><text x="33.7112%" y="527.50"></text></g><g><title>wake_up_q (7 samples, 0.02%)</title><rect x="33.4773%" y="501" width="0.0226%" height="15" fill="rgb(254,195,49)" fg:x="10389" fg:w="7"/><text x="33.7273%" y="511.50"></text></g><g><title>try_to_wake_up (7 samples, 0.02%)</title><rect x="33.4773%" y="485" width="0.0226%" height="15" fill="rgb(208,123,14)" fg:x="10389" fg:w="7"/><text x="33.7273%" y="495.50"></text></g><g><title>ttwu_queue_wakelist (5 samples, 0.02%)</title><rect x="33.4837%" y="469" width="0.0161%" height="15" fill="rgb(224,200,8)" fg:x="10391" fg:w="5"/><text x="33.7337%" y="479.50"></text></g><g><title>mio::sys::unix::waker::eventfd::WakerInternal::wake (4 samples, 0.01%)</title><rect x="33.5063%" y="581" width="0.0129%" height="15" fill="rgb(217,61,36)" fg:x="10398" fg:w="4"/><text x="33.7563%" y="591.50"></text></g><g><title>&lt;&amp;std::process::ChildStdin as std::io::Write&gt;::write (4 samples, 0.01%)</title><rect x="33.5063%" y="565" width="0.0129%" height="15" fill="rgb(206,35,45)" fg:x="10398" fg:w="4"/><text x="33.7563%" y="575.50"></text></g><g><title>__write (4 samples, 0.01%)</title><rect x="33.5063%" y="549" width="0.0129%" height="15" fill="rgb(217,65,33)" fg:x="10398" fg:w="4"/><text x="33.7563%" y="559.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (4 samples, 0.01%)</title><rect x="33.5063%" y="533" width="0.0129%" height="15" fill="rgb(222,158,48)" fg:x="10398" fg:w="4"/><text x="33.7563%" y="543.50"></text></g><g><title>do_syscall_64 (4 samples, 0.01%)</title><rect x="33.5063%" y="517" width="0.0129%" height="15" fill="rgb(254,2,54)" fg:x="10398" fg:w="4"/><text x="33.7563%" y="527.50"></text></g><g><title>ksys_write (4 samples, 0.01%)</title><rect x="33.5063%" y="501" width="0.0129%" height="15" fill="rgb(250,143,38)" fg:x="10398" fg:w="4"/><text x="33.7563%" y="511.50"></text></g><g><title>vfs_write (4 samples, 0.01%)</title><rect x="33.5063%" y="485" width="0.0129%" height="15" fill="rgb(248,25,0)" fg:x="10398" fg:w="4"/><text x="33.7563%" y="495.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Unparker::unpark (7 samples, 0.02%)</title><rect x="33.4998%" y="597" width="0.0226%" height="15" fill="rgb(206,152,27)" fg:x="10396" fg:w="7"/><text x="33.7498%" y="607.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::schedule (27 samples, 0.09%)</title><rect x="33.4450%" y="629" width="0.0870%" height="15" fill="rgb(240,77,30)" fg:x="10379" fg:w="27"/><text x="33.6950%" y="639.50"></text></g><g><title>tokio::runtime::context::with_scheduler (27 samples, 0.09%)</title><rect x="33.4450%" y="613" width="0.0870%" height="15" fill="rgb(231,5,3)" fg:x="10379" fg:w="27"/><text x="33.6950%" y="623.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (36 samples, 0.12%)</title><rect x="33.4386%" y="645" width="0.1160%" height="15" fill="rgb(207,226,32)" fg:x="10377" fg:w="36"/><text x="33.6886%" y="655.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_notified_by_val (4 samples, 0.01%)</title><rect x="33.5417%" y="629" width="0.0129%" height="15" fill="rgb(222,207,47)" fg:x="10409" fg:w="4"/><text x="33.7917%" y="639.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::try_acquire (38 samples, 0.12%)</title><rect x="33.5546%" y="645" width="0.1225%" height="15" fill="rgb(229,115,45)" fg:x="10413" fg:w="38"/><text x="33.8046%" y="655.50"></text></g><g><title>tokio::sync::mpsc::list::Tx&lt;T&gt;::push (61 samples, 0.20%)</title><rect x="33.6771%" y="645" width="0.1966%" height="15" fill="rgb(224,191,6)" fg:x="10451" fg:w="61"/><text x="33.9271%" y="655.50"></text></g><g><title>&lt;netstack_smoltcp::stack::Stack as futures_sink::Sink&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;::poll_flush (229 samples, 0.74%)</title><rect x="33.2871%" y="661" width="0.7379%" height="15" fill="rgb(230,227,24)" fg:x="10330" fg:w="229"/><text x="33.5371%" y="671.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::wake (47 samples, 0.15%)</title><rect x="33.8736%" y="645" width="0.1515%" height="15" fill="rgb(228,80,19)" fg:x="10512" fg:w="47"/><text x="34.1236%" y="655.50"></text></g><g><title>&lt;netstack_smoltcp::stack::Stack as futures_sink::Sink&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;::start_send (15 samples, 0.05%)</title><rect x="34.0315%" y="661" width="0.0483%" height="15" fill="rgb(247,229,0)" fg:x="10561" fg:w="15"/><text x="34.2815%" y="671.50"></text></g><g><title>&lt;tun::async::device::AsyncDevice as tokio::io::async_write::AsyncWrite&gt;::poll_flush (23 samples, 0.07%)</title><rect x="34.2023%" y="645" width="0.0741%" height="15" fill="rgb(237,194,15)" fg:x="10614" fg:w="23"/><text x="34.4523%" y="655.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_write_ready (16 samples, 0.05%)</title><rect x="34.2249%" y="629" width="0.0516%" height="15" fill="rgb(219,203,20)" fg:x="10621" fg:w="16"/><text x="34.4749%" y="639.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (13 samples, 0.04%)</title><rect x="34.2345%" y="613" width="0.0419%" height="15" fill="rgb(234,128,8)" fg:x="10624" fg:w="13"/><text x="34.4845%" y="623.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.02%)</title><rect x="34.4504%" y="581" width="0.0193%" height="15" fill="rgb(248,202,8)" fg:x="10691" fg:w="6"/><text x="34.7004%" y="591.50"></text></g><g><title>[libc.so.6] (14 samples, 0.05%)</title><rect x="34.4698%" y="581" width="0.0451%" height="15" fill="rgb(206,104,37)" fg:x="10697" fg:w="14"/><text x="34.7198%" y="591.50"></text></g><g><title>__fdget_pos (8 samples, 0.03%)</title><rect x="34.5600%" y="533" width="0.0258%" height="15" fill="rgb(223,8,27)" fg:x="10725" fg:w="8"/><text x="34.8100%" y="543.50"></text></g><g><title>__fget_light (8 samples, 0.03%)</title><rect x="34.5600%" y="517" width="0.0258%" height="15" fill="rgb(216,217,28)" fg:x="10725" fg:w="8"/><text x="34.8100%" y="527.50"></text></g><g><title>__fget_files (8 samples, 0.03%)</title><rect x="34.5600%" y="501" width="0.0258%" height="15" fill="rgb(249,199,1)" fg:x="10725" fg:w="8"/><text x="34.8100%" y="511.50"></text></g><g><title>fput_many (5 samples, 0.02%)</title><rect x="34.5922%" y="533" width="0.0161%" height="15" fill="rgb(240,85,17)" fg:x="10735" fg:w="5"/><text x="34.8422%" y="543.50"></text></g><g><title>tun_get (15 samples, 0.05%)</title><rect x="34.6985%" y="469" width="0.0483%" height="15" fill="rgb(206,108,45)" fg:x="10768" fg:w="15"/><text x="34.9485%" y="479.50"></text></g><g><title>__local_bh_enable_ip (9 samples, 0.03%)</title><rect x="34.8500%" y="453" width="0.0290%" height="15" fill="rgb(245,210,41)" fg:x="10815" fg:w="9"/><text x="35.1000%" y="463.50"></text></g><g><title>do_softirq (6 samples, 0.02%)</title><rect x="34.8597%" y="437" width="0.0193%" height="15" fill="rgb(206,13,37)" fg:x="10818" fg:w="6"/><text x="35.1097%" y="447.50"></text></g><g><title>__softirqentry_text_start (6 samples, 0.02%)</title><rect x="34.8597%" y="421" width="0.0193%" height="15" fill="rgb(250,61,18)" fg:x="10818" fg:w="6"/><text x="35.1097%" y="431.50"></text></g><g><title>net_rx_action (6 samples, 0.02%)</title><rect x="34.8597%" y="405" width="0.0193%" height="15" fill="rgb(235,172,48)" fg:x="10818" fg:w="6"/><text x="35.1097%" y="415.50"></text></g><g><title>__napi_poll (6 samples, 0.02%)</title><rect x="34.8597%" y="389" width="0.0193%" height="15" fill="rgb(249,201,17)" fg:x="10818" fg:w="6"/><text x="35.1097%" y="399.50"></text></g><g><title>netvsc_poll (6 samples, 0.02%)</title><rect x="34.8597%" y="373" width="0.0193%" height="15" fill="rgb(219,208,6)" fg:x="10818" fg:w="6"/><text x="35.1097%" y="383.50"></text></g><g><title>napi_complete_done (6 samples, 0.02%)</title><rect x="34.8597%" y="357" width="0.0193%" height="15" fill="rgb(248,31,23)" fg:x="10818" fg:w="6"/><text x="35.1097%" y="367.50"></text></g><g><title>netif_receive_skb_list_internal (6 samples, 0.02%)</title><rect x="34.8597%" y="341" width="0.0193%" height="15" fill="rgb(245,15,42)" fg:x="10818" fg:w="6"/><text x="35.1097%" y="351.50"></text></g><g><title>__netif_receive_skb_list_core (6 samples, 0.02%)</title><rect x="34.8597%" y="325" width="0.0193%" height="15" fill="rgb(222,217,39)" fg:x="10818" fg:w="6"/><text x="35.1097%" y="335.50"></text></g><g><title>ip_list_rcv (6 samples, 0.02%)</title><rect x="34.8597%" y="309" width="0.0193%" height="15" fill="rgb(210,219,27)" fg:x="10818" fg:w="6"/><text x="35.1097%" y="319.50"></text></g><g><title>ip_sublist_rcv (6 samples, 0.02%)</title><rect x="34.8597%" y="293" width="0.0193%" height="15" fill="rgb(252,166,36)" fg:x="10818" fg:w="6"/><text x="35.1097%" y="303.50"></text></g><g><title>ip_sublist_rcv_finish (5 samples, 0.02%)</title><rect x="34.8629%" y="277" width="0.0161%" height="15" fill="rgb(245,132,34)" fg:x="10819" fg:w="5"/><text x="35.1129%" y="287.50"></text></g><g><title>ip_local_deliver_finish (5 samples, 0.02%)</title><rect x="34.8629%" y="261" width="0.0161%" height="15" fill="rgb(236,54,3)" fg:x="10819" fg:w="5"/><text x="35.1129%" y="271.50"></text></g><g><title>ip_protocol_deliver_rcu (5 samples, 0.02%)</title><rect x="34.8629%" y="245" width="0.0161%" height="15" fill="rgb(241,173,43)" fg:x="10819" fg:w="5"/><text x="35.1129%" y="255.50"></text></g><g><title>tcp_v4_rcv (5 samples, 0.02%)</title><rect x="34.8629%" y="229" width="0.0161%" height="15" fill="rgb(215,190,9)" fg:x="10819" fg:w="5"/><text x="35.1129%" y="239.50"></text></g><g><title>tcp_v4_do_rcv (4 samples, 0.01%)</title><rect x="34.8661%" y="213" width="0.0129%" height="15" fill="rgb(242,101,16)" fg:x="10820" fg:w="4"/><text x="35.1161%" y="223.50"></text></g><g><title>tcp_rcv_established (4 samples, 0.01%)</title><rect x="34.8661%" y="197" width="0.0129%" height="15" fill="rgb(223,190,21)" fg:x="10820" fg:w="4"/><text x="35.1161%" y="207.50"></text></g><g><title>tcp_ack (4 samples, 0.01%)</title><rect x="34.8661%" y="181" width="0.0129%" height="15" fill="rgb(215,228,25)" fg:x="10820" fg:w="4"/><text x="35.1161%" y="191.50"></text></g><g><title>__skb_flow_dissect (27 samples, 0.09%)</title><rect x="34.8790%" y="453" width="0.0870%" height="15" fill="rgb(225,36,22)" fg:x="10824" fg:w="27"/><text x="35.1290%" y="463.50"></text></g><g><title>__netif_receive_skb_core.constprop.0 (16 samples, 0.05%)</title><rect x="34.9853%" y="421" width="0.0516%" height="15" fill="rgb(251,106,46)" fg:x="10857" fg:w="16"/><text x="35.2353%" y="431.50"></text></g><g><title>__skb_checksum_complete (13 samples, 0.04%)</title><rect x="35.1690%" y="373" width="0.0419%" height="15" fill="rgb(208,90,1)" fg:x="10914" fg:w="13"/><text x="35.4190%" y="383.50"></text></g><g><title>__skb_checksum (11 samples, 0.04%)</title><rect x="35.1755%" y="357" width="0.0354%" height="15" fill="rgb(243,10,4)" fg:x="10916" fg:w="11"/><text x="35.4255%" y="367.50"></text></g><g><title>csum_partial (4 samples, 0.01%)</title><rect x="35.1980%" y="341" width="0.0129%" height="15" fill="rgb(212,137,27)" fg:x="10923" fg:w="4"/><text x="35.4480%" y="351.50"></text></g><g><title>do_csum (4 samples, 0.01%)</title><rect x="35.1980%" y="325" width="0.0129%" height="15" fill="rgb(231,220,49)" fg:x="10923" fg:w="4"/><text x="35.4480%" y="335.50"></text></g><g><title>sk_filter_trim_cap (5 samples, 0.02%)</title><rect x="35.2173%" y="373" width="0.0161%" height="15" fill="rgb(237,96,20)" fg:x="10929" fg:w="5"/><text x="35.4673%" y="383.50"></text></g><g><title>skb_release_data (12 samples, 0.04%)</title><rect x="35.2979%" y="325" width="0.0387%" height="15" fill="rgb(239,229,30)" fg:x="10954" fg:w="12"/><text x="35.5479%" y="335.50"></text></g><g><title>kfree (7 samples, 0.02%)</title><rect x="35.3140%" y="309" width="0.0226%" height="15" fill="rgb(219,65,33)" fg:x="10959" fg:w="7"/><text x="35.5640%" y="319.50"></text></g><g><title>__kfree_skb (18 samples, 0.06%)</title><rect x="35.2947%" y="341" width="0.0580%" height="15" fill="rgb(243,134,7)" fg:x="10953" fg:w="18"/><text x="35.5447%" y="351.50"></text></g><g><title>skb_release_head_state (5 samples, 0.02%)</title><rect x="35.3366%" y="325" width="0.0161%" height="15" fill="rgb(216,177,54)" fg:x="10966" fg:w="5"/><text x="35.5866%" y="335.50"></text></g><g><title>__ip_finish_output (5 samples, 0.02%)</title><rect x="35.4687%" y="277" width="0.0161%" height="15" fill="rgb(211,160,20)" fg:x="11007" fg:w="5"/><text x="35.7187%" y="287.50"></text></g><g><title>__qdisc_run (4 samples, 0.01%)</title><rect x="35.5331%" y="245" width="0.0129%" height="15" fill="rgb(239,85,39)" fg:x="11027" fg:w="4"/><text x="35.7831%" y="255.50"></text></g><g><title>__raw_callee_save___pv_queued_spin_unlock (10 samples, 0.03%)</title><rect x="35.6556%" y="197" width="0.0322%" height="15" fill="rgb(232,125,22)" fg:x="11065" fg:w="10"/><text x="35.9056%" y="207.50"></text></g><g><title>_raw_spin_lock (8 samples, 0.03%)</title><rect x="35.6878%" y="197" width="0.0258%" height="15" fill="rgb(244,57,34)" fg:x="11075" fg:w="8"/><text x="35.9378%" y="207.50"></text></g><g><title>sk_free (16 samples, 0.05%)</title><rect x="35.7168%" y="197" width="0.0516%" height="15" fill="rgb(214,203,32)" fg:x="11084" fg:w="16"/><text x="35.9668%" y="207.50"></text></g><g><title>skb_clone_tx_timestamp (6 samples, 0.02%)</title><rect x="35.7684%" y="197" width="0.0193%" height="15" fill="rgb(207,58,43)" fg:x="11100" fg:w="6"/><text x="36.0184%" y="207.50"></text></g><g><title>select_task_rq_fair (9 samples, 0.03%)</title><rect x="35.9843%" y="69" width="0.0290%" height="15" fill="rgb(215,193,15)" fg:x="11167" fg:w="9"/><text x="36.2343%" y="79.50"></text></g><g><title>hv_send_ipi (7 samples, 0.02%)</title><rect x="36.0262%" y="53" width="0.0226%" height="15" fill="rgb(232,15,44)" fg:x="11180" fg:w="7"/><text x="36.2762%" y="63.50"></text></g><g><title>__send_ipi_one (5 samples, 0.02%)</title><rect x="36.0326%" y="37" width="0.0161%" height="15" fill="rgb(212,3,48)" fg:x="11182" fg:w="5"/><text x="36.2826%" y="47.50"></text></g><g><title>__wake_up_common (40 samples, 0.13%)</title><rect x="35.9327%" y="117" width="0.1289%" height="15" fill="rgb(218,128,7)" fg:x="11151" fg:w="40"/><text x="36.1827%" y="127.50"></text></g><g><title>ep_autoremove_wake_function (38 samples, 0.12%)</title><rect x="35.9392%" y="101" width="0.1225%" height="15" fill="rgb(226,216,39)" fg:x="11153" fg:w="38"/><text x="36.1892%" y="111.50"></text></g><g><title>try_to_wake_up (31 samples, 0.10%)</title><rect x="35.9617%" y="85" width="0.0999%" height="15" fill="rgb(243,47,51)" fg:x="11160" fg:w="31"/><text x="36.2117%" y="95.50"></text></g><g><title>ttwu_queue_wakelist (15 samples, 0.05%)</title><rect x="36.0133%" y="69" width="0.0483%" height="15" fill="rgb(241,183,40)" fg:x="11176" fg:w="15"/><text x="36.2633%" y="79.50"></text></g><g><title>sched_clock_cpu (4 samples, 0.01%)</title><rect x="36.0487%" y="53" width="0.0129%" height="15" fill="rgb(231,217,32)" fg:x="11187" fg:w="4"/><text x="36.2987%" y="63.50"></text></g><g><title>_raw_spin_lock_irqsave (13 samples, 0.04%)</title><rect x="36.0616%" y="117" width="0.0419%" height="15" fill="rgb(229,61,38)" fg:x="11191" fg:w="13"/><text x="36.3116%" y="127.50"></text></g><g><title>__pv_queued_spin_lock_slowpath (11 samples, 0.04%)</title><rect x="36.0681%" y="101" width="0.0354%" height="15" fill="rgb(225,210,5)" fg:x="11193" fg:w="11"/><text x="36.3181%" y="111.50"></text></g><g><title>__wake_up_common_lock (54 samples, 0.17%)</title><rect x="35.9327%" y="133" width="0.1740%" height="15" fill="rgb(231,79,45)" fg:x="11151" fg:w="54"/><text x="36.1827%" y="143.50"></text></g><g><title>_raw_read_lock_irqsave (17 samples, 0.05%)</title><rect x="36.1067%" y="133" width="0.0548%" height="15" fill="rgb(224,100,7)" fg:x="11205" fg:w="17"/><text x="36.3567%" y="143.50"></text></g><g><title>__wake_up_common (118 samples, 0.38%)</title><rect x="35.8425%" y="165" width="0.3802%" height="15" fill="rgb(241,198,18)" fg:x="11123" fg:w="118"/><text x="36.0925%" y="175.50"></text></g><g><title>ep_poll_callback (104 samples, 0.34%)</title><rect x="35.8876%" y="149" width="0.3351%" height="15" fill="rgb(252,97,53)" fg:x="11137" fg:w="104"/><text x="36.1376%" y="159.50"></text></g><g><title>_raw_read_unlock_irqrestore (19 samples, 0.06%)</title><rect x="36.1615%" y="133" width="0.0612%" height="15" fill="rgb(220,88,7)" fg:x="11222" fg:w="19"/><text x="36.4115%" y="143.50"></text></g><g><title>_raw_spin_lock_irqsave (23 samples, 0.07%)</title><rect x="36.2227%" y="165" width="0.0741%" height="15" fill="rgb(213,176,14)" fg:x="11241" fg:w="23"/><text x="36.4727%" y="175.50"></text></g><g><title>__wake_up_common_lock (158 samples, 0.51%)</title><rect x="35.8167%" y="181" width="0.5091%" height="15" fill="rgb(246,73,7)" fg:x="11115" fg:w="158"/><text x="36.0667%" y="191.50"></text></g><g><title>_raw_spin_unlock_irqrestore (9 samples, 0.03%)</title><rect x="36.2968%" y="165" width="0.0290%" height="15" fill="rgb(245,64,36)" fg:x="11264" fg:w="9"/><text x="36.5468%" y="175.50"></text></g><g><title>__raw_callee_save___pv_queued_spin_unlock (9 samples, 0.03%)</title><rect x="36.2968%" y="149" width="0.0290%" height="15" fill="rgb(245,80,10)" fg:x="11264" fg:w="9"/><text x="36.5468%" y="159.50"></text></g><g><title>sock_def_readable (170 samples, 0.55%)</title><rect x="35.7877%" y="197" width="0.5478%" height="15" fill="rgb(232,107,50)" fg:x="11106" fg:w="170"/><text x="36.0377%" y="207.50"></text></g><g><title>dev_hard_start_xmit (259 samples, 0.83%)</title><rect x="35.5686%" y="229" width="0.8346%" height="15" fill="rgb(253,3,0)" fg:x="11038" fg:w="259"/><text x="35.8186%" y="239.50"></text></g><g><title>tun_net_xmit (255 samples, 0.82%)</title><rect x="35.5815%" y="213" width="0.8217%" height="15" fill="rgb(212,99,53)" fg:x="11042" fg:w="255"/><text x="35.8315%" y="223.50"></text></g><g><title>tcp_wfree (21 samples, 0.07%)</title><rect x="36.3355%" y="197" width="0.0677%" height="15" fill="rgb(249,111,54)" fg:x="11276" fg:w="21"/><text x="36.5855%" y="207.50"></text></g><g><title>ip_send_check (18 samples, 0.06%)</title><rect x="36.4580%" y="149" width="0.0580%" height="15" fill="rgb(249,55,30)" fg:x="11314" fg:w="18"/><text x="36.7080%" y="159.50"></text></g><g><title>csum_partial (8 samples, 0.03%)</title><rect x="36.5482%" y="133" width="0.0258%" height="15" fill="rgb(237,47,42)" fg:x="11342" fg:w="8"/><text x="36.7982%" y="143.50"></text></g><g><title>do_csum (7 samples, 0.02%)</title><rect x="36.5514%" y="117" width="0.0226%" height="15" fill="rgb(211,20,18)" fg:x="11343" fg:w="7"/><text x="36.8014%" y="127.50"></text></g><g><title>__ksize (6 samples, 0.02%)</title><rect x="36.9123%" y="85" width="0.0193%" height="15" fill="rgb(231,203,46)" fg:x="11455" fg:w="6"/><text x="37.1623%" y="95.50"></text></g><g><title>__build_skb_around (12 samples, 0.04%)</title><rect x="36.8962%" y="101" width="0.0387%" height="15" fill="rgb(237,142,3)" fg:x="11450" fg:w="12"/><text x="37.1462%" y="111.50"></text></g><g><title>___slab_alloc.constprop.0 (19 samples, 0.06%)</title><rect x="37.0122%" y="85" width="0.0612%" height="15" fill="rgb(241,107,1)" fg:x="11486" fg:w="19"/><text x="37.2622%" y="95.50"></text></g><g><title>__kmalloc_track_caller (46 samples, 0.15%)</title><rect x="36.9349%" y="101" width="0.1482%" height="15" fill="rgb(229,83,13)" fg:x="11462" fg:w="46"/><text x="37.1849%" y="111.50"></text></g><g><title>__ksize (9 samples, 0.03%)</title><rect x="37.0831%" y="101" width="0.0290%" height="15" fill="rgb(241,91,40)" fg:x="11508" fg:w="9"/><text x="37.3331%" y="111.50"></text></g><g><title>___slab_alloc.constprop.0 (13 samples, 0.04%)</title><rect x="37.1540%" y="85" width="0.0419%" height="15" fill="rgb(225,3,45)" fg:x="11530" fg:w="13"/><text x="37.4040%" y="95.50"></text></g><g><title>allocate_slab (4 samples, 0.01%)</title><rect x="37.1830%" y="69" width="0.0129%" height="15" fill="rgb(244,223,14)" fg:x="11539" fg:w="4"/><text x="37.4330%" y="79.50"></text></g><g><title>__alloc_skb (124 samples, 0.40%)</title><rect x="36.7995%" y="117" width="0.3996%" height="15" fill="rgb(224,124,37)" fg:x="11420" fg:w="124"/><text x="37.0495%" y="127.50"></text></g><g><title>kmem_cache_alloc (27 samples, 0.09%)</title><rect x="37.1121%" y="101" width="0.0870%" height="15" fill="rgb(251,171,30)" fg:x="11517" fg:w="27"/><text x="37.3621%" y="111.50"></text></g><g><title>__copy_skb_header (6 samples, 0.02%)</title><rect x="37.1991%" y="117" width="0.0193%" height="15" fill="rgb(236,46,54)" fg:x="11544" fg:w="6"/><text x="37.4491%" y="127.50"></text></g><g><title>__skb_checksum (293 samples, 0.94%)</title><rect x="37.2184%" y="117" width="0.9442%" height="15" fill="rgb(245,213,5)" fg:x="11550" fg:w="293"/><text x="37.4684%" y="127.50"></text></g><g><title>csum_partial (276 samples, 0.89%)</title><rect x="37.2732%" y="101" width="0.8894%" height="15" fill="rgb(230,144,27)" fg:x="11567" fg:w="276"/><text x="37.5232%" y="111.50"></text></g><g><title>do_csum (274 samples, 0.88%)</title><rect x="37.2797%" y="85" width="0.8829%" height="15" fill="rgb(220,86,6)" fg:x="11569" fg:w="274"/><text x="37.5297%" y="95.50"></text></g><g><title>memcpy_erms (25 samples, 0.08%)</title><rect x="38.1626%" y="117" width="0.0806%" height="15" fill="rgb(240,20,13)" fg:x="11843" fg:w="25"/><text x="38.4126%" y="127.50"></text></g><g><title>skb_headers_offset_update (6 samples, 0.02%)</title><rect x="38.2432%" y="117" width="0.0193%" height="15" fill="rgb(217,89,34)" fg:x="11868" fg:w="6"/><text x="38.4932%" y="127.50"></text></g><g><title>__skb_gso_segment (578 samples, 1.86%)</title><rect x="36.4096%" y="197" width="1.8625%" height="15" fill="rgb(229,13,5)" fg:x="11299" fg:w="578"/><text x="36.6596%" y="207.50">_..</text></g><g><title>skb_mac_gso_segment (575 samples, 1.85%)</title><rect x="36.4193%" y="181" width="1.8529%" height="15" fill="rgb(244,67,35)" fg:x="11302" fg:w="575"/><text x="36.6693%" y="191.50">s..</text></g><g><title>inet_gso_segment (573 samples, 1.85%)</title><rect x="36.4257%" y="165" width="1.8464%" height="15" fill="rgb(221,40,2)" fg:x="11304" fg:w="573"/><text x="36.6757%" y="175.50">i..</text></g><g><title>tcp_gso_segment (545 samples, 1.76%)</title><rect x="36.5160%" y="149" width="1.7562%" height="15" fill="rgb(237,157,21)" fg:x="11332" fg:w="545"/><text x="36.7660%" y="159.50"></text></g><g><title>skb_segment (527 samples, 1.70%)</title><rect x="36.5740%" y="133" width="1.6982%" height="15" fill="rgb(222,94,11)" fg:x="11350" fg:w="527"/><text x="36.8240%" y="143.50"></text></g><g><title>netif_skb_features (6 samples, 0.02%)</title><rect x="38.2754%" y="197" width="0.0193%" height="15" fill="rgb(249,113,6)" fg:x="11878" fg:w="6"/><text x="38.5254%" y="207.50"></text></g><g><title>skb_network_protocol (4 samples, 0.01%)</title><rect x="38.2818%" y="181" width="0.0129%" height="15" fill="rgb(238,137,36)" fg:x="11880" fg:w="4"/><text x="38.5318%" y="191.50"></text></g><g><title>__dev_queue_xmit (868 samples, 2.80%)</title><rect x="35.5106%" y="261" width="2.7970%" height="15" fill="rgb(210,102,26)" fg:x="11020" fg:w="868"/><text x="35.7606%" y="271.50">__..</text></g><g><title>sch_direct_xmit (856 samples, 2.76%)</title><rect x="35.5493%" y="245" width="2.7584%" height="15" fill="rgb(218,30,30)" fg:x="11032" fg:w="856"/><text x="35.7993%" y="255.50">sc..</text></g><g><title>validate_xmit_skb_list (591 samples, 1.90%)</title><rect x="36.4032%" y="229" width="1.9044%" height="15" fill="rgb(214,67,26)" fg:x="11297" fg:w="591"/><text x="36.6532%" y="239.50">v..</text></g><g><title>validate_xmit_skb.constprop.0 (591 samples, 1.90%)</title><rect x="36.4032%" y="213" width="1.9044%" height="15" fill="rgb(251,9,53)" fg:x="11297" fg:w="591"/><text x="36.6532%" y="223.50">v..</text></g><g><title>skb_checksum_help (4 samples, 0.01%)</title><rect x="38.2947%" y="197" width="0.0129%" height="15" fill="rgb(228,204,25)" fg:x="11884" fg:w="4"/><text x="38.5447%" y="207.50"></text></g><g><title>ip_finish_output2 (874 samples, 2.82%)</title><rect x="35.4945%" y="277" width="2.8164%" height="15" fill="rgb(207,153,8)" fg:x="11015" fg:w="874"/><text x="35.7445%" y="287.50">ip..</text></g><g><title>__ip_queue_xmit (891 samples, 2.87%)</title><rect x="35.4526%" y="293" width="2.8711%" height="15" fill="rgb(242,9,16)" fg:x="11002" fg:w="891"/><text x="35.7026%" y="303.50">__..</text></g><g><title>ip_output (4 samples, 0.01%)</title><rect x="38.3108%" y="277" width="0.0129%" height="15" fill="rgb(217,211,10)" fg:x="11889" fg:w="4"/><text x="38.5608%" y="287.50"></text></g><g><title>__skb_clone (4 samples, 0.01%)</title><rect x="38.3237%" y="293" width="0.0129%" height="15" fill="rgb(219,228,52)" fg:x="11893" fg:w="4"/><text x="38.5737%" y="303.50"></text></g><g><title>__tcp_transmit_skb (909 samples, 2.93%)</title><rect x="35.4268%" y="309" width="2.9291%" height="15" fill="rgb(231,92,29)" fg:x="10994" fg:w="909"/><text x="35.6768%" y="319.50">__..</text></g><g><title>sk_stream_alloc_skb (5 samples, 0.02%)</title><rect x="38.3656%" y="309" width="0.0161%" height="15" fill="rgb(232,8,23)" fg:x="11906" fg:w="5"/><text x="38.6156%" y="319.50"></text></g><g><title>tcp_check_space (4 samples, 0.01%)</title><rect x="38.3882%" y="309" width="0.0129%" height="15" fill="rgb(216,211,34)" fg:x="11913" fg:w="4"/><text x="38.6382%" y="319.50"></text></g><g><title>detach_if_pending (5 samples, 0.02%)</title><rect x="38.4301%" y="261" width="0.0161%" height="15" fill="rgb(236,151,0)" fg:x="11926" fg:w="5"/><text x="38.6801%" y="271.50"></text></g><g><title>sk_reset_timer (12 samples, 0.04%)</title><rect x="38.4268%" y="293" width="0.0387%" height="15" fill="rgb(209,168,3)" fg:x="11925" fg:w="12"/><text x="38.6768%" y="303.50"></text></g><g><title>__mod_timer (11 samples, 0.04%)</title><rect x="38.4301%" y="277" width="0.0354%" height="15" fill="rgb(208,129,28)" fg:x="11926" fg:w="11"/><text x="38.6801%" y="287.50"></text></g><g><title>tcp_rbtree_insert (5 samples, 0.02%)</title><rect x="38.4655%" y="293" width="0.0161%" height="15" fill="rgb(229,78,22)" fg:x="11937" fg:w="5"/><text x="38.7155%" y="303.50"></text></g><g><title>tcp_event_new_data_sent (33 samples, 0.11%)</title><rect x="38.4011%" y="309" width="0.1063%" height="15" fill="rgb(228,187,13)" fg:x="11917" fg:w="33"/><text x="38.6511%" y="319.50"></text></g><g><title>tcp_rearm_rto.part.0 (8 samples, 0.03%)</title><rect x="38.4816%" y="293" width="0.0258%" height="15" fill="rgb(240,119,24)" fg:x="11942" fg:w="8"/><text x="38.7316%" y="303.50"></text></g><g><title>__tcp_push_pending_frames (983 samples, 3.17%)</title><rect x="35.3527%" y="341" width="3.1676%" height="15" fill="rgb(209,194,42)" fg:x="10971" fg:w="983"/><text x="35.6027%" y="351.50">__t..</text></g><g><title>tcp_write_xmit (980 samples, 3.16%)</title><rect x="35.3624%" y="325" width="3.1579%" height="15" fill="rgb(247,200,46)" fg:x="10974" fg:w="980"/><text x="35.6124%" y="335.50">tcp..</text></g><g><title>kmem_cache_free.part.0 (4 samples, 0.01%)</title><rect x="38.5203%" y="341" width="0.0129%" height="15" fill="rgb(218,76,16)" fg:x="11954" fg:w="4"/><text x="38.7703%" y="351.50"></text></g><g><title>free_pcp_prepare (4 samples, 0.01%)</title><rect x="38.7297%" y="277" width="0.0129%" height="15" fill="rgb(225,21,48)" fg:x="12019" fg:w="4"/><text x="38.9797%" y="287.50"></text></g><g><title>free_unref_page (7 samples, 0.02%)</title><rect x="38.7265%" y="293" width="0.0226%" height="15" fill="rgb(239,223,50)" fg:x="12018" fg:w="7"/><text x="38.9765%" y="303.50"></text></g><g><title>__kfree_skb (25 samples, 0.08%)</title><rect x="38.6814%" y="325" width="0.0806%" height="15" fill="rgb(244,45,21)" fg:x="12004" fg:w="25"/><text x="38.9314%" y="335.50"></text></g><g><title>skb_release_data (25 samples, 0.08%)</title><rect x="38.6814%" y="309" width="0.0806%" height="15" fill="rgb(232,33,43)" fg:x="12004" fg:w="25"/><text x="38.9314%" y="319.50"></text></g><g><title>kfree (4 samples, 0.01%)</title><rect x="38.7491%" y="293" width="0.0129%" height="15" fill="rgb(209,8,3)" fg:x="12025" fg:w="4"/><text x="38.9991%" y="303.50"></text></g><g><title>kmem_cache_free.part.0 (4 samples, 0.01%)</title><rect x="38.7845%" y="325" width="0.0129%" height="15" fill="rgb(214,25,53)" fg:x="12036" fg:w="4"/><text x="39.0345%" y="335.50"></text></g><g><title>tcp_ack_update_rtt (12 samples, 0.04%)</title><rect x="38.8135%" y="325" width="0.0387%" height="15" fill="rgb(254,186,54)" fg:x="12045" fg:w="12"/><text x="39.0635%" y="335.50"></text></g><g><title>tcp_schedule_loss_probe.part.0 (7 samples, 0.02%)</title><rect x="38.8715%" y="325" width="0.0226%" height="15" fill="rgb(208,174,49)" fg:x="12063" fg:w="7"/><text x="39.1215%" y="335.50"></text></g><g><title>free_pcp_prepare (5 samples, 0.02%)</title><rect x="38.9553%" y="277" width="0.0161%" height="15" fill="rgb(233,191,51)" fg:x="12089" fg:w="5"/><text x="39.2053%" y="287.50"></text></g><g><title>free_pcppages_bulk (4 samples, 0.01%)</title><rect x="38.9714%" y="277" width="0.0129%" height="15" fill="rgb(222,134,10)" fg:x="12094" fg:w="4"/><text x="39.2214%" y="287.50"></text></g><g><title>tcp_trim_head (29 samples, 0.09%)</title><rect x="38.8941%" y="325" width="0.0934%" height="15" fill="rgb(230,226,20)" fg:x="12070" fg:w="29"/><text x="39.1441%" y="335.50"></text></g><g><title>__pskb_trim_head (26 samples, 0.08%)</title><rect x="38.9037%" y="309" width="0.0838%" height="15" fill="rgb(251,111,25)" fg:x="12073" fg:w="26"/><text x="39.1537%" y="319.50"></text></g><g><title>free_unref_page (12 samples, 0.04%)</title><rect x="38.9489%" y="293" width="0.0387%" height="15" fill="rgb(224,40,46)" fg:x="12087" fg:w="12"/><text x="39.1989%" y="303.50"></text></g><g><title>tcp_update_pacing_rate (6 samples, 0.02%)</title><rect x="38.9875%" y="325" width="0.0193%" height="15" fill="rgb(236,108,47)" fg:x="12099" fg:w="6"/><text x="39.2375%" y="335.50"></text></g><g><title>tcp_ack (148 samples, 0.48%)</title><rect x="38.5332%" y="341" width="0.4769%" height="15" fill="rgb(234,93,0)" fg:x="11958" fg:w="148"/><text x="38.7832%" y="351.50"></text></g><g><title>tcp_check_space (10 samples, 0.03%)</title><rect x="39.0101%" y="341" width="0.0322%" height="15" fill="rgb(224,213,32)" fg:x="12106" fg:w="10"/><text x="39.2601%" y="351.50"></text></g><g><title>tcp_current_mss (8 samples, 0.03%)</title><rect x="39.0423%" y="341" width="0.0258%" height="15" fill="rgb(251,11,48)" fg:x="12116" fg:w="8"/><text x="39.2923%" y="351.50"></text></g><g><title>read_hv_clock_tsc (7 samples, 0.02%)</title><rect x="39.0906%" y="309" width="0.0226%" height="15" fill="rgb(236,173,5)" fg:x="12131" fg:w="7"/><text x="39.3406%" y="319.50"></text></g><g><title>tcp_mstamp_refresh (15 samples, 0.05%)</title><rect x="39.0745%" y="341" width="0.0483%" height="15" fill="rgb(230,95,12)" fg:x="12126" fg:w="15"/><text x="39.3245%" y="351.50"></text></g><g><title>ktime_get (14 samples, 0.05%)</title><rect x="39.0778%" y="325" width="0.0451%" height="15" fill="rgb(232,209,1)" fg:x="12127" fg:w="14"/><text x="39.3278%" y="335.50"></text></g><g><title>tcp_urg (4 samples, 0.01%)</title><rect x="39.1229%" y="341" width="0.0129%" height="15" fill="rgb(232,6,1)" fg:x="12141" fg:w="4"/><text x="39.3729%" y="351.50"></text></g><g><title>tcp_v4_do_rcv (1,214 samples, 3.91%)</title><rect x="35.2528%" y="373" width="3.9120%" height="15" fill="rgb(210,224,50)" fg:x="10940" fg:w="1214"/><text x="35.5028%" y="383.50">tcp_..</text></g><g><title>tcp_rcv_established (1,208 samples, 3.89%)</title><rect x="35.2721%" y="357" width="3.8926%" height="15" fill="rgb(228,127,35)" fg:x="10946" fg:w="1208"/><text x="35.5221%" y="367.50">tcp_..</text></g><g><title>tcp_validate_incoming (9 samples, 0.03%)</title><rect x="39.1358%" y="341" width="0.0290%" height="15" fill="rgb(245,102,45)" fg:x="12145" fg:w="9"/><text x="39.3858%" y="351.50"></text></g><g><title>ip_protocol_deliver_rcu (1,282 samples, 4.13%)</title><rect x="35.0466%" y="405" width="4.1311%" height="15" fill="rgb(214,1,49)" fg:x="10876" fg:w="1282"/><text x="35.2966%" y="415.50">ip_pr..</text></g><g><title>tcp_v4_rcv (1,272 samples, 4.10%)</title><rect x="35.0788%" y="389" width="4.0989%" height="15" fill="rgb(226,163,40)" fg:x="10886" fg:w="1272"/><text x="35.3288%" y="399.50">tcp_..</text></g><g><title>tcp_v4_fill_cb (4 samples, 0.01%)</title><rect x="39.1648%" y="373" width="0.0129%" height="15" fill="rgb(239,212,28)" fg:x="12154" fg:w="4"/><text x="39.4148%" y="383.50"></text></g><g><title>ip_local_deliver_finish (1,284 samples, 4.14%)</title><rect x="35.0433%" y="421" width="4.1375%" height="15" fill="rgb(220,20,13)" fg:x="10875" fg:w="1284"/><text x="35.2933%" y="431.50">ip_lo..</text></g><g><title>ip_rcv_core (19 samples, 0.06%)</title><rect x="39.1905%" y="405" width="0.0612%" height="15" fill="rgb(210,164,35)" fg:x="12162" fg:w="19"/><text x="39.4405%" y="415.50"></text></g><g><title>sock_wfree (13 samples, 0.04%)</title><rect x="39.2099%" y="389" width="0.0419%" height="15" fill="rgb(248,109,41)" fg:x="12168" fg:w="13"/><text x="39.4599%" y="399.50"></text></g><g><title>tun_sock_write_space (5 samples, 0.02%)</title><rect x="39.2357%" y="373" width="0.0161%" height="15" fill="rgb(238,23,50)" fg:x="12176" fg:w="5"/><text x="39.4857%" y="383.50"></text></g><g><title>__inet_lookup_established (24 samples, 0.08%)</title><rect x="39.3162%" y="373" width="0.0773%" height="15" fill="rgb(211,48,49)" fg:x="12201" fg:w="24"/><text x="39.5662%" y="383.50"></text></g><g><title>inet_ehashfn (5 samples, 0.02%)</title><rect x="39.3774%" y="357" width="0.0161%" height="15" fill="rgb(223,36,21)" fg:x="12220" fg:w="5"/><text x="39.6274%" y="367.50"></text></g><g><title>__netif_receive_skb_one_core (1,373 samples, 4.42%)</title><rect x="34.9789%" y="437" width="4.4243%" height="15" fill="rgb(207,123,46)" fg:x="10855" fg:w="1373"/><text x="35.2289%" y="447.50">__net..</text></g><g><title>ip_rcv (69 samples, 0.22%)</title><rect x="39.1809%" y="421" width="0.2223%" height="15" fill="rgb(240,218,32)" fg:x="12159" fg:w="69"/><text x="39.4309%" y="431.50"></text></g><g><title>ip_rcv_finish_core.constprop.0 (47 samples, 0.15%)</title><rect x="39.2518%" y="405" width="0.1515%" height="15" fill="rgb(252,5,43)" fg:x="12181" fg:w="47"/><text x="39.5018%" y="415.50"></text></g><g><title>tcp_v4_early_demux (35 samples, 0.11%)</title><rect x="39.2904%" y="389" width="0.1128%" height="15" fill="rgb(252,84,19)" fg:x="12193" fg:w="35"/><text x="39.5404%" y="399.50"></text></g><g><title>netif_receive_skb (1,383 samples, 4.46%)</title><rect x="34.9660%" y="453" width="4.4565%" height="15" fill="rgb(243,152,39)" fg:x="10851" fg:w="1383"/><text x="35.2160%" y="463.50">netif..</text></g><g><title>skb_defer_rx_timestamp (6 samples, 0.02%)</title><rect x="39.4032%" y="437" width="0.0193%" height="15" fill="rgb(234,160,15)" fg:x="12228" fg:w="6"/><text x="39.6532%" y="447.50"></text></g><g><title>__check_heap_object (4 samples, 0.01%)</title><rect x="39.4580%" y="421" width="0.0129%" height="15" fill="rgb(237,34,20)" fg:x="12245" fg:w="4"/><text x="39.7080%" y="431.50"></text></g><g><title>__check_object_size (22 samples, 0.07%)</title><rect x="39.4322%" y="437" width="0.0709%" height="15" fill="rgb(229,97,13)" fg:x="12237" fg:w="22"/><text x="39.6822%" y="447.50"></text></g><g><title>__virt_addr_valid (10 samples, 0.03%)</title><rect x="39.4709%" y="421" width="0.0322%" height="15" fill="rgb(234,71,50)" fg:x="12249" fg:w="10"/><text x="39.7209%" y="431.50"></text></g><g><title>skb_copy_datagram_from_iter (36 samples, 0.12%)</title><rect x="39.4258%" y="453" width="0.1160%" height="15" fill="rgb(253,155,4)" fg:x="12235" fg:w="36"/><text x="39.6758%" y="463.50"></text></g><g><title>_copy_from_iter (12 samples, 0.04%)</title><rect x="39.5031%" y="437" width="0.0387%" height="15" fill="rgb(222,185,37)" fg:x="12259" fg:w="12"/><text x="39.7531%" y="447.50"></text></g><g><title>copy_user_generic_unrolled (5 samples, 0.02%)</title><rect x="39.5257%" y="421" width="0.0161%" height="15" fill="rgb(251,177,13)" fg:x="12266" fg:w="5"/><text x="39.7757%" y="431.50"></text></g><g><title>__kmalloc_track_caller (10 samples, 0.03%)</title><rect x="39.6062%" y="405" width="0.0322%" height="15" fill="rgb(250,179,40)" fg:x="12291" fg:w="10"/><text x="39.8562%" y="415.50"></text></g><g><title>__ksize (4 samples, 0.01%)</title><rect x="39.6384%" y="405" width="0.0129%" height="15" fill="rgb(242,44,2)" fg:x="12301" fg:w="4"/><text x="39.8884%" y="415.50"></text></g><g><title>alloc_skb_with_frags (39 samples, 0.13%)</title><rect x="39.5611%" y="437" width="0.1257%" height="15" fill="rgb(216,177,13)" fg:x="12277" fg:w="39"/><text x="39.8111%" y="447.50"></text></g><g><title>__alloc_skb (36 samples, 0.12%)</title><rect x="39.5708%" y="421" width="0.1160%" height="15" fill="rgb(216,106,43)" fg:x="12280" fg:w="36"/><text x="39.8208%" y="431.50"></text></g><g><title>kmem_cache_alloc (11 samples, 0.04%)</title><rect x="39.6513%" y="405" width="0.0354%" height="15" fill="rgb(216,183,2)" fg:x="12305" fg:w="11"/><text x="39.9013%" y="415.50"></text></g><g><title>sock_alloc_send_pskb (52 samples, 0.17%)</title><rect x="39.5450%" y="453" width="0.1676%" height="15" fill="rgb(249,75,3)" fg:x="12272" fg:w="52"/><text x="39.7950%" y="463.50"></text></g><g><title>skb_set_owner_w (8 samples, 0.03%)</title><rect x="39.6868%" y="437" width="0.0258%" height="15" fill="rgb(219,67,39)" fg:x="12316" fg:w="8"/><text x="39.9368%" y="447.50"></text></g><g><title>do_iter_readv_writev (1,576 samples, 5.08%)</title><rect x="34.6438%" y="501" width="5.0785%" height="15" fill="rgb(253,228,2)" fg:x="10751" fg:w="1576"/><text x="34.8938%" y="511.50">do_ite..</text></g><g><title>tun_chr_write_iter (1,565 samples, 5.04%)</title><rect x="34.6792%" y="485" width="5.0430%" height="15" fill="rgb(235,138,27)" fg:x="10762" fg:w="1565"/><text x="34.9292%" y="495.50">tun_ch..</text></g><g><title>tun_get_user (1,544 samples, 4.98%)</title><rect x="34.7469%" y="469" width="4.9753%" height="15" fill="rgb(236,97,51)" fg:x="10783" fg:w="1544"/><text x="34.9969%" y="479.50">tun_ge..</text></g><g><title>do_iter_write (1,588 samples, 5.12%)</title><rect x="34.6115%" y="517" width="5.1171%" height="15" fill="rgb(240,80,30)" fg:x="10741" fg:w="1588"/><text x="34.8615%" y="527.50">do_ite..</text></g><g><title>__check_object_size (5 samples, 0.02%)</title><rect x="39.7673%" y="469" width="0.0161%" height="15" fill="rgb(230,178,19)" fg:x="12341" fg:w="5"/><text x="40.0173%" y="479.50"></text></g><g><title>copy_user_enhanced_fast_string (5 samples, 0.02%)</title><rect x="39.7963%" y="453" width="0.0161%" height="15" fill="rgb(210,190,27)" fg:x="12350" fg:w="5"/><text x="40.0463%" y="463.50"></text></g><g><title>import_iovec (29 samples, 0.09%)</title><rect x="39.7287%" y="517" width="0.0934%" height="15" fill="rgb(222,107,31)" fg:x="12329" fg:w="29"/><text x="39.9787%" y="527.50"></text></g><g><title>__import_iovec (27 samples, 0.09%)</title><rect x="39.7351%" y="501" width="0.0870%" height="15" fill="rgb(216,127,34)" fg:x="12331" fg:w="27"/><text x="39.9851%" y="511.50"></text></g><g><title>iovec_from_user.part.0 (20 samples, 0.06%)</title><rect x="39.7577%" y="485" width="0.0644%" height="15" fill="rgb(234,116,52)" fg:x="12338" fg:w="20"/><text x="40.0077%" y="495.50"></text></g><g><title>_copy_from_user (12 samples, 0.04%)</title><rect x="39.7835%" y="469" width="0.0387%" height="15" fill="rgb(222,124,15)" fg:x="12346" fg:w="12"/><text x="40.0335%" y="479.50"></text></g><g><title>do_writev (1,640 samples, 5.28%)</title><rect x="34.5407%" y="549" width="5.2847%" height="15" fill="rgb(231,179,28)" fg:x="10719" fg:w="1640"/><text x="34.7907%" y="559.50">do_wri..</text></g><g><title>vfs_writev (1,619 samples, 5.22%)</title><rect x="34.6083%" y="533" width="5.2170%" height="15" fill="rgb(226,93,45)" fg:x="10740" fg:w="1619"/><text x="34.8583%" y="543.50">vfs_wr..</text></g><g><title>entry_SYSCALL_64_after_hwframe (1,650 samples, 5.32%)</title><rect x="34.5149%" y="581" width="5.3169%" height="15" fill="rgb(215,8,51)" fg:x="10711" fg:w="1650"/><text x="34.7649%" y="591.50">entry_S..</text></g><g><title>do_syscall_64 (1,646 samples, 5.30%)</title><rect x="34.5278%" y="565" width="5.3040%" height="15" fill="rgb(223,106,5)" fg:x="10715" fg:w="1646"/><text x="34.7778%" y="575.50">do_sys..</text></g><g><title>tokio::io::async_fd::AsyncFdReadyMutGuard&lt;Inner&gt;::try_io (1,694 samples, 5.46%)</title><rect x="34.3860%" y="613" width="5.4587%" height="15" fill="rgb(250,191,5)" fg:x="10671" fg:w="1694"/><text x="34.6360%" y="623.50">tokio::..</text></g><g><title>writev (1,685 samples, 5.43%)</title><rect x="34.4150%" y="597" width="5.4297%" height="15" fill="rgb(242,132,44)" fg:x="10680" fg:w="1685"/><text x="34.6650%" y="607.50">writev</text></g><g><title>syscall_return_via_sysret (4 samples, 0.01%)</title><rect x="39.8318%" y="581" width="0.0129%" height="15" fill="rgb(251,152,29)" fg:x="12361" fg:w="4"/><text x="40.0818%" y="591.50"></text></g><g><title>&lt;tun::async::device::AsyncDevice as tokio::io::async_write::AsyncWrite&gt;::poll_write_vectored (1,715 samples, 5.53%)</title><rect x="34.3602%" y="629" width="5.5264%" height="15" fill="rgb(218,179,5)" fg:x="10663" fg:w="1715"/><text x="34.6102%" y="639.50">&lt;tun::a..</text></g><g><title>tokio::runtime::io::registration::Registration::poll_write_ready (13 samples, 0.04%)</title><rect x="39.8447%" y="613" width="0.0419%" height="15" fill="rgb(227,67,19)" fg:x="12365" fg:w="13"/><text x="40.0947%" y="623.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (9 samples, 0.03%)</title><rect x="39.8576%" y="597" width="0.0290%" height="15" fill="rgb(233,119,31)" fg:x="12369" fg:w="9"/><text x="40.1076%" y="607.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness (6 samples, 0.02%)</title><rect x="39.8672%" y="581" width="0.0193%" height="15" fill="rgb(241,120,22)" fg:x="12372" fg:w="6"/><text x="40.1172%" y="591.50"></text></g><g><title>tokio_util::util::poll_buf::poll_write_buf (1,758 samples, 5.66%)</title><rect x="34.2764%" y="645" width="5.6649%" height="15" fill="rgb(224,102,30)" fg:x="10637" fg:w="1758"/><text x="34.5264%" y="655.50">tokio_u..</text></g><g><title>bytes::bytes_mut::BytesMut::advance_unchecked (17 samples, 0.05%)</title><rect x="39.8866%" y="629" width="0.0548%" height="15" fill="rgb(210,164,37)" fg:x="12378" fg:w="17"/><text x="40.1366%" y="639.50"></text></g><g><title>tracing::__macro_support::__is_enabled (6 samples, 0.02%)</title><rect x="39.9414%" y="645" width="0.0193%" height="15" fill="rgb(226,191,16)" fg:x="12395" fg:w="6"/><text x="40.1914%" y="655.50"></text></g><g><title>[libc.so.6] (28 samples, 0.09%)</title><rect x="40.4988%" y="533" width="0.0902%" height="15" fill="rgb(214,40,45)" fg:x="12568" fg:w="28"/><text x="40.7488%" y="543.50"></text></g><g><title>entry_SYSCALL_64 (17 samples, 0.05%)</title><rect x="40.5891%" y="533" width="0.0548%" height="15" fill="rgb(244,29,26)" fg:x="12596" fg:w="17"/><text x="40.8391%" y="543.50"></text></g><g><title>__fget_light (31 samples, 0.10%)</title><rect x="40.7341%" y="469" width="0.0999%" height="15" fill="rgb(216,16,5)" fg:x="12641" fg:w="31"/><text x="40.9841%" y="479.50"></text></g><g><title>__fget_files (20 samples, 0.06%)</title><rect x="40.7695%" y="453" width="0.0644%" height="15" fill="rgb(249,76,35)" fg:x="12652" fg:w="20"/><text x="41.0195%" y="463.50"></text></g><g><title>__fdget_pos (39 samples, 0.13%)</title><rect x="40.7276%" y="485" width="0.1257%" height="15" fill="rgb(207,11,44)" fg:x="12639" fg:w="39"/><text x="40.9776%" y="495.50"></text></g><g><title>mutex_lock (6 samples, 0.02%)</title><rect x="40.8340%" y="469" width="0.0193%" height="15" fill="rgb(228,190,49)" fg:x="12672" fg:w="6"/><text x="41.0840%" y="479.50"></text></g><g><title>fput_many (10 samples, 0.03%)</title><rect x="40.8565%" y="485" width="0.0322%" height="15" fill="rgb(214,173,12)" fg:x="12679" fg:w="10"/><text x="41.1065%" y="495.50"></text></g><g><title>mutex_unlock (5 samples, 0.02%)</title><rect x="40.8887%" y="485" width="0.0161%" height="15" fill="rgb(218,26,35)" fg:x="12689" fg:w="5"/><text x="41.1387%" y="495.50"></text></g><g><title>__fsnotify_parent (5 samples, 0.02%)</title><rect x="40.9757%" y="469" width="0.0161%" height="15" fill="rgb(220,200,19)" fg:x="12716" fg:w="5"/><text x="41.2257%" y="479.50"></text></g><g><title>down_write (17 samples, 0.05%)</title><rect x="41.0208%" y="437" width="0.0548%" height="15" fill="rgb(239,95,49)" fg:x="12730" fg:w="17"/><text x="41.2708%" y="447.50"></text></g><g><title>ext4_generic_write_checks (19 samples, 0.06%)</title><rect x="41.0756%" y="437" width="0.0612%" height="15" fill="rgb(235,85,53)" fg:x="12747" fg:w="19"/><text x="41.3256%" y="447.50"></text></g><g><title>generic_write_checks (14 samples, 0.05%)</title><rect x="41.0917%" y="421" width="0.0451%" height="15" fill="rgb(233,133,31)" fg:x="12752" fg:w="14"/><text x="41.3417%" y="431.50"></text></g><g><title>generic_write_check_limits (9 samples, 0.03%)</title><rect x="41.1079%" y="405" width="0.0290%" height="15" fill="rgb(218,25,20)" fg:x="12757" fg:w="9"/><text x="41.3579%" y="415.50"></text></g><g><title>file_modified (5 samples, 0.02%)</title><rect x="41.1369%" y="437" width="0.0161%" height="15" fill="rgb(252,210,38)" fg:x="12766" fg:w="5"/><text x="41.3869%" y="447.50"></text></g><g><title>file_remove_privs (4 samples, 0.01%)</title><rect x="41.1401%" y="421" width="0.0129%" height="15" fill="rgb(242,134,21)" fg:x="12767" fg:w="4"/><text x="41.3901%" y="431.50"></text></g><g><title>current_time (8 samples, 0.03%)</title><rect x="41.1659%" y="421" width="0.0258%" height="15" fill="rgb(213,28,48)" fg:x="12775" fg:w="8"/><text x="41.4159%" y="431.50"></text></g><g><title>ktime_get_coarse_real_ts64 (5 samples, 0.02%)</title><rect x="41.1755%" y="405" width="0.0161%" height="15" fill="rgb(250,196,2)" fg:x="12778" fg:w="5"/><text x="41.4255%" y="415.50"></text></g><g><title>file_update_time (15 samples, 0.05%)</title><rect x="41.1530%" y="437" width="0.0483%" height="15" fill="rgb(227,5,17)" fg:x="12771" fg:w="15"/><text x="41.4030%" y="447.50"></text></g><g><title>__cond_resched (6 samples, 0.02%)</title><rect x="41.2529%" y="421" width="0.0193%" height="15" fill="rgb(221,226,24)" fg:x="12802" fg:w="6"/><text x="41.5029%" y="431.50"></text></g><g><title>rcu_all_qs (4 samples, 0.01%)</title><rect x="41.2593%" y="405" width="0.0129%" height="15" fill="rgb(211,5,48)" fg:x="12804" fg:w="4"/><text x="41.5093%" y="415.50"></text></g><g><title>balance_dirty_pages_ratelimited (10 samples, 0.03%)</title><rect x="41.2722%" y="421" width="0.0322%" height="15" fill="rgb(219,150,6)" fg:x="12808" fg:w="10"/><text x="41.5222%" y="431.50"></text></g><g><title>copy_user_enhanced_fast_string (26 samples, 0.08%)</title><rect x="41.3721%" y="405" width="0.0838%" height="15" fill="rgb(251,46,16)" fg:x="12839" fg:w="26"/><text x="41.6221%" y="415.50"></text></g><g><title>copy_page_from_iter_atomic (49 samples, 0.16%)</title><rect x="41.3044%" y="421" width="0.1579%" height="15" fill="rgb(220,204,40)" fg:x="12818" fg:w="49"/><text x="41.5544%" y="431.50"></text></g><g><title>_raw_spin_lock (4 samples, 0.01%)</title><rect x="41.5977%" y="357" width="0.0129%" height="15" fill="rgb(211,85,2)" fg:x="12909" fg:w="4"/><text x="41.8477%" y="367.50"></text></g><g><title>create_page_buffers (12 samples, 0.04%)</title><rect x="41.5848%" y="389" width="0.0387%" height="15" fill="rgb(229,17,7)" fg:x="12905" fg:w="12"/><text x="41.8348%" y="399.50"></text></g><g><title>create_empty_buffers (9 samples, 0.03%)</title><rect x="41.5944%" y="373" width="0.0290%" height="15" fill="rgb(239,72,28)" fg:x="12908" fg:w="9"/><text x="41.8444%" y="383.50"></text></g><g><title>alloc_page_buffers (4 samples, 0.01%)</title><rect x="41.6105%" y="357" width="0.0129%" height="15" fill="rgb(230,47,54)" fg:x="12913" fg:w="4"/><text x="41.8605%" y="367.50"></text></g><g><title>alloc_buffer_head (4 samples, 0.01%)</title><rect x="41.6105%" y="341" width="0.0129%" height="15" fill="rgb(214,50,8)" fg:x="12913" fg:w="4"/><text x="41.8605%" y="351.50"></text></g><g><title>kmem_cache_alloc (4 samples, 0.01%)</title><rect x="41.6105%" y="325" width="0.0129%" height="15" fill="rgb(216,198,43)" fg:x="12913" fg:w="4"/><text x="41.8605%" y="335.50"></text></g><g><title>__dquot_alloc_space (5 samples, 0.02%)</title><rect x="41.6363%" y="357" width="0.0161%" height="15" fill="rgb(234,20,35)" fg:x="12921" fg:w="5"/><text x="41.8863%" y="367.50"></text></g><g><title>ext4_da_reserve_space (9 samples, 0.03%)</title><rect x="41.6363%" y="373" width="0.0290%" height="15" fill="rgb(254,45,19)" fg:x="12921" fg:w="9"/><text x="41.8863%" y="383.50"></text></g><g><title>ext4_da_get_block_prep (16 samples, 0.05%)</title><rect x="41.6234%" y="389" width="0.0516%" height="15" fill="rgb(219,14,44)" fg:x="12917" fg:w="16"/><text x="41.8734%" y="399.50"></text></g><g><title>__block_write_begin_int (51 samples, 0.16%)</title><rect x="41.5364%" y="405" width="0.1643%" height="15" fill="rgb(217,220,26)" fg:x="12890" fg:w="51"/><text x="41.7864%" y="415.50"></text></g><g><title>zero_user_segments (8 samples, 0.03%)</title><rect x="41.6750%" y="389" width="0.0258%" height="15" fill="rgb(213,158,28)" fg:x="12933" fg:w="8"/><text x="41.9250%" y="399.50"></text></g><g><title>memset_erms (8 samples, 0.03%)</title><rect x="41.6750%" y="373" width="0.0258%" height="15" fill="rgb(252,51,52)" fg:x="12933" fg:w="8"/><text x="41.9250%" y="383.50"></text></g><g><title>ext4_nonda_switch (10 samples, 0.03%)</title><rect x="41.7008%" y="405" width="0.0322%" height="15" fill="rgb(246,89,16)" fg:x="12941" fg:w="10"/><text x="41.9508%" y="415.50"></text></g><g><title>get_page_from_freelist (7 samples, 0.02%)</title><rect x="41.8264%" y="357" width="0.0226%" height="15" fill="rgb(216,158,49)" fg:x="12980" fg:w="7"/><text x="42.0764%" y="367.50"></text></g><g><title>__alloc_pages (9 samples, 0.03%)</title><rect x="41.8264%" y="373" width="0.0290%" height="15" fill="rgb(236,107,19)" fg:x="12980" fg:w="9"/><text x="42.0764%" y="383.50"></text></g><g><title>__mem_cgroup_charge (5 samples, 0.02%)</title><rect x="41.8619%" y="341" width="0.0161%" height="15" fill="rgb(228,185,30)" fg:x="12991" fg:w="5"/><text x="42.1119%" y="351.50"></text></g><g><title>__mod_lruvec_page_state (6 samples, 0.02%)</title><rect x="41.8780%" y="341" width="0.0193%" height="15" fill="rgb(246,134,8)" fg:x="12996" fg:w="6"/><text x="42.1280%" y="351.50"></text></g><g><title>__add_to_page_cache_locked (22 samples, 0.07%)</title><rect x="41.8554%" y="357" width="0.0709%" height="15" fill="rgb(214,143,50)" fg:x="12989" fg:w="22"/><text x="42.1054%" y="367.50"></text></g><g><title>xas_store (5 samples, 0.02%)</title><rect x="41.9102%" y="341" width="0.0161%" height="15" fill="rgb(228,75,8)" fg:x="13006" fg:w="5"/><text x="42.1602%" y="351.50"></text></g><g><title>add_to_page_cache_lru (27 samples, 0.09%)</title><rect x="41.8554%" y="373" width="0.0870%" height="15" fill="rgb(207,175,4)" fg:x="12989" fg:w="27"/><text x="42.1054%" y="383.50"></text></g><g><title>lru_cache_add (5 samples, 0.02%)</title><rect x="41.9263%" y="357" width="0.0161%" height="15" fill="rgb(205,108,24)" fg:x="13011" fg:w="5"/><text x="42.1763%" y="367.50"></text></g><g><title>__pagevec_lru_add (4 samples, 0.01%)</title><rect x="41.9296%" y="341" width="0.0129%" height="15" fill="rgb(244,120,49)" fg:x="13012" fg:w="4"/><text x="42.1796%" y="351.50"></text></g><g><title>pagecache_get_page (100 samples, 0.32%)</title><rect x="41.7362%" y="389" width="0.3222%" height="15" fill="rgb(223,47,38)" fg:x="12952" fg:w="100"/><text x="41.9862%" y="399.50"></text></g><g><title>xas_load (36 samples, 0.12%)</title><rect x="41.9424%" y="373" width="0.1160%" height="15" fill="rgb(229,179,11)" fg:x="13016" fg:w="36"/><text x="42.1924%" y="383.50"></text></g><g><title>xas_start (8 samples, 0.03%)</title><rect x="42.0327%" y="357" width="0.0258%" height="15" fill="rgb(231,122,1)" fg:x="13044" fg:w="8"/><text x="42.2827%" y="367.50"></text></g><g><title>ext4_da_write_begin (186 samples, 0.60%)</title><rect x="41.4623%" y="421" width="0.5994%" height="15" fill="rgb(245,119,9)" fg:x="12867" fg:w="186"/><text x="41.7123%" y="431.50"></text></g><g><title>grab_cache_page_write_begin (102 samples, 0.33%)</title><rect x="41.7330%" y="405" width="0.3287%" height="15" fill="rgb(241,163,25)" fg:x="12951" fg:w="102"/><text x="41.9830%" y="415.50"></text></g><g><title>ext4_da_write_end (14 samples, 0.05%)</title><rect x="42.0617%" y="421" width="0.0451%" height="15" fill="rgb(217,214,3)" fg:x="13053" fg:w="14"/><text x="42.3117%" y="431.50"></text></g><g><title>fault_in_iov_iter_readable (33 samples, 0.11%)</title><rect x="42.1068%" y="421" width="0.1063%" height="15" fill="rgb(240,86,28)" fg:x="13067" fg:w="33"/><text x="42.3568%" y="431.50"></text></g><g><title>fault_in_readable (31 samples, 0.10%)</title><rect x="42.1132%" y="405" width="0.0999%" height="15" fill="rgb(215,47,9)" fg:x="13069" fg:w="31"/><text x="42.3632%" y="415.50"></text></g><g><title>__get_user_nocheck_1 (21 samples, 0.07%)</title><rect x="42.1455%" y="389" width="0.0677%" height="15" fill="rgb(252,25,45)" fg:x="13079" fg:w="21"/><text x="42.3955%" y="399.50"></text></g><g><title>__set_page_dirty (5 samples, 0.02%)</title><rect x="42.3839%" y="373" width="0.0161%" height="15" fill="rgb(251,164,9)" fg:x="13153" fg:w="5"/><text x="42.6339%" y="383.50"></text></g><g><title>__block_commit_write.constprop.0.isra.0 (41 samples, 0.13%)</title><rect x="42.2744%" y="405" width="0.1321%" height="15" fill="rgb(233,194,0)" fg:x="13119" fg:w="41"/><text x="42.5244%" y="415.50"></text></g><g><title>mark_buffer_dirty (15 samples, 0.05%)</title><rect x="42.3581%" y="389" width="0.0483%" height="15" fill="rgb(249,111,24)" fg:x="13145" fg:w="15"/><text x="42.6081%" y="399.50"></text></g><g><title>kmem_cache_free.part.0 (8 samples, 0.03%)</title><rect x="42.4774%" y="357" width="0.0258%" height="15" fill="rgb(250,223,3)" fg:x="13182" fg:w="8"/><text x="42.7274%" y="367.50"></text></g><g><title>_raw_spin_lock_irqsave (11 samples, 0.04%)</title><rect x="42.5934%" y="325" width="0.0354%" height="15" fill="rgb(236,178,37)" fg:x="13218" fg:w="11"/><text x="42.8434%" y="335.50"></text></g><g><title>__ext4_journal_stop (67 samples, 0.22%)</title><rect x="42.4387%" y="389" width="0.2159%" height="15" fill="rgb(241,158,50)" fg:x="13170" fg:w="67"/><text x="42.6887%" y="399.50"></text></g><g><title>jbd2_journal_stop (65 samples, 0.21%)</title><rect x="42.4451%" y="373" width="0.2095%" height="15" fill="rgb(213,121,41)" fg:x="13172" fg:w="65"/><text x="42.6951%" y="383.50"></text></g><g><title>stop_this_handle (47 samples, 0.15%)</title><rect x="42.5031%" y="357" width="0.1515%" height="15" fill="rgb(240,92,3)" fg:x="13190" fg:w="47"/><text x="42.7531%" y="367.50"></text></g><g><title>__wake_up_common_lock (23 samples, 0.07%)</title><rect x="42.5805%" y="341" width="0.0741%" height="15" fill="rgb(205,123,3)" fg:x="13214" fg:w="23"/><text x="42.8305%" y="351.50"></text></g><g><title>_raw_spin_unlock_irqrestore (8 samples, 0.03%)</title><rect x="42.6288%" y="325" width="0.0258%" height="15" fill="rgb(205,97,47)" fg:x="13229" fg:w="8"/><text x="42.8788%" y="335.50"></text></g><g><title>__raw_callee_save___pv_queued_spin_unlock (8 samples, 0.03%)</title><rect x="42.6288%" y="309" width="0.0258%" height="15" fill="rgb(247,152,14)" fg:x="13229" fg:w="8"/><text x="42.8788%" y="319.50"></text></g><g><title>memset_erms (9 samples, 0.03%)</title><rect x="42.8544%" y="325" width="0.0290%" height="15" fill="rgb(248,195,53)" fg:x="13299" fg:w="9"/><text x="43.1044%" y="335.50"></text></g><g><title>kmem_cache_alloc (33 samples, 0.11%)</title><rect x="42.7803%" y="341" width="0.1063%" height="15" fill="rgb(226,201,16)" fg:x="13276" fg:w="33"/><text x="43.0303%" y="351.50"></text></g><g><title>_raw_read_lock (12 samples, 0.04%)</title><rect x="42.9897%" y="325" width="0.0387%" height="15" fill="rgb(205,98,0)" fg:x="13341" fg:w="12"/><text x="43.2397%" y="335.50"></text></g><g><title>__ext4_journal_start_sb (126 samples, 0.41%)</title><rect x="42.6707%" y="373" width="0.4060%" height="15" fill="rgb(214,191,48)" fg:x="13242" fg:w="126"/><text x="42.9207%" y="383.50"></text></g><g><title>jbd2__journal_start (120 samples, 0.39%)</title><rect x="42.6900%" y="357" width="0.3867%" height="15" fill="rgb(237,112,39)" fg:x="13248" fg:w="120"/><text x="42.9400%" y="367.50"></text></g><g><title>start_this_handle (59 samples, 0.19%)</title><rect x="42.8866%" y="341" width="0.1901%" height="15" fill="rgb(247,203,27)" fg:x="13309" fg:w="59"/><text x="43.1366%" y="351.50"></text></g><g><title>add_transaction_credits (15 samples, 0.05%)</title><rect x="43.0284%" y="325" width="0.0483%" height="15" fill="rgb(235,124,28)" fg:x="13353" fg:w="15"/><text x="43.2784%" y="335.50"></text></g><g><title>__brelse (8 samples, 0.03%)</title><rect x="43.3120%" y="341" width="0.0258%" height="15" fill="rgb(208,207,46)" fg:x="13441" fg:w="8"/><text x="43.5620%" y="351.50"></text></g><g><title>__ext4_handle_dirty_metadata (6 samples, 0.02%)</title><rect x="43.3377%" y="341" width="0.0193%" height="15" fill="rgb(234,176,4)" fg:x="13449" fg:w="6"/><text x="43.5877%" y="351.50"></text></g><g><title>__raw_callee_save___pv_queued_spin_unlock (6 samples, 0.02%)</title><rect x="43.3571%" y="341" width="0.0193%" height="15" fill="rgb(230,133,28)" fg:x="13455" fg:w="6"/><text x="43.6071%" y="351.50"></text></g><g><title>_raw_spin_lock (11 samples, 0.04%)</title><rect x="43.3764%" y="341" width="0.0354%" height="15" fill="rgb(211,137,40)" fg:x="13461" fg:w="11"/><text x="43.6264%" y="351.50"></text></g><g><title>ext4_fc_track_template (11 samples, 0.04%)</title><rect x="43.4247%" y="325" width="0.0354%" height="15" fill="rgb(254,35,13)" fg:x="13476" fg:w="11"/><text x="43.6747%" y="335.50"></text></g><g><title>ext4_fc_track_inode (16 samples, 0.05%)</title><rect x="43.4119%" y="341" width="0.0516%" height="15" fill="rgb(225,49,51)" fg:x="13472" fg:w="16"/><text x="43.6619%" y="351.50"></text></g><g><title>chksum_update (249 samples, 0.80%)</title><rect x="43.5375%" y="309" width="0.8024%" height="15" fill="rgb(251,10,15)" fg:x="13511" fg:w="249"/><text x="43.7875%" y="319.50"></text></g><g><title>crc32_body (229 samples, 0.74%)</title><rect x="43.6020%" y="293" width="0.7379%" height="15" fill="rgb(228,207,15)" fg:x="13531" fg:w="229"/><text x="43.8520%" y="303.50"></text></g><g><title>ext4_inode_csum_set (279 samples, 0.90%)</title><rect x="43.4634%" y="341" width="0.8990%" height="15" fill="rgb(241,99,19)" fg:x="13488" fg:w="279"/><text x="43.7134%" y="351.50"></text></g><g><title>ext4_inode_csum (267 samples, 0.86%)</title><rect x="43.5021%" y="325" width="0.8604%" height="15" fill="rgb(207,104,49)" fg:x="13500" fg:w="267"/><text x="43.7521%" y="335.50"></text></g><g><title>crypto_shash_update (7 samples, 0.02%)</title><rect x="44.3399%" y="309" width="0.0226%" height="15" fill="rgb(234,99,18)" fg:x="13760" fg:w="7"/><text x="44.5899%" y="319.50"></text></g><g><title>ext4_mark_iloc_dirty (402 samples, 1.30%)</title><rect x="43.0993%" y="357" width="1.2954%" height="15" fill="rgb(213,191,49)" fg:x="13375" fg:w="402"/><text x="43.3493%" y="367.50"></text></g><g><title>map_id_up (9 samples, 0.03%)</title><rect x="44.3657%" y="341" width="0.0290%" height="15" fill="rgb(210,226,19)" fg:x="13768" fg:w="9"/><text x="44.6157%" y="351.50"></text></g><g><title>__ext4_journal_get_write_access (24 samples, 0.08%)</title><rect x="44.4140%" y="341" width="0.0773%" height="15" fill="rgb(229,97,18)" fg:x="13783" fg:w="24"/><text x="44.6640%" y="351.50"></text></g><g><title>jbd2_journal_get_write_access (17 samples, 0.05%)</title><rect x="44.4366%" y="325" width="0.0548%" height="15" fill="rgb(211,167,15)" fg:x="13790" fg:w="17"/><text x="44.6866%" y="335.50"></text></g><g><title>jbd2_write_access_granted.part.0 (13 samples, 0.04%)</title><rect x="44.4495%" y="309" width="0.0419%" height="15" fill="rgb(210,169,34)" fg:x="13794" fg:w="13"/><text x="44.6995%" y="319.50"></text></g><g><title>__getblk_gfp (26 samples, 0.08%)</title><rect x="44.5848%" y="309" width="0.0838%" height="15" fill="rgb(241,121,31)" fg:x="13836" fg:w="26"/><text x="44.8348%" y="319.50"></text></g><g><title>__find_get_block (25 samples, 0.08%)</title><rect x="44.5880%" y="293" width="0.0806%" height="15" fill="rgb(232,40,11)" fg:x="13837" fg:w="25"/><text x="44.8380%" y="303.50"></text></g><g><title>ext4_get_group_desc (9 samples, 0.03%)</title><rect x="44.6686%" y="309" width="0.0290%" height="15" fill="rgb(205,86,26)" fg:x="13862" fg:w="9"/><text x="44.9186%" y="319.50"></text></g><g><title>__mark_inode_dirty (713 samples, 2.30%)</title><rect x="42.4065%" y="405" width="2.2976%" height="15" fill="rgb(231,126,28)" fg:x="13160" fg:w="713"/><text x="42.6565%" y="415.50">_..</text></g><g><title>ext4_dirty_inode (636 samples, 2.05%)</title><rect x="42.6546%" y="389" width="2.0494%" height="15" fill="rgb(219,221,18)" fg:x="13237" fg:w="636"/><text x="42.9046%" y="399.50">e..</text></g><g><title>__ext4_mark_inode_dirty (505 samples, 1.63%)</title><rect x="43.0767%" y="373" width="1.6273%" height="15" fill="rgb(211,40,0)" fg:x="13368" fg:w="505"/><text x="43.3267%" y="383.50"></text></g><g><title>ext4_reserve_inode_write (96 samples, 0.31%)</title><rect x="44.3947%" y="357" width="0.3093%" height="15" fill="rgb(239,85,43)" fg:x="13777" fg:w="96"/><text x="44.6447%" y="367.50"></text></g><g><title>ext4_get_inode_loc (66 samples, 0.21%)</title><rect x="44.4913%" y="341" width="0.2127%" height="15" fill="rgb(231,55,21)" fg:x="13807" fg:w="66"/><text x="44.7413%" y="351.50"></text></g><g><title>__ext4_get_inode_loc (63 samples, 0.20%)</title><rect x="44.5010%" y="325" width="0.2030%" height="15" fill="rgb(225,184,43)" fg:x="13810" fg:w="63"/><text x="44.7510%" y="335.50"></text></g><g><title>generic_perform_write (1,097 samples, 3.53%)</title><rect x="41.2013%" y="437" width="3.5349%" height="15" fill="rgb(251,158,41)" fg:x="12786" fg:w="1097"/><text x="41.4513%" y="447.50">gen..</text></g><g><title>generic_write_end (783 samples, 2.52%)</title><rect x="42.2131%" y="421" width="2.5231%" height="15" fill="rgb(234,159,37)" fg:x="13100" fg:w="783"/><text x="42.4631%" y="431.50">ge..</text></g><g><title>unlock_page (10 samples, 0.03%)</title><rect x="44.7040%" y="405" width="0.0322%" height="15" fill="rgb(216,204,22)" fg:x="13873" fg:w="10"/><text x="44.9540%" y="415.50"></text></g><g><title>ext4_buffered_write_iter (1,166 samples, 3.76%)</title><rect x="41.0047%" y="453" width="3.7573%" height="15" fill="rgb(214,17,3)" fg:x="12725" fg:w="1166"/><text x="41.2547%" y="463.50">ext4..</text></g><g><title>up_write (8 samples, 0.03%)</title><rect x="44.7362%" y="437" width="0.0258%" height="15" fill="rgb(212,111,17)" fg:x="13883" fg:w="8"/><text x="44.9862%" y="447.50"></text></g><g><title>ext4_file_write_iter (12 samples, 0.04%)</title><rect x="44.7620%" y="453" width="0.0387%" height="15" fill="rgb(221,157,24)" fg:x="13891" fg:w="12"/><text x="45.0120%" y="463.50"></text></g><g><title>new_sync_write (1,183 samples, 3.81%)</title><rect x="40.9918%" y="469" width="3.8121%" height="15" fill="rgb(252,16,13)" fg:x="12721" fg:w="1183"/><text x="41.2418%" y="479.50">new_..</text></g><g><title>rw_verify_area (4 samples, 0.01%)</title><rect x="44.8039%" y="469" width="0.0129%" height="15" fill="rgb(221,62,2)" fg:x="13904" fg:w="4"/><text x="45.0539%" y="479.50"></text></g><g><title>ksys_write (1,285 samples, 4.14%)</title><rect x="40.6922%" y="501" width="4.1408%" height="15" fill="rgb(247,87,22)" fg:x="12628" fg:w="1285"/><text x="40.9422%" y="511.50">ksys_..</text></g><g><title>vfs_write (1,219 samples, 3.93%)</title><rect x="40.9048%" y="485" width="3.9281%" height="15" fill="rgb(215,73,9)" fg:x="12694" fg:w="1219"/><text x="41.1548%" y="495.50">vfs_..</text></g><g><title>security_file_permission (5 samples, 0.02%)</title><rect x="44.8168%" y="469" width="0.0161%" height="15" fill="rgb(207,175,33)" fg:x="13908" fg:w="5"/><text x="45.0668%" y="479.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1,310 samples, 4.22%)</title><rect x="40.6438%" y="533" width="4.2213%" height="15" fill="rgb(243,129,54)" fg:x="12613" fg:w="1310"/><text x="40.8938%" y="543.50">entry..</text></g><g><title>do_syscall_64 (1,303 samples, 4.20%)</title><rect x="40.6664%" y="517" width="4.1988%" height="15" fill="rgb(227,119,45)" fg:x="12620" fg:w="1303"/><text x="40.9164%" y="527.50">do_sy..</text></g><g><title>syscall_exit_to_user_mode (7 samples, 0.02%)</title><rect x="44.8426%" y="501" width="0.0226%" height="15" fill="rgb(205,109,36)" fg:x="13916" fg:w="7"/><text x="45.0926%" y="511.50"></text></g><g><title>exit_to_user_mode_prepare (4 samples, 0.01%)</title><rect x="44.8523%" y="485" width="0.0129%" height="15" fill="rgb(205,6,39)" fg:x="13919" fg:w="4"/><text x="45.1023%" y="495.50"></text></g><g><title>&lt;std::io::stdio::StdoutRaw as std::io::Write&gt;::write_all (1,414 samples, 4.56%)</title><rect x="40.3377%" y="565" width="4.5564%" height="15" fill="rgb(221,32,16)" fg:x="12518" fg:w="1414"/><text x="40.5877%" y="575.50">&lt;std:..</text></g><g><title>__write (1,386 samples, 4.47%)</title><rect x="40.4279%" y="549" width="4.4662%" height="15" fill="rgb(228,144,50)" fg:x="12546" fg:w="1386"/><text x="40.6779%" y="559.50">__wri..</text></g><g><title>syscall_return_via_sysret (9 samples, 0.03%)</title><rect x="44.8651%" y="533" width="0.0290%" height="15" fill="rgb(229,201,53)" fg:x="13923" fg:w="9"/><text x="45.1151%" y="543.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (1,482 samples, 4.78%)</title><rect x="40.2733%" y="581" width="4.7756%" height="15" fill="rgb(249,153,27)" fg:x="12498" fg:w="1482"/><text x="40.5233%" y="591.50">&lt;std::..</text></g><g><title>[libc.so.6] (48 samples, 0.15%)</title><rect x="44.8941%" y="565" width="0.1547%" height="15" fill="rgb(227,106,25)" fg:x="13932" fg:w="48"/><text x="45.1441%" y="575.50"></text></g><g><title>futex_wait_queue_me (6 samples, 0.02%)</title><rect x="45.0714%" y="469" width="0.0193%" height="15" fill="rgb(230,65,29)" fg:x="13987" fg:w="6"/><text x="45.3214%" y="479.50"></text></g><g><title>schedule (6 samples, 0.02%)</title><rect x="45.0714%" y="453" width="0.0193%" height="15" fill="rgb(221,57,46)" fg:x="13987" fg:w="6"/><text x="45.3214%" y="463.50"></text></g><g><title>__schedule (6 samples, 0.02%)</title><rect x="45.0714%" y="437" width="0.0193%" height="15" fill="rgb(229,161,17)" fg:x="13987" fg:w="6"/><text x="45.3214%" y="447.50"></text></g><g><title>__x64_sys_futex (9 samples, 0.03%)</title><rect x="45.0682%" y="517" width="0.0290%" height="15" fill="rgb(222,213,11)" fg:x="13986" fg:w="9"/><text x="45.3182%" y="527.50"></text></g><g><title>do_futex (8 samples, 0.03%)</title><rect x="45.0714%" y="501" width="0.0258%" height="15" fill="rgb(235,35,13)" fg:x="13987" fg:w="8"/><text x="45.3214%" y="511.50"></text></g><g><title>futex_wait (8 samples, 0.03%)</title><rect x="45.0714%" y="485" width="0.0258%" height="15" fill="rgb(233,158,34)" fg:x="13987" fg:w="8"/><text x="45.3214%" y="495.50"></text></g><g><title>std::sys::pal::unix::locks::futex_mutex::Mutex::lock_contended (16 samples, 0.05%)</title><rect x="45.0488%" y="581" width="0.0516%" height="15" fill="rgb(215,151,48)" fg:x="13980" fg:w="16"/><text x="45.2988%" y="591.50"></text></g><g><title>syscall (11 samples, 0.04%)</title><rect x="45.0649%" y="565" width="0.0354%" height="15" fill="rgb(229,84,14)" fg:x="13985" fg:w="11"/><text x="45.3149%" y="575.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (11 samples, 0.04%)</title><rect x="45.0649%" y="549" width="0.0354%" height="15" fill="rgb(229,68,14)" fg:x="13985" fg:w="11"/><text x="45.3149%" y="559.50"></text></g><g><title>do_syscall_64 (11 samples, 0.04%)</title><rect x="45.0649%" y="533" width="0.0354%" height="15" fill="rgb(243,106,26)" fg:x="13985" fg:w="11"/><text x="45.3149%" y="543.50"></text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write_all (1,557 samples, 5.02%)</title><rect x="40.0960%" y="613" width="5.0172%" height="15" fill="rgb(206,45,38)" fg:x="12443" fg:w="1557"/><text x="40.3460%" y="623.50">&lt;std::..</text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_all (1,546 samples, 4.98%)</title><rect x="40.1315%" y="597" width="4.9818%" height="15" fill="rgb(226,6,15)" fg:x="12454" fg:w="1546"/><text x="40.3815%" y="607.50">&lt;&amp;std:..</text></g><g><title>syscall (4 samples, 0.01%)</title><rect x="45.1004%" y="581" width="0.0129%" height="15" fill="rgb(232,22,54)" fg:x="13996" fg:w="4"/><text x="45.3504%" y="591.50"></text></g><g><title>&lt;tracing_core::event::Event as tracing_log::NormalizeEvent&gt;::normalized_metadata (24 samples, 0.08%)</title><rect x="45.3066%" y="597" width="0.0773%" height="15" fill="rgb(229,222,32)" fg:x="14060" fg:w="24"/><text x="45.5566%" y="607.50"></text></g><g><title>tracing_log::level_to_cs (9 samples, 0.03%)</title><rect x="45.3549%" y="581" width="0.0290%" height="15" fill="rgb(228,62,29)" fg:x="14075" fg:w="9"/><text x="45.6049%" y="591.50"></text></g><g><title>&lt;tracing_core::event::Event as tracing_subscriber::field::RecordFields&gt;::record (5 samples, 0.02%)</title><rect x="45.3839%" y="597" width="0.0161%" height="15" fill="rgb(251,103,34)" fg:x="14084" fg:w="5"/><text x="45.6339%" y="607.50"></text></g><g><title>&lt;tracing_subscriber::fmt::time::datetime::DateTime as core::convert::From&lt;std::time::SystemTime&gt;&gt;::from (29 samples, 0.09%)</title><rect x="45.4194%" y="581" width="0.0934%" height="15" fill="rgb(233,12,30)" fg:x="14095" fg:w="29"/><text x="45.6694%" y="591.50"></text></g><g><title>std::time::SystemTime::duration_since (9 samples, 0.03%)</title><rect x="45.4838%" y="565" width="0.0290%" height="15" fill="rgb(238,52,0)" fg:x="14115" fg:w="9"/><text x="45.7338%" y="575.50"></text></g><g><title>core::fmt::Formatter::write_fmt (4 samples, 0.01%)</title><rect x="45.6353%" y="549" width="0.0129%" height="15" fill="rgb(223,98,5)" fg:x="14162" fg:w="4"/><text x="45.8853%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (35 samples, 0.11%)</title><rect x="45.7642%" y="533" width="0.1128%" height="15" fill="rgb(228,75,37)" fg:x="14202" fg:w="35"/><text x="46.0142%" y="543.50"></text></g><g><title>[libc.so.6] (18 samples, 0.06%)</title><rect x="45.8190%" y="517" width="0.0580%" height="15" fill="rgb(205,115,49)" fg:x="14219" fg:w="18"/><text x="46.0690%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (5 samples, 0.02%)</title><rect x="45.9318%" y="517" width="0.0161%" height="15" fill="rgb(250,154,43)" fg:x="14254" fg:w="5"/><text x="46.1818%" y="527.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for isize&gt;::fmt (38 samples, 0.12%)</title><rect x="45.8770%" y="533" width="0.1225%" height="15" fill="rgb(226,43,29)" fg:x="14237" fg:w="38"/><text x="46.1270%" y="543.50"></text></g><g><title>core::fmt::Formatter::pad_integral (16 samples, 0.05%)</title><rect x="45.9479%" y="517" width="0.0516%" height="15" fill="rgb(249,228,39)" fg:x="14259" fg:w="16"/><text x="46.1979%" y="527.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (7 samples, 0.02%)</title><rect x="45.9769%" y="501" width="0.0226%" height="15" fill="rgb(216,79,43)" fg:x="14268" fg:w="7"/><text x="46.2269%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4 samples, 0.01%)</title><rect x="46.0896%" y="517" width="0.0129%" height="15" fill="rgb(228,95,12)" fg:x="14303" fg:w="4"/><text x="46.3396%" y="527.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (43 samples, 0.14%)</title><rect x="45.9994%" y="533" width="0.1386%" height="15" fill="rgb(249,221,15)" fg:x="14275" fg:w="43"/><text x="46.2494%" y="543.50"></text></g><g><title>core::fmt::Formatter::pad_integral (11 samples, 0.04%)</title><rect x="46.1025%" y="517" width="0.0354%" height="15" fill="rgb(233,34,13)" fg:x="14307" fg:w="11"/><text x="46.3525%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (15 samples, 0.05%)</title><rect x="46.2089%" y="517" width="0.0483%" height="15" fill="rgb(214,103,39)" fg:x="14340" fg:w="15"/><text x="46.4589%" y="527.50"></text></g><g><title>[libc.so.6] (7 samples, 0.02%)</title><rect x="46.2347%" y="501" width="0.0226%" height="15" fill="rgb(251,126,39)" fg:x="14348" fg:w="7"/><text x="46.4847%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_char (12 samples, 0.04%)</title><rect x="46.3797%" y="501" width="0.0387%" height="15" fill="rgb(214,216,36)" fg:x="14393" fg:w="12"/><text x="46.6297%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (7 samples, 0.02%)</title><rect x="46.4183%" y="501" width="0.0226%" height="15" fill="rgb(220,221,8)" fg:x="14405" fg:w="7"/><text x="46.6683%" y="511.50"></text></g><g><title>core::fmt::write (300 samples, 0.97%)</title><rect x="45.5128%" y="581" width="0.9667%" height="15" fill="rgb(240,216,3)" fg:x="14124" fg:w="300"/><text x="45.7628%" y="591.50"></text></g><g><title>&lt;tracing_subscriber::fmt::time::datetime::DateTime as core::fmt::Display&gt;::fmt (292 samples, 0.94%)</title><rect x="45.5386%" y="565" width="0.9409%" height="15" fill="rgb(232,218,17)" fg:x="14132" fg:w="292"/><text x="45.7886%" y="575.50"></text></g><g><title>core::fmt::write (258 samples, 0.83%)</title><rect x="45.6482%" y="549" width="0.8314%" height="15" fill="rgb(229,163,45)" fg:x="14166" fg:w="258"/><text x="45.8982%" y="559.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u8&gt;::fmt (106 samples, 0.34%)</title><rect x="46.1380%" y="533" width="0.3416%" height="15" fill="rgb(231,110,42)" fg:x="14318" fg:w="106"/><text x="46.3880%" y="543.50"></text></g><g><title>core::fmt::Formatter::pad_integral (69 samples, 0.22%)</title><rect x="46.2572%" y="517" width="0.2223%" height="15" fill="rgb(208,170,48)" fg:x="14355" fg:w="69"/><text x="46.5072%" y="527.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (12 samples, 0.04%)</title><rect x="46.4409%" y="501" width="0.0387%" height="15" fill="rgb(239,116,25)" fg:x="14412" fg:w="12"/><text x="46.6909%" y="511.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (59 samples, 0.19%)</title><rect x="46.4796%" y="581" width="0.1901%" height="15" fill="rgb(219,200,50)" fg:x="14424" fg:w="59"/><text x="46.7296%" y="591.50"></text></g><g><title>clock_gettime (53 samples, 0.17%)</title><rect x="46.4989%" y="565" width="0.1708%" height="15" fill="rgb(245,200,0)" fg:x="14430" fg:w="53"/><text x="46.7489%" y="575.50"></text></g><g><title>__vdso_clock_gettime (35 samples, 0.11%)</title><rect x="46.5569%" y="549" width="0.1128%" height="15" fill="rgb(245,119,33)" fg:x="14448" fg:w="35"/><text x="46.8069%" y="559.50"></text></g><g><title>&lt;tracing_subscriber::fmt::time::SystemTime as tracing_subscriber::fmt::time::FormatTime&gt;::format_time (400 samples, 1.29%)</title><rect x="45.4001%" y="597" width="1.2890%" height="15" fill="rgb(231,125,12)" fg:x="14089" fg:w="400"/><text x="45.6501%" y="607.50"></text></g><g><title>std::time::SystemTime::now (6 samples, 0.02%)</title><rect x="46.6697%" y="581" width="0.0193%" height="15" fill="rgb(216,96,41)" fg:x="14483" fg:w="6"/><text x="46.9197%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (16 samples, 0.05%)</title><rect x="46.8695%" y="581" width="0.0516%" height="15" fill="rgb(248,43,45)" fg:x="14545" fg:w="16"/><text x="47.1195%" y="591.50"></text></g><g><title>[libc.so.6] (9 samples, 0.03%)</title><rect x="46.8920%" y="565" width="0.0290%" height="15" fill="rgb(217,222,7)" fg:x="14552" fg:w="9"/><text x="47.1420%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (5 samples, 0.02%)</title><rect x="46.9758%" y="549" width="0.0161%" height="15" fill="rgb(233,28,6)" fg:x="14578" fg:w="5"/><text x="47.2258%" y="559.50"></text></g><g><title>&lt;str as core::fmt::Display&gt;::fmt (4 samples, 0.01%)</title><rect x="46.9919%" y="549" width="0.0129%" height="15" fill="rgb(231,218,15)" fg:x="14583" fg:w="4"/><text x="47.2419%" y="559.50"></text></g><g><title>&lt;nu_ansi_term::ansi::Suffix as core::fmt::Display&gt;::fmt (27 samples, 0.09%)</title><rect x="46.9275%" y="581" width="0.0870%" height="15" fill="rgb(226,171,48)" fg:x="14563" fg:w="27"/><text x="47.1775%" y="591.50"></text></g><g><title>core::fmt::write (20 samples, 0.06%)</title><rect x="46.9500%" y="565" width="0.0644%" height="15" fill="rgb(235,201,9)" fg:x="14570" fg:w="20"/><text x="47.2000%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (12 samples, 0.04%)</title><rect x="47.0789%" y="565" width="0.0387%" height="15" fill="rgb(217,80,15)" fg:x="14610" fg:w="12"/><text x="47.3289%" y="575.50"></text></g><g><title>[libc.so.6] (7 samples, 0.02%)</title><rect x="47.0950%" y="549" width="0.0226%" height="15" fill="rgb(219,152,8)" fg:x="14615" fg:w="7"/><text x="47.3450%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (7 samples, 0.02%)</title><rect x="47.3013%" y="517" width="0.0226%" height="15" fill="rgb(243,107,38)" fg:x="14679" fg:w="7"/><text x="47.5513%" y="527.50"></text></g><g><title>&lt;nu_ansi_term::ansi::Suffix as core::fmt::Display&gt;::fmt (49 samples, 0.16%)</title><rect x="47.2143%" y="549" width="0.1579%" height="15" fill="rgb(231,17,5)" fg:x="14652" fg:w="49"/><text x="47.4643%" y="559.50"></text></g><g><title>core::fmt::write (38 samples, 0.12%)</title><rect x="47.2497%" y="533" width="0.1225%" height="15" fill="rgb(209,25,54)" fg:x="14663" fg:w="38"/><text x="47.4997%" y="543.50"></text></g><g><title>core::fmt::Formatter::pad (13 samples, 0.04%)</title><rect x="47.3303%" y="517" width="0.0419%" height="15" fill="rgb(219,0,2)" fg:x="14688" fg:w="13"/><text x="47.5803%" y="527.50"></text></g><g><title>core::fmt::Formatter::write_fmt (6 samples, 0.02%)</title><rect x="47.4463%" y="533" width="0.0193%" height="15" fill="rgb(246,9,5)" fg:x="14724" fg:w="6"/><text x="47.6963%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_char (7 samples, 0.02%)</title><rect x="47.5687%" y="517" width="0.0226%" height="15" fill="rgb(226,159,4)" fg:x="14762" fg:w="7"/><text x="47.8187%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (18 samples, 0.06%)</title><rect x="47.5913%" y="517" width="0.0580%" height="15" fill="rgb(219,175,34)" fg:x="14769" fg:w="18"/><text x="47.8413%" y="527.50"></text></g><g><title>[libc.so.6] (10 samples, 0.03%)</title><rect x="47.6171%" y="501" width="0.0322%" height="15" fill="rgb(236,10,46)" fg:x="14777" fg:w="10"/><text x="47.8671%" y="511.50"></text></g><g><title>&lt;nu_ansi_term::display::AnsiGenericString&lt;str&gt; as core::fmt::Display&gt;::fmt (198 samples, 0.64%)</title><rect x="47.0145%" y="581" width="0.6380%" height="15" fill="rgb(240,211,16)" fg:x="14590" fg:w="198"/><text x="47.2645%" y="591.50"></text></g><g><title>core::fmt::write (162 samples, 0.52%)</title><rect x="47.1305%" y="565" width="0.5220%" height="15" fill="rgb(205,3,43)" fg:x="14626" fg:w="162"/><text x="47.3805%" y="575.50"></text></g><g><title>nu_ansi_term::ansi::&lt;impl nu_ansi_term::style::Style&gt;::write_prefix (87 samples, 0.28%)</title><rect x="47.3722%" y="549" width="0.2803%" height="15" fill="rgb(245,7,22)" fg:x="14701" fg:w="87"/><text x="47.6222%" y="559.50"></text></g><g><title>core::fmt::write (58 samples, 0.19%)</title><rect x="47.4656%" y="533" width="0.1869%" height="15" fill="rgb(239,132,32)" fg:x="14730" fg:w="58"/><text x="47.7156%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (7 samples, 0.02%)</title><rect x="47.7621%" y="533" width="0.0226%" height="15" fill="rgb(228,202,34)" fg:x="14822" fg:w="7"/><text x="48.0121%" y="543.50"></text></g><g><title>&lt;nu_ansi_term::ansi::Suffix as core::fmt::Display&gt;::fmt (13 samples, 0.04%)</title><rect x="47.8265%" y="517" width="0.0419%" height="15" fill="rgb(254,200,22)" fg:x="14842" fg:w="13"/><text x="48.0765%" y="527.50"></text></g><g><title>core::fmt::write (11 samples, 0.04%)</title><rect x="47.8330%" y="501" width="0.0354%" height="15" fill="rgb(219,10,39)" fg:x="14844" fg:w="11"/><text x="48.0830%" y="511.50"></text></g><g><title>core::fmt::write (25 samples, 0.08%)</title><rect x="47.9038%" y="501" width="0.0806%" height="15" fill="rgb(226,210,39)" fg:x="14866" fg:w="25"/><text x="48.1538%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (8 samples, 0.03%)</title><rect x="47.9586%" y="485" width="0.0258%" height="15" fill="rgb(208,219,16)" fg:x="14883" fg:w="8"/><text x="48.2086%" y="495.50"></text></g><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="47.9715%" y="469" width="0.0129%" height="15" fill="rgb(216,158,51)" fg:x="14887" fg:w="4"/><text x="48.2215%" y="479.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::FmtLevel as core::fmt::Display&gt;::fmt (110 samples, 0.35%)</title><rect x="47.6525%" y="581" width="0.3545%" height="15" fill="rgb(233,14,44)" fg:x="14788" fg:w="110"/><text x="47.9025%" y="591.50"></text></g><g><title>core::fmt::write (94 samples, 0.30%)</title><rect x="47.7041%" y="565" width="0.3029%" height="15" fill="rgb(237,97,39)" fg:x="14804" fg:w="94"/><text x="47.9541%" y="575.50"></text></g><g><title>&lt;nu_ansi_term::display::AnsiGenericString&lt;str&gt; as core::fmt::Display&gt;::fmt (81 samples, 0.26%)</title><rect x="47.7459%" y="549" width="0.2610%" height="15" fill="rgb(218,198,43)" fg:x="14817" fg:w="81"/><text x="47.9959%" y="559.50"></text></g><g><title>core::fmt::write (66 samples, 0.21%)</title><rect x="47.7943%" y="533" width="0.2127%" height="15" fill="rgb(231,104,20)" fg:x="14832" fg:w="66"/><text x="48.0443%" y="543.50"></text></g><g><title>nu_ansi_term::ansi::&lt;impl nu_ansi_term::style::Style&gt;::write_prefix (43 samples, 0.14%)</title><rect x="47.8684%" y="517" width="0.1386%" height="15" fill="rgb(254,36,13)" fg:x="14855" fg:w="43"/><text x="48.1184%" y="527.50"></text></g><g><title>nu_ansi_term::ansi::&lt;impl nu_ansi_term::style::Color&gt;::write_foreground_code (7 samples, 0.02%)</title><rect x="47.9844%" y="501" width="0.0226%" height="15" fill="rgb(248,14,50)" fg:x="14891" fg:w="7"/><text x="48.2344%" y="511.50"></text></g><g><title>core::fmt::write (4 samples, 0.01%)</title><rect x="47.9941%" y="485" width="0.0129%" height="15" fill="rgb(217,107,29)" fg:x="14894" fg:w="4"/><text x="48.2441%" y="495.50"></text></g><g><title>core::fmt::Formatter::write_fmt (6 samples, 0.02%)</title><rect x="48.0972%" y="565" width="0.0193%" height="15" fill="rgb(251,169,33)" fg:x="14926" fg:w="6"/><text x="48.3472%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (23 samples, 0.07%)</title><rect x="48.1971%" y="549" width="0.0741%" height="15" fill="rgb(217,108,32)" fg:x="14957" fg:w="23"/><text x="48.4471%" y="559.50"></text></g><g><title>[libc.so.6] (11 samples, 0.04%)</title><rect x="48.2357%" y="533" width="0.0354%" height="15" fill="rgb(219,66,42)" fg:x="14969" fg:w="11"/><text x="48.4857%" y="543.50"></text></g><g><title>core::fmt::write (494 samples, 1.59%)</title><rect x="46.6890%" y="597" width="1.5919%" height="15" fill="rgb(206,180,7)" fg:x="14489" fg:w="494"/><text x="46.9390%" y="607.50"></text></g><g><title>nu_ansi_term::ansi::&lt;impl nu_ansi_term::style::Style&gt;::write_prefix (85 samples, 0.27%)</title><rect x="48.0070%" y="581" width="0.2739%" height="15" fill="rgb(208,226,31)" fg:x="14898" fg:w="85"/><text x="48.2570%" y="591.50"></text></g><g><title>core::fmt::write (51 samples, 0.16%)</title><rect x="48.1165%" y="565" width="0.1643%" height="15" fill="rgb(218,26,49)" fg:x="14932" fg:w="51"/><text x="48.3665%" y="575.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (6 samples, 0.02%)</title><rect x="48.3775%" y="549" width="0.0193%" height="15" fill="rgb(233,197,48)" fg:x="15013" fg:w="6"/><text x="48.6275%" y="559.50"></text></g><g><title>core::fmt::write (31 samples, 0.10%)</title><rect x="48.3550%" y="565" width="0.0999%" height="15" fill="rgb(252,181,51)" fg:x="15006" fg:w="31"/><text x="48.6050%" y="575.50"></text></g><g><title>core::fmt::write (17 samples, 0.05%)</title><rect x="48.4001%" y="549" width="0.0548%" height="15" fill="rgb(253,90,19)" fg:x="15020" fg:w="17"/><text x="48.6501%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (8 samples, 0.03%)</title><rect x="48.4291%" y="533" width="0.0258%" height="15" fill="rgb(215,171,30)" fg:x="15029" fg:w="8"/><text x="48.6791%" y="543.50"></text></g><g><title>[libc.so.6] (7 samples, 0.02%)</title><rect x="48.4323%" y="517" width="0.0226%" height="15" fill="rgb(214,222,9)" fg:x="15030" fg:w="7"/><text x="48.6823%" y="527.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::DefaultVisitor as tracing_core::field::Visit&gt;::record_debug (49 samples, 0.16%)</title><rect x="48.3099%" y="581" width="0.1579%" height="15" fill="rgb(223,3,22)" fg:x="14992" fg:w="49"/><text x="48.5599%" y="591.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (7 samples, 0.02%)</title><rect x="48.5548%" y="533" width="0.0226%" height="15" fill="rgb(225,196,46)" fg:x="15068" fg:w="7"/><text x="48.8048%" y="543.50"></text></g><g><title>&lt;nu_ansi_term::ansi::Suffix as core::fmt::Display&gt;::fmt (10 samples, 0.03%)</title><rect x="48.6450%" y="501" width="0.0322%" height="15" fill="rgb(209,110,37)" fg:x="15096" fg:w="10"/><text x="48.8950%" y="511.50"></text></g><g><title>core::fmt::write (6 samples, 0.02%)</title><rect x="48.6579%" y="485" width="0.0193%" height="15" fill="rgb(249,89,12)" fg:x="15100" fg:w="6"/><text x="48.9079%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (10 samples, 0.03%)</title><rect x="48.7642%" y="469" width="0.0322%" height="15" fill="rgb(226,27,33)" fg:x="15133" fg:w="10"/><text x="49.0142%" y="479.50"></text></g><g><title>[libc.so.6] (7 samples, 0.02%)</title><rect x="48.7739%" y="453" width="0.0226%" height="15" fill="rgb(213,82,22)" fg:x="15136" fg:w="7"/><text x="49.0239%" y="463.50"></text></g><g><title>&lt;nu_ansi_term::display::AnsiGenericString&lt;str&gt; as core::fmt::Display&gt;::fmt (68 samples, 0.22%)</title><rect x="48.5805%" y="533" width="0.2191%" height="15" fill="rgb(248,140,0)" fg:x="15076" fg:w="68"/><text x="48.8305%" y="543.50"></text></g><g><title>core::fmt::write (56 samples, 0.18%)</title><rect x="48.6192%" y="517" width="0.1805%" height="15" fill="rgb(228,106,3)" fg:x="15088" fg:w="56"/><text x="48.8692%" y="527.50"></text></g><g><title>nu_ansi_term::ansi::&lt;impl nu_ansi_term::style::Style&gt;::write_prefix (38 samples, 0.12%)</title><rect x="48.6772%" y="501" width="0.1225%" height="15" fill="rgb(209,23,37)" fg:x="15106" fg:w="38"/><text x="48.9272%" y="511.50"></text></g><g><title>core::fmt::write (28 samples, 0.09%)</title><rect x="48.7094%" y="485" width="0.0902%" height="15" fill="rgb(241,93,50)" fg:x="15116" fg:w="28"/><text x="48.9594%" y="495.50"></text></g><g><title>tracing_core::field::ValueSet::record (184 samples, 0.59%)</title><rect x="48.2809%" y="597" width="0.5929%" height="15" fill="rgb(253,46,43)" fg:x="14983" fg:w="184"/><text x="48.5309%" y="607.50"></text></g><g><title>tracing_core::field::Visit::record_u64 (124 samples, 0.40%)</title><rect x="48.4742%" y="581" width="0.3996%" height="15" fill="rgb(226,206,43)" fg:x="15043" fg:w="124"/><text x="48.7242%" y="591.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::DefaultVisitor as tracing_core::field::Visit&gt;::record_debug (122 samples, 0.39%)</title><rect x="48.4806%" y="565" width="0.3931%" height="15" fill="rgb(217,54,7)" fg:x="15045" fg:w="122"/><text x="48.7306%" y="575.50"></text></g><g><title>core::fmt::write (109 samples, 0.35%)</title><rect x="48.5225%" y="549" width="0.3512%" height="15" fill="rgb(223,5,52)" fg:x="15058" fg:w="109"/><text x="48.7725%" y="559.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (20 samples, 0.06%)</title><rect x="48.8093%" y="533" width="0.0644%" height="15" fill="rgb(206,52,46)" fg:x="15147" fg:w="20"/><text x="49.0593%" y="543.50"></text></g><g><title>core::fmt::Formatter::pad_integral (8 samples, 0.03%)</title><rect x="48.8480%" y="517" width="0.0258%" height="15" fill="rgb(253,136,11)" fg:x="15159" fg:w="8"/><text x="49.0980%" y="527.50"></text></g><g><title>tracing_subscriber::fmt::format::Writer::write_fmt (16 samples, 0.05%)</title><rect x="48.8738%" y="597" width="0.0516%" height="15" fill="rgb(208,106,33)" fg:x="15167" fg:w="16"/><text x="49.1238%" y="607.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::Format&lt;tracing_subscriber::fmt::format::Full,T&gt; as tracing_subscriber::fmt::format::FormatEvent&lt;S,N&gt;&gt;::format_event (1,203 samples, 3.88%)</title><rect x="45.1133%" y="613" width="3.8765%" height="15" fill="rgb(206,54,4)" fg:x="14000" fg:w="1203"/><text x="45.3633%" y="623.50">&lt;tra..</text></g><g><title>tracing_subscriber::layer::context::Context&lt;S&gt;::event_scope (20 samples, 0.06%)</title><rect x="48.9253%" y="597" width="0.0644%" height="15" fill="rgb(213,3,15)" fg:x="15183" fg:w="20"/><text x="49.1753%" y="607.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::current_span (16 samples, 0.05%)</title><rect x="48.9382%" y="581" width="0.0516%" height="15" fill="rgb(252,211,39)" fg:x="15187" fg:w="16"/><text x="49.1882%" y="591.50"></text></g><g><title>&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_event (2,797 samples, 9.01%)</title><rect x="39.9929%" y="629" width="9.0130%" height="15" fill="rgb(223,6,36)" fg:x="12411" fg:w="2797"/><text x="40.2429%" y="639.50">&lt;tracing_subs..</text></g><g><title>std::io::stdio::stdout (5 samples, 0.02%)</title><rect x="48.9898%" y="613" width="0.0161%" height="15" fill="rgb(252,169,45)" fg:x="15203" fg:w="5"/><text x="49.2398%" y="623.50"></text></g><g><title>&lt;tracing_subscriber::fmt::Subscriber&lt;N,E,F,W&gt; as tracing_core::subscriber::Subscriber&gt;::event_enabled (10 samples, 0.03%)</title><rect x="49.0446%" y="613" width="0.0322%" height="15" fill="rgb(212,48,26)" fg:x="15220" fg:w="10"/><text x="49.2946%" y="623.50"></text></g><g><title>&lt;tokio_util::codec::framed_impl::FramedImpl&lt;T,U,W&gt; as futures_sink::Sink&lt;I&gt;&gt;::poll_flush (4,660 samples, 15.02%)</title><rect x="34.0799%" y="661" width="15.0163%" height="15" fill="rgb(251,102,48)" fg:x="10576" fg:w="4660"/><text x="34.3299%" y="671.50">&lt;tokio_util::codec::fra..</text></g><g><title>tracing_core::event::Event::dispatch (2,835 samples, 9.14%)</title><rect x="39.9607%" y="645" width="9.1354%" height="15" fill="rgb(243,208,16)" fg:x="12401" fg:w="2835"/><text x="40.2107%" y="655.50">tracing_core:..</text></g><g><title>tracing_core::dispatcher::get_default (28 samples, 0.09%)</title><rect x="49.0059%" y="629" width="0.0902%" height="15" fill="rgb(219,96,24)" fg:x="15208" fg:w="28"/><text x="49.2559%" y="639.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::event_enabled (6 samples, 0.02%)</title><rect x="49.0768%" y="613" width="0.0193%" height="15" fill="rgb(219,33,29)" fg:x="15230" fg:w="6"/><text x="49.3268%" y="623.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::put (22 samples, 0.07%)</title><rect x="49.1219%" y="645" width="0.0709%" height="15" fill="rgb(223,176,5)" fg:x="15244" fg:w="22"/><text x="49.3719%" y="655.50"></text></g><g><title>[libc.so.6] (19 samples, 0.06%)</title><rect x="49.1316%" y="629" width="0.0612%" height="15" fill="rgb(228,140,14)" fg:x="15247" fg:w="19"/><text x="49.3816%" y="639.50"></text></g><g><title>__libc_free (19 samples, 0.06%)</title><rect x="49.1928%" y="645" width="0.0612%" height="15" fill="rgb(217,179,31)" fg:x="15266" fg:w="19"/><text x="49.4428%" y="655.50"></text></g><g><title>[libc.so.6] (7 samples, 0.02%)</title><rect x="49.2315%" y="629" width="0.0226%" height="15" fill="rgb(230,9,30)" fg:x="15278" fg:w="7"/><text x="49.4815%" y="639.50"></text></g><g><title>__rust_dealloc (4 samples, 0.01%)</title><rect x="49.2540%" y="645" width="0.0129%" height="15" fill="rgb(230,136,20)" fg:x="15285" fg:w="4"/><text x="49.5040%" y="655.50"></text></g><g><title>&lt;tun::async::codec::TunPacketCodec as tokio_util::codec::encoder::Encoder&lt;tun::async::codec::TunPacket&gt;&gt;::encode (54 samples, 0.17%)</title><rect x="49.0961%" y="661" width="0.1740%" height="15" fill="rgb(215,210,22)" fg:x="15236" fg:w="54"/><text x="49.3461%" y="671.50"></text></g><g><title>__libc_free (4 samples, 0.01%)</title><rect x="49.2701%" y="661" width="0.0129%" height="15" fill="rgb(218,43,5)" fg:x="15290" fg:w="4"/><text x="49.5201%" y="671.50"></text></g><g><title>malloc (15 samples, 0.05%)</title><rect x="49.4506%" y="645" width="0.0483%" height="15" fill="rgb(216,11,5)" fg:x="15346" fg:w="15"/><text x="49.7006%" y="655.50"></text></g><g><title>futures_util::lock::bilock::BiLock&lt;T&gt;::poll_lock (69 samples, 0.22%)</title><rect x="49.2830%" y="661" width="0.2223%" height="15" fill="rgb(209,82,29)" fg:x="15294" fg:w="69"/><text x="49.5330%" y="671.50"></text></g><g><title>&lt;futures_util::stream::stream::split::SplitSink&lt;S,Item&gt; as futures_sink::Sink&lt;Item&gt;&gt;::poll_flush (5,082 samples, 16.38%)</title><rect x="33.1454%" y="677" width="16.3761%" height="15" fill="rgb(244,115,12)" fg:x="10286" fg:w="5082"/><text x="33.3954%" y="687.50">&lt;futures_util::stream::st..</text></g><g><title>tokio::runtime::task::waker::wake_by_val (5 samples, 0.02%)</title><rect x="49.5054%" y="661" width="0.0161%" height="15" fill="rgb(222,82,18)" fg:x="15363" fg:w="5"/><text x="49.7554%" y="671.50"></text></g><g><title>&lt;futures_util::stream::stream::split::SplitSink&lt;S,Item&gt; as futures_sink::Sink&lt;Item&gt;&gt;::poll_ready (8 samples, 0.03%)</title><rect x="49.5215%" y="677" width="0.0258%" height="15" fill="rgb(249,227,8)" fg:x="15368" fg:w="8"/><text x="49.7715%" y="687.50"></text></g><g><title>[libc.so.6] (71 samples, 0.23%)</title><rect x="49.9823%" y="645" width="0.2288%" height="15" fill="rgb(253,141,45)" fg:x="15511" fg:w="71"/><text x="50.2323%" y="655.50"></text></g><g><title>__libc_free (16 samples, 0.05%)</title><rect x="50.2111%" y="645" width="0.0516%" height="15" fill="rgb(234,184,4)" fg:x="15582" fg:w="16"/><text x="50.4611%" y="655.50"></text></g><g><title>__mprotect (4 samples, 0.01%)</title><rect x="51.0553%" y="597" width="0.0129%" height="15" fill="rgb(218,194,23)" fg:x="15844" fg:w="4"/><text x="51.3053%" y="607.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (4 samples, 0.01%)</title><rect x="51.0553%" y="581" width="0.0129%" height="15" fill="rgb(235,66,41)" fg:x="15844" fg:w="4"/><text x="51.3053%" y="591.50"></text></g><g><title>do_syscall_64 (4 samples, 0.01%)</title><rect x="51.0553%" y="565" width="0.0129%" height="15" fill="rgb(245,217,1)" fg:x="15844" fg:w="4"/><text x="51.3053%" y="575.50"></text></g><g><title>__x64_sys_mprotect (4 samples, 0.01%)</title><rect x="51.0553%" y="549" width="0.0129%" height="15" fill="rgb(229,91,1)" fg:x="15844" fg:w="4"/><text x="51.3053%" y="559.50"></text></g><g><title>do_mprotect_pkey (4 samples, 0.01%)</title><rect x="51.0553%" y="533" width="0.0129%" height="15" fill="rgb(207,101,30)" fg:x="15844" fg:w="4"/><text x="51.3053%" y="543.50"></text></g><g><title>mprotect_fixup (4 samples, 0.01%)</title><rect x="51.0553%" y="517" width="0.0129%" height="15" fill="rgb(223,82,49)" fg:x="15844" fg:w="4"/><text x="51.3053%" y="527.50"></text></g><g><title>__alloc_pages (5 samples, 0.02%)</title><rect x="51.0747%" y="517" width="0.0161%" height="15" fill="rgb(218,167,17)" fg:x="15850" fg:w="5"/><text x="51.3247%" y="527.50"></text></g><g><title>get_page_from_freelist (5 samples, 0.02%)</title><rect x="51.0747%" y="501" width="0.0161%" height="15" fill="rgb(208,103,14)" fg:x="15850" fg:w="5"/><text x="51.3247%" y="511.50"></text></g><g><title>handle_mm_fault (10 samples, 0.03%)</title><rect x="51.0714%" y="549" width="0.0322%" height="15" fill="rgb(238,20,8)" fg:x="15849" fg:w="10"/><text x="51.3214%" y="559.50"></text></g><g><title>__handle_mm_fault (9 samples, 0.03%)</title><rect x="51.0747%" y="533" width="0.0290%" height="15" fill="rgb(218,80,54)" fg:x="15850" fg:w="9"/><text x="51.3247%" y="543.50"></text></g><g><title>asm_exc_page_fault (12 samples, 0.04%)</title><rect x="51.0682%" y="597" width="0.0387%" height="15" fill="rgb(240,144,17)" fg:x="15848" fg:w="12"/><text x="51.3182%" y="607.50"></text></g><g><title>exc_page_fault (12 samples, 0.04%)</title><rect x="51.0682%" y="581" width="0.0387%" height="15" fill="rgb(245,27,50)" fg:x="15848" fg:w="12"/><text x="51.3182%" y="591.50"></text></g><g><title>do_user_addr_fault (12 samples, 0.04%)</title><rect x="51.0682%" y="565" width="0.0387%" height="15" fill="rgb(251,51,7)" fg:x="15848" fg:w="12"/><text x="51.3182%" y="575.50"></text></g><g><title>[libc.so.6] (160 samples, 0.52%)</title><rect x="50.5978%" y="629" width="0.5156%" height="15" fill="rgb(245,217,29)" fg:x="15702" fg:w="160"/><text x="50.8478%" y="639.50"></text></g><g><title>[libc.so.6] (39 samples, 0.13%)</title><rect x="50.9877%" y="613" width="0.1257%" height="15" fill="rgb(221,176,29)" fg:x="15823" fg:w="39"/><text x="51.2377%" y="623.50"></text></g><g><title>__lll_lock_wait_private (6 samples, 0.02%)</title><rect x="51.1133%" y="629" width="0.0193%" height="15" fill="rgb(212,180,24)" fg:x="15862" fg:w="6"/><text x="51.3633%" y="639.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (5 samples, 0.02%)</title><rect x="51.1166%" y="613" width="0.0161%" height="15" fill="rgb(254,24,2)" fg:x="15863" fg:w="5"/><text x="51.3666%" y="623.50"></text></g><g><title>do_syscall_64 (5 samples, 0.02%)</title><rect x="51.1166%" y="597" width="0.0161%" height="15" fill="rgb(230,100,2)" fg:x="15863" fg:w="5"/><text x="51.3666%" y="607.50"></text></g><g><title>bytes::bytes::&lt;impl core::convert::From&lt;bytes::bytes::Bytes&gt; for alloc::vec::Vec&lt;u8&gt;&gt;::from (540 samples, 1.74%)</title><rect x="49.5473%" y="677" width="1.7401%" height="15" fill="rgb(219,142,25)" fg:x="15376" fg:w="540"/><text x="49.7973%" y="687.50"></text></g><g><title>bytes::bytes_mut::shared_v_to_vec (521 samples, 1.68%)</title><rect x="49.6085%" y="661" width="1.6789%" height="15" fill="rgb(240,73,43)" fg:x="15395" fg:w="521"/><text x="49.8585%" y="671.50"></text></g><g><title>malloc (313 samples, 1.01%)</title><rect x="50.2787%" y="645" width="1.0086%" height="15" fill="rgb(214,114,15)" fg:x="15603" fg:w="313"/><text x="50.5287%" y="655.50"></text></g><g><title>__lll_lock_wake_private (48 samples, 0.15%)</title><rect x="51.1327%" y="629" width="0.1547%" height="15" fill="rgb(207,130,4)" fg:x="15868" fg:w="48"/><text x="51.3827%" y="639.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (46 samples, 0.15%)</title><rect x="51.1391%" y="613" width="0.1482%" height="15" fill="rgb(221,25,40)" fg:x="15870" fg:w="46"/><text x="51.3891%" y="623.50"></text></g><g><title>do_syscall_64 (46 samples, 0.15%)</title><rect x="51.1391%" y="597" width="0.1482%" height="15" fill="rgb(241,184,7)" fg:x="15870" fg:w="46"/><text x="51.3891%" y="607.50"></text></g><g><title>__x64_sys_futex (46 samples, 0.15%)</title><rect x="51.1391%" y="581" width="0.1482%" height="15" fill="rgb(235,159,4)" fg:x="15870" fg:w="46"/><text x="51.3891%" y="591.50"></text></g><g><title>do_futex (46 samples, 0.15%)</title><rect x="51.1391%" y="565" width="0.1482%" height="15" fill="rgb(214,87,48)" fg:x="15870" fg:w="46"/><text x="51.3891%" y="575.50"></text></g><g><title>futex_wake (44 samples, 0.14%)</title><rect x="51.1456%" y="549" width="0.1418%" height="15" fill="rgb(246,198,24)" fg:x="15872" fg:w="44"/><text x="51.3956%" y="559.50"></text></g><g><title>wake_up_q (36 samples, 0.12%)</title><rect x="51.1713%" y="533" width="0.1160%" height="15" fill="rgb(209,66,40)" fg:x="15880" fg:w="36"/><text x="51.4213%" y="543.50"></text></g><g><title>try_to_wake_up (36 samples, 0.12%)</title><rect x="51.1713%" y="517" width="0.1160%" height="15" fill="rgb(233,147,39)" fg:x="15880" fg:w="36"/><text x="51.4213%" y="527.50"></text></g><g><title>__task_rq_lock (18 samples, 0.06%)</title><rect x="51.2293%" y="501" width="0.0580%" height="15" fill="rgb(231,145,52)" fg:x="15898" fg:w="18"/><text x="51.4793%" y="511.50"></text></g><g><title>_raw_spin_lock (18 samples, 0.06%)</title><rect x="51.2293%" y="485" width="0.0580%" height="15" fill="rgb(206,20,26)" fg:x="15898" fg:w="18"/><text x="51.4793%" y="495.50"></text></g><g><title>__pv_queued_spin_lock_slowpath (18 samples, 0.06%)</title><rect x="51.2293%" y="469" width="0.0580%" height="15" fill="rgb(238,220,4)" fg:x="15898" fg:w="18"/><text x="51.4793%" y="479.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::add_permits_locked (10 samples, 0.03%)</title><rect x="51.5419%" y="629" width="0.0322%" height="15" fill="rgb(252,195,42)" fg:x="15995" fg:w="10"/><text x="51.7919%" y="639.50"></text></g><g><title>tokio::sync::mpsc::list::Rx&lt;T&gt;::pop (26 samples, 0.08%)</title><rect x="51.5741%" y="629" width="0.0838%" height="15" fill="rgb(209,10,6)" fg:x="16005" fg:w="26"/><text x="51.8241%" y="639.50"></text></g><g><title>&lt;netstack_smoltcp::stack::Stack as futures_core::stream::Stream&gt;::poll_next (52 samples, 0.17%)</title><rect x="51.4936%" y="661" width="0.1676%" height="15" fill="rgb(229,3,52)" fg:x="15980" fg:w="52"/><text x="51.7436%" y="671.50"></text></g><g><title>tokio::sync::mpsc::chan::Rx&lt;T,S&gt;::recv (49 samples, 0.16%)</title><rect x="51.5032%" y="645" width="0.1579%" height="15" fill="rgb(253,49,37)" fg:x="15983" fg:w="49"/><text x="51.7532%" y="655.50"></text></g><g><title>__alloc_pages (8 samples, 0.03%)</title><rect x="53.0049%" y="485" width="0.0258%" height="15" fill="rgb(240,103,49)" fg:x="16449" fg:w="8"/><text x="53.2549%" y="495.50"></text></g><g><title>get_page_from_freelist (8 samples, 0.03%)</title><rect x="53.0049%" y="469" width="0.0258%" height="15" fill="rgb(250,182,30)" fg:x="16449" fg:w="8"/><text x="53.2549%" y="479.50"></text></g><g><title>kernel_init_free_pages.part.0 (8 samples, 0.03%)</title><rect x="53.0049%" y="453" width="0.0258%" height="15" fill="rgb(248,8,30)" fg:x="16449" fg:w="8"/><text x="53.2549%" y="463.50"></text></g><g><title>clear_page_erms (8 samples, 0.03%)</title><rect x="53.0049%" y="437" width="0.0258%" height="15" fill="rgb(237,120,30)" fg:x="16449" fg:w="8"/><text x="53.2549%" y="447.50"></text></g><g><title>asm_exc_page_fault (17 samples, 0.05%)</title><rect x="52.9888%" y="565" width="0.0548%" height="15" fill="rgb(221,146,34)" fg:x="16444" fg:w="17"/><text x="53.2388%" y="575.50"></text></g><g><title>exc_page_fault (17 samples, 0.05%)</title><rect x="52.9888%" y="549" width="0.0548%" height="15" fill="rgb(242,55,13)" fg:x="16444" fg:w="17"/><text x="53.2388%" y="559.50"></text></g><g><title>do_user_addr_fault (17 samples, 0.05%)</title><rect x="52.9888%" y="533" width="0.0548%" height="15" fill="rgb(242,112,31)" fg:x="16444" fg:w="17"/><text x="53.2388%" y="543.50"></text></g><g><title>handle_mm_fault (16 samples, 0.05%)</title><rect x="52.9920%" y="517" width="0.0516%" height="15" fill="rgb(249,192,27)" fg:x="16445" fg:w="16"/><text x="53.2420%" y="527.50"></text></g><g><title>__handle_mm_fault (15 samples, 0.05%)</title><rect x="52.9952%" y="501" width="0.0483%" height="15" fill="rgb(208,204,44)" fg:x="16446" fg:w="15"/><text x="53.2452%" y="511.50"></text></g><g><title>[libc.so.6] (64 samples, 0.21%)</title><rect x="52.8405%" y="597" width="0.2062%" height="15" fill="rgb(208,93,54)" fg:x="16398" fg:w="64"/><text x="53.0905%" y="607.50"></text></g><g><title>[libc.so.6] (23 samples, 0.07%)</title><rect x="52.9726%" y="581" width="0.0741%" height="15" fill="rgb(242,1,31)" fg:x="16439" fg:w="23"/><text x="53.2226%" y="591.50"></text></g><g><title>__task_rq_lock (4 samples, 0.01%)</title><rect x="53.0725%" y="469" width="0.0129%" height="15" fill="rgb(241,83,25)" fg:x="16470" fg:w="4"/><text x="53.3225%" y="479.50"></text></g><g><title>_raw_spin_lock (4 samples, 0.01%)</title><rect x="53.0725%" y="453" width="0.0129%" height="15" fill="rgb(205,169,50)" fg:x="16470" fg:w="4"/><text x="53.3225%" y="463.50"></text></g><g><title>__pv_queued_spin_lock_slowpath (4 samples, 0.01%)</title><rect x="53.0725%" y="437" width="0.0129%" height="15" fill="rgb(239,186,37)" fg:x="16470" fg:w="4"/><text x="53.3225%" y="447.50"></text></g><g><title>bytes::bytes_mut::BytesMut::reserve_inner (115 samples, 0.37%)</title><rect x="52.7181%" y="629" width="0.3706%" height="15" fill="rgb(205,221,10)" fg:x="16360" fg:w="115"/><text x="52.9681%" y="639.50"></text></g><g><title>malloc (105 samples, 0.34%)</title><rect x="52.7503%" y="613" width="0.3383%" height="15" fill="rgb(218,196,15)" fg:x="16370" fg:w="105"/><text x="53.0003%" y="623.50"></text></g><g><title>__lll_lock_wake_private (12 samples, 0.04%)</title><rect x="53.0500%" y="597" width="0.0387%" height="15" fill="rgb(218,196,35)" fg:x="16463" fg:w="12"/><text x="53.3000%" y="607.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (11 samples, 0.04%)</title><rect x="53.0532%" y="581" width="0.0354%" height="15" fill="rgb(233,63,24)" fg:x="16464" fg:w="11"/><text x="53.3032%" y="591.50"></text></g><g><title>do_syscall_64 (11 samples, 0.04%)</title><rect x="53.0532%" y="565" width="0.0354%" height="15" fill="rgb(225,8,4)" fg:x="16464" fg:w="11"/><text x="53.3032%" y="575.50"></text></g><g><title>__x64_sys_futex (11 samples, 0.04%)</title><rect x="53.0532%" y="549" width="0.0354%" height="15" fill="rgb(234,105,35)" fg:x="16464" fg:w="11"/><text x="53.3032%" y="559.50"></text></g><g><title>do_futex (11 samples, 0.04%)</title><rect x="53.0532%" y="533" width="0.0354%" height="15" fill="rgb(236,21,32)" fg:x="16464" fg:w="11"/><text x="53.3032%" y="543.50"></text></g><g><title>futex_wake (10 samples, 0.03%)</title><rect x="53.0564%" y="517" width="0.0322%" height="15" fill="rgb(228,109,6)" fg:x="16465" fg:w="10"/><text x="53.3064%" y="527.50"></text></g><g><title>wake_up_q (9 samples, 0.03%)</title><rect x="53.0596%" y="501" width="0.0290%" height="15" fill="rgb(229,215,31)" fg:x="16466" fg:w="9"/><text x="53.3096%" y="511.50"></text></g><g><title>try_to_wake_up (9 samples, 0.03%)</title><rect x="53.0596%" y="485" width="0.0290%" height="15" fill="rgb(221,52,54)" fg:x="16466" fg:w="9"/><text x="53.3096%" y="495.50"></text></g><g><title>bytes::bytes_mut::BytesMut::advance_unchecked (10 samples, 0.03%)</title><rect x="53.2498%" y="613" width="0.0322%" height="15" fill="rgb(252,129,43)" fg:x="16525" fg:w="10"/><text x="53.4998%" y="623.50"></text></g><g><title>&lt;tun::async::codec::TunPacketCodec as tokio_util::codec::decoder::Decoder&gt;::decode (253 samples, 0.82%)</title><rect x="52.5280%" y="645" width="0.8153%" height="15" fill="rgb(248,183,27)" fg:x="16301" fg:w="253"/><text x="52.7780%" y="655.50"></text></g><g><title>bytes::bytes_mut::BytesMut::split_to (79 samples, 0.25%)</title><rect x="53.0886%" y="629" width="0.2546%" height="15" fill="rgb(250,0,22)" fg:x="16475" fg:w="79"/><text x="53.3386%" y="639.50"></text></g><g><title>malloc (19 samples, 0.06%)</title><rect x="53.2820%" y="613" width="0.0612%" height="15" fill="rgb(213,166,10)" fg:x="16535" fg:w="19"/><text x="53.5320%" y="623.50"></text></g><g><title>__alloc_pages (4 samples, 0.01%)</title><rect x="54.1230%" y="533" width="0.0129%" height="15" fill="rgb(207,163,36)" fg:x="16796" fg:w="4"/><text x="54.3730%" y="543.50"></text></g><g><title>get_page_from_freelist (4 samples, 0.01%)</title><rect x="54.1230%" y="517" width="0.0129%" height="15" fill="rgb(208,122,22)" fg:x="16796" fg:w="4"/><text x="54.3730%" y="527.50"></text></g><g><title>kernel_init_free_pages.part.0 (4 samples, 0.01%)</title><rect x="54.1230%" y="501" width="0.0129%" height="15" fill="rgb(207,104,49)" fg:x="16796" fg:w="4"/><text x="54.3730%" y="511.50"></text></g><g><title>clear_page_erms (4 samples, 0.01%)</title><rect x="54.1230%" y="485" width="0.0129%" height="15" fill="rgb(248,211,50)" fg:x="16796" fg:w="4"/><text x="54.3730%" y="495.50"></text></g><g><title>asm_exc_page_fault (11 samples, 0.04%)</title><rect x="54.1166%" y="613" width="0.0354%" height="15" fill="rgb(217,13,45)" fg:x="16794" fg:w="11"/><text x="54.3666%" y="623.50"></text></g><g><title>exc_page_fault (11 samples, 0.04%)</title><rect x="54.1166%" y="597" width="0.0354%" height="15" fill="rgb(211,216,49)" fg:x="16794" fg:w="11"/><text x="54.3666%" y="607.50"></text></g><g><title>do_user_addr_fault (11 samples, 0.04%)</title><rect x="54.1166%" y="581" width="0.0354%" height="15" fill="rgb(221,58,53)" fg:x="16794" fg:w="11"/><text x="54.3666%" y="591.50"></text></g><g><title>handle_mm_fault (11 samples, 0.04%)</title><rect x="54.1166%" y="565" width="0.0354%" height="15" fill="rgb(220,112,41)" fg:x="16794" fg:w="11"/><text x="54.3666%" y="575.50"></text></g><g><title>__handle_mm_fault (9 samples, 0.03%)</title><rect x="54.1230%" y="549" width="0.0290%" height="15" fill="rgb(236,38,28)" fg:x="16796" fg:w="9"/><text x="54.3730%" y="559.50"></text></g><g><title>[libc.so.6] (228 samples, 0.73%)</title><rect x="53.4238%" y="629" width="0.7347%" height="15" fill="rgb(227,195,22)" fg:x="16579" fg:w="228"/><text x="53.6738%" y="639.50"></text></g><g><title>[libc.so.6] (82 samples, 0.26%)</title><rect x="54.3486%" y="597" width="0.2642%" height="15" fill="rgb(214,55,33)" fg:x="16866" fg:w="82"/><text x="54.5986%" y="607.50"></text></g><g><title>entry_SYSCALL_64 (46 samples, 0.15%)</title><rect x="54.6128%" y="597" width="0.1482%" height="15" fill="rgb(248,80,13)" fg:x="16948" fg:w="46"/><text x="54.8628%" y="607.50"></text></g><g><title>__x64_sys_read (11 samples, 0.04%)</title><rect x="54.8030%" y="565" width="0.0354%" height="15" fill="rgb(238,52,6)" fg:x="17007" fg:w="11"/><text x="55.0530%" y="575.50"></text></g><g><title>__fdget_pos (46 samples, 0.15%)</title><rect x="54.8932%" y="549" width="0.1482%" height="15" fill="rgb(224,198,47)" fg:x="17035" fg:w="46"/><text x="55.1432%" y="559.50"></text></g><g><title>__fget_light (43 samples, 0.14%)</title><rect x="54.9028%" y="533" width="0.1386%" height="15" fill="rgb(233,171,20)" fg:x="17038" fg:w="43"/><text x="55.1528%" y="543.50"></text></g><g><title>__fget_files (31 samples, 0.10%)</title><rect x="54.9415%" y="517" width="0.0999%" height="15" fill="rgb(241,30,25)" fg:x="17050" fg:w="31"/><text x="55.1915%" y="527.50"></text></g><g><title>fput_many (15 samples, 0.05%)</title><rect x="55.0414%" y="549" width="0.0483%" height="15" fill="rgb(207,171,38)" fg:x="17081" fg:w="15"/><text x="55.2914%" y="559.50"></text></g><g><title>fsnotify_perm.part.0 (26 samples, 0.08%)</title><rect x="55.1252%" y="533" width="0.0838%" height="15" fill="rgb(234,70,1)" fg:x="17107" fg:w="26"/><text x="55.3752%" y="543.50"></text></g><g><title>__raw_callee_save___pv_queued_spin_unlock (11 samples, 0.04%)</title><rect x="55.6053%" y="485" width="0.0354%" height="15" fill="rgb(232,178,18)" fg:x="17256" fg:w="11"/><text x="55.8553%" y="495.50"></text></g><g><title>_raw_spin_lock (18 samples, 0.06%)</title><rect x="55.6408%" y="485" width="0.0580%" height="15" fill="rgb(241,78,40)" fg:x="17267" fg:w="18"/><text x="55.8908%" y="495.50"></text></g><g><title>__slab_free.constprop.0 (42 samples, 0.14%)</title><rect x="55.8148%" y="437" width="0.1353%" height="15" fill="rgb(222,35,25)" fg:x="17321" fg:w="42"/><text x="56.0648%" y="447.50"></text></g><g><title>skb_release_data (76 samples, 0.24%)</title><rect x="55.7084%" y="469" width="0.2449%" height="15" fill="rgb(207,92,16)" fg:x="17288" fg:w="76"/><text x="55.9584%" y="479.50"></text></g><g><title>kfree (56 samples, 0.18%)</title><rect x="55.7729%" y="453" width="0.1805%" height="15" fill="rgb(216,59,51)" fg:x="17308" fg:w="56"/><text x="56.0229%" y="463.50"></text></g><g><title>consume_skb (80 samples, 0.26%)</title><rect x="55.6988%" y="485" width="0.2578%" height="15" fill="rgb(213,80,28)" fg:x="17285" fg:w="80"/><text x="55.9488%" y="495.50"></text></g><g><title>kfree_skbmem (6 samples, 0.02%)</title><rect x="55.9566%" y="485" width="0.0193%" height="15" fill="rgb(220,93,7)" fg:x="17365" fg:w="6"/><text x="56.2066%" y="495.50"></text></g><g><title>__slab_free.constprop.0 (43 samples, 0.14%)</title><rect x="56.0468%" y="469" width="0.1386%" height="15" fill="rgb(225,24,44)" fg:x="17393" fg:w="43"/><text x="56.2968%" y="479.50"></text></g><g><title>_raw_spin_lock_irqsave (7 samples, 0.02%)</title><rect x="56.1628%" y="453" width="0.0226%" height="15" fill="rgb(243,74,40)" fg:x="17429" fg:w="7"/><text x="56.4128%" y="463.50"></text></g><g><title>kmem_cache_free.part.0 (67 samples, 0.22%)</title><rect x="55.9759%" y="485" width="0.2159%" height="15" fill="rgb(228,39,7)" fg:x="17371" fg:w="67"/><text x="56.2259%" y="495.50"></text></g><g><title>copy_user_enhanced_fast_string (236 samples, 0.76%)</title><rect x="56.5269%" y="437" width="0.7605%" height="15" fill="rgb(227,79,8)" fg:x="17542" fg:w="236"/><text x="56.7769%" y="447.50"></text></g><g><title>_copy_to_iter (361 samples, 1.16%)</title><rect x="56.3690%" y="453" width="1.1633%" height="15" fill="rgb(236,58,11)" fg:x="17493" fg:w="361"/><text x="56.6190%" y="463.50"></text></g><g><title>copy_user_generic_unrolled (76 samples, 0.24%)</title><rect x="57.2874%" y="437" width="0.2449%" height="15" fill="rgb(249,63,35)" fg:x="17778" fg:w="76"/><text x="57.5374%" y="447.50"></text></g><g><title>__check_heap_object (21 samples, 0.07%)</title><rect x="57.7675%" y="421" width="0.0677%" height="15" fill="rgb(252,114,16)" fg:x="17927" fg:w="21"/><text x="58.0175%" y="431.50"></text></g><g><title>__virt_addr_valid (62 samples, 0.20%)</title><rect x="57.8352%" y="421" width="0.1998%" height="15" fill="rgb(254,151,24)" fg:x="17948" fg:w="62"/><text x="58.0852%" y="431.50"></text></g><g><title>tun_do_read (837 samples, 2.70%)</title><rect x="55.3572%" y="501" width="2.6971%" height="15" fill="rgb(253,54,39)" fg:x="17179" fg:w="837"/><text x="55.6072%" y="511.50">tu..</text></g><g><title>skb_copy_datagram_iter (578 samples, 1.86%)</title><rect x="56.1918%" y="485" width="1.8625%" height="15" fill="rgb(243,25,45)" fg:x="17438" fg:w="578"/><text x="56.4418%" y="495.50">s..</text></g><g><title>__skb_datagram_iter (572 samples, 1.84%)</title><rect x="56.2111%" y="469" width="1.8432%" height="15" fill="rgb(234,134,9)" fg:x="17444" fg:w="572"/><text x="56.4611%" y="479.50">_..</text></g><g><title>simple_copy_to_iter (162 samples, 0.52%)</title><rect x="57.5323%" y="453" width="0.5220%" height="15" fill="rgb(227,166,31)" fg:x="17854" fg:w="162"/><text x="57.7823%" y="463.50"></text></g><g><title>__check_object_size (159 samples, 0.51%)</title><rect x="57.5420%" y="437" width="0.5124%" height="15" fill="rgb(245,143,41)" fg:x="17857" fg:w="159"/><text x="57.7920%" y="447.50"></text></g><g><title>check_stack_object (4 samples, 0.01%)</title><rect x="58.0414%" y="421" width="0.0129%" height="15" fill="rgb(238,181,32)" fg:x="18012" fg:w="4"/><text x="58.2914%" y="431.50"></text></g><g><title>new_sync_read (936 samples, 3.02%)</title><rect x="55.2090%" y="533" width="3.0161%" height="15" fill="rgb(224,113,18)" fg:x="17133" fg:w="936"/><text x="55.4590%" y="543.50">new..</text></g><g><title>tun_chr_read_iter (910 samples, 2.93%)</title><rect x="55.2928%" y="517" width="2.9324%" height="15" fill="rgb(240,229,28)" fg:x="17159" fg:w="910"/><text x="55.5428%" y="527.50">tu..</text></g><g><title>tun_get (53 samples, 0.17%)</title><rect x="58.0543%" y="501" width="0.1708%" height="15" fill="rgb(250,185,3)" fg:x="18016" fg:w="53"/><text x="58.3043%" y="511.50"></text></g><g><title>ksys_read (1,054 samples, 3.40%)</title><rect x="54.8384%" y="565" width="3.3964%" height="15" fill="rgb(212,59,25)" fg:x="17018" fg:w="1054"/><text x="55.0884%" y="575.50">ksy..</text></g><g><title>vfs_read (976 samples, 3.15%)</title><rect x="55.0897%" y="549" width="3.1450%" height="15" fill="rgb(221,87,20)" fg:x="17096" fg:w="976"/><text x="55.3397%" y="559.50">vfs..</text></g><g><title>entry_SYSCALL_64_after_hwframe (1,088 samples, 3.51%)</title><rect x="54.7611%" y="597" width="3.5059%" height="15" fill="rgb(213,74,28)" fg:x="16994" fg:w="1088"/><text x="55.0111%" y="607.50">ent..</text></g><g><title>do_syscall_64 (1,080 samples, 3.48%)</title><rect x="54.7868%" y="581" width="3.4802%" height="15" fill="rgb(224,132,34)" fg:x="17002" fg:w="1080"/><text x="55.0368%" y="591.50">do_..</text></g><g><title>syscall_exit_to_user_mode (9 samples, 0.03%)</title><rect x="58.2380%" y="565" width="0.0290%" height="15" fill="rgb(222,101,24)" fg:x="18073" fg:w="9"/><text x="58.4880%" y="575.50"></text></g><g><title>read (1,259 samples, 4.06%)</title><rect x="54.2229%" y="613" width="4.0570%" height="15" fill="rgb(254,142,4)" fg:x="16827" fg:w="1259"/><text x="54.4729%" y="623.50">read</text></g><g><title>syscall_return_via_sysret (4 samples, 0.01%)</title><rect x="58.2670%" y="597" width="0.0129%" height="15" fill="rgb(230,229,49)" fg:x="18082" fg:w="4"/><text x="58.5170%" y="607.50"></text></g><g><title>tokio::io::async_fd::AsyncFdReadyMutGuard&lt;Inner&gt;::try_io (1,284 samples, 4.14%)</title><rect x="54.1585%" y="629" width="4.1375%" height="15" fill="rgb(238,70,47)" fg:x="16807" fg:w="1284"/><text x="54.4085%" y="639.50">tokio..</text></g><g><title>&lt;tun::async::device::AsyncDevice as tokio::io::async_read::AsyncRead&gt;::poll_read (1,597 samples, 5.15%)</title><rect x="53.3432%" y="645" width="5.1461%" height="15" fill="rgb(231,160,17)" fg:x="16554" fg:w="1597"/><text x="53.5932%" y="655.50">&lt;tun::..</text></g><g><title>tokio::runtime::io::registration::Registration::poll_read_ready (60 samples, 0.19%)</title><rect x="58.2960%" y="629" width="0.1933%" height="15" fill="rgb(218,68,53)" fg:x="18091" fg:w="60"/><text x="58.5460%" y="639.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (55 samples, 0.18%)</title><rect x="58.3121%" y="613" width="0.1772%" height="15" fill="rgb(236,111,10)" fg:x="18096" fg:w="55"/><text x="58.5621%" y="623.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness (28 samples, 0.09%)</title><rect x="58.3991%" y="597" width="0.0902%" height="15" fill="rgb(224,34,41)" fg:x="18123" fg:w="28"/><text x="58.6491%" y="607.50"></text></g><g><title>tracing::__macro_support::__is_enabled (11 samples, 0.04%)</title><rect x="58.4894%" y="645" width="0.0354%" height="15" fill="rgb(241,118,19)" fg:x="18151" fg:w="11"/><text x="58.7394%" y="655.50"></text></g><g><title>&lt;tracing_subscriber::fmt::Subscriber&lt;N,E,F,W&gt; as tracing_core::subscriber::Subscriber&gt;::event (4 samples, 0.01%)</title><rect x="58.6762%" y="629" width="0.0129%" height="15" fill="rgb(238,129,25)" fg:x="18209" fg:w="4"/><text x="58.9262%" y="639.50"></text></g><g><title>[libc.so.6] (170 samples, 0.55%)</title><rect x="60.6645%" y="533" width="0.5478%" height="15" fill="rgb(238,22,31)" fg:x="18826" fg:w="170"/><text x="60.9145%" y="543.50"></text></g><g><title>entry_SYSCALL_64 (83 samples, 0.27%)</title><rect x="61.2155%" y="533" width="0.2675%" height="15" fill="rgb(222,174,48)" fg:x="18997" fg:w="83"/><text x="61.4655%" y="543.50"></text></g><g><title>__x64_sys_write (14 samples, 0.05%)</title><rect x="61.6022%" y="501" width="0.0451%" height="15" fill="rgb(206,152,40)" fg:x="19117" fg:w="14"/><text x="61.8522%" y="511.50"></text></g><g><title>__fget_light (144 samples, 0.46%)</title><rect x="61.8310%" y="469" width="0.4640%" height="15" fill="rgb(218,99,54)" fg:x="19188" fg:w="144"/><text x="62.0810%" y="479.50"></text></g><g><title>__fget_files (96 samples, 0.31%)</title><rect x="61.9856%" y="453" width="0.3093%" height="15" fill="rgb(220,174,26)" fg:x="19236" fg:w="96"/><text x="62.2356%" y="463.50"></text></g><g><title>__fdget_pos (203 samples, 0.65%)</title><rect x="61.7343%" y="485" width="0.6541%" height="15" fill="rgb(245,116,9)" fg:x="19158" fg:w="203"/><text x="61.9843%" y="495.50"></text></g><g><title>mutex_lock (29 samples, 0.09%)</title><rect x="62.2950%" y="469" width="0.0934%" height="15" fill="rgb(209,72,35)" fg:x="19332" fg:w="29"/><text x="62.5450%" y="479.50"></text></g><g><title>fput_many (33 samples, 0.11%)</title><rect x="62.3949%" y="485" width="0.1063%" height="15" fill="rgb(226,126,21)" fg:x="19363" fg:w="33"/><text x="62.6449%" y="495.50"></text></g><g><title>mutex_unlock (38 samples, 0.12%)</title><rect x="62.5012%" y="485" width="0.1225%" height="15" fill="rgb(227,192,1)" fg:x="19396" fg:w="38"/><text x="62.7512%" y="495.50"></text></g><g><title>__fsnotify_parent (28 samples, 0.09%)</title><rect x="62.9749%" y="469" width="0.0902%" height="15" fill="rgb(237,180,29)" fg:x="19543" fg:w="28"/><text x="63.2249%" y="479.50"></text></g><g><title>down_write (53 samples, 0.17%)</title><rect x="63.2875%" y="437" width="0.1708%" height="15" fill="rgb(230,197,35)" fg:x="19640" fg:w="53"/><text x="63.5375%" y="447.50"></text></g><g><title>ext4_generic_write_checks (49 samples, 0.16%)</title><rect x="63.4583%" y="437" width="0.1579%" height="15" fill="rgb(246,193,31)" fg:x="19693" fg:w="49"/><text x="63.7083%" y="447.50"></text></g><g><title>generic_write_checks (39 samples, 0.13%)</title><rect x="63.4905%" y="421" width="0.1257%" height="15" fill="rgb(241,36,4)" fg:x="19703" fg:w="39"/><text x="63.7405%" y="431.50"></text></g><g><title>generic_write_check_limits (24 samples, 0.08%)</title><rect x="63.5388%" y="405" width="0.0773%" height="15" fill="rgb(241,130,17)" fg:x="19718" fg:w="24"/><text x="63.7888%" y="415.50"></text></g><g><title>file_modified (30 samples, 0.10%)</title><rect x="63.6162%" y="437" width="0.0967%" height="15" fill="rgb(206,137,32)" fg:x="19742" fg:w="30"/><text x="63.8662%" y="447.50"></text></g><g><title>file_remove_privs (14 samples, 0.05%)</title><rect x="63.6677%" y="421" width="0.0451%" height="15" fill="rgb(237,228,51)" fg:x="19758" fg:w="14"/><text x="63.9177%" y="431.50"></text></g><g><title>current_time (39 samples, 0.13%)</title><rect x="63.7773%" y="421" width="0.1257%" height="15" fill="rgb(243,6,42)" fg:x="19792" fg:w="39"/><text x="64.0273%" y="431.50"></text></g><g><title>ktime_get_coarse_real_ts64 (23 samples, 0.07%)</title><rect x="63.8288%" y="405" width="0.0741%" height="15" fill="rgb(251,74,28)" fg:x="19808" fg:w="23"/><text x="64.0788%" y="415.50"></text></g><g><title>file_update_time (62 samples, 0.20%)</title><rect x="63.7128%" y="437" width="0.1998%" height="15" fill="rgb(218,20,49)" fg:x="19772" fg:w="62"/><text x="63.9628%" y="447.50"></text></g><g><title>__cond_resched (12 samples, 0.04%)</title><rect x="64.1543%" y="421" width="0.0387%" height="15" fill="rgb(238,28,14)" fg:x="19909" fg:w="12"/><text x="64.4043%" y="431.50"></text></g><g><title>rcu_all_qs (9 samples, 0.03%)</title><rect x="64.1640%" y="405" width="0.0290%" height="15" fill="rgb(229,40,46)" fg:x="19912" fg:w="9"/><text x="64.4140%" y="415.50"></text></g><g><title>balance_dirty_pages_ratelimited (30 samples, 0.10%)</title><rect x="64.1962%" y="421" width="0.0967%" height="15" fill="rgb(244,195,20)" fg:x="19922" fg:w="30"/><text x="64.4462%" y="431.50"></text></g><g><title>copy_user_enhanced_fast_string (125 samples, 0.40%)</title><rect x="64.6119%" y="405" width="0.4028%" height="15" fill="rgb(253,56,35)" fg:x="20051" fg:w="125"/><text x="64.8619%" y="415.50"></text></g><g><title>copy_page_from_iter_atomic (227 samples, 0.73%)</title><rect x="64.2928%" y="421" width="0.7315%" height="15" fill="rgb(210,149,44)" fg:x="19952" fg:w="227"/><text x="64.5428%" y="431.50"></text></g><g><title>clean_bdev_aliases (17 samples, 0.05%)</title><rect x="65.4593%" y="389" width="0.0548%" height="15" fill="rgb(240,135,12)" fg:x="20314" fg:w="17"/><text x="65.7093%" y="399.50"></text></g><g><title>pagevec_lookup_range (16 samples, 0.05%)</title><rect x="65.4626%" y="373" width="0.0516%" height="15" fill="rgb(251,24,50)" fg:x="20315" fg:w="16"/><text x="65.7126%" y="383.50"></text></g><g><title>find_get_pages_range (15 samples, 0.05%)</title><rect x="65.4658%" y="357" width="0.0483%" height="15" fill="rgb(243,200,47)" fg:x="20316" fg:w="15"/><text x="65.7158%" y="367.50"></text></g><g><title>xas_find (7 samples, 0.02%)</title><rect x="65.4916%" y="341" width="0.0226%" height="15" fill="rgb(224,166,26)" fg:x="20324" fg:w="7"/><text x="65.7416%" y="351.50"></text></g><g><title>create_page_buffers (49 samples, 0.16%)</title><rect x="65.5141%" y="389" width="0.1579%" height="15" fill="rgb(233,0,47)" fg:x="20331" fg:w="49"/><text x="65.7641%" y="399.50"></text></g><g><title>create_empty_buffers (38 samples, 0.12%)</title><rect x="65.5496%" y="373" width="0.1225%" height="15" fill="rgb(253,80,5)" fg:x="20342" fg:w="38"/><text x="65.7996%" y="383.50"></text></g><g><title>alloc_page_buffers (28 samples, 0.09%)</title><rect x="65.5818%" y="357" width="0.0902%" height="15" fill="rgb(214,133,25)" fg:x="20352" fg:w="28"/><text x="65.8318%" y="367.50"></text></g><g><title>alloc_buffer_head (26 samples, 0.08%)</title><rect x="65.5882%" y="341" width="0.0838%" height="15" fill="rgb(209,27,14)" fg:x="20354" fg:w="26"/><text x="65.8382%" y="351.50"></text></g><g><title>kmem_cache_alloc (18 samples, 0.06%)</title><rect x="65.6140%" y="325" width="0.0580%" height="15" fill="rgb(219,102,51)" fg:x="20362" fg:w="18"/><text x="65.8640%" y="335.50"></text></g><g><title>memset_erms (5 samples, 0.02%)</title><rect x="65.6559%" y="309" width="0.0161%" height="15" fill="rgb(237,18,16)" fg:x="20375" fg:w="5"/><text x="65.9059%" y="319.50"></text></g><g><title>down_read (4 samples, 0.01%)</title><rect x="65.7075%" y="373" width="0.0129%" height="15" fill="rgb(241,85,17)" fg:x="20391" fg:w="4"/><text x="65.9575%" y="383.50"></text></g><g><title>__dquot_alloc_space (14 samples, 0.05%)</title><rect x="65.7236%" y="357" width="0.0451%" height="15" fill="rgb(236,90,42)" fg:x="20396" fg:w="14"/><text x="65.9736%" y="367.50"></text></g><g><title>ext4_get_reserved_space (5 samples, 0.02%)</title><rect x="65.7526%" y="341" width="0.0161%" height="15" fill="rgb(249,57,21)" fg:x="20405" fg:w="5"/><text x="66.0026%" y="351.50"></text></g><g><title>ext4_has_free_clusters (4 samples, 0.01%)</title><rect x="65.7751%" y="341" width="0.0129%" height="15" fill="rgb(243,12,36)" fg:x="20412" fg:w="4"/><text x="66.0251%" y="351.50"></text></g><g><title>ext4_da_reserve_space (25 samples, 0.08%)</title><rect x="65.7204%" y="373" width="0.0806%" height="15" fill="rgb(253,128,47)" fg:x="20395" fg:w="25"/><text x="65.9704%" y="383.50"></text></g><g><title>ext4_claim_free_clusters (9 samples, 0.03%)</title><rect x="65.7719%" y="357" width="0.0290%" height="15" fill="rgb(207,33,20)" fg:x="20411" fg:w="9"/><text x="66.0219%" y="367.50"></text></g><g><title>percpu_counter_add_batch (4 samples, 0.01%)</title><rect x="65.7880%" y="341" width="0.0129%" height="15" fill="rgb(233,215,35)" fg:x="20416" fg:w="4"/><text x="66.0380%" y="351.50"></text></g><g><title>__es_insert_extent (11 samples, 0.04%)</title><rect x="65.8170%" y="357" width="0.0354%" height="15" fill="rgb(249,188,52)" fg:x="20425" fg:w="11"/><text x="66.0670%" y="367.50"></text></g><g><title>__es_remove_extent (9 samples, 0.03%)</title><rect x="65.8525%" y="357" width="0.0290%" height="15" fill="rgb(225,12,32)" fg:x="20436" fg:w="9"/><text x="66.1025%" y="367.50"></text></g><g><title>__es_tree_search.isra.0 (6 samples, 0.02%)</title><rect x="65.8621%" y="341" width="0.0193%" height="15" fill="rgb(247,98,14)" fg:x="20439" fg:w="6"/><text x="66.1121%" y="351.50"></text></g><g><title>ext4_es_insert_delayed_block (27 samples, 0.09%)</title><rect x="65.8009%" y="373" width="0.0870%" height="15" fill="rgb(247,219,48)" fg:x="20420" fg:w="27"/><text x="66.0509%" y="383.50"></text></g><g><title>ext4_es_lookup_extent (14 samples, 0.05%)</title><rect x="65.8879%" y="373" width="0.0451%" height="15" fill="rgb(253,60,48)" fg:x="20447" fg:w="14"/><text x="66.1379%" y="383.50"></text></g><g><title>percpu_counter_add_batch (4 samples, 0.01%)</title><rect x="65.9201%" y="357" width="0.0129%" height="15" fill="rgb(245,15,52)" fg:x="20457" fg:w="4"/><text x="66.1701%" y="367.50"></text></g><g><title>ext4_da_get_block_prep (83 samples, 0.27%)</title><rect x="65.6720%" y="389" width="0.2675%" height="15" fill="rgb(220,133,28)" fg:x="20380" fg:w="83"/><text x="65.9220%" y="399.50"></text></g><g><title>__block_write_begin_int (284 samples, 0.92%)</title><rect x="65.2918%" y="405" width="0.9152%" height="15" fill="rgb(217,180,4)" fg:x="20262" fg:w="284"/><text x="65.5418%" y="415.50"></text></g><g><title>zero_user_segments (83 samples, 0.27%)</title><rect x="65.9395%" y="389" width="0.2675%" height="15" fill="rgb(251,24,1)" fg:x="20463" fg:w="83"/><text x="66.1895%" y="399.50"></text></g><g><title>memset_erms (78 samples, 0.25%)</title><rect x="65.9556%" y="373" width="0.2513%" height="15" fill="rgb(212,185,49)" fg:x="20468" fg:w="78"/><text x="66.2056%" y="383.50"></text></g><g><title>ext4_nonda_switch (44 samples, 0.14%)</title><rect x="66.2069%" y="405" width="0.1418%" height="15" fill="rgb(215,175,22)" fg:x="20546" fg:w="44"/><text x="66.4569%" y="415.50"></text></g><g><title>PageHuge (26 samples, 0.08%)</title><rect x="66.9126%" y="373" width="0.0838%" height="15" fill="rgb(250,205,14)" fg:x="20765" fg:w="26"/><text x="67.1626%" y="383.50"></text></g><g><title>__list_del_entry_valid (4 samples, 0.01%)</title><rect x="67.0448%" y="341" width="0.0129%" height="15" fill="rgb(225,211,22)" fg:x="20806" fg:w="4"/><text x="67.2948%" y="351.50"></text></g><g><title>node_dirty_ok (18 samples, 0.06%)</title><rect x="67.0576%" y="341" width="0.0580%" height="15" fill="rgb(251,179,42)" fg:x="20810" fg:w="18"/><text x="67.3076%" y="351.50"></text></g><g><title>get_page_from_freelist (34 samples, 0.11%)</title><rect x="67.0254%" y="357" width="0.1096%" height="15" fill="rgb(208,216,51)" fg:x="20800" fg:w="34"/><text x="67.2754%" y="367.50"></text></g><g><title>rmqueue_bulk (6 samples, 0.02%)</title><rect x="67.1157%" y="341" width="0.0193%" height="15" fill="rgb(235,36,11)" fg:x="20828" fg:w="6"/><text x="67.3657%" y="351.50"></text></g><g><title>__alloc_pages (44 samples, 0.14%)</title><rect x="66.9964%" y="373" width="0.1418%" height="15" fill="rgb(213,189,28)" fg:x="20791" fg:w="44"/><text x="67.2464%" y="383.50"></text></g><g><title>charge_memcg (7 samples, 0.02%)</title><rect x="67.1575%" y="325" width="0.0226%" height="15" fill="rgb(227,203,42)" fg:x="20841" fg:w="7"/><text x="67.4075%" y="335.50"></text></g><g><title>mem_cgroup_charge_statistics.constprop.0 (7 samples, 0.02%)</title><rect x="67.1575%" y="309" width="0.0226%" height="15" fill="rgb(244,72,36)" fg:x="20841" fg:w="7"/><text x="67.4075%" y="319.50"></text></g><g><title>cgroup_rstat_updated (7 samples, 0.02%)</title><rect x="67.1575%" y="293" width="0.0226%" height="15" fill="rgb(213,53,17)" fg:x="20841" fg:w="7"/><text x="67.4075%" y="303.50"></text></g><g><title>__mem_cgroup_charge (17 samples, 0.05%)</title><rect x="67.1575%" y="341" width="0.0548%" height="15" fill="rgb(207,167,3)" fg:x="20841" fg:w="17"/><text x="67.4075%" y="351.50"></text></g><g><title>get_mem_cgroup_from_mm (10 samples, 0.03%)</title><rect x="67.1801%" y="325" width="0.0322%" height="15" fill="rgb(216,98,30)" fg:x="20848" fg:w="10"/><text x="67.4301%" y="335.50"></text></g><g><title>__mod_lruvec_page_state (8 samples, 0.03%)</title><rect x="67.2123%" y="341" width="0.0258%" height="15" fill="rgb(236,123,15)" fg:x="20858" fg:w="8"/><text x="67.4623%" y="351.50"></text></g><g><title>__mod_memcg_lruvec_state (4 samples, 0.01%)</title><rect x="67.2252%" y="325" width="0.0129%" height="15" fill="rgb(248,81,50)" fg:x="20862" fg:w="4"/><text x="67.4752%" y="335.50"></text></g><g><title>workingset_update_node (4 samples, 0.01%)</title><rect x="67.2832%" y="325" width="0.0129%" height="15" fill="rgb(214,120,4)" fg:x="20880" fg:w="4"/><text x="67.5332%" y="335.50"></text></g><g><title>__add_to_page_cache_locked (53 samples, 0.17%)</title><rect x="67.1414%" y="357" width="0.1708%" height="15" fill="rgb(208,179,34)" fg:x="20836" fg:w="53"/><text x="67.3914%" y="367.50"></text></g><g><title>xas_store (13 samples, 0.04%)</title><rect x="67.2703%" y="341" width="0.0419%" height="15" fill="rgb(227,140,7)" fg:x="20876" fg:w="13"/><text x="67.5203%" y="351.50"></text></g><g><title>xas_create (5 samples, 0.02%)</title><rect x="67.2961%" y="325" width="0.0161%" height="15" fill="rgb(214,22,6)" fg:x="20884" fg:w="5"/><text x="67.5461%" y="335.50"></text></g><g><title>__mod_memcg_lruvec_state (4 samples, 0.01%)</title><rect x="67.3348%" y="325" width="0.0129%" height="15" fill="rgb(207,137,27)" fg:x="20896" fg:w="4"/><text x="67.5848%" y="335.50"></text></g><g><title>add_to_page_cache_lru (67 samples, 0.22%)</title><rect x="67.1382%" y="373" width="0.2159%" height="15" fill="rgb(210,8,46)" fg:x="20835" fg:w="67"/><text x="67.3882%" y="383.50"></text></g><g><title>lru_cache_add (13 samples, 0.04%)</title><rect x="67.3122%" y="357" width="0.0419%" height="15" fill="rgb(240,16,54)" fg:x="20889" fg:w="13"/><text x="67.5622%" y="367.50"></text></g><g><title>__pagevec_lru_add (9 samples, 0.03%)</title><rect x="67.3251%" y="341" width="0.0290%" height="15" fill="rgb(211,209,29)" fg:x="20893" fg:w="9"/><text x="67.5751%" y="351.50"></text></g><g><title>pagecache_get_page (490 samples, 1.58%)</title><rect x="66.3938%" y="389" width="1.5790%" height="15" fill="rgb(226,228,24)" fg:x="20604" fg:w="490"/><text x="66.6438%" y="399.50"></text></g><g><title>xas_load (191 samples, 0.62%)</title><rect x="67.3573%" y="373" width="0.6155%" height="15" fill="rgb(222,84,9)" fg:x="20903" fg:w="191"/><text x="67.6073%" y="383.50"></text></g><g><title>xas_start (37 samples, 0.12%)</title><rect x="67.8536%" y="357" width="0.1192%" height="15" fill="rgb(234,203,30)" fg:x="21057" fg:w="37"/><text x="68.1036%" y="367.50"></text></g><g><title>grab_cache_page_write_begin (512 samples, 1.65%)</title><rect x="66.3487%" y="405" width="1.6499%" height="15" fill="rgb(238,109,14)" fg:x="20590" fg:w="512"/><text x="66.5987%" y="415.50"></text></g><g><title>wait_for_stable_page (8 samples, 0.03%)</title><rect x="67.9728%" y="389" width="0.0258%" height="15" fill="rgb(233,206,34)" fg:x="21094" fg:w="8"/><text x="68.2228%" y="399.50"></text></g><g><title>ext4_da_write_begin (927 samples, 2.99%)</title><rect x="65.0243%" y="421" width="2.9871%" height="15" fill="rgb(220,167,47)" fg:x="20179" fg:w="927"/><text x="65.2743%" y="431.50">ext..</text></g><g><title>wait_for_stable_page (4 samples, 0.01%)</title><rect x="67.9986%" y="405" width="0.0129%" height="15" fill="rgb(238,105,10)" fg:x="21102" fg:w="4"/><text x="68.2486%" y="415.50"></text></g><g><title>ext4_da_write_end (68 samples, 0.22%)</title><rect x="68.0115%" y="421" width="0.2191%" height="15" fill="rgb(213,227,17)" fg:x="21106" fg:w="68"/><text x="68.2615%" y="431.50"></text></g><g><title>fault_in_iov_iter_readable (154 samples, 0.50%)</title><rect x="68.2306%" y="421" width="0.4962%" height="15" fill="rgb(217,132,38)" fg:x="21174" fg:w="154"/><text x="68.4806%" y="431.50"></text></g><g><title>fault_in_readable (133 samples, 0.43%)</title><rect x="68.2983%" y="405" width="0.4286%" height="15" fill="rgb(242,146,4)" fg:x="21195" fg:w="133"/><text x="68.5483%" y="415.50"></text></g><g><title>__get_user_nocheck_1 (97 samples, 0.31%)</title><rect x="68.4143%" y="389" width="0.3126%" height="15" fill="rgb(212,61,9)" fg:x="21231" fg:w="97"/><text x="68.6643%" y="399.50"></text></g><g><title>__inc_node_page_state (4 samples, 0.01%)</title><rect x="69.4648%" y="357" width="0.0129%" height="15" fill="rgb(247,126,22)" fg:x="21557" fg:w="4"/><text x="69.7148%" y="367.50"></text></g><g><title>__xa_set_mark (4 samples, 0.01%)</title><rect x="69.4809%" y="357" width="0.0129%" height="15" fill="rgb(220,196,2)" fg:x="21562" fg:w="4"/><text x="69.7309%" y="367.50"></text></g><g><title>_raw_spin_lock_irqsave (4 samples, 0.01%)</title><rect x="69.4938%" y="357" width="0.0129%" height="15" fill="rgb(208,46,4)" fg:x="21566" fg:w="4"/><text x="69.7438%" y="367.50"></text></g><g><title>__set_page_dirty (23 samples, 0.07%)</title><rect x="69.4583%" y="373" width="0.0741%" height="15" fill="rgb(252,104,46)" fg:x="21555" fg:w="23"/><text x="69.7083%" y="383.50"></text></g><g><title>percpu_counter_add_batch (8 samples, 0.03%)</title><rect x="69.5067%" y="357" width="0.0258%" height="15" fill="rgb(237,152,48)" fg:x="21570" fg:w="8"/><text x="69.7567%" y="367.50"></text></g><g><title>page_mapping (4 samples, 0.01%)</title><rect x="69.5485%" y="373" width="0.0129%" height="15" fill="rgb(221,59,37)" fg:x="21583" fg:w="4"/><text x="69.7985%" y="383.50"></text></g><g><title>__block_commit_write.constprop.0.isra.0 (163 samples, 0.53%)</title><rect x="69.0394%" y="405" width="0.5252%" height="15" fill="rgb(209,202,51)" fg:x="21425" fg:w="163"/><text x="69.2894%" y="415.50"></text></g><g><title>mark_buffer_dirty (78 samples, 0.25%)</title><rect x="69.3133%" y="389" width="0.2513%" height="15" fill="rgb(228,81,30)" fg:x="21510" fg:w="78"/><text x="69.5633%" y="399.50"></text></g><g><title>kmem_cache_free.part.0 (40 samples, 0.13%)</title><rect x="69.9578%" y="357" width="0.1289%" height="15" fill="rgb(227,42,39)" fg:x="21710" fg:w="40"/><text x="70.2078%" y="367.50"></text></g><g><title>__wake_up (6 samples, 0.02%)</title><rect x="70.3767%" y="341" width="0.0193%" height="15" fill="rgb(221,26,2)" fg:x="21840" fg:w="6"/><text x="70.6267%" y="351.50"></text></g><g><title>__wake_up_common (19 samples, 0.06%)</title><rect x="70.4863%" y="325" width="0.0612%" height="15" fill="rgb(254,61,31)" fg:x="21874" fg:w="19"/><text x="70.7363%" y="335.50"></text></g><g><title>_raw_spin_lock_irqsave (58 samples, 0.19%)</title><rect x="70.5475%" y="325" width="0.1869%" height="15" fill="rgb(222,173,38)" fg:x="21893" fg:w="58"/><text x="70.7975%" y="335.50"></text></g><g><title>__ext4_journal_stop (333 samples, 1.07%)</title><rect x="69.8031%" y="389" width="1.0731%" height="15" fill="rgb(218,50,12)" fg:x="21662" fg:w="333"/><text x="70.0531%" y="399.50"></text></g><g><title>jbd2_journal_stop (319 samples, 1.03%)</title><rect x="69.8482%" y="373" width="1.0279%" height="15" fill="rgb(223,88,40)" fg:x="21676" fg:w="319"/><text x="70.0982%" y="383.50"></text></g><g><title>stop_this_handle (245 samples, 0.79%)</title><rect x="70.0867%" y="357" width="0.7895%" height="15" fill="rgb(237,54,19)" fg:x="21750" fg:w="245"/><text x="70.3367%" y="367.50"></text></g><g><title>__wake_up_common_lock (149 samples, 0.48%)</title><rect x="70.3960%" y="341" width="0.4801%" height="15" fill="rgb(251,129,25)" fg:x="21846" fg:w="149"/><text x="70.6460%" y="351.50"></text></g><g><title>_raw_spin_unlock_irqrestore (44 samples, 0.14%)</title><rect x="70.7344%" y="325" width="0.1418%" height="15" fill="rgb(238,97,19)" fg:x="21951" fg:w="44"/><text x="70.9844%" y="335.50"></text></g><g><title>__raw_callee_save___pv_queued_spin_unlock (44 samples, 0.14%)</title><rect x="70.7344%" y="309" width="0.1418%" height="15" fill="rgb(240,169,18)" fg:x="21951" fg:w="44"/><text x="70.9844%" y="319.50"></text></g><g><title>ext4_journal_check_start (17 samples, 0.05%)</title><rect x="70.9889%" y="357" width="0.0548%" height="15" fill="rgb(230,187,49)" fg:x="22030" fg:w="17"/><text x="71.2389%" y="367.50"></text></g><g><title>memset_erms (49 samples, 0.16%)</title><rect x="71.6528%" y="325" width="0.1579%" height="15" fill="rgb(209,44,26)" fg:x="22236" fg:w="49"/><text x="71.9028%" y="335.50"></text></g><g><title>kmem_cache_alloc (137 samples, 0.44%)</title><rect x="71.3821%" y="341" width="0.4415%" height="15" fill="rgb(244,0,6)" fg:x="22152" fg:w="137"/><text x="71.6321%" y="351.50"></text></g><g><title>should_failslab (4 samples, 0.01%)</title><rect x="71.8107%" y="325" width="0.0129%" height="15" fill="rgb(248,18,21)" fg:x="22285" fg:w="4"/><text x="72.0607%" y="335.50"></text></g><g><title>_raw_read_lock (67 samples, 0.22%)</title><rect x="72.2553%" y="325" width="0.2159%" height="15" fill="rgb(245,180,19)" fg:x="22423" fg:w="67"/><text x="72.5053%" y="335.50"></text></g><g><title>__ext4_journal_start_sb (549 samples, 1.77%)</title><rect x="70.9342%" y="373" width="1.7691%" height="15" fill="rgb(252,118,36)" fg:x="22013" fg:w="549"/><text x="71.1842%" y="383.50"></text></g><g><title>jbd2__journal_start (515 samples, 1.66%)</title><rect x="71.0437%" y="357" width="1.6595%" height="15" fill="rgb(210,224,19)" fg:x="22047" fg:w="515"/><text x="71.2937%" y="367.50"></text></g><g><title>start_this_handle (273 samples, 0.88%)</title><rect x="71.8235%" y="341" width="0.8797%" height="15" fill="rgb(218,30,24)" fg:x="22289" fg:w="273"/><text x="72.0735%" y="351.50"></text></g><g><title>add_transaction_credits (72 samples, 0.23%)</title><rect x="72.4712%" y="325" width="0.2320%" height="15" fill="rgb(219,75,50)" fg:x="22490" fg:w="72"/><text x="72.7212%" y="335.50"></text></g><g><title>__brelse (35 samples, 0.11%)</title><rect x="73.6281%" y="341" width="0.1128%" height="15" fill="rgb(234,72,50)" fg:x="22849" fg:w="35"/><text x="73.8781%" y="351.50"></text></g><g><title>__ext4_handle_dirty_metadata (42 samples, 0.14%)</title><rect x="73.7409%" y="341" width="0.1353%" height="15" fill="rgb(219,100,48)" fg:x="22884" fg:w="42"/><text x="73.9909%" y="351.50"></text></g><g><title>jbd2_journal_dirty_metadata (13 samples, 0.04%)</title><rect x="73.8343%" y="325" width="0.0419%" height="15" fill="rgb(253,5,41)" fg:x="22913" fg:w="13"/><text x="74.0843%" y="335.50"></text></g><g><title>__raw_callee_save___pv_queued_spin_unlock (46 samples, 0.15%)</title><rect x="73.8762%" y="341" width="0.1482%" height="15" fill="rgb(247,181,11)" fg:x="22926" fg:w="46"/><text x="74.1262%" y="351.50"></text></g><g><title>_raw_spin_lock (41 samples, 0.13%)</title><rect x="74.0244%" y="341" width="0.1321%" height="15" fill="rgb(222,223,25)" fg:x="22972" fg:w="41"/><text x="74.2744%" y="351.50"></text></g><g><title>ext4_fc_track_template (30 samples, 0.10%)</title><rect x="74.2242%" y="325" width="0.0967%" height="15" fill="rgb(214,198,28)" fg:x="23034" fg:w="30"/><text x="74.4742%" y="335.50"></text></g><g><title>ext4_fc_track_inode (57 samples, 0.18%)</title><rect x="74.1598%" y="341" width="0.1837%" height="15" fill="rgb(230,46,43)" fg:x="23014" fg:w="57"/><text x="74.4098%" y="351.50"></text></g><g><title>ext4_inode_journal_mode (7 samples, 0.02%)</title><rect x="74.3209%" y="325" width="0.0226%" height="15" fill="rgb(233,65,53)" fg:x="23064" fg:w="7"/><text x="74.5709%" y="335.50"></text></g><g><title>__crc32c_le (13 samples, 0.04%)</title><rect x="74.8977%" y="293" width="0.0419%" height="15" fill="rgb(221,121,27)" fg:x="23243" fg:w="13"/><text x="75.1477%" y="303.50"></text></g><g><title>chksum_update (1,267 samples, 4.08%)</title><rect x="74.6882%" y="309" width="4.0828%" height="15" fill="rgb(247,70,47)" fg:x="23178" fg:w="1267"/><text x="74.9382%" y="319.50">chks..</text></g><g><title>crc32_body (1,188 samples, 3.83%)</title><rect x="74.9428%" y="293" width="3.8282%" height="15" fill="rgb(228,85,35)" fg:x="23257" fg:w="1188"/><text x="75.1928%" y="303.50">crc3..</text></g><g><title>ext4_inode_csum_set (1,435 samples, 4.62%)</title><rect x="74.3434%" y="341" width="4.6241%" height="15" fill="rgb(209,50,18)" fg:x="23071" fg:w="1435"/><text x="74.5934%" y="351.50">ext4_..</text></g><g><title>ext4_inode_csum (1,392 samples, 4.49%)</title><rect x="74.4820%" y="325" width="4.4855%" height="15" fill="rgb(250,19,35)" fg:x="23114" fg:w="1392"/><text x="74.7320%" y="335.50">ext4_..</text></g><g><title>crypto_shash_update (61 samples, 0.20%)</title><rect x="78.7710%" y="309" width="0.1966%" height="15" fill="rgb(253,107,29)" fg:x="24445" fg:w="61"/><text x="79.0210%" y="319.50"></text></g><g><title>from_kgid (5 samples, 0.02%)</title><rect x="78.9676%" y="341" width="0.0161%" height="15" fill="rgb(252,179,29)" fg:x="24506" fg:w="5"/><text x="79.2176%" y="351.50"></text></g><g><title>from_kprojid (5 samples, 0.02%)</title><rect x="78.9837%" y="341" width="0.0161%" height="15" fill="rgb(238,194,6)" fg:x="24511" fg:w="5"/><text x="79.2337%" y="351.50"></text></g><g><title>from_kuid (4 samples, 0.01%)</title><rect x="78.9998%" y="341" width="0.0129%" height="15" fill="rgb(238,164,29)" fg:x="24516" fg:w="4"/><text x="79.2498%" y="351.50"></text></g><g><title>ext4_mark_iloc_dirty (1,977 samples, 6.37%)</title><rect x="72.7741%" y="357" width="6.3706%" height="15" fill="rgb(224,25,9)" fg:x="22584" fg:w="1977"/><text x="73.0241%" y="367.50">ext4_mar..</text></g><g><title>map_id_up (41 samples, 0.13%)</title><rect x="79.0127%" y="341" width="0.1321%" height="15" fill="rgb(244,153,23)" fg:x="24520" fg:w="41"/><text x="79.2627%" y="351.50"></text></g><g><title>errseq_check (12 samples, 0.04%)</title><rect x="79.2769%" y="325" width="0.0387%" height="15" fill="rgb(212,203,14)" fg:x="24602" fg:w="12"/><text x="79.5269%" y="335.50"></text></g><g><title>__ext4_journal_get_write_access (92 samples, 0.30%)</title><rect x="79.1963%" y="341" width="0.2965%" height="15" fill="rgb(220,164,20)" fg:x="24577" fg:w="92"/><text x="79.4463%" y="351.50"></text></g><g><title>jbd2_journal_get_write_access (55 samples, 0.18%)</title><rect x="79.3156%" y="325" width="0.1772%" height="15" fill="rgb(222,203,48)" fg:x="24614" fg:w="55"/><text x="79.5656%" y="335.50"></text></g><g><title>jbd2_write_access_granted.part.0 (45 samples, 0.15%)</title><rect x="79.3478%" y="309" width="0.1450%" height="15" fill="rgb(215,159,22)" fg:x="24624" fg:w="45"/><text x="79.5978%" y="319.50"></text></g><g><title>__getblk_gfp (120 samples, 0.39%)</title><rect x="79.9633%" y="309" width="0.3867%" height="15" fill="rgb(216,183,47)" fg:x="24815" fg:w="120"/><text x="80.2133%" y="319.50"></text></g><g><title>__find_get_block (111 samples, 0.36%)</title><rect x="79.9923%" y="293" width="0.3577%" height="15" fill="rgb(229,195,25)" fg:x="24824" fg:w="111"/><text x="80.2423%" y="303.50"></text></g><g><title>mark_page_accessed (18 samples, 0.06%)</title><rect x="80.2919%" y="277" width="0.0580%" height="15" fill="rgb(224,132,51)" fg:x="24917" fg:w="18"/><text x="80.5419%" y="287.50"></text></g><g><title>ext4_get_group_desc (25 samples, 0.08%)</title><rect x="80.3500%" y="309" width="0.0806%" height="15" fill="rgb(240,63,7)" fg:x="24935" fg:w="25"/><text x="80.6000%" y="319.50"></text></g><g><title>__mark_inode_dirty (3,377 samples, 10.88%)</title><rect x="69.5647%" y="405" width="10.8820%" height="15" fill="rgb(249,182,41)" fg:x="21588" fg:w="3377"/><text x="69.8147%" y="415.50">__mark_inode_dir..</text></g><g><title>ext4_dirty_inode (2,970 samples, 9.57%)</title><rect x="70.8762%" y="389" width="9.5705%" height="15" fill="rgb(243,47,26)" fg:x="21995" fg:w="2970"/><text x="71.1262%" y="399.50">ext4_dirty_ino..</text></g><g><title>__ext4_mark_inode_dirty (2,403 samples, 7.74%)</title><rect x="72.7033%" y="373" width="7.7434%" height="15" fill="rgb(233,48,2)" fg:x="22562" fg:w="2403"/><text x="72.9533%" y="383.50">__ext4_mark..</text></g><g><title>ext4_reserve_inode_write (404 samples, 1.30%)</title><rect x="79.1448%" y="357" width="1.3018%" height="15" fill="rgb(244,165,34)" fg:x="24561" fg:w="404"/><text x="79.3948%" y="367.50"></text></g><g><title>ext4_get_inode_loc (296 samples, 0.95%)</title><rect x="79.4928%" y="341" width="0.9538%" height="15" fill="rgb(207,89,7)" fg:x="24669" fg:w="296"/><text x="79.7428%" y="351.50"></text></g><g><title>__ext4_get_inode_loc (282 samples, 0.91%)</title><rect x="79.5379%" y="325" width="0.9087%" height="15" fill="rgb(244,117,36)" fg:x="24683" fg:w="282"/><text x="79.7879%" y="335.50"></text></g><g><title>ext4_inode_table (5 samples, 0.02%)</title><rect x="80.4305%" y="309" width="0.0161%" height="15" fill="rgb(226,144,34)" fg:x="24960" fg:w="5"/><text x="80.6805%" y="319.50"></text></g><g><title>generic_perform_write (5,177 samples, 16.68%)</title><rect x="63.9126%" y="437" width="16.6822%" height="15" fill="rgb(213,23,19)" fg:x="19834" fg:w="5177"/><text x="64.1626%" y="447.50">generic_perform_write</text></g><g><title>generic_write_end (3,683 samples, 11.87%)</title><rect x="68.7268%" y="421" width="11.8680%" height="15" fill="rgb(217,75,12)" fg:x="21328" fg:w="3683"/><text x="68.9768%" y="431.50">generic_write_end</text></g><g><title>unlock_page (45 samples, 0.15%)</title><rect x="80.4498%" y="405" width="0.1450%" height="15" fill="rgb(224,159,17)" fg:x="24966" fg:w="45"/><text x="80.6998%" y="415.50"></text></g><g><title>ext4_buffered_write_iter (5,438 samples, 17.52%)</title><rect x="63.1811%" y="453" width="17.5233%" height="15" fill="rgb(217,118,1)" fg:x="19607" fg:w="5438"/><text x="63.4311%" y="463.50">ext4_buffered_write_iter</text></g><g><title>up_write (34 samples, 0.11%)</title><rect x="80.5949%" y="437" width="0.1096%" height="15" fill="rgb(232,180,48)" fg:x="25011" fg:w="34"/><text x="80.8449%" y="447.50"></text></g><g><title>ext4_file_write_iter (49 samples, 0.16%)</title><rect x="80.7044%" y="453" width="0.1579%" height="15" fill="rgb(230,27,33)" fg:x="25045" fg:w="49"/><text x="80.9544%" y="463.50"></text></g><g><title>new_sync_write (5,528 samples, 17.81%)</title><rect x="63.0651%" y="469" width="17.8133%" height="15" fill="rgb(205,31,21)" fg:x="19571" fg:w="5528"/><text x="63.3151%" y="479.50">new_sync_write</text></g><g><title>iov_iter_init (5 samples, 0.02%)</title><rect x="80.8623%" y="453" width="0.0161%" height="15" fill="rgb(253,59,4)" fg:x="25094" fg:w="5"/><text x="81.1123%" y="463.50"></text></g><g><title>rw_verify_area (13 samples, 0.04%)</title><rect x="80.8784%" y="469" width="0.0419%" height="15" fill="rgb(224,201,9)" fg:x="25099" fg:w="13"/><text x="81.1284%" y="479.50"></text></g><g><title>ksys_write (5,992 samples, 19.31%)</title><rect x="61.6473%" y="501" width="19.3085%" height="15" fill="rgb(229,206,30)" fg:x="19131" fg:w="5992"/><text x="61.8973%" y="511.50">ksys_write</text></g><g><title>vfs_write (5,689 samples, 18.33%)</title><rect x="62.6237%" y="485" width="18.3321%" height="15" fill="rgb(212,67,47)" fg:x="19434" fg:w="5689"/><text x="62.8737%" y="495.50">vfs_write</text></g><g><title>security_file_permission (11 samples, 0.04%)</title><rect x="80.9203%" y="469" width="0.0354%" height="15" fill="rgb(211,96,50)" fg:x="25112" fg:w="11"/><text x="81.1703%" y="479.50"></text></g><g><title>syscall_enter_from_user_mode (14 samples, 0.05%)</title><rect x="80.9558%" y="501" width="0.0451%" height="15" fill="rgb(252,114,18)" fg:x="25123" fg:w="14"/><text x="81.2058%" y="511.50"></text></g><g><title>amd_clear_divider (8 samples, 0.03%)</title><rect x="81.0202%" y="485" width="0.0258%" height="15" fill="rgb(223,58,37)" fg:x="25143" fg:w="8"/><text x="81.2702%" y="495.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (6,098 samples, 19.65%)</title><rect x="61.4829%" y="533" width="19.6500%" height="15" fill="rgb(237,70,4)" fg:x="19080" fg:w="6098"/><text x="61.7329%" y="543.50">entry_SYSCALL_64_after_hwframe</text></g><g><title>do_syscall_64 (6,072 samples, 19.57%)</title><rect x="61.5667%" y="517" width="19.5663%" height="15" fill="rgb(244,85,46)" fg:x="19106" fg:w="6072"/><text x="61.8167%" y="527.50">do_syscall_64</text></g><g><title>syscall_exit_to_user_mode (41 samples, 0.13%)</title><rect x="81.0009%" y="501" width="0.1321%" height="15" fill="rgb(223,39,52)" fg:x="25137" fg:w="41"/><text x="81.2509%" y="511.50"></text></g><g><title>exit_to_user_mode_prepare (27 samples, 0.09%)</title><rect x="81.0460%" y="485" width="0.0870%" height="15" fill="rgb(218,200,14)" fg:x="25151" fg:w="27"/><text x="81.2960%" y="495.50"></text></g><g><title>&lt;std::io::stdio::StdoutRaw as std::io::Write&gt;::write_all (6,559 samples, 21.14%)</title><rect x="60.0586%" y="565" width="21.1356%" height="15" fill="rgb(208,171,16)" fg:x="18638" fg:w="6559"/><text x="60.3086%" y="575.50">&lt;std::io::stdio::StdoutRaw as std..</text></g><g><title>__write (6,482 samples, 20.89%)</title><rect x="60.3068%" y="549" width="20.8874%" height="15" fill="rgb(234,200,18)" fg:x="18715" fg:w="6482"/><text x="60.5568%" y="559.50">__write</text></g><g><title>syscall_return_via_sysret (19 samples, 0.06%)</title><rect x="81.1330%" y="533" width="0.0612%" height="15" fill="rgb(228,45,11)" fg:x="25178" fg:w="19"/><text x="81.3830%" y="543.50"></text></g><g><title>[libc.so.6] (184 samples, 0.59%)</title><rect x="81.1942%" y="565" width="0.5929%" height="15" fill="rgb(237,182,11)" fg:x="25197" fg:w="184"/><text x="81.4442%" y="575.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (6,836 samples, 22.03%)</title><rect x="59.7622%" y="581" width="22.0282%" height="15" fill="rgb(241,175,49)" fg:x="18546" fg:w="6836"/><text x="60.0122%" y="591.50">&lt;std::io::stdio::StdoutLock as std:..</text></g><g><title>entry_SYSCALL_64 (6 samples, 0.02%)</title><rect x="82.1480%" y="549" width="0.0193%" height="15" fill="rgb(247,38,35)" fg:x="25493" fg:w="6"/><text x="82.3980%" y="559.50"></text></g><g><title>intel_pmu_disable_all (25 samples, 0.08%)</title><rect x="82.4928%" y="405" width="0.0806%" height="15" fill="rgb(228,39,49)" fg:x="25600" fg:w="25"/><text x="82.7428%" y="415.50"></text></g><g><title>__perf_event_task_sched_out (39 samples, 0.13%)</title><rect x="82.4574%" y="421" width="0.1257%" height="15" fill="rgb(226,101,26)" fg:x="25589" fg:w="39"/><text x="82.7074%" y="431.50"></text></g><g><title>_raw_spin_lock (4 samples, 0.01%)</title><rect x="82.5831%" y="421" width="0.0129%" height="15" fill="rgb(206,141,19)" fg:x="25628" fg:w="4"/><text x="82.8331%" y="431.50"></text></g><g><title>cpuacct_charge (12 samples, 0.04%)</title><rect x="82.6797%" y="373" width="0.0387%" height="15" fill="rgb(211,200,13)" fg:x="25658" fg:w="12"/><text x="82.9297%" y="383.50"></text></g><g><title>update_curr (22 samples, 0.07%)</title><rect x="82.6572%" y="389" width="0.0709%" height="15" fill="rgb(241,121,6)" fg:x="25651" fg:w="22"/><text x="82.9072%" y="399.50"></text></g><g><title>dequeue_task_fair (46 samples, 0.15%)</title><rect x="82.5959%" y="421" width="0.1482%" height="15" fill="rgb(234,221,29)" fg:x="25632" fg:w="46"/><text x="82.8459%" y="431.50"></text></g><g><title>dequeue_entity (34 samples, 0.11%)</title><rect x="82.6346%" y="405" width="0.1096%" height="15" fill="rgb(229,136,5)" fg:x="25644" fg:w="34"/><text x="82.8846%" y="415.50"></text></g><g><title>update_load_avg (5 samples, 0.02%)</title><rect x="82.7281%" y="389" width="0.0161%" height="15" fill="rgb(238,36,11)" fg:x="25673" fg:w="5"/><text x="82.9781%" y="399.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (27 samples, 0.09%)</title><rect x="82.8086%" y="389" width="0.0870%" height="15" fill="rgb(251,55,41)" fg:x="25698" fg:w="27"/><text x="83.0586%" y="399.50"></text></g><g><title>__perf_event_task_sched_in (38 samples, 0.12%)</title><rect x="82.7828%" y="405" width="0.1225%" height="15" fill="rgb(242,34,40)" fg:x="25690" fg:w="38"/><text x="83.0328%" y="415.50"></text></g><g><title>finish_task_switch.isra.0 (53 samples, 0.17%)</title><rect x="82.7442%" y="421" width="0.1708%" height="15" fill="rgb(215,42,17)" fg:x="25678" fg:w="53"/><text x="82.9942%" y="431.50"></text></g><g><title>pick_next_task_fair (13 samples, 0.04%)</title><rect x="82.9150%" y="421" width="0.0419%" height="15" fill="rgb(207,44,46)" fg:x="25731" fg:w="13"/><text x="83.1650%" y="431.50"></text></g><g><title>newidle_balance (10 samples, 0.03%)</title><rect x="82.9246%" y="405" width="0.0322%" height="15" fill="rgb(211,206,28)" fg:x="25734" fg:w="10"/><text x="83.1746%" y="415.50"></text></g><g><title>pick_next_task_idle (14 samples, 0.05%)</title><rect x="82.9569%" y="421" width="0.0451%" height="15" fill="rgb(237,167,16)" fg:x="25744" fg:w="14"/><text x="83.2069%" y="431.50"></text></g><g><title>__update_idle_core (10 samples, 0.03%)</title><rect x="82.9697%" y="405" width="0.0322%" height="15" fill="rgb(233,66,6)" fg:x="25748" fg:w="10"/><text x="83.2197%" y="415.50"></text></g><g><title>put_prev_task_fair (9 samples, 0.03%)</title><rect x="83.0020%" y="421" width="0.0290%" height="15" fill="rgb(246,123,29)" fg:x="25758" fg:w="9"/><text x="83.2520%" y="431.50"></text></g><g><title>futex_wait_queue_me (229 samples, 0.74%)</title><rect x="82.3382%" y="469" width="0.7379%" height="15" fill="rgb(209,62,40)" fg:x="25552" fg:w="229"/><text x="82.5882%" y="479.50"></text></g><g><title>schedule (216 samples, 0.70%)</title><rect x="82.3800%" y="453" width="0.6960%" height="15" fill="rgb(218,4,25)" fg:x="25565" fg:w="216"/><text x="82.6300%" y="463.50"></text></g><g><title>__schedule (211 samples, 0.68%)</title><rect x="82.3962%" y="437" width="0.6799%" height="15" fill="rgb(253,91,49)" fg:x="25570" fg:w="211"/><text x="82.6462%" y="447.50"></text></g><g><title>update_rq_clock (14 samples, 0.05%)</title><rect x="83.0310%" y="421" width="0.0451%" height="15" fill="rgb(228,155,29)" fg:x="25767" fg:w="14"/><text x="83.2810%" y="431.50"></text></g><g><title>sched_clock_cpu (13 samples, 0.04%)</title><rect x="83.0342%" y="405" width="0.0419%" height="15" fill="rgb(243,57,37)" fg:x="25768" fg:w="13"/><text x="83.2842%" y="415.50"></text></g><g><title>read_hv_sched_clock_tsc (11 samples, 0.04%)</title><rect x="83.0406%" y="389" width="0.0354%" height="15" fill="rgb(244,167,17)" fg:x="25770" fg:w="11"/><text x="83.2906%" y="399.50"></text></g><g><title>read_hv_clock_tsc (4 samples, 0.01%)</title><rect x="83.0632%" y="373" width="0.0129%" height="15" fill="rgb(207,181,38)" fg:x="25777" fg:w="4"/><text x="83.3132%" y="383.50"></text></g><g><title>__x64_sys_futex (289 samples, 0.93%)</title><rect x="82.2060%" y="517" width="0.9313%" height="15" fill="rgb(211,8,23)" fg:x="25511" fg:w="289"/><text x="82.4560%" y="527.50"></text></g><g><title>do_futex (280 samples, 0.90%)</title><rect x="82.2350%" y="501" width="0.9023%" height="15" fill="rgb(235,11,44)" fg:x="25520" fg:w="280"/><text x="82.4850%" y="511.50"></text></g><g><title>futex_wait (269 samples, 0.87%)</title><rect x="82.2705%" y="485" width="0.8668%" height="15" fill="rgb(248,18,52)" fg:x="25531" fg:w="269"/><text x="82.5205%" y="495.50"></text></g><g><title>futex_wait_setup (19 samples, 0.06%)</title><rect x="83.0761%" y="469" width="0.0612%" height="15" fill="rgb(208,4,7)" fg:x="25781" fg:w="19"/><text x="83.3261%" y="479.50"></text></g><g><title>__get_user_8 (10 samples, 0.03%)</title><rect x="83.1921%" y="469" width="0.0322%" height="15" fill="rgb(240,17,39)" fg:x="25817" fg:w="10"/><text x="83.4421%" y="479.50"></text></g><g><title>__rseq_handle_notify_resume (23 samples, 0.07%)</title><rect x="83.1599%" y="485" width="0.0741%" height="15" fill="rgb(207,170,3)" fg:x="25807" fg:w="23"/><text x="83.4099%" y="495.50"></text></g><g><title>blkcg_maybe_throttle_current (6 samples, 0.02%)</title><rect x="83.2340%" y="485" width="0.0193%" height="15" fill="rgb(236,100,52)" fg:x="25830" fg:w="6"/><text x="83.4840%" y="495.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (342 samples, 1.10%)</title><rect x="82.1674%" y="549" width="1.1021%" height="15" fill="rgb(246,78,51)" fg:x="25499" fg:w="342"/><text x="82.4174%" y="559.50"></text></g><g><title>do_syscall_64 (337 samples, 1.09%)</title><rect x="82.1835%" y="533" width="1.0859%" height="15" fill="rgb(211,17,15)" fg:x="25504" fg:w="337"/><text x="82.4335%" y="543.50"></text></g><g><title>syscall_exit_to_user_mode (41 samples, 0.13%)</title><rect x="83.1373%" y="517" width="0.1321%" height="15" fill="rgb(209,59,46)" fg:x="25800" fg:w="41"/><text x="83.3873%" y="527.50"></text></g><g><title>exit_to_user_mode_prepare (40 samples, 0.13%)</title><rect x="83.1405%" y="501" width="0.1289%" height="15" fill="rgb(210,92,25)" fg:x="25801" fg:w="40"/><text x="83.3905%" y="511.50"></text></g><g><title>switch_fpu_return (4 samples, 0.01%)</title><rect x="83.2565%" y="485" width="0.0129%" height="15" fill="rgb(238,174,52)" fg:x="25837" fg:w="4"/><text x="83.5065%" y="495.50"></text></g><g><title>std::sys::pal::unix::locks::futex_mutex::Mutex::lock_contended (461 samples, 1.49%)</title><rect x="81.7936%" y="581" width="1.4855%" height="15" fill="rgb(230,73,7)" fg:x="25383" fg:w="461"/><text x="82.0436%" y="591.50"></text></g><g><title>syscall (352 samples, 1.13%)</title><rect x="82.1448%" y="565" width="1.1343%" height="15" fill="rgb(243,124,40)" fg:x="25492" fg:w="352"/><text x="82.3948%" y="575.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="83.3081%" y="565" width="0.0129%" height="15" fill="rgb(244,170,11)" fg:x="25853" fg:w="4"/><text x="83.5581%" y="575.50"></text></g><g><title>entry_SYSCALL_64 (4 samples, 0.01%)</title><rect x="83.3210%" y="565" width="0.0129%" height="15" fill="rgb(207,114,54)" fg:x="25857" fg:w="4"/><text x="83.5710%" y="575.50"></text></g><g><title>__task_rq_lock (7 samples, 0.02%)</title><rect x="83.6851%" y="453" width="0.0226%" height="15" fill="rgb(205,42,20)" fg:x="25970" fg:w="7"/><text x="83.9351%" y="463.50"></text></g><g><title>_raw_spin_lock (7 samples, 0.02%)</title><rect x="83.6851%" y="437" width="0.0226%" height="15" fill="rgb(230,30,28)" fg:x="25970" fg:w="7"/><text x="83.9351%" y="447.50"></text></g><g><title>__pv_queued_spin_lock_slowpath (7 samples, 0.02%)</title><rect x="83.6851%" y="421" width="0.0226%" height="15" fill="rgb(205,73,54)" fg:x="25970" fg:w="7"/><text x="83.9351%" y="431.50"></text></g><g><title>hv_send_ipi (5 samples, 0.02%)</title><rect x="83.7367%" y="437" width="0.0161%" height="15" fill="rgb(254,227,23)" fg:x="25986" fg:w="5"/><text x="83.9867%" y="447.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (132 samples, 0.43%)</title><rect x="83.3339%" y="565" width="0.4254%" height="15" fill="rgb(228,202,34)" fg:x="25861" fg:w="132"/><text x="83.5839%" y="575.50"></text></g><g><title>do_syscall_64 (131 samples, 0.42%)</title><rect x="83.3371%" y="549" width="0.4221%" height="15" fill="rgb(222,225,37)" fg:x="25862" fg:w="131"/><text x="83.5871%" y="559.50"></text></g><g><title>__x64_sys_futex (130 samples, 0.42%)</title><rect x="83.3403%" y="533" width="0.4189%" height="15" fill="rgb(221,14,54)" fg:x="25863" fg:w="130"/><text x="83.5903%" y="543.50"></text></g><g><title>do_futex (128 samples, 0.41%)</title><rect x="83.3468%" y="517" width="0.4125%" height="15" fill="rgb(254,102,2)" fg:x="25865" fg:w="128"/><text x="83.5968%" y="527.50"></text></g><g><title>futex_wake (120 samples, 0.39%)</title><rect x="83.3725%" y="501" width="0.3867%" height="15" fill="rgb(232,104,17)" fg:x="25873" fg:w="120"/><text x="83.6225%" y="511.50"></text></g><g><title>wake_up_q (99 samples, 0.32%)</title><rect x="83.4402%" y="485" width="0.3190%" height="15" fill="rgb(250,220,14)" fg:x="25894" fg:w="99"/><text x="83.6902%" y="495.50"></text></g><g><title>try_to_wake_up (99 samples, 0.32%)</title><rect x="83.4402%" y="469" width="0.3190%" height="15" fill="rgb(241,158,9)" fg:x="25894" fg:w="99"/><text x="83.6902%" y="479.50"></text></g><g><title>ttwu_queue_wakelist (13 samples, 0.04%)</title><rect x="83.7173%" y="453" width="0.0419%" height="15" fill="rgb(246,9,43)" fg:x="25980" fg:w="13"/><text x="83.9673%" y="463.50"></text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write_all (7,673 samples, 24.73%)</title><rect x="59.0404%" y="613" width="24.7253%" height="15" fill="rgb(206,73,33)" fg:x="18322" fg:w="7673"/><text x="59.2904%" y="623.50">&lt;std::io::stdio::Stdout as std::io::Wri..</text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_all (7,652 samples, 24.66%)</title><rect x="59.1080%" y="597" width="24.6576%" height="15" fill="rgb(222,79,8)" fg:x="18343" fg:w="7652"/><text x="59.3580%" y="607.50">&lt;&amp;std::io::stdio::Stdout as std::io::Wr..</text></g><g><title>syscall (151 samples, 0.49%)</title><rect x="83.2791%" y="581" width="0.4866%" height="15" fill="rgb(234,8,54)" fg:x="25844" fg:w="151"/><text x="83.5291%" y="591.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_fmt (7 samples, 0.02%)</title><rect x="84.6035%" y="597" width="0.0226%" height="15" fill="rgb(209,134,38)" fg:x="26255" fg:w="7"/><text x="84.8535%" y="607.50"></text></g><g><title>&lt;tracing_core::event::Event as tracing_log::NormalizeEvent&gt;::normalized_metadata (32 samples, 0.10%)</title><rect x="84.6260%" y="597" width="0.1031%" height="15" fill="rgb(230,127,29)" fg:x="26262" fg:w="32"/><text x="84.8760%" y="607.50"></text></g><g><title>tracing_log::level_to_cs (15 samples, 0.05%)</title><rect x="84.6808%" y="581" width="0.0483%" height="15" fill="rgb(242,44,41)" fg:x="26279" fg:w="15"/><text x="84.9308%" y="591.50"></text></g><g><title>&lt;tracing_core::event::Event as tracing_subscriber::field::RecordFields&gt;::record (10 samples, 0.03%)</title><rect x="84.7292%" y="597" width="0.0322%" height="15" fill="rgb(222,56,43)" fg:x="26294" fg:w="10"/><text x="84.9792%" y="607.50"></text></g><g><title>&lt;tracing_subscriber::fmt::time::datetime::DateTime as core::convert::From&lt;std::time::SystemTime&gt;&gt;::from (182 samples, 0.59%)</title><rect x="84.8258%" y="581" width="0.5865%" height="15" fill="rgb(238,39,47)" fg:x="26324" fg:w="182"/><text x="85.0758%" y="591.50"></text></g><g><title>std::time::SystemTime::duration_since (54 samples, 0.17%)</title><rect x="85.2383%" y="565" width="0.1740%" height="15" fill="rgb(226,79,43)" fg:x="26452" fg:w="54"/><text x="85.4883%" y="575.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::sub_timespec (36 samples, 0.12%)</title><rect x="85.2963%" y="549" width="0.1160%" height="15" fill="rgb(242,105,53)" fg:x="26470" fg:w="36"/><text x="85.5463%" y="559.50"></text></g><g><title>core::fmt::Formatter::write_fmt (14 samples, 0.05%)</title><rect x="85.8860%" y="549" width="0.0451%" height="15" fill="rgb(251,132,46)" fg:x="26653" fg:w="14"/><text x="86.1360%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (160 samples, 0.52%)</title><rect x="86.7303%" y="533" width="0.5156%" height="15" fill="rgb(231,77,14)" fg:x="26915" fg:w="160"/><text x="86.9803%" y="543.50"></text></g><g><title>[libc.so.6] (54 samples, 0.17%)</title><rect x="87.0718%" y="517" width="0.1740%" height="15" fill="rgb(240,135,9)" fg:x="27021" fg:w="54"/><text x="87.3218%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (24 samples, 0.08%)</title><rect x="87.4488%" y="517" width="0.0773%" height="15" fill="rgb(248,109,14)" fg:x="27138" fg:w="24"/><text x="87.6988%" y="527.50"></text></g><g><title>[libc.so.6] (15 samples, 0.05%)</title><rect x="87.4778%" y="501" width="0.0483%" height="15" fill="rgb(227,146,52)" fg:x="27147" fg:w="15"/><text x="87.7278%" y="511.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for isize&gt;::fmt (129 samples, 0.42%)</title><rect x="87.2458%" y="533" width="0.4157%" height="15" fill="rgb(232,54,3)" fg:x="27075" fg:w="129"/><text x="87.4958%" y="543.50"></text></g><g><title>core::fmt::Formatter::pad_integral (42 samples, 0.14%)</title><rect x="87.5262%" y="517" width="0.1353%" height="15" fill="rgb(229,201,43)" fg:x="27162" fg:w="42"/><text x="87.7762%" y="527.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 samples, 0.04%)</title><rect x="87.6261%" y="501" width="0.0354%" height="15" fill="rgb(252,161,33)" fg:x="27193" fg:w="11"/><text x="87.8761%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (17 samples, 0.05%)</title><rect x="88.0385%" y="517" width="0.0548%" height="15" fill="rgb(226,146,40)" fg:x="27321" fg:w="17"/><text x="88.2885%" y="527.50"></text></g><g><title>[libc.so.6] (7 samples, 0.02%)</title><rect x="88.0708%" y="501" width="0.0226%" height="15" fill="rgb(219,47,25)" fg:x="27331" fg:w="7"/><text x="88.3208%" y="511.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (181 samples, 0.58%)</title><rect x="87.6615%" y="533" width="0.5833%" height="15" fill="rgb(250,135,13)" fg:x="27204" fg:w="181"/><text x="87.9115%" y="543.50"></text></g><g><title>core::fmt::Formatter::pad_integral (47 samples, 0.15%)</title><rect x="88.0933%" y="517" width="0.1515%" height="15" fill="rgb(219,229,18)" fg:x="27338" fg:w="47"/><text x="88.3433%" y="527.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 samples, 0.03%)</title><rect x="88.2158%" y="501" width="0.0290%" height="15" fill="rgb(217,152,27)" fg:x="27376" fg:w="9"/><text x="88.4658%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (73 samples, 0.24%)</title><rect x="88.5573%" y="517" width="0.2352%" height="15" fill="rgb(225,71,47)" fg:x="27482" fg:w="73"/><text x="88.8073%" y="527.50"></text></g><g><title>[libc.so.6] (34 samples, 0.11%)</title><rect x="88.6830%" y="501" width="0.1096%" height="15" fill="rgb(220,139,14)" fg:x="27521" fg:w="34"/><text x="88.9330%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_char (40 samples, 0.13%)</title><rect x="89.3082%" y="501" width="0.1289%" height="15" fill="rgb(247,54,32)" fg:x="27715" fg:w="40"/><text x="89.5582%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (45 samples, 0.15%)</title><rect x="89.4371%" y="501" width="0.1450%" height="15" fill="rgb(252,131,39)" fg:x="27755" fg:w="45"/><text x="89.6871%" y="511.50"></text></g><g><title>[libc.so.6] (20 samples, 0.06%)</title><rect x="89.5176%" y="485" width="0.0644%" height="15" fill="rgb(210,108,39)" fg:x="27780" fg:w="20"/><text x="89.7676%" y="495.50"></text></g><g><title>core::fmt::write (1,343 samples, 4.33%)</title><rect x="85.4123%" y="581" width="4.3277%" height="15" fill="rgb(205,23,29)" fg:x="26506" fg:w="1343"/><text x="85.6623%" y="591.50">core:..</text></g><g><title>&lt;tracing_subscriber::fmt::time::datetime::DateTime as core::fmt::Display&gt;::fmt (1,312 samples, 4.23%)</title><rect x="85.5122%" y="565" width="4.2278%" height="15" fill="rgb(246,139,46)" fg:x="26537" fg:w="1312"/><text x="85.7622%" y="575.50">&lt;trac..</text></g><g><title>core::fmt::write (1,182 samples, 3.81%)</title><rect x="85.9311%" y="549" width="3.8088%" height="15" fill="rgb(250,81,26)" fg:x="26667" fg:w="1182"/><text x="86.1811%" y="559.50">core..</text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u8&gt;::fmt (464 samples, 1.50%)</title><rect x="88.2448%" y="533" width="1.4952%" height="15" fill="rgb(214,104,7)" fg:x="27385" fg:w="464"/><text x="88.4948%" y="543.50"></text></g><g><title>core::fmt::Formatter::pad_integral (294 samples, 0.95%)</title><rect x="88.7926%" y="517" width="0.9474%" height="15" fill="rgb(233,189,8)" fg:x="27555" fg:w="294"/><text x="89.0426%" y="527.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (49 samples, 0.16%)</title><rect x="89.5821%" y="501" width="0.1579%" height="15" fill="rgb(228,141,17)" fg:x="27800" fg:w="49"/><text x="89.8321%" y="511.50"></text></g><g><title>__vdso_clock_gettime (187 samples, 0.60%)</title><rect x="89.9172%" y="549" width="0.6026%" height="15" fill="rgb(247,157,1)" fg:x="27904" fg:w="187"/><text x="90.1672%" y="559.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (243 samples, 0.78%)</title><rect x="89.7400%" y="581" width="0.7830%" height="15" fill="rgb(249,225,5)" fg:x="27849" fg:w="243"/><text x="89.9900%" y="591.50"></text></g><g><title>clock_gettime (236 samples, 0.76%)</title><rect x="89.7625%" y="565" width="0.7605%" height="15" fill="rgb(242,55,13)" fg:x="27856" fg:w="236"/><text x="90.0125%" y="575.50"></text></g><g><title>&lt;tracing_subscriber::fmt::time::SystemTime as tracing_subscriber::fmt::time::FormatTime&gt;::format_time (1,796 samples, 5.79%)</title><rect x="84.7614%" y="597" width="5.7874%" height="15" fill="rgb(230,49,50)" fg:x="26304" fg:w="1796"/><text x="85.0114%" y="607.50">&lt;tracin..</text></g><g><title>std::time::SystemTime::now (8 samples, 0.03%)</title><rect x="90.5230%" y="581" width="0.0258%" height="15" fill="rgb(241,111,38)" fg:x="28092" fg:w="8"/><text x="90.7730%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (85 samples, 0.27%)</title><rect x="91.2674%" y="581" width="0.2739%" height="15" fill="rgb(252,155,4)" fg:x="28323" fg:w="85"/><text x="91.5174%" y="591.50"></text></g><g><title>[libc.so.6] (35 samples, 0.11%)</title><rect x="91.4285%" y="565" width="0.1128%" height="15" fill="rgb(212,69,32)" fg:x="28373" fg:w="35"/><text x="91.6785%" y="575.50"></text></g><g><title>&lt;nu_ansi_term::ansi::Prefix as core::fmt::Display&gt;::fmt (13 samples, 0.04%)</title><rect x="91.5413%" y="581" width="0.0419%" height="15" fill="rgb(243,107,47)" fg:x="28408" fg:w="13"/><text x="91.7913%" y="591.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (6 samples, 0.02%)</title><rect x="91.7829%" y="549" width="0.0193%" height="15" fill="rgb(247,130,12)" fg:x="28483" fg:w="6"/><text x="92.0329%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (29 samples, 0.09%)</title><rect x="91.8023%" y="549" width="0.0934%" height="15" fill="rgb(233,74,16)" fg:x="28489" fg:w="29"/><text x="92.0523%" y="559.50"></text></g><g><title>[libc.so.6] (20 samples, 0.06%)</title><rect x="91.8313%" y="533" width="0.0644%" height="15" fill="rgb(208,58,18)" fg:x="28498" fg:w="20"/><text x="92.0813%" y="543.50"></text></g><g><title>&lt;str as core::fmt::Display&gt;::fmt (6 samples, 0.02%)</title><rect x="91.8957%" y="549" width="0.0193%" height="15" fill="rgb(242,225,1)" fg:x="28518" fg:w="6"/><text x="92.1457%" y="559.50"></text></g><g><title>&lt;nu_ansi_term::ansi::Suffix as core::fmt::Display&gt;::fmt (114 samples, 0.37%)</title><rect x="91.5832%" y="581" width="0.3674%" height="15" fill="rgb(249,39,40)" fg:x="28421" fg:w="114"/><text x="91.8332%" y="591.50"></text></g><g><title>core::fmt::write (92 samples, 0.30%)</title><rect x="91.6540%" y="565" width="0.2965%" height="15" fill="rgb(207,72,44)" fg:x="28443" fg:w="92"/><text x="91.9040%" y="575.50"></text></g><g><title>core::fmt::Formatter::pad (11 samples, 0.04%)</title><rect x="91.9151%" y="549" width="0.0354%" height="15" fill="rgb(215,193,12)" fg:x="28524" fg:w="11"/><text x="92.1651%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (39 samples, 0.13%)</title><rect x="92.2115%" y="565" width="0.1257%" height="15" fill="rgb(248,41,39)" fg:x="28616" fg:w="39"/><text x="92.4615%" y="575.50"></text></g><g><title>[libc.so.6] (20 samples, 0.06%)</title><rect x="92.2727%" y="549" width="0.0644%" height="15" fill="rgb(253,85,4)" fg:x="28635" fg:w="20"/><text x="92.5227%" y="559.50"></text></g><g><title>&lt;core::fmt::Formatter as core::fmt::Write&gt;::write_str (4 samples, 0.01%)</title><rect x="92.3372%" y="565" width="0.0129%" height="15" fill="rgb(243,70,31)" fg:x="28655" fg:w="4"/><text x="92.5872%" y="575.50"></text></g><g><title>core::fmt::Formatter::write_fmt (14 samples, 0.05%)</title><rect x="92.3533%" y="565" width="0.0451%" height="15" fill="rgb(253,195,26)" fg:x="28660" fg:w="14"/><text x="92.6033%" y="575.50"></text></g><g><title>&lt;nu_ansi_term::ansi::Prefix as core::fmt::Display&gt;::fmt (4 samples, 0.01%)</title><rect x="92.7529%" y="549" width="0.0129%" height="15" fill="rgb(243,42,11)" fg:x="28784" fg:w="4"/><text x="93.0029%" y="559.50"></text></g><g><title>core::fmt::Formatter::write_fmt (7 samples, 0.02%)</title><rect x="92.8560%" y="533" width="0.0226%" height="15" fill="rgb(239,66,17)" fg:x="28816" fg:w="7"/><text x="93.1060%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (27 samples, 0.09%)</title><rect x="93.0719%" y="517" width="0.0870%" height="15" fill="rgb(217,132,21)" fg:x="28883" fg:w="27"/><text x="93.3219%" y="527.50"></text></g><g><title>[libc.so.6] (15 samples, 0.05%)</title><rect x="93.1106%" y="501" width="0.0483%" height="15" fill="rgb(252,202,21)" fg:x="28895" fg:w="15"/><text x="93.3606%" y="511.50"></text></g><g><title>&lt;str as core::fmt::Display&gt;::fmt (5 samples, 0.02%)</title><rect x="93.1589%" y="517" width="0.0161%" height="15" fill="rgb(233,98,36)" fg:x="28910" fg:w="5"/><text x="93.4089%" y="527.50"></text></g><g><title>&lt;nu_ansi_term::ansi::Suffix as core::fmt::Display&gt;::fmt (159 samples, 0.51%)</title><rect x="92.7658%" y="549" width="0.5124%" height="15" fill="rgb(216,153,54)" fg:x="28788" fg:w="159"/><text x="93.0158%" y="559.50"></text></g><g><title>core::fmt::write (124 samples, 0.40%)</title><rect x="92.8785%" y="533" width="0.3996%" height="15" fill="rgb(250,99,7)" fg:x="28823" fg:w="124"/><text x="93.1285%" y="543.50"></text></g><g><title>core::fmt::Formatter::pad (32 samples, 0.10%)</title><rect x="93.1750%" y="517" width="0.1031%" height="15" fill="rgb(207,56,50)" fg:x="28915" fg:w="32"/><text x="93.4250%" y="527.50"></text></g><g><title>core::fmt::Formatter::write_fmt (19 samples, 0.06%)</title><rect x="93.6680%" y="533" width="0.0612%" height="15" fill="rgb(244,61,34)" fg:x="29068" fg:w="19"/><text x="93.9180%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_char (32 samples, 0.10%)</title><rect x="94.4156%" y="517" width="0.1031%" height="15" fill="rgb(241,50,38)" fg:x="29300" fg:w="32"/><text x="94.6656%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (79 samples, 0.25%)</title><rect x="94.5187%" y="517" width="0.2546%" height="15" fill="rgb(212,166,30)" fg:x="29332" fg:w="79"/><text x="94.7687%" y="527.50"></text></g><g><title>[libc.so.6] (30 samples, 0.10%)</title><rect x="94.6766%" y="501" width="0.0967%" height="15" fill="rgb(249,127,32)" fg:x="29381" fg:w="30"/><text x="94.9266%" y="511.50"></text></g><g><title>&lt;nu_ansi_term::display::AnsiGenericString&lt;str&gt; as core::fmt::Display&gt;::fmt (888 samples, 2.86%)</title><rect x="91.9505%" y="581" width="2.8615%" height="15" fill="rgb(209,103,0)" fg:x="28535" fg:w="888"/><text x="92.2005%" y="591.50">&lt;n..</text></g><g><title>core::fmt::write (749 samples, 2.41%)</title><rect x="92.3984%" y="565" width="2.4136%" height="15" fill="rgb(238,209,51)" fg:x="28674" fg:w="749"/><text x="92.6484%" y="575.50">co..</text></g><g><title>nu_ansi_term::ansi::&lt;impl nu_ansi_term::style::Style&gt;::write_prefix (476 samples, 1.53%)</title><rect x="93.2781%" y="549" width="1.5339%" height="15" fill="rgb(237,56,23)" fg:x="28947" fg:w="476"/><text x="93.5281%" y="559.50"></text></g><g><title>core::fmt::write (336 samples, 1.08%)</title><rect x="93.7293%" y="533" width="1.0827%" height="15" fill="rgb(215,153,46)" fg:x="29087" fg:w="336"/><text x="93.9793%" y="543.50"></text></g><g><title>&lt;char as core::fmt::Display&gt;::fmt (12 samples, 0.04%)</title><rect x="94.7733%" y="517" width="0.0387%" height="15" fill="rgb(224,49,31)" fg:x="29411" fg:w="12"/><text x="95.0233%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (19 samples, 0.06%)</title><rect x="95.2373%" y="533" width="0.0612%" height="15" fill="rgb(250,18,42)" fg:x="29555" fg:w="19"/><text x="95.4873%" y="543.50"></text></g><g><title>[libc.so.6] (12 samples, 0.04%)</title><rect x="95.2599%" y="517" width="0.0387%" height="15" fill="rgb(215,176,39)" fg:x="29562" fg:w="12"/><text x="95.5099%" y="527.50"></text></g><g><title>core::fmt::Formatter::write_fmt (9 samples, 0.03%)</title><rect x="95.3050%" y="533" width="0.0290%" height="15" fill="rgb(223,77,29)" fg:x="29576" fg:w="9"/><text x="95.5550%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (10 samples, 0.03%)</title><rect x="95.6723%" y="485" width="0.0322%" height="15" fill="rgb(234,94,52)" fg:x="29690" fg:w="10"/><text x="95.9223%" y="495.50"></text></g><g><title>[libc.so.6] (5 samples, 0.02%)</title><rect x="95.6885%" y="469" width="0.0161%" height="15" fill="rgb(220,154,50)" fg:x="29695" fg:w="5"/><text x="95.9385%" y="479.50"></text></g><g><title>&lt;str as core::fmt::Display&gt;::fmt (5 samples, 0.02%)</title><rect x="95.7046%" y="485" width="0.0161%" height="15" fill="rgb(212,11,10)" fg:x="29700" fg:w="5"/><text x="95.9546%" y="495.50"></text></g><g><title>&lt;nu_ansi_term::ansi::Suffix as core::fmt::Display&gt;::fmt (75 samples, 0.24%)</title><rect x="95.5112%" y="517" width="0.2417%" height="15" fill="rgb(205,166,19)" fg:x="29640" fg:w="75"/><text x="95.7612%" y="527.50"></text></g><g><title>core::fmt::write (60 samples, 0.19%)</title><rect x="95.5596%" y="501" width="0.1933%" height="15" fill="rgb(244,198,16)" fg:x="29655" fg:w="60"/><text x="95.8096%" y="511.50"></text></g><g><title>core::fmt::Formatter::pad (10 samples, 0.03%)</title><rect x="95.7207%" y="485" width="0.0322%" height="15" fill="rgb(219,69,12)" fg:x="29705" fg:w="10"/><text x="95.9707%" y="495.50"></text></g><g><title>core::fmt::Formatter::write_fmt (6 samples, 0.02%)</title><rect x="95.9656%" y="501" width="0.0193%" height="15" fill="rgb(245,30,7)" fg:x="29781" fg:w="6"/><text x="96.2156%" y="511.50"></text></g><g><title>core::fmt::write (124 samples, 0.40%)</title><rect x="95.9849%" y="501" width="0.3996%" height="15" fill="rgb(218,221,48)" fg:x="29787" fg:w="124"/><text x="96.2349%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (46 samples, 0.15%)</title><rect x="96.2363%" y="485" width="0.1482%" height="15" fill="rgb(216,66,15)" fg:x="29865" fg:w="46"/><text x="96.4863%" y="495.50"></text></g><g><title>[libc.so.6] (22 samples, 0.07%)</title><rect x="96.3136%" y="469" width="0.0709%" height="15" fill="rgb(226,122,50)" fg:x="29889" fg:w="22"/><text x="96.5636%" y="479.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::FmtLevel as core::fmt::Display&gt;::fmt (563 samples, 1.81%)</title><rect x="94.8120%" y="581" width="1.8142%" height="15" fill="rgb(239,156,16)" fg:x="29423" fg:w="563"/><text x="95.0620%" y="591.50">&lt;..</text></g><g><title>core::fmt::write (491 samples, 1.58%)</title><rect x="95.0440%" y="565" width="1.5822%" height="15" fill="rgb(224,27,38)" fg:x="29495" fg:w="491"/><text x="95.2940%" y="575.50"></text></g><g><title>&lt;nu_ansi_term::display::AnsiGenericString&lt;str&gt; as core::fmt::Display&gt;::fmt (459 samples, 1.48%)</title><rect x="95.1471%" y="549" width="1.4791%" height="15" fill="rgb(224,39,27)" fg:x="29527" fg:w="459"/><text x="95.3971%" y="559.50"></text></g><g><title>core::fmt::write (401 samples, 1.29%)</title><rect x="95.3340%" y="533" width="1.2922%" height="15" fill="rgb(215,92,29)" fg:x="29585" fg:w="401"/><text x="95.5840%" y="543.50"></text></g><g><title>nu_ansi_term::ansi::&lt;impl nu_ansi_term::style::Style&gt;::write_prefix (271 samples, 0.87%)</title><rect x="95.7529%" y="517" width="0.8733%" height="15" fill="rgb(207,159,16)" fg:x="29715" fg:w="271"/><text x="96.0029%" y="527.50"></text></g><g><title>nu_ansi_term::ansi::&lt;impl nu_ansi_term::style::Color&gt;::write_foreground_code (75 samples, 0.24%)</title><rect x="96.3845%" y="501" width="0.2417%" height="15" fill="rgb(238,163,47)" fg:x="29911" fg:w="75"/><text x="96.6345%" y="511.50"></text></g><g><title>core::fmt::write (56 samples, 0.18%)</title><rect x="96.4457%" y="485" width="0.1805%" height="15" fill="rgb(219,91,49)" fg:x="29930" fg:w="56"/><text x="96.6957%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (24 samples, 0.08%)</title><rect x="96.5488%" y="469" width="0.0773%" height="15" fill="rgb(227,167,31)" fg:x="29962" fg:w="24"/><text x="96.7988%" y="479.50"></text></g><g><title>[libc.so.6] (12 samples, 0.04%)</title><rect x="96.5875%" y="453" width="0.0387%" height="15" fill="rgb(234,80,54)" fg:x="29974" fg:w="12"/><text x="96.8375%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_fmt (12 samples, 0.04%)</title><rect x="96.9323%" y="565" width="0.0387%" height="15" fill="rgb(212,114,2)" fg:x="30081" fg:w="12"/><text x="97.1823%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_char (13 samples, 0.04%)</title><rect x="97.4060%" y="549" width="0.0419%" height="15" fill="rgb(234,50,24)" fg:x="30228" fg:w="13"/><text x="97.6560%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (60 samples, 0.19%)</title><rect x="97.4479%" y="549" width="0.1933%" height="15" fill="rgb(221,68,8)" fg:x="30241" fg:w="60"/><text x="97.6979%" y="559.50"></text></g><g><title>[libc.so.6] (32 samples, 0.10%)</title><rect x="97.5381%" y="533" width="0.1031%" height="15" fill="rgb(254,180,31)" fg:x="30269" fg:w="32"/><text x="97.7881%" y="543.50"></text></g><g><title>core::fmt::write (2,205 samples, 7.11%)</title><rect x="90.5552%" y="597" width="7.1053%" height="15" fill="rgb(247,130,50)" fg:x="28102" fg:w="2205"/><text x="90.8052%" y="607.50">core::fmt:..</text></g><g><title>nu_ansi_term::ansi::&lt;impl nu_ansi_term::style::Style&gt;::write_prefix (319 samples, 1.03%)</title><rect x="96.6326%" y="581" width="1.0279%" height="15" fill="rgb(211,109,4)" fg:x="29988" fg:w="319"/><text x="96.8826%" y="591.50"></text></g><g><title>core::fmt::write (214 samples, 0.69%)</title><rect x="96.9710%" y="565" width="0.6896%" height="15" fill="rgb(238,50,21)" fg:x="30093" fg:w="214"/><text x="97.2210%" y="575.50"></text></g><g><title>&lt;char as core::fmt::Display&gt;::fmt (6 samples, 0.02%)</title><rect x="97.6412%" y="549" width="0.0193%" height="15" fill="rgb(225,57,45)" fg:x="30301" fg:w="6"/><text x="97.8912%" y="559.50"></text></g><g><title>&lt;core::fmt::Arguments as tracing_core::field::Value&gt;::record (12 samples, 0.04%)</title><rect x="97.7991%" y="581" width="0.0387%" height="15" fill="rgb(209,196,50)" fg:x="30350" fg:w="12"/><text x="98.0491%" y="591.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::Writer as core::fmt::Write&gt;::write_fmt (5 samples, 0.02%)</title><rect x="97.9377%" y="565" width="0.0161%" height="15" fill="rgb(242,140,13)" fg:x="30393" fg:w="5"/><text x="98.1877%" y="575.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (27 samples, 0.09%)</title><rect x="98.0344%" y="549" width="0.0870%" height="15" fill="rgb(217,111,7)" fg:x="30423" fg:w="27"/><text x="98.2844%" y="559.50"></text></g><g><title>core::fmt::write (116 samples, 0.37%)</title><rect x="97.9538%" y="565" width="0.3738%" height="15" fill="rgb(253,193,51)" fg:x="30398" fg:w="116"/><text x="98.2038%" y="575.50"></text></g><g><title>core::fmt::write (61 samples, 0.20%)</title><rect x="98.1310%" y="549" width="0.1966%" height="15" fill="rgb(252,70,29)" fg:x="30453" fg:w="61"/><text x="98.3810%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (28 samples, 0.09%)</title><rect x="98.2374%" y="533" width="0.0902%" height="15" fill="rgb(232,127,12)" fg:x="30486" fg:w="28"/><text x="98.4874%" y="543.50"></text></g><g><title>[libc.so.6] (17 samples, 0.05%)</title><rect x="98.2728%" y="517" width="0.0548%" height="15" fill="rgb(211,180,21)" fg:x="30497" fg:w="17"/><text x="98.5228%" y="527.50"></text></g><g><title>tracing_core::field::Field::name (24 samples, 0.08%)</title><rect x="98.3276%" y="565" width="0.0773%" height="15" fill="rgb(229,72,13)" fg:x="30514" fg:w="24"/><text x="98.5776%" y="575.50"></text></g><g><title>tracing_core::field::ValueSet::record (238 samples, 0.77%)</title><rect x="97.6606%" y="597" width="0.7669%" height="15" fill="rgb(240,211,49)" fg:x="30307" fg:w="238"/><text x="97.9106%" y="607.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::DefaultVisitor as tracing_core::field::Visit&gt;::record_debug (183 samples, 0.59%)</title><rect x="97.8378%" y="581" width="0.5897%" height="15" fill="rgb(219,149,40)" fg:x="30362" fg:w="183"/><text x="98.0878%" y="591.50"></text></g><g><title>tracing_subscriber::fmt::format::Writer::write_fmt (7 samples, 0.02%)</title><rect x="98.4049%" y="565" width="0.0226%" height="15" fill="rgb(210,127,46)" fg:x="30538" fg:w="7"/><text x="98.6549%" y="575.50"></text></g><g><title>tracing_subscriber::fmt::format::Writer::write_fmt (45 samples, 0.15%)</title><rect x="98.4275%" y="597" width="0.1450%" height="15" fill="rgb(220,106,7)" fg:x="30545" fg:w="45"/><text x="98.6775%" y="607.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::Format&lt;tracing_subscriber::fmt::format::Full,T&gt; as tracing_subscriber::fmt::format::FormatEvent&lt;S,N&gt;&gt;::format_event (4,679 samples, 15.08%)</title><rect x="83.7657%" y="613" width="15.0775%" height="15" fill="rgb(249,31,22)" fg:x="25995" fg:w="4679"/><text x="84.0157%" y="623.50">&lt;tracing_subscriber::fm..</text></g><g><title>tracing_subscriber::layer::context::Context&lt;S&gt;::event_scope (84 samples, 0.27%)</title><rect x="98.5725%" y="597" width="0.2707%" height="15" fill="rgb(253,1,49)" fg:x="30590" fg:w="84"/><text x="98.8225%" y="607.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::current_span (70 samples, 0.23%)</title><rect x="98.6176%" y="581" width="0.2256%" height="15" fill="rgb(227,144,33)" fg:x="30604" fg:w="70"/><text x="98.8676%" y="591.50"></text></g><g><title>&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_event (12,473 samples, 40.19%)</title><rect x="58.6891%" y="629" width="40.1927%" height="15" fill="rgb(249,163,44)" fg:x="18213" fg:w="12473"/><text x="58.9391%" y="639.50">&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_sub..</text></g><g><title>std::io::stdio::stdout (12 samples, 0.04%)</title><rect x="98.8432%" y="613" width="0.0387%" height="15" fill="rgb(234,15,39)" fg:x="30674" fg:w="12"/><text x="99.0932%" y="623.50"></text></g><g><title>&lt;tracing_subscriber::fmt::Subscriber&lt;N,E,F,W&gt; as tracing_core::subscriber::Subscriber&gt;::event_enabled (8 samples, 0.03%)</title><rect x="98.9978%" y="613" width="0.0258%" height="15" fill="rgb(207,66,16)" fg:x="30722" fg:w="8"/><text x="99.2478%" y="623.50"></text></g><g><title>&lt;tokio_util::codec::framed_impl::FramedImpl&lt;T,U,R&gt; as futures_core::stream::Stream&gt;::poll_next (14,718 samples, 47.43%)</title><rect x="51.6611%" y="661" width="47.4269%" height="15" fill="rgb(233,112,24)" fg:x="16032" fg:w="14718"/><text x="51.9111%" y="671.50">&lt;tokio_util::codec::framed_impl::FramedImpl&lt;T,U,R&gt; as futures_core::stream::St..</text></g><g><title>tracing_core::event::Event::dispatch (12,588 samples, 40.56%)</title><rect x="58.5248%" y="645" width="40.5633%" height="15" fill="rgb(230,90,22)" fg:x="18162" fg:w="12588"/><text x="58.7748%" y="655.50">tracing_core::event::Event::dispatch</text></g><g><title>tracing_core::dispatcher::get_default (64 samples, 0.21%)</title><rect x="98.8818%" y="629" width="0.2062%" height="15" fill="rgb(229,61,13)" fg:x="30686" fg:w="64"/><text x="99.1318%" y="639.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::event_enabled (20 samples, 0.06%)</title><rect x="99.0236%" y="613" width="0.0644%" height="15" fill="rgb(225,57,24)" fg:x="30730" fg:w="20"/><text x="99.2736%" y="623.50"></text></g><g><title>__libc_free (6 samples, 0.02%)</title><rect x="99.0881%" y="661" width="0.0193%" height="15" fill="rgb(208,169,48)" fg:x="30750" fg:w="6"/><text x="99.3381%" y="671.50"></text></g><g><title>futures_util::lock::bilock::BiLock&lt;T&gt;::poll_lock (41 samples, 0.13%)</title><rect x="99.1106%" y="661" width="0.1321%" height="15" fill="rgb(244,218,51)" fg:x="30757" fg:w="41"/><text x="99.3606%" y="671.50"></text></g><g><title>malloc (8 samples, 0.03%)</title><rect x="99.2170%" y="645" width="0.0258%" height="15" fill="rgb(214,148,10)" fg:x="30790" fg:w="8"/><text x="99.4670%" y="655.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::schedule (7 samples, 0.02%)</title><rect x="99.2460%" y="645" width="0.0226%" height="15" fill="rgb(225,174,27)" fg:x="30799" fg:w="7"/><text x="99.4960%" y="655.50"></text></g><g><title>tokio::runtime::context::with_scheduler (6 samples, 0.02%)</title><rect x="99.2492%" y="629" width="0.0193%" height="15" fill="rgb(230,96,26)" fg:x="30800" fg:w="6"/><text x="99.4992%" y="639.50"></text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (14,892 samples, 47.99%)</title><rect x="51.2873%" y="677" width="47.9876%" height="15" fill="rgb(232,10,30)" fg:x="15916" fg:w="14892"/><text x="51.5373%" y="687.50">futures_util::stream::stream::StreamExt::poll_next_unpin</text></g><g><title>tokio::runtime::task::waker::wake_by_val (10 samples, 0.03%)</title><rect x="99.2427%" y="661" width="0.0322%" height="15" fill="rgb(222,8,50)" fg:x="30798" fg:w="10"/><text x="99.4927%" y="671.50"></text></g><g><title>proxy::main::{{closure}}::{{closure}} (20,658 samples, 66.57%)</title><rect x="32.7555%" y="693" width="66.5678%" height="15" fill="rgb(213,81,27)" fg:x="10165" fg:w="20658"/><text x="33.0055%" y="703.50">proxy::main::{{closure}}::{{closure}}</text></g><g><title>tun::async::codec::TunPacket::new (15 samples, 0.05%)</title><rect x="99.2750%" y="677" width="0.0483%" height="15" fill="rgb(245,50,10)" fg:x="30808" fg:w="15"/><text x="99.5250%" y="687.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (21,650 samples, 69.76%)</title><rect x="29.5782%" y="709" width="69.7644%" height="15" fill="rgb(216,100,18)" fg:x="9179" fg:w="21650"/><text x="29.8282%" y="719.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::task::core::TaskIdGuard::enter (6 samples, 0.02%)</title><rect x="99.3233%" y="693" width="0.0193%" height="15" fill="rgb(236,147,54)" fg:x="30823" fg:w="6"/><text x="99.5733%" y="703.50"></text></g><g><title>tokio::runtime::task::state::State::ref_dec (8 samples, 0.03%)</title><rect x="99.3426%" y="709" width="0.0258%" height="15" fill="rgb(205,143,26)" fg:x="30829" fg:w="8"/><text x="99.5926%" y="719.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_idle (24 samples, 0.08%)</title><rect x="99.3684%" y="709" width="0.0773%" height="15" fill="rgb(236,26,9)" fg:x="30837" fg:w="24"/><text x="99.6184%" y="719.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (28,326 samples, 91.28%)</title><rect x="8.2428%" y="725" width="91.2770%" height="15" fill="rgb(221,165,53)" fg:x="2558" fg:w="28326"/><text x="8.4928%" y="735.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::task::state::State::transition_to_running (23 samples, 0.07%)</title><rect x="99.4458%" y="709" width="0.0741%" height="15" fill="rgb(214,110,17)" fg:x="30861" fg:w="23"/><text x="99.6958%" y="719.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (28,664 samples, 92.37%)</title><rect x="7.2375%" y="741" width="92.3662%" height="15" fill="rgb(237,197,12)" fg:x="2246" fg:w="28664"/><text x="7.4875%" y="751.50">tokio::runtime::scheduler::multi_thread::worker::Context::run_task</text></g><g><title>tokio::runtime::task::raw::poll (26 samples, 0.08%)</title><rect x="99.5199%" y="725" width="0.0838%" height="15" fill="rgb(205,84,17)" fg:x="30884" fg:w="26"/><text x="99.7699%" y="735.50"></text></g><g><title>[libc.so.6] (30,850 samples, 99.41%)</title><rect x="0.2610%" y="933" width="99.4103%" height="15" fill="rgb(237,18,45)" fg:x="81" fg:w="30850"/><text x="0.5110%" y="943.50">[libc.so.6]</text></g><g><title>[libc.so.6] (30,850 samples, 99.41%)</title><rect x="0.2610%" y="917" width="99.4103%" height="15" fill="rgb(221,87,14)" fg:x="81" fg:w="30850"/><text x="0.5110%" y="927.50">[libc.so.6]</text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (30,850 samples, 99.41%)</title><rect x="0.2610%" y="901" width="99.4103%" height="15" fill="rgb(238,186,15)" fg:x="81" fg:w="30850"/><text x="0.5110%" y="911.50">std::sys::pal::unix::thread::Thread::new::thread_start</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (30,850 samples, 99.41%)</title><rect x="0.2610%" y="885" width="99.4103%" height="15" fill="rgb(208,115,11)" fg:x="81" fg:w="30850"/><text x="0.5110%" y="895.50">core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (30,841 samples, 99.38%)</title><rect x="0.2900%" y="869" width="99.3813%" height="15" fill="rgb(254,175,0)" fg:x="90" fg:w="30841"/><text x="0.5400%" y="879.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>tokio::runtime::blocking::pool::Inner::run (30,841 samples, 99.38%)</title><rect x="0.2900%" y="853" width="99.3813%" height="15" fill="rgb(227,24,42)" fg:x="90" fg:w="30841"/><text x="0.5400%" y="863.50">tokio::runtime::blocking::pool::Inner::run</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (30,820 samples, 99.31%)</title><rect x="0.3577%" y="837" width="99.3136%" height="15" fill="rgb(223,211,37)" fg:x="111" fg:w="30820"/><text x="0.6077%" y="847.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (30,820 samples, 99.31%)</title><rect x="0.3577%" y="821" width="99.3136%" height="15" fill="rgb(235,49,27)" fg:x="111" fg:w="30820"/><text x="0.6077%" y="831.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run (30,820 samples, 99.31%)</title><rect x="0.3577%" y="805" width="99.3136%" height="15" fill="rgb(254,97,51)" fg:x="111" fg:w="30820"/><text x="0.6077%" y="815.50">tokio::runtime::scheduler::multi_thread::worker::run</text></g><g><title>tokio::runtime::context::runtime::enter_runtime (30,820 samples, 99.31%)</title><rect x="0.3577%" y="789" width="99.3136%" height="15" fill="rgb(249,51,40)" fg:x="111" fg:w="30820"/><text x="0.6077%" y="799.50">tokio::runtime::context::runtime::enter_runtime</text></g><g><title>tokio::runtime::context::set_scheduler (30,820 samples, 99.31%)</title><rect x="0.3577%" y="773" width="99.3136%" height="15" fill="rgb(210,128,45)" fg:x="111" fg:w="30820"/><text x="0.6077%" y="783.50">tokio::runtime::context::set_scheduler</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (30,820 samples, 99.31%)</title><rect x="0.3577%" y="757" width="99.3136%" height="15" fill="rgb(224,137,50)" fg:x="111" fg:w="30820"/><text x="0.6077%" y="767.50">tokio::runtime::scheduler::multi_thread::worker::Context::run</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::maintenance (21 samples, 0.07%)</title><rect x="99.6036%" y="741" width="0.0677%" height="15" fill="rgb(242,15,9)" fg:x="30910" fg:w="21"/><text x="99.8536%" y="751.50"></text></g><g><title>__write (9 samples, 0.03%)</title><rect x="99.6842%" y="917" width="0.0290%" height="15" fill="rgb(233,187,41)" fg:x="30935" fg:w="9"/><text x="99.9342%" y="927.50"></text></g><g><title>entry_SYSCALL_64 (9 samples, 0.03%)</title><rect x="99.6842%" y="901" width="0.0290%" height="15" fill="rgb(227,2,29)" fg:x="30935" fg:w="9"/><text x="99.9342%" y="911.50"></text></g><g><title>[unknown] (25 samples, 0.08%)</title><rect x="99.6713%" y="933" width="0.0806%" height="15" fill="rgb(222,70,3)" fg:x="30931" fg:w="25"/><text x="99.9213%" y="943.50"></text></g><g><title>tokio::io::async_fd::AsyncFdReadyMutGuard&lt;Inner&gt;::try_io (7 samples, 0.02%)</title><rect x="99.7293%" y="917" width="0.0226%" height="15" fill="rgb(213,11,42)" fg:x="30949" fg:w="7"/><text x="99.9793%" y="927.50"></text></g><g><title>writev (7 samples, 0.02%)</title><rect x="99.7293%" y="901" width="0.0226%" height="15" fill="rgb(225,150,9)" fg:x="30949" fg:w="7"/><text x="99.9793%" y="911.50"></text></g><g><title>entry_SYSCALL_64 (7 samples, 0.02%)</title><rect x="99.7293%" y="885" width="0.0226%" height="15" fill="rgb(230,162,45)" fg:x="30949" fg:w="7"/><text x="99.9793%" y="895.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (21 samples, 0.07%)</title><rect x="99.7583%" y="933" width="0.0677%" height="15" fill="rgb(222,14,52)" fg:x="30958" fg:w="21"/><text x="100.0083%" y="943.50"></text></g><g><title>entry_SYSCALL_64_safe_stack (47 samples, 0.15%)</title><rect x="99.8260%" y="933" width="0.1515%" height="15" fill="rgb(254,198,14)" fg:x="30979" fg:w="47"/><text x="100.0760%" y="943.50"></text></g><g><title>all (31,033 samples, 100%)</title><rect x="0.0000%" y="965" width="100.0000%" height="15" fill="rgb(220,217,30)" fg:x="0" fg:w="31033"/><text x="0.2500%" y="975.50"></text></g><g><title>tokio-runtime-w (31,008 samples, 99.92%)</title><rect x="0.0806%" y="949" width="99.9194%" height="15" fill="rgb(215,146,41)" fg:x="25" fg:w="31008"/><text x="0.3306%" y="959.50">tokio-runtime-w</text></g><g><title>syscall_return_via_sysret (5 samples, 0.02%)</title><rect x="99.9839%" y="933" width="0.0161%" height="15" fill="rgb(217,27,36)" fg:x="31028" fg:w="5"/><text x="100.2339%" y="943.50"></text></g></svg></svg>