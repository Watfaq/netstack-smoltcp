<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1014" onload="init(evt)" viewBox="0 0 1200 1014" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1014" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="997.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="997.00"> </text><svg id="frames" x="10" width="1180" total_samples="33391"><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="0.0030%" y="933" width="0.0120%" height="15" fill="rgb(227,0,7)" fg:x="1" fg:w="4"/><text x="0.2530%" y="943.50"></text></g><g><title>tokio::runtime::builder::Builder::build (4 samples, 0.01%)</title><rect x="0.0150%" y="805" width="0.0120%" height="15" fill="rgb(217,0,24)" fg:x="5" fg:w="4"/><text x="0.2650%" y="815.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Launch::launch (4 samples, 0.01%)</title><rect x="0.0150%" y="789" width="0.0120%" height="15" fill="rgb(221,193,54)" fg:x="5" fg:w="4"/><text x="0.2650%" y="799.50"></text></g><g><title>tokio::runtime::blocking::pool::spawn_blocking (4 samples, 0.01%)</title><rect x="0.0150%" y="773" width="0.0120%" height="15" fill="rgb(248,212,6)" fg:x="5" fg:w="4"/><text x="0.2650%" y="783.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_blocking (4 samples, 0.01%)</title><rect x="0.0150%" y="757" width="0.0120%" height="15" fill="rgb(208,68,35)" fg:x="5" fg:w="4"/><text x="0.2650%" y="767.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_task (4 samples, 0.01%)</title><rect x="0.0150%" y="741" width="0.0120%" height="15" fill="rgb(232,128,0)" fg:x="5" fg:w="4"/><text x="0.2650%" y="751.50"></text></g><g><title>std::thread::Builder::spawn_unchecked (4 samples, 0.01%)</title><rect x="0.0150%" y="725" width="0.0120%" height="15" fill="rgb(207,160,47)" fg:x="5" fg:w="4"/><text x="0.2650%" y="735.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::new (4 samples, 0.01%)</title><rect x="0.0150%" y="709" width="0.0120%" height="15" fill="rgb(228,23,34)" fg:x="5" fg:w="4"/><text x="0.2650%" y="719.50"></text></g><g><title>pthread_create (4 samples, 0.01%)</title><rect x="0.0150%" y="693" width="0.0120%" height="15" fill="rgb(218,30,26)" fg:x="5" fg:w="4"/><text x="0.2650%" y="703.50"></text></g><g><title>_start (5 samples, 0.01%)</title><rect x="0.0150%" y="933" width="0.0150%" height="15" fill="rgb(220,122,19)" fg:x="5" fg:w="5"/><text x="0.2650%" y="943.50"></text></g><g><title>__libc_start_main (5 samples, 0.01%)</title><rect x="0.0150%" y="917" width="0.0150%" height="15" fill="rgb(250,228,42)" fg:x="5" fg:w="5"/><text x="0.2650%" y="927.50"></text></g><g><title>[libc.so.6] (5 samples, 0.01%)</title><rect x="0.0150%" y="901" width="0.0150%" height="15" fill="rgb(240,193,28)" fg:x="5" fg:w="5"/><text x="0.2650%" y="911.50"></text></g><g><title>main (5 samples, 0.01%)</title><rect x="0.0150%" y="885" width="0.0150%" height="15" fill="rgb(216,20,37)" fg:x="5" fg:w="5"/><text x="0.2650%" y="895.50"></text></g><g><title>std::rt::lang_start_internal (5 samples, 0.01%)</title><rect x="0.0150%" y="869" width="0.0150%" height="15" fill="rgb(206,188,39)" fg:x="5" fg:w="5"/><text x="0.2650%" y="879.50"></text></g><g><title>std::rt::lang_start::{{closure}} (5 samples, 0.01%)</title><rect x="0.0150%" y="853" width="0.0150%" height="15" fill="rgb(217,207,13)" fg:x="5" fg:w="5"/><text x="0.2650%" y="863.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (5 samples, 0.01%)</title><rect x="0.0150%" y="837" width="0.0150%" height="15" fill="rgb(231,73,38)" fg:x="5" fg:w="5"/><text x="0.2650%" y="847.50"></text></g><g><title>proxy_lwip::main (5 samples, 0.01%)</title><rect x="0.0150%" y="821" width="0.0150%" height="15" fill="rgb(225,20,46)" fg:x="5" fg:w="5"/><text x="0.2650%" y="831.50"></text></g><g><title>proxy_lwip (27 samples, 0.08%)</title><rect x="0.0030%" y="949" width="0.0809%" height="15" fill="rgb(210,31,41)" fg:x="1" fg:w="27"/><text x="0.2530%" y="959.50"></text></g><g><title>ret_from_fork (16 samples, 0.05%)</title><rect x="0.0359%" y="933" width="0.0479%" height="15" fill="rgb(221,200,47)" fg:x="12" fg:w="16"/><text x="0.2859%" y="943.50"></text></g><g><title>schedule_tail (16 samples, 0.05%)</title><rect x="0.0359%" y="917" width="0.0479%" height="15" fill="rgb(226,26,5)" fg:x="12" fg:w="16"/><text x="0.2859%" y="927.50"></text></g><g><title>finish_task_switch.isra.0 (16 samples, 0.05%)</title><rect x="0.0359%" y="901" width="0.0479%" height="15" fill="rgb(249,33,26)" fg:x="12" fg:w="16"/><text x="0.2859%" y="911.50"></text></g><g><title>__perf_event_task_sched_in (16 samples, 0.05%)</title><rect x="0.0359%" y="885" width="0.0479%" height="15" fill="rgb(235,183,28)" fg:x="12" fg:w="16"/><text x="0.2859%" y="895.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (16 samples, 0.05%)</title><rect x="0.0359%" y="869" width="0.0479%" height="15" fill="rgb(221,5,38)" fg:x="12" fg:w="16"/><text x="0.2859%" y="879.50"></text></g><g><title>[[heap]] (4 samples, 0.01%)</title><rect x="0.0839%" y="933" width="0.0120%" height="15" fill="rgb(247,18,42)" fg:x="28" fg:w="4"/><text x="0.3339%" y="943.50"></text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write_all (27 samples, 0.08%)</title><rect x="0.0958%" y="917" width="0.0809%" height="15" fill="rgb(241,131,45)" fg:x="32" fg:w="27"/><text x="0.3458%" y="927.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_all (27 samples, 0.08%)</title><rect x="0.0958%" y="901" width="0.0809%" height="15" fill="rgb(249,31,29)" fg:x="32" fg:w="27"/><text x="0.3458%" y="911.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (27 samples, 0.08%)</title><rect x="0.0958%" y="885" width="0.0809%" height="15" fill="rgb(225,111,53)" fg:x="32" fg:w="27"/><text x="0.3458%" y="895.50"></text></g><g><title>&lt;std::io::stdio::StdoutRaw as std::io::Write&gt;::write_all (27 samples, 0.08%)</title><rect x="0.0958%" y="869" width="0.0809%" height="15" fill="rgb(238,160,17)" fg:x="32" fg:w="27"/><text x="0.3458%" y="879.50"></text></g><g><title>__write (27 samples, 0.08%)</title><rect x="0.0958%" y="853" width="0.0809%" height="15" fill="rgb(214,148,48)" fg:x="32" fg:w="27"/><text x="0.3458%" y="863.50"></text></g><g><title>entry_SYSCALL_64 (27 samples, 0.08%)</title><rect x="0.0958%" y="837" width="0.0809%" height="15" fill="rgb(232,36,49)" fg:x="32" fg:w="27"/><text x="0.3458%" y="847.50"></text></g><g><title>[anon] (28 samples, 0.08%)</title><rect x="0.0958%" y="933" width="0.0839%" height="15" fill="rgb(209,103,24)" fg:x="32" fg:w="28"/><text x="0.3458%" y="943.50"></text></g><g><title>std::sys::pal::unix::thread::guard::current (8 samples, 0.02%)</title><rect x="0.1797%" y="869" width="0.0240%" height="15" fill="rgb(229,88,8)" fg:x="60" fg:w="8"/><text x="0.4297%" y="879.50"></text></g><g><title>pthread_getattr_np (8 samples, 0.02%)</title><rect x="0.1797%" y="853" width="0.0240%" height="15" fill="rgb(213,181,19)" fg:x="60" fg:w="8"/><text x="0.4297%" y="863.50"></text></g><g><title>malloc (8 samples, 0.02%)</title><rect x="0.1797%" y="837" width="0.0240%" height="15" fill="rgb(254,191,54)" fg:x="60" fg:w="8"/><text x="0.4297%" y="847.50"></text></g><g><title>[libc.so.6] (8 samples, 0.02%)</title><rect x="0.1797%" y="821" width="0.0240%" height="15" fill="rgb(241,83,37)" fg:x="60" fg:w="8"/><text x="0.4297%" y="831.50"></text></g><g><title>[libc.so.6] (8 samples, 0.02%)</title><rect x="0.1797%" y="805" width="0.0240%" height="15" fill="rgb(233,36,39)" fg:x="60" fg:w="8"/><text x="0.4297%" y="815.50"></text></g><g><title>[libc.so.6] (8 samples, 0.02%)</title><rect x="0.1797%" y="789" width="0.0240%" height="15" fill="rgb(226,3,54)" fg:x="60" fg:w="8"/><text x="0.4297%" y="799.50"></text></g><g><title>asm_exc_page_fault (4 samples, 0.01%)</title><rect x="0.1917%" y="773" width="0.0120%" height="15" fill="rgb(245,192,40)" fg:x="64" fg:w="4"/><text x="0.4417%" y="783.50"></text></g><g><title>exc_page_fault (4 samples, 0.01%)</title><rect x="0.1917%" y="757" width="0.0120%" height="15" fill="rgb(238,167,29)" fg:x="64" fg:w="4"/><text x="0.4417%" y="767.50"></text></g><g><title>do_user_addr_fault (4 samples, 0.01%)</title><rect x="0.1917%" y="741" width="0.0120%" height="15" fill="rgb(232,182,51)" fg:x="64" fg:w="4"/><text x="0.4417%" y="751.50"></text></g><g><title>down_read (4 samples, 0.01%)</title><rect x="0.1917%" y="725" width="0.0120%" height="15" fill="rgb(231,60,39)" fg:x="64" fg:w="4"/><text x="0.4417%" y="735.50"></text></g><g><title>rwsem_down_read_slowpath (4 samples, 0.01%)</title><rect x="0.1917%" y="709" width="0.0120%" height="15" fill="rgb(208,69,12)" fg:x="64" fg:w="4"/><text x="0.4417%" y="719.50"></text></g><g><title>schedule_preempt_disabled (4 samples, 0.01%)</title><rect x="0.1917%" y="693" width="0.0120%" height="15" fill="rgb(235,93,37)" fg:x="64" fg:w="4"/><text x="0.4417%" y="703.50"></text></g><g><title>schedule (4 samples, 0.01%)</title><rect x="0.1917%" y="677" width="0.0120%" height="15" fill="rgb(213,116,39)" fg:x="64" fg:w="4"/><text x="0.4417%" y="687.50"></text></g><g><title>__schedule (4 samples, 0.01%)</title><rect x="0.1917%" y="661" width="0.0120%" height="15" fill="rgb(222,207,29)" fg:x="64" fg:w="4"/><text x="0.4417%" y="671.50"></text></g><g><title>finish_task_switch.isra.0 (4 samples, 0.01%)</title><rect x="0.1917%" y="645" width="0.0120%" height="15" fill="rgb(206,96,30)" fg:x="64" fg:w="4"/><text x="0.4417%" y="655.50"></text></g><g><title>std::sys::pal::unix::locks::futex_mutex::Mutex::lock_contended (22 samples, 0.07%)</title><rect x="0.2036%" y="837" width="0.0659%" height="15" fill="rgb(218,138,4)" fg:x="68" fg:w="22"/><text x="0.4536%" y="847.50"></text></g><g><title>syscall (22 samples, 0.07%)</title><rect x="0.2036%" y="821" width="0.0659%" height="15" fill="rgb(250,191,14)" fg:x="68" fg:w="22"/><text x="0.4536%" y="831.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (22 samples, 0.07%)</title><rect x="0.2036%" y="805" width="0.0659%" height="15" fill="rgb(239,60,40)" fg:x="68" fg:w="22"/><text x="0.4536%" y="815.50"></text></g><g><title>do_syscall_64 (22 samples, 0.07%)</title><rect x="0.2036%" y="789" width="0.0659%" height="15" fill="rgb(206,27,48)" fg:x="68" fg:w="22"/><text x="0.4536%" y="799.50"></text></g><g><title>__x64_sys_futex (22 samples, 0.07%)</title><rect x="0.2036%" y="773" width="0.0659%" height="15" fill="rgb(225,35,8)" fg:x="68" fg:w="22"/><text x="0.4536%" y="783.50"></text></g><g><title>do_futex (22 samples, 0.07%)</title><rect x="0.2036%" y="757" width="0.0659%" height="15" fill="rgb(250,213,24)" fg:x="68" fg:w="22"/><text x="0.4536%" y="767.50"></text></g><g><title>futex_wait (22 samples, 0.07%)</title><rect x="0.2036%" y="741" width="0.0659%" height="15" fill="rgb(247,123,22)" fg:x="68" fg:w="22"/><text x="0.4536%" y="751.50"></text></g><g><title>futex_wait_queue_me (22 samples, 0.07%)</title><rect x="0.2036%" y="725" width="0.0659%" height="15" fill="rgb(231,138,38)" fg:x="68" fg:w="22"/><text x="0.4536%" y="735.50"></text></g><g><title>schedule (22 samples, 0.07%)</title><rect x="0.2036%" y="709" width="0.0659%" height="15" fill="rgb(231,145,46)" fg:x="68" fg:w="22"/><text x="0.4536%" y="719.50"></text></g><g><title>__schedule (22 samples, 0.07%)</title><rect x="0.2036%" y="693" width="0.0659%" height="15" fill="rgb(251,118,11)" fg:x="68" fg:w="22"/><text x="0.4536%" y="703.50"></text></g><g><title>finish_task_switch.isra.0 (22 samples, 0.07%)</title><rect x="0.2036%" y="677" width="0.0659%" height="15" fill="rgb(217,147,25)" fg:x="68" fg:w="22"/><text x="0.4536%" y="687.50"></text></g><g><title>__perf_event_task_sched_in (22 samples, 0.07%)</title><rect x="0.2036%" y="661" width="0.0659%" height="15" fill="rgb(247,81,37)" fg:x="68" fg:w="22"/><text x="0.4536%" y="671.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (22 samples, 0.07%)</title><rect x="0.2036%" y="645" width="0.0659%" height="15" fill="rgb(209,12,38)" fg:x="68" fg:w="22"/><text x="0.4536%" y="655.50"></text></g><g><title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (21 samples, 0.06%)</title><rect x="0.8116%" y="741" width="0.0629%" height="15" fill="rgb(227,1,9)" fg:x="271" fg:w="21"/><text x="1.0616%" y="751.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::sub_timespec (13 samples, 0.04%)</title><rect x="0.8356%" y="725" width="0.0389%" height="15" fill="rgb(248,47,43)" fg:x="279" fg:w="13"/><text x="1.0856%" y="735.50"></text></g><g><title>__floattidf (19 samples, 0.06%)</title><rect x="0.8775%" y="741" width="0.0569%" height="15" fill="rgb(221,10,30)" fg:x="293" fg:w="19"/><text x="1.1275%" y="751.50"></text></g><g><title>@plt (11 samples, 0.03%)</title><rect x="0.9703%" y="725" width="0.0329%" height="15" fill="rgb(210,229,1)" fg:x="324" fg:w="11"/><text x="1.2203%" y="735.50"></text></g><g><title>powf64 (99 samples, 0.30%)</title><rect x="0.9344%" y="741" width="0.2965%" height="15" fill="rgb(222,148,37)" fg:x="312" fg:w="99"/><text x="1.1844%" y="751.50"></text></g><g><title>[libm.so.6] (76 samples, 0.23%)</title><rect x="1.0033%" y="725" width="0.2276%" height="15" fill="rgb(234,67,33)" fg:x="335" fg:w="76"/><text x="1.2533%" y="735.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (109 samples, 0.33%)</title><rect x="1.2309%" y="741" width="0.3264%" height="15" fill="rgb(247,98,35)" fg:x="411" fg:w="109"/><text x="1.4809%" y="751.50"></text></g><g><title>clock_gettime (98 samples, 0.29%)</title><rect x="1.2638%" y="725" width="0.2935%" height="15" fill="rgb(247,138,52)" fg:x="422" fg:w="98"/><text x="1.5138%" y="735.50"></text></g><g><title>__vdso_clock_gettime (60 samples, 0.18%)</title><rect x="1.3776%" y="709" width="0.1797%" height="15" fill="rgb(213,79,30)" fg:x="460" fg:w="60"/><text x="1.6276%" y="719.50"></text></g><g><title>std::time::Instant::now (19 samples, 0.06%)</title><rect x="1.5573%" y="741" width="0.0569%" height="15" fill="rgb(246,177,23)" fg:x="520" fg:w="19"/><text x="1.8073%" y="751.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::transition_worker_to_parked (28 samples, 0.08%)</title><rect x="1.6142%" y="741" width="0.0839%" height="15" fill="rgb(230,62,27)" fg:x="539" fg:w="28"/><text x="1.8642%" y="751.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into (152 samples, 0.46%)</title><rect x="1.7011%" y="741" width="0.4552%" height="15" fill="rgb(216,154,8)" fg:x="568" fg:w="152"/><text x="1.9511%" y="751.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::next_remote_task (10 samples, 0.03%)</title><rect x="2.1563%" y="741" width="0.0299%" height="15" fill="rgb(244,35,45)" fg:x="720" fg:w="10"/><text x="2.4063%" y="751.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_if_work_pending (5 samples, 0.01%)</title><rect x="2.1862%" y="741" width="0.0150%" height="15" fill="rgb(251,115,12)" fg:x="730" fg:w="5"/><text x="2.4362%" y="751.50"></text></g><g><title>plist_add (4 samples, 0.01%)</title><rect x="3.0877%" y="581" width="0.0120%" height="15" fill="rgb(240,54,50)" fg:x="1031" fg:w="4"/><text x="3.3377%" y="591.50"></text></g><g><title>intel_pmu_disable_all (36 samples, 0.11%)</title><rect x="3.3422%" y="533" width="0.1078%" height="15" fill="rgb(233,84,52)" fg:x="1116" fg:w="36"/><text x="3.5922%" y="543.50"></text></g><g><title>__perf_event_task_sched_out (54 samples, 0.16%)</title><rect x="3.2943%" y="549" width="0.1617%" height="15" fill="rgb(207,117,47)" fg:x="1100" fg:w="54"/><text x="3.5443%" y="559.50"></text></g><g><title>_raw_spin_lock (5 samples, 0.01%)</title><rect x="3.4560%" y="549" width="0.0150%" height="15" fill="rgb(249,43,39)" fg:x="1154" fg:w="5"/><text x="3.7060%" y="559.50"></text></g><g><title>cpuacct_charge (23 samples, 0.07%)</title><rect x="3.5788%" y="501" width="0.0689%" height="15" fill="rgb(209,38,44)" fg:x="1195" fg:w="23"/><text x="3.8288%" y="511.50"></text></g><g><title>update_curr (41 samples, 0.12%)</title><rect x="3.5339%" y="517" width="0.1228%" height="15" fill="rgb(236,212,23)" fg:x="1180" fg:w="41"/><text x="3.7839%" y="527.50"></text></g><g><title>__update_load_avg_cfs_rq (8 samples, 0.02%)</title><rect x="3.6597%" y="501" width="0.0240%" height="15" fill="rgb(242,79,21)" fg:x="1222" fg:w="8"/><text x="3.9097%" y="511.50"></text></g><g><title>dequeue_entity (60 samples, 0.18%)</title><rect x="3.5099%" y="533" width="0.1797%" height="15" fill="rgb(211,96,35)" fg:x="1172" fg:w="60"/><text x="3.7599%" y="543.50"></text></g><g><title>update_load_avg (11 samples, 0.03%)</title><rect x="3.6567%" y="517" width="0.0329%" height="15" fill="rgb(253,215,40)" fg:x="1221" fg:w="11"/><text x="3.9067%" y="527.50"></text></g><g><title>dequeue_task_fair (78 samples, 0.23%)</title><rect x="3.4710%" y="549" width="0.2336%" height="15" fill="rgb(211,81,21)" fg:x="1159" fg:w="78"/><text x="3.7210%" y="559.50"></text></g><g><title>update_min_vruntime (5 samples, 0.01%)</title><rect x="3.6896%" y="533" width="0.0150%" height="15" fill="rgb(208,190,38)" fg:x="1232" fg:w="5"/><text x="3.9396%" y="543.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (132 samples, 0.40%)</title><rect x="3.8004%" y="517" width="0.3953%" height="15" fill="rgb(235,213,38)" fg:x="1269" fg:w="132"/><text x="4.0504%" y="527.50"></text></g><g><title>__perf_event_task_sched_in (165 samples, 0.49%)</title><rect x="3.7435%" y="533" width="0.4941%" height="15" fill="rgb(237,122,38)" fg:x="1250" fg:w="165"/><text x="3.9935%" y="543.50"></text></g><g><title>__raw_callee_save___pv_queued_spin_unlock (14 samples, 0.04%)</title><rect x="4.1957%" y="517" width="0.0419%" height="15" fill="rgb(244,218,35)" fg:x="1401" fg:w="14"/><text x="4.4457%" y="527.50"></text></g><g><title>finish_task_switch.isra.0 (184 samples, 0.55%)</title><rect x="3.7046%" y="549" width="0.5510%" height="15" fill="rgb(240,68,47)" fg:x="1237" fg:w="184"/><text x="3.9546%" y="559.50"></text></g><g><title>pick_next_task_fair (25 samples, 0.07%)</title><rect x="4.2556%" y="549" width="0.0749%" height="15" fill="rgb(210,16,53)" fg:x="1421" fg:w="25"/><text x="4.5056%" y="559.50"></text></g><g><title>newidle_balance (18 samples, 0.05%)</title><rect x="4.2766%" y="533" width="0.0539%" height="15" fill="rgb(235,124,12)" fg:x="1428" fg:w="18"/><text x="4.5266%" y="543.50"></text></g><g><title>__msecs_to_jiffies (6 samples, 0.02%)</title><rect x="4.3125%" y="517" width="0.0180%" height="15" fill="rgb(224,169,11)" fg:x="1440" fg:w="6"/><text x="4.5625%" y="527.50"></text></g><g><title>pick_next_task_idle (17 samples, 0.05%)</title><rect x="4.3305%" y="549" width="0.0509%" height="15" fill="rgb(250,166,2)" fg:x="1446" fg:w="17"/><text x="4.5805%" y="559.50"></text></g><g><title>__update_idle_core (13 samples, 0.04%)</title><rect x="4.3425%" y="533" width="0.0389%" height="15" fill="rgb(242,216,29)" fg:x="1450" fg:w="13"/><text x="4.5925%" y="543.50"></text></g><g><title>put_prev_task_fair (13 samples, 0.04%)</title><rect x="4.3814%" y="549" width="0.0389%" height="15" fill="rgb(230,116,27)" fg:x="1463" fg:w="13"/><text x="4.6314%" y="559.50"></text></g><g><title>put_prev_entity (4 samples, 0.01%)</title><rect x="4.4084%" y="533" width="0.0120%" height="15" fill="rgb(228,99,48)" fg:x="1472" fg:w="4"/><text x="4.6584%" y="543.50"></text></g><g><title>futex_wait_queue_me (481 samples, 1.44%)</title><rect x="3.0248%" y="597" width="1.4405%" height="15" fill="rgb(253,11,6)" fg:x="1010" fg:w="481"/><text x="3.2748%" y="607.50"></text></g><g><title>schedule (456 samples, 1.37%)</title><rect x="3.0996%" y="581" width="1.3656%" height="15" fill="rgb(247,143,39)" fg:x="1035" fg:w="456"/><text x="3.3496%" y="591.50"></text></g><g><title>__schedule (443 samples, 1.33%)</title><rect x="3.1386%" y="565" width="1.3267%" height="15" fill="rgb(236,97,10)" fg:x="1048" fg:w="443"/><text x="3.3886%" y="575.50"></text></g><g><title>update_rq_clock (13 samples, 0.04%)</title><rect x="4.4263%" y="549" width="0.0389%" height="15" fill="rgb(233,208,19)" fg:x="1478" fg:w="13"/><text x="4.6763%" y="559.50"></text></g><g><title>sched_clock_cpu (11 samples, 0.03%)</title><rect x="4.4323%" y="533" width="0.0329%" height="15" fill="rgb(216,164,2)" fg:x="1480" fg:w="11"/><text x="4.6823%" y="543.50"></text></g><g><title>read_hv_sched_clock_tsc (9 samples, 0.03%)</title><rect x="4.4383%" y="517" width="0.0270%" height="15" fill="rgb(220,129,5)" fg:x="1482" fg:w="9"/><text x="4.6883%" y="527.50"></text></g><g><title>read_hv_clock_tsc (7 samples, 0.02%)</title><rect x="4.4443%" y="501" width="0.0210%" height="15" fill="rgb(242,17,10)" fg:x="1484" fg:w="7"/><text x="4.6943%" y="511.50"></text></g><g><title>__get_user_nocheck_4 (5 samples, 0.01%)</title><rect x="4.5342%" y="581" width="0.0150%" height="15" fill="rgb(242,107,0)" fg:x="1514" fg:w="5"/><text x="4.7842%" y="591.50"></text></g><g><title>get_futex_key (8 samples, 0.02%)</title><rect x="4.5521%" y="581" width="0.0240%" height="15" fill="rgb(251,28,31)" fg:x="1520" fg:w="8"/><text x="4.8021%" y="591.50"></text></g><g><title>__x64_sys_futex (597 samples, 1.79%)</title><rect x="2.8091%" y="645" width="1.7879%" height="15" fill="rgb(233,223,10)" fg:x="938" fg:w="597"/><text x="3.0591%" y="655.50">_..</text></g><g><title>do_futex (587 samples, 1.76%)</title><rect x="2.8391%" y="629" width="1.7580%" height="15" fill="rgb(215,21,27)" fg:x="948" fg:w="587"/><text x="3.0891%" y="639.50"></text></g><g><title>futex_wait (542 samples, 1.62%)</title><rect x="2.9739%" y="613" width="1.6232%" height="15" fill="rgb(232,23,21)" fg:x="993" fg:w="542"/><text x="3.2239%" y="623.50"></text></g><g><title>futex_wait_setup (44 samples, 0.13%)</title><rect x="4.4653%" y="597" width="0.1318%" height="15" fill="rgb(244,5,23)" fg:x="1491" fg:w="44"/><text x="4.7153%" y="607.50"></text></g><g><title>hash_futex (7 samples, 0.02%)</title><rect x="4.5761%" y="581" width="0.0210%" height="15" fill="rgb(226,81,46)" fg:x="1528" fg:w="7"/><text x="4.8261%" y="591.50"></text></g><g><title>amd_clear_divider (6 samples, 0.02%)</title><rect x="4.6150%" y="629" width="0.0180%" height="15" fill="rgb(247,70,30)" fg:x="1541" fg:w="6"/><text x="4.8650%" y="639.50"></text></g><g><title>__get_user_8 (24 samples, 0.07%)</title><rect x="4.7707%" y="597" width="0.0719%" height="15" fill="rgb(212,68,19)" fg:x="1593" fg:w="24"/><text x="5.0207%" y="607.50"></text></g><g><title>__rseq_handle_notify_resume (44 samples, 0.13%)</title><rect x="4.7168%" y="613" width="0.1318%" height="15" fill="rgb(240,187,13)" fg:x="1575" fg:w="44"/><text x="4.9668%" y="623.50"></text></g><g><title>blkcg_maybe_throttle_current (9 samples, 0.03%)</title><rect x="4.8486%" y="613" width="0.0270%" height="15" fill="rgb(223,113,26)" fg:x="1619" fg:w="9"/><text x="5.0986%" y="623.50"></text></g><g><title>mem_cgroup_handle_over_high (11 samples, 0.03%)</title><rect x="4.8756%" y="613" width="0.0329%" height="15" fill="rgb(206,192,2)" fg:x="1628" fg:w="11"/><text x="5.1256%" y="623.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (726 samples, 2.17%)</title><rect x="2.7702%" y="677" width="2.1742%" height="15" fill="rgb(241,108,4)" fg:x="925" fg:w="726"/><text x="3.0202%" y="687.50">e..</text></g><g><title>do_syscall_64 (724 samples, 2.17%)</title><rect x="2.7762%" y="661" width="2.1682%" height="15" fill="rgb(247,173,49)" fg:x="927" fg:w="724"/><text x="3.0262%" y="671.50">d..</text></g><g><title>syscall_exit_to_user_mode (114 samples, 0.34%)</title><rect x="4.6030%" y="645" width="0.3414%" height="15" fill="rgb(224,114,35)" fg:x="1537" fg:w="114"/><text x="4.8530%" y="655.50"></text></g><g><title>exit_to_user_mode_prepare (104 samples, 0.31%)</title><rect x="4.6330%" y="629" width="0.3115%" height="15" fill="rgb(245,159,27)" fg:x="1547" fg:w="104"/><text x="4.8830%" y="639.50"></text></g><g><title>switch_fpu_return (12 samples, 0.04%)</title><rect x="4.9085%" y="613" width="0.0359%" height="15" fill="rgb(245,172,44)" fg:x="1639" fg:w="12"/><text x="5.1585%" y="623.50"></text></g><g><title>std::sys::pal::unix::locks::futex_condvar::Condvar::wait (815 samples, 2.44%)</title><rect x="2.5426%" y="709" width="2.4408%" height="15" fill="rgb(236,23,11)" fg:x="849" fg:w="815"/><text x="2.7926%" y="719.50">st..</text></g><g><title>syscall (767 samples, 2.30%)</title><rect x="2.6864%" y="693" width="2.2970%" height="15" fill="rgb(205,117,38)" fg:x="897" fg:w="767"/><text x="2.9364%" y="703.50">s..</text></g><g><title>syscall_return_via_sysret (13 samples, 0.04%)</title><rect x="4.9444%" y="677" width="0.0389%" height="15" fill="rgb(237,72,25)" fg:x="1651" fg:w="13"/><text x="5.1944%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;[core::option::Option&lt;core::task::wake::Waker&gt;: 32]&gt; (54 samples, 0.16%)</title><rect x="5.0822%" y="693" width="0.1617%" height="15" fill="rgb(244,70,9)" fg:x="1697" fg:w="54"/><text x="5.3322%" y="703.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (6 samples, 0.02%)</title><rect x="5.2439%" y="693" width="0.0180%" height="15" fill="rgb(217,125,39)" fg:x="1751" fg:w="6"/><text x="5.4939%" y="703.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time (127 samples, 0.38%)</title><rect x="4.9834%" y="709" width="0.3803%" height="15" fill="rgb(235,36,10)" fg:x="1664" fg:w="127"/><text x="5.2334%" y="719.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::poll (34 samples, 0.10%)</title><rect x="5.2619%" y="693" width="0.1018%" height="15" fill="rgb(251,123,47)" fg:x="1757" fg:w="34"/><text x="5.5119%" y="703.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (28 samples, 0.08%)</title><rect x="5.2799%" y="677" width="0.0839%" height="15" fill="rgb(221,13,13)" fg:x="1763" fg:w="28"/><text x="5.5299%" y="687.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_expiration (21 samples, 0.06%)</title><rect x="5.3008%" y="661" width="0.0629%" height="15" fill="rgb(238,131,9)" fg:x="1770" fg:w="21"/><text x="5.5508%" y="671.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (84 samples, 0.25%)</title><rect x="5.4416%" y="693" width="0.2516%" height="15" fill="rgb(211,50,8)" fg:x="1817" fg:w="84"/><text x="5.6916%" y="703.50"></text></g><g><title>clock_gettime (75 samples, 0.22%)</title><rect x="5.4685%" y="677" width="0.2246%" height="15" fill="rgb(245,182,24)" fg:x="1826" fg:w="75"/><text x="5.7185%" y="687.50"></text></g><g><title>__vdso_clock_gettime (35 samples, 0.10%)</title><rect x="5.5883%" y="661" width="0.1048%" height="15" fill="rgb(242,14,37)" fg:x="1866" fg:w="35"/><text x="5.8383%" y="671.50"></text></g><g><title>std::time::Instant::checked_duration_since (19 samples, 0.06%)</title><rect x="5.6932%" y="693" width="0.0569%" height="15" fill="rgb(246,228,12)" fg:x="1901" fg:w="19"/><text x="5.9432%" y="703.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::sub_timespec (9 samples, 0.03%)</title><rect x="5.7231%" y="677" width="0.0270%" height="15" fill="rgb(213,55,15)" fg:x="1911" fg:w="9"/><text x="5.9731%" y="687.50"></text></g><g><title>std::time::Instant::now (27 samples, 0.08%)</title><rect x="5.7501%" y="693" width="0.0809%" height="15" fill="rgb(209,9,3)" fg:x="1920" fg:w="27"/><text x="6.0001%" y="703.50"></text></g><g><title>&lt;mio::event::events::Iter as core::iter::traits::iterator::Iterator&gt;::next (27 samples, 0.08%)</title><rect x="5.9687%" y="677" width="0.0809%" height="15" fill="rgb(230,59,30)" fg:x="1993" fg:w="27"/><text x="6.2187%" y="687.50"></text></g><g><title>mio::poll::Poll::poll (13 samples, 0.04%)</title><rect x="6.0495%" y="677" width="0.0389%" height="15" fill="rgb(209,121,21)" fg:x="2020" fg:w="13"/><text x="6.2995%" y="687.50"></text></g><g><title>[libc.so.6] (26 samples, 0.08%)</title><rect x="6.2801%" y="645" width="0.0779%" height="15" fill="rgb(220,109,13)" fg:x="2097" fg:w="26"/><text x="6.5301%" y="655.50"></text></g><g><title>entry_SYSCALL_64 (10 samples, 0.03%)</title><rect x="6.3580%" y="645" width="0.0299%" height="15" fill="rgb(232,18,1)" fg:x="2123" fg:w="10"/><text x="6.6080%" y="655.50"></text></g><g><title>__fdget (5 samples, 0.01%)</title><rect x="6.8641%" y="581" width="0.0150%" height="15" fill="rgb(215,41,42)" fg:x="2292" fg:w="5"/><text x="7.1141%" y="591.50"></text></g><g><title>__fget_light (20 samples, 0.06%)</title><rect x="6.8791%" y="581" width="0.0599%" height="15" fill="rgb(224,123,36)" fg:x="2297" fg:w="20"/><text x="7.1291%" y="591.50"></text></g><g><title>__fget_files (9 samples, 0.03%)</title><rect x="6.9120%" y="565" width="0.0270%" height="15" fill="rgb(240,125,3)" fg:x="2308" fg:w="9"/><text x="7.1620%" y="575.50"></text></g><g><title>__list_add_valid (4 samples, 0.01%)</title><rect x="6.9390%" y="581" width="0.0120%" height="15" fill="rgb(205,98,50)" fg:x="2317" fg:w="4"/><text x="7.1890%" y="591.50"></text></g><g><title>__put_user_nocheck_4 (20 samples, 0.06%)</title><rect x="6.9510%" y="581" width="0.0599%" height="15" fill="rgb(205,185,37)" fg:x="2321" fg:w="20"/><text x="7.2010%" y="591.50"></text></g><g><title>_raw_write_lock_irq (4 samples, 0.01%)</title><rect x="7.0139%" y="581" width="0.0120%" height="15" fill="rgb(238,207,15)" fg:x="2342" fg:w="4"/><text x="7.2639%" y="591.50"></text></g><g><title>ep_done_scan (12 samples, 0.04%)</title><rect x="7.0258%" y="581" width="0.0359%" height="15" fill="rgb(213,199,42)" fg:x="2346" fg:w="12"/><text x="7.2758%" y="591.50"></text></g><g><title>_raw_write_lock_irq (4 samples, 0.01%)</title><rect x="7.0498%" y="565" width="0.0120%" height="15" fill="rgb(235,201,11)" fg:x="2354" fg:w="4"/><text x="7.2998%" y="575.50"></text></g><g><title>eventfd_poll (15 samples, 0.04%)</title><rect x="7.1426%" y="565" width="0.0449%" height="15" fill="rgb(207,46,11)" fg:x="2385" fg:w="15"/><text x="7.3926%" y="575.50"></text></g><g><title>ep_item_poll.isra.0 (97 samples, 0.29%)</title><rect x="7.0618%" y="581" width="0.2905%" height="15" fill="rgb(241,35,35)" fg:x="2358" fg:w="97"/><text x="7.3118%" y="591.50"></text></g><g><title>tun_chr_poll (54 samples, 0.16%)</title><rect x="7.1906%" y="565" width="0.1617%" height="15" fill="rgb(243,32,47)" fg:x="2401" fg:w="54"/><text x="7.4406%" y="575.50"></text></g><g><title>tun_get (33 samples, 0.10%)</title><rect x="7.2535%" y="549" width="0.0988%" height="15" fill="rgb(247,202,23)" fg:x="2422" fg:w="33"/><text x="7.5035%" y="559.50"></text></g><g><title>fput (8 samples, 0.02%)</title><rect x="7.3523%" y="581" width="0.0240%" height="15" fill="rgb(219,102,11)" fg:x="2455" fg:w="8"/><text x="7.6023%" y="591.50"></text></g><g><title>fput_many (11 samples, 0.03%)</title><rect x="7.3762%" y="581" width="0.0329%" height="15" fill="rgb(243,110,44)" fg:x="2463" fg:w="11"/><text x="7.6262%" y="591.50"></text></g><g><title>mutex_lock (31 samples, 0.09%)</title><rect x="7.4092%" y="581" width="0.0928%" height="15" fill="rgb(222,74,54)" fg:x="2474" fg:w="31"/><text x="7.6592%" y="591.50"></text></g><g><title>mutex_unlock (5 samples, 0.01%)</title><rect x="7.5020%" y="581" width="0.0150%" height="15" fill="rgb(216,99,12)" fg:x="2505" fg:w="5"/><text x="7.7520%" y="591.50"></text></g><g><title>queued_write_lock_slowpath (16 samples, 0.05%)</title><rect x="7.5170%" y="581" width="0.0479%" height="15" fill="rgb(226,22,26)" fg:x="2510" fg:w="16"/><text x="7.7670%" y="591.50"></text></g><g><title>_raw_spin_unlock_irqrestore (6 samples, 0.02%)</title><rect x="7.6068%" y="565" width="0.0180%" height="15" fill="rgb(217,163,10)" fg:x="2540" fg:w="6"/><text x="7.8568%" y="575.50"></text></g><g><title>__raw_callee_save___pv_queued_spin_unlock (5 samples, 0.01%)</title><rect x="7.6098%" y="549" width="0.0150%" height="15" fill="rgb(213,25,53)" fg:x="2541" fg:w="5"/><text x="7.8598%" y="559.50"></text></g><g><title>hrtimer_active (8 samples, 0.02%)</title><rect x="7.6248%" y="565" width="0.0240%" height="15" fill="rgb(252,105,26)" fg:x="2546" fg:w="8"/><text x="7.8748%" y="575.50"></text></g><g><title>hrtimer_init_sleeper (25 samples, 0.07%)</title><rect x="7.6488%" y="565" width="0.0749%" height="15" fill="rgb(220,39,43)" fg:x="2554" fg:w="25"/><text x="7.8988%" y="575.50"></text></g><g><title>__hrtimer_init (21 samples, 0.06%)</title><rect x="7.6607%" y="549" width="0.0629%" height="15" fill="rgb(229,68,48)" fg:x="2558" fg:w="21"/><text x="7.9107%" y="559.50"></text></g><g><title>enqueue_hrtimer (21 samples, 0.06%)</title><rect x="7.8075%" y="549" width="0.0629%" height="15" fill="rgb(252,8,32)" fg:x="2607" fg:w="21"/><text x="8.0575%" y="559.50"></text></g><g><title>timerqueue_add (20 samples, 0.06%)</title><rect x="7.8105%" y="533" width="0.0599%" height="15" fill="rgb(223,20,43)" fg:x="2608" fg:w="20"/><text x="8.0605%" y="543.50"></text></g><g><title>rb_insert_color (11 samples, 0.03%)</title><rect x="7.8374%" y="517" width="0.0329%" height="15" fill="rgb(229,81,49)" fg:x="2617" fg:w="11"/><text x="8.0874%" y="527.50"></text></g><g><title>hrtimer_start_range_ns (58 samples, 0.17%)</title><rect x="7.7236%" y="565" width="0.1737%" height="15" fill="rgb(236,28,36)" fg:x="2579" fg:w="58"/><text x="7.9736%" y="575.50"></text></g><g><title>get_nohz_timer_target (9 samples, 0.03%)</title><rect x="7.8704%" y="549" width="0.0270%" height="15" fill="rgb(249,185,26)" fg:x="2628" fg:w="9"/><text x="8.1204%" y="559.50"></text></g><g><title>__remove_hrtimer (23 samples, 0.07%)</title><rect x="7.9363%" y="549" width="0.0689%" height="15" fill="rgb(249,174,33)" fg:x="2650" fg:w="23"/><text x="8.1863%" y="559.50"></text></g><g><title>timerqueue_del (19 samples, 0.06%)</title><rect x="7.9482%" y="533" width="0.0569%" height="15" fill="rgb(233,201,37)" fg:x="2654" fg:w="19"/><text x="8.1982%" y="543.50"></text></g><g><title>rb_erase (11 samples, 0.03%)</title><rect x="7.9722%" y="517" width="0.0329%" height="15" fill="rgb(221,78,26)" fg:x="2662" fg:w="11"/><text x="8.2222%" y="527.50"></text></g><g><title>_raw_spin_lock_irqsave (7 samples, 0.02%)</title><rect x="8.0052%" y="549" width="0.0210%" height="15" fill="rgb(250,127,30)" fg:x="2673" fg:w="7"/><text x="8.2552%" y="559.50"></text></g><g><title>_raw_spin_unlock_irqrestore (4 samples, 0.01%)</title><rect x="8.0261%" y="549" width="0.0120%" height="15" fill="rgb(230,49,44)" fg:x="2680" fg:w="4"/><text x="8.2761%" y="559.50"></text></g><g><title>hrtimer_try_to_cancel.part.0 (49 samples, 0.15%)</title><rect x="7.8973%" y="565" width="0.1467%" height="15" fill="rgb(229,67,23)" fg:x="2637" fg:w="49"/><text x="8.1473%" y="575.50"></text></g><g><title>intel_pmu_disable_all (49 samples, 0.15%)</title><rect x="8.3106%" y="517" width="0.1467%" height="15" fill="rgb(249,83,47)" fg:x="2775" fg:w="49"/><text x="8.5606%" y="527.50"></text></g><g><title>__perf_event_task_sched_out (65 samples, 0.19%)</title><rect x="8.2687%" y="533" width="0.1947%" height="15" fill="rgb(215,43,3)" fg:x="2761" fg:w="65"/><text x="8.5187%" y="543.50"></text></g><g><title>__list_del_entry_valid (5 samples, 0.01%)</title><rect x="8.5622%" y="501" width="0.0150%" height="15" fill="rgb(238,154,13)" fg:x="2859" fg:w="5"/><text x="8.8122%" y="511.50"></text></g><g><title>cpuacct_charge (32 samples, 0.10%)</title><rect x="8.6221%" y="485" width="0.0958%" height="15" fill="rgb(219,56,2)" fg:x="2879" fg:w="32"/><text x="8.8721%" y="495.50"></text></g><g><title>update_curr (48 samples, 0.14%)</title><rect x="8.5891%" y="501" width="0.1438%" height="15" fill="rgb(233,0,4)" fg:x="2868" fg:w="48"/><text x="8.8391%" y="511.50"></text></g><g><title>update_min_vruntime (5 samples, 0.01%)</title><rect x="8.7179%" y="485" width="0.0150%" height="15" fill="rgb(235,30,7)" fg:x="2911" fg:w="5"/><text x="8.9679%" y="495.50"></text></g><g><title>__update_load_avg_cfs_rq (4 samples, 0.01%)</title><rect x="8.7479%" y="485" width="0.0120%" height="15" fill="rgb(250,79,13)" fg:x="2921" fg:w="4"/><text x="8.9979%" y="495.50"></text></g><g><title>dequeue_entity (80 samples, 0.24%)</title><rect x="8.5292%" y="517" width="0.2396%" height="15" fill="rgb(211,146,34)" fg:x="2848" fg:w="80"/><text x="8.7792%" y="527.50"></text></g><g><title>update_load_avg (12 samples, 0.04%)</title><rect x="8.7329%" y="501" width="0.0359%" height="15" fill="rgb(228,22,38)" fg:x="2916" fg:w="12"/><text x="8.9829%" y="511.50"></text></g><g><title>dequeue_task_fair (107 samples, 0.32%)</title><rect x="8.4634%" y="533" width="0.3204%" height="15" fill="rgb(235,168,5)" fg:x="2826" fg:w="107"/><text x="8.7134%" y="543.50"></text></g><g><title>update_min_vruntime (5 samples, 0.01%)</title><rect x="8.7688%" y="517" width="0.0150%" height="15" fill="rgb(221,155,16)" fg:x="2928" fg:w="5"/><text x="9.0188%" y="527.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (158 samples, 0.47%)</title><rect x="8.9276%" y="501" width="0.4732%" height="15" fill="rgb(215,215,53)" fg:x="2981" fg:w="158"/><text x="9.1776%" y="511.50"></text></g><g><title>__perf_event_task_sched_in (190 samples, 0.57%)</title><rect x="8.8677%" y="517" width="0.5690%" height="15" fill="rgb(223,4,10)" fg:x="2961" fg:w="190"/><text x="9.1177%" y="527.50"></text></g><g><title>__raw_callee_save___pv_queued_spin_unlock (12 samples, 0.04%)</title><rect x="9.4007%" y="501" width="0.0359%" height="15" fill="rgb(234,103,6)" fg:x="3139" fg:w="12"/><text x="9.6507%" y="511.50"></text></g><g><title>__raw_callee_save___pv_queued_spin_unlock (5 samples, 0.01%)</title><rect x="9.4367%" y="517" width="0.0150%" height="15" fill="rgb(227,97,0)" fg:x="3151" fg:w="5"/><text x="9.6867%" y="527.50"></text></g><g><title>finish_task_switch.isra.0 (225 samples, 0.67%)</title><rect x="8.7838%" y="533" width="0.6738%" height="15" fill="rgb(234,150,53)" fg:x="2933" fg:w="225"/><text x="9.0338%" y="543.50"></text></g><g><title>pick_next_task_fair (21 samples, 0.06%)</title><rect x="9.4666%" y="533" width="0.0629%" height="15" fill="rgb(228,201,54)" fg:x="3161" fg:w="21"/><text x="9.7166%" y="543.50"></text></g><g><title>newidle_balance (16 samples, 0.05%)</title><rect x="9.4816%" y="517" width="0.0479%" height="15" fill="rgb(222,22,37)" fg:x="3166" fg:w="16"/><text x="9.7316%" y="527.50"></text></g><g><title>pick_next_task_idle (27 samples, 0.08%)</title><rect x="9.5295%" y="533" width="0.0809%" height="15" fill="rgb(237,53,32)" fg:x="3182" fg:w="27"/><text x="9.7795%" y="543.50"></text></g><g><title>__update_idle_core (23 samples, 0.07%)</title><rect x="9.5415%" y="517" width="0.0689%" height="15" fill="rgb(233,25,53)" fg:x="3186" fg:w="23"/><text x="9.7915%" y="527.50"></text></g><g><title>put_prev_task_fair (20 samples, 0.06%)</title><rect x="9.6104%" y="533" width="0.0599%" height="15" fill="rgb(210,40,34)" fg:x="3209" fg:w="20"/><text x="9.8604%" y="543.50"></text></g><g><title>put_prev_entity (10 samples, 0.03%)</title><rect x="9.6403%" y="517" width="0.0299%" height="15" fill="rgb(241,220,44)" fg:x="3219" fg:w="10"/><text x="9.8903%" y="527.50"></text></g><g><title>rcu_note_context_switch (5 samples, 0.01%)</title><rect x="9.6703%" y="533" width="0.0150%" height="15" fill="rgb(235,28,35)" fg:x="3229" fg:w="5"/><text x="9.9203%" y="543.50"></text></g><g><title>schedule_hrtimeout_range_clock (719 samples, 2.15%)</title><rect x="7.5649%" y="581" width="2.1533%" height="15" fill="rgb(210,56,17)" fg:x="2526" fg:w="719"/><text x="7.8149%" y="591.50">s..</text></g><g><title>schedule (559 samples, 1.67%)</title><rect x="8.0441%" y="565" width="1.6741%" height="15" fill="rgb(224,130,29)" fg:x="2686" fg:w="559"/><text x="8.2941%" y="575.50"></text></g><g><title>__schedule (537 samples, 1.61%)</title><rect x="8.1100%" y="549" width="1.6082%" height="15" fill="rgb(235,212,8)" fg:x="2708" fg:w="537"/><text x="8.3600%" y="559.50"></text></g><g><title>update_rq_clock (11 samples, 0.03%)</title><rect x="9.6852%" y="533" width="0.0329%" height="15" fill="rgb(223,33,50)" fg:x="3234" fg:w="11"/><text x="9.9352%" y="543.50"></text></g><g><title>sched_clock_cpu (7 samples, 0.02%)</title><rect x="9.6972%" y="517" width="0.0210%" height="15" fill="rgb(219,149,13)" fg:x="3238" fg:w="7"/><text x="9.9472%" y="527.50"></text></g><g><title>read_hv_sched_clock_tsc (5 samples, 0.01%)</title><rect x="9.7032%" y="501" width="0.0150%" height="15" fill="rgb(250,156,29)" fg:x="3240" fg:w="5"/><text x="9.9532%" y="511.50"></text></g><g><title>read_hv_clock_tsc (5 samples, 0.01%)</title><rect x="9.7032%" y="485" width="0.0150%" height="15" fill="rgb(216,193,19)" fg:x="3240" fg:w="5"/><text x="9.9532%" y="495.50"></text></g><g><title>ktime_get_ts64 (7 samples, 0.02%)</title><rect x="9.7990%" y="565" width="0.0210%" height="15" fill="rgb(216,135,14)" fg:x="3272" fg:w="7"/><text x="10.0490%" y="575.50"></text></g><g><title>read_hv_clock_tsc (6 samples, 0.02%)</title><rect x="9.8020%" y="549" width="0.0180%" height="15" fill="rgb(241,47,5)" fg:x="3273" fg:w="6"/><text x="10.0520%" y="559.50"></text></g><g><title>do_epoll_wait (1,093 samples, 3.27%)</title><rect x="6.5736%" y="597" width="3.2733%" height="15" fill="rgb(233,42,35)" fg:x="2195" fg:w="1093"/><text x="6.8236%" y="607.50">do_..</text></g><g><title>select_estimate_accuracy (43 samples, 0.13%)</title><rect x="9.7182%" y="581" width="0.1288%" height="15" fill="rgb(231,13,6)" fg:x="3245" fg:w="43"/><text x="9.9682%" y="591.50"></text></g><g><title>set_normalized_timespec64 (9 samples, 0.03%)</title><rect x="9.8200%" y="565" width="0.0270%" height="15" fill="rgb(207,181,40)" fg:x="3279" fg:w="9"/><text x="10.0700%" y="575.50"></text></g><g><title>read_hv_clock_tsc (6 samples, 0.02%)</title><rect x="9.9218%" y="581" width="0.0180%" height="15" fill="rgb(254,173,49)" fg:x="3313" fg:w="6"/><text x="10.1718%" y="591.50"></text></g><g><title>ktime_get_ts64 (32 samples, 0.10%)</title><rect x="9.8470%" y="597" width="0.0958%" height="15" fill="rgb(221,1,38)" fg:x="3288" fg:w="32"/><text x="10.0970%" y="607.50"></text></g><g><title>__x64_sys_epoll_wait (1,157 samples, 3.47%)</title><rect x="6.5077%" y="613" width="3.4650%" height="15" fill="rgb(206,124,46)" fg:x="2173" fg:w="1157"/><text x="6.7577%" y="623.50">__x..</text></g><g><title>timespec64_add_safe (10 samples, 0.03%)</title><rect x="9.9428%" y="597" width="0.0299%" height="15" fill="rgb(249,21,11)" fg:x="3320" fg:w="10"/><text x="10.1928%" y="607.50"></text></g><g><title>__get_user_8 (23 samples, 0.07%)</title><rect x="10.1135%" y="565" width="0.0689%" height="15" fill="rgb(222,201,40)" fg:x="3377" fg:w="23"/><text x="10.3635%" y="575.50"></text></g><g><title>__rseq_handle_notify_resume (46 samples, 0.14%)</title><rect x="10.0506%" y="581" width="0.1378%" height="15" fill="rgb(235,61,29)" fg:x="3356" fg:w="46"/><text x="10.3006%" y="591.50"></text></g><g><title>blkcg_maybe_throttle_current (13 samples, 0.04%)</title><rect x="10.1884%" y="581" width="0.0389%" height="15" fill="rgb(219,207,3)" fg:x="3402" fg:w="13"/><text x="10.4384%" y="591.50"></text></g><g><title>mem_cgroup_handle_over_high (9 samples, 0.03%)</title><rect x="10.2273%" y="581" width="0.0270%" height="15" fill="rgb(222,56,46)" fg:x="3415" fg:w="9"/><text x="10.4773%" y="591.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1,301 samples, 3.90%)</title><rect x="6.3879%" y="645" width="3.8963%" height="15" fill="rgb(239,76,54)" fg:x="2133" fg:w="1301"/><text x="6.6379%" y="655.50">entr..</text></g><g><title>do_syscall_64 (1,288 samples, 3.86%)</title><rect x="6.4269%" y="629" width="3.8573%" height="15" fill="rgb(231,124,27)" fg:x="2146" fg:w="1288"/><text x="6.6769%" y="639.50">do_s..</text></g><g><title>syscall_exit_to_user_mode (103 samples, 0.31%)</title><rect x="9.9757%" y="613" width="0.3085%" height="15" fill="rgb(249,195,6)" fg:x="3331" fg:w="103"/><text x="10.2257%" y="623.50"></text></g><g><title>exit_to_user_mode_prepare (96 samples, 0.29%)</title><rect x="9.9967%" y="597" width="0.2875%" height="15" fill="rgb(237,174,47)" fg:x="3338" fg:w="96"/><text x="10.2467%" y="607.50"></text></g><g><title>switch_fpu_return (10 samples, 0.03%)</title><rect x="10.2543%" y="581" width="0.0299%" height="15" fill="rgb(206,201,31)" fg:x="3424" fg:w="10"/><text x="10.5043%" y="591.50"></text></g><g><title>mio::sys::unix::selector::epoll::Selector::select (1,421 samples, 4.26%)</title><rect x="6.0885%" y="677" width="4.2556%" height="15" fill="rgb(231,57,52)" fg:x="2033" fg:w="1421"/><text x="6.3385%" y="687.50">mio::..</text></g><g><title>epoll_wait (1,397 samples, 4.18%)</title><rect x="6.1603%" y="661" width="4.1838%" height="15" fill="rgb(248,177,22)" fg:x="2057" fg:w="1397"/><text x="6.4103%" y="671.50">epoll..</text></g><g><title>syscall_return_via_sysret (20 samples, 0.06%)</title><rect x="10.2842%" y="645" width="0.0599%" height="15" fill="rgb(215,211,37)" fg:x="3434" fg:w="20"/><text x="10.5342%" y="655.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::schedule (13 samples, 0.04%)</title><rect x="10.3800%" y="645" width="0.0389%" height="15" fill="rgb(241,128,51)" fg:x="3466" fg:w="13"/><text x="10.6300%" y="655.50"></text></g><g><title>tokio::runtime::context::with_scheduler (8 samples, 0.02%)</title><rect x="10.3950%" y="629" width="0.0240%" height="15" fill="rgb(227,165,31)" fg:x="3471" fg:w="8"/><text x="10.6450%" y="639.50"></text></g><g><title>tokio::runtime::io::driver::Driver::turn (1,536 samples, 4.60%)</title><rect x="5.8309%" y="693" width="4.6000%" height="15" fill="rgb(228,167,24)" fg:x="1947" fg:w="1536"/><text x="6.0809%" y="703.50">tokio..</text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::wake (29 samples, 0.09%)</title><rect x="10.3441%" y="677" width="0.0868%" height="15" fill="rgb(228,143,12)" fg:x="3454" fg:w="29"/><text x="10.5941%" y="687.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (21 samples, 0.06%)</title><rect x="10.3681%" y="661" width="0.0629%" height="15" fill="rgb(249,149,8)" fg:x="3462" fg:w="21"/><text x="10.6181%" y="671.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Parker::park (2,724 samples, 8.16%)</title><rect x="2.3240%" y="725" width="8.1579%" height="15" fill="rgb(243,35,44)" fg:x="776" fg:w="2724"/><text x="2.5740%" y="735.50">tokio::runt..</text></g><g><title>tokio::runtime::time::Driver::park_internal (1,709 samples, 5.12%)</title><rect x="5.3637%" y="709" width="5.1181%" height="15" fill="rgb(246,89,9)" fg:x="1791" fg:w="1709"/><text x="5.6137%" y="719.50">tokio:..</text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (17 samples, 0.05%)</title><rect x="10.4310%" y="693" width="0.0509%" height="15" fill="rgb(233,213,13)" fg:x="3483" fg:w="17"/><text x="10.6810%" y="703.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_expiration (16 samples, 0.05%)</title><rect x="10.4339%" y="677" width="0.0479%" height="15" fill="rgb(233,141,41)" fg:x="3484" fg:w="16"/><text x="10.6839%" y="687.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park_timeout (2,777 samples, 8.32%)</title><rect x="2.2012%" y="741" width="8.3166%" height="15" fill="rgb(239,167,4)" fg:x="735" fg:w="2777"/><text x="2.4512%" y="751.50">tokio::runti..</text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Parker::park_timeout (12 samples, 0.04%)</title><rect x="10.4819%" y="725" width="0.0359%" height="15" fill="rgb(209,217,16)" fg:x="3500" fg:w="12"/><text x="10.7319%" y="735.50"></text></g><g><title>tokio::runtime::time::Driver::park_internal (9 samples, 0.03%)</title><rect x="10.4909%" y="709" width="0.0270%" height="15" fill="rgb(219,88,35)" fg:x="3503" fg:w="9"/><text x="10.7409%" y="719.50"></text></g><g><title>tokio::runtime::io::driver::Driver::turn (7 samples, 0.02%)</title><rect x="10.4968%" y="693" width="0.0210%" height="15" fill="rgb(220,193,23)" fg:x="3505" fg:w="7"/><text x="10.7468%" y="703.50"></text></g><g><title>mio::sys::unix::selector::epoll::Selector::select (6 samples, 0.02%)</title><rect x="10.4998%" y="677" width="0.0180%" height="15" fill="rgb(230,90,52)" fg:x="3506" fg:w="6"/><text x="10.7498%" y="687.50"></text></g><g><title>epoll_wait (6 samples, 0.02%)</title><rect x="10.4998%" y="661" width="0.0180%" height="15" fill="rgb(252,106,19)" fg:x="3506" fg:w="6"/><text x="10.7498%" y="671.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (5 samples, 0.01%)</title><rect x="10.5028%" y="645" width="0.0150%" height="15" fill="rgb(206,74,20)" fg:x="3507" fg:w="5"/><text x="10.7528%" y="655.50"></text></g><g><title>do_syscall_64 (4 samples, 0.01%)</title><rect x="10.5058%" y="629" width="0.0120%" height="15" fill="rgb(230,138,44)" fg:x="3508" fg:w="4"/><text x="10.7558%" y="639.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (4 samples, 0.01%)</title><rect x="10.8023%" y="725" width="0.0120%" height="15" fill="rgb(235,182,43)" fg:x="3607" fg:w="4"/><text x="11.0523%" y="735.50"></text></g><g><title>[[kernel.kallsyms]] (15 samples, 0.04%)</title><rect x="10.8532%" y="709" width="0.0449%" height="15" fill="rgb(242,16,51)" fg:x="3624" fg:w="15"/><text x="11.1032%" y="719.50"></text></g><g><title>get_futex_key (5 samples, 0.01%)</title><rect x="11.1767%" y="629" width="0.0150%" height="15" fill="rgb(248,9,4)" fg:x="3732" fg:w="5"/><text x="11.4267%" y="639.50"></text></g><g><title>hash_futex (5 samples, 0.01%)</title><rect x="11.1916%" y="629" width="0.0150%" height="15" fill="rgb(210,31,22)" fg:x="3737" fg:w="5"/><text x="11.4416%" y="639.50"></text></g><g><title>mark_wake_futex (28 samples, 0.08%)</title><rect x="11.2066%" y="629" width="0.0839%" height="15" fill="rgb(239,54,39)" fg:x="3742" fg:w="28"/><text x="11.4566%" y="639.50"></text></g><g><title>__unqueue_futex (16 samples, 0.05%)</title><rect x="11.2426%" y="613" width="0.0479%" height="15" fill="rgb(230,99,41)" fg:x="3754" fg:w="16"/><text x="11.4926%" y="623.50"></text></g><g><title>plist_del (12 samples, 0.04%)</title><rect x="11.2545%" y="597" width="0.0359%" height="15" fill="rgb(253,106,12)" fg:x="3758" fg:w="12"/><text x="11.5045%" y="607.50"></text></g><g><title>_raw_spin_unlock_irqrestore (5 samples, 0.01%)</title><rect x="11.3504%" y="597" width="0.0150%" height="15" fill="rgb(213,46,41)" fg:x="3790" fg:w="5"/><text x="11.6004%" y="607.50"></text></g><g><title>__raw_callee_save___pv_queued_spin_unlock (4 samples, 0.01%)</title><rect x="11.3534%" y="581" width="0.0120%" height="15" fill="rgb(215,133,35)" fg:x="3791" fg:w="4"/><text x="11.6034%" y="591.50"></text></g><g><title>asm_sysvec_hyperv_callback (4 samples, 0.01%)</title><rect x="11.3653%" y="597" width="0.0120%" height="15" fill="rgb(213,28,5)" fg:x="3795" fg:w="4"/><text x="11.6153%" y="607.50"></text></g><g><title>sysvec_hyperv_callback (4 samples, 0.01%)</title><rect x="11.3653%" y="581" width="0.0120%" height="15" fill="rgb(215,77,49)" fg:x="3795" fg:w="4"/><text x="11.6153%" y="591.50"></text></g><g><title>available_idle_cpu (14 samples, 0.04%)</title><rect x="11.4702%" y="581" width="0.0419%" height="15" fill="rgb(248,100,22)" fg:x="3830" fg:w="14"/><text x="11.7202%" y="591.50"></text></g><g><title>select_task_rq_fair (43 samples, 0.13%)</title><rect x="11.3893%" y="597" width="0.1288%" height="15" fill="rgb(208,67,9)" fg:x="3803" fg:w="43"/><text x="11.6393%" y="607.50"></text></g><g><title>__smp_call_single_queue (8 samples, 0.02%)</title><rect x="11.5660%" y="581" width="0.0240%" height="15" fill="rgb(219,133,21)" fg:x="3862" fg:w="8"/><text x="11.8160%" y="591.50"></text></g><g><title>llist_add_batch (8 samples, 0.02%)</title><rect x="11.5660%" y="565" width="0.0240%" height="15" fill="rgb(246,46,29)" fg:x="3862" fg:w="8"/><text x="11.8160%" y="575.50"></text></g><g><title>hv_send_ipi (28 samples, 0.08%)</title><rect x="11.5899%" y="581" width="0.0839%" height="15" fill="rgb(246,185,52)" fg:x="3870" fg:w="28"/><text x="11.8399%" y="591.50"></text></g><g><title>__send_ipi_one (24 samples, 0.07%)</title><rect x="11.6019%" y="565" width="0.0719%" height="15" fill="rgb(252,136,11)" fg:x="3874" fg:w="24"/><text x="11.8519%" y="575.50"></text></g><g><title>sched_clock_cpu (6 samples, 0.02%)</title><rect x="11.6768%" y="581" width="0.0180%" height="15" fill="rgb(219,138,53)" fg:x="3899" fg:w="6"/><text x="11.9268%" y="591.50"></text></g><g><title>read_hv_sched_clock_tsc (4 samples, 0.01%)</title><rect x="11.6828%" y="565" width="0.0120%" height="15" fill="rgb(211,51,23)" fg:x="3901" fg:w="4"/><text x="11.9328%" y="575.50"></text></g><g><title>read_hv_clock_tsc (4 samples, 0.01%)</title><rect x="11.6828%" y="549" width="0.0120%" height="15" fill="rgb(247,221,28)" fg:x="3901" fg:w="4"/><text x="11.9328%" y="559.50"></text></g><g><title>__x64_sys_futex (246 samples, 0.74%)</title><rect x="10.9640%" y="677" width="0.7367%" height="15" fill="rgb(251,222,45)" fg:x="3661" fg:w="246"/><text x="11.2140%" y="687.50"></text></g><g><title>do_futex (239 samples, 0.72%)</title><rect x="10.9850%" y="661" width="0.7158%" height="15" fill="rgb(217,162,53)" fg:x="3668" fg:w="239"/><text x="11.2350%" y="671.50"></text></g><g><title>futex_wake (217 samples, 0.65%)</title><rect x="11.0509%" y="645" width="0.6499%" height="15" fill="rgb(229,93,14)" fg:x="3690" fg:w="217"/><text x="11.3009%" y="655.50"></text></g><g><title>wake_up_q (136 samples, 0.41%)</title><rect x="11.2935%" y="629" width="0.4073%" height="15" fill="rgb(209,67,49)" fg:x="3771" fg:w="136"/><text x="11.5435%" y="639.50"></text></g><g><title>try_to_wake_up (136 samples, 0.41%)</title><rect x="11.2935%" y="613" width="0.4073%" height="15" fill="rgb(213,87,29)" fg:x="3771" fg:w="136"/><text x="11.5435%" y="623.50"></text></g><g><title>ttwu_queue_wakelist (60 samples, 0.18%)</title><rect x="11.5211%" y="597" width="0.1797%" height="15" fill="rgb(205,151,52)" fg:x="3847" fg:w="60"/><text x="11.7711%" y="607.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (275 samples, 0.82%)</title><rect x="10.9011%" y="709" width="0.8236%" height="15" fill="rgb(253,215,39)" fg:x="3640" fg:w="275"/><text x="11.1511%" y="719.50"></text></g><g><title>do_syscall_64 (267 samples, 0.80%)</title><rect x="10.9251%" y="693" width="0.7996%" height="15" fill="rgb(221,220,41)" fg:x="3648" fg:w="267"/><text x="11.1751%" y="703.50"></text></g><g><title>syscall_exit_to_user_mode (7 samples, 0.02%)</title><rect x="11.7038%" y="677" width="0.0210%" height="15" fill="rgb(218,133,21)" fg:x="3908" fg:w="7"/><text x="11.9538%" y="687.50"></text></g><g><title>syscall (308 samples, 0.92%)</title><rect x="10.8143%" y="725" width="0.9224%" height="15" fill="rgb(221,193,43)" fg:x="3611" fg:w="308"/><text x="11.0643%" y="735.50"></text></g><g><title>syscall_return_via_sysret (4 samples, 0.01%)</title><rect x="11.7247%" y="709" width="0.0120%" height="15" fill="rgb(240,128,52)" fg:x="3915" fg:w="4"/><text x="11.9747%" y="719.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::worker_to_notify (22 samples, 0.07%)</title><rect x="11.7367%" y="725" width="0.0659%" height="15" fill="rgb(253,114,12)" fg:x="3919" fg:w="22"/><text x="11.9867%" y="735.50"></text></g><g><title>[[kernel.kallsyms]] (17 samples, 0.05%)</title><rect x="11.9643%" y="661" width="0.0509%" height="15" fill="rgb(215,223,47)" fg:x="3995" fg:w="17"/><text x="12.2143%" y="671.50"></text></g><g><title>[libc.so.6] (10 samples, 0.03%)</title><rect x="12.0152%" y="661" width="0.0299%" height="15" fill="rgb(248,225,23)" fg:x="4012" fg:w="10"/><text x="12.2652%" y="671.50"></text></g><g><title>entry_SYSCALL_64 (4 samples, 0.01%)</title><rect x="12.0452%" y="661" width="0.0120%" height="15" fill="rgb(250,108,0)" fg:x="4022" fg:w="4"/><text x="12.2952%" y="671.50"></text></g><g><title>__x64_sys_write (7 samples, 0.02%)</title><rect x="12.0901%" y="629" width="0.0210%" height="15" fill="rgb(228,208,7)" fg:x="4037" fg:w="7"/><text x="12.3401%" y="639.50"></text></g><g><title>__fdget_pos (27 samples, 0.08%)</title><rect x="12.1230%" y="613" width="0.0809%" height="15" fill="rgb(244,45,10)" fg:x="4048" fg:w="27"/><text x="12.3730%" y="623.50"></text></g><g><title>__fget_light (19 samples, 0.06%)</title><rect x="12.1470%" y="597" width="0.0569%" height="15" fill="rgb(207,125,25)" fg:x="4056" fg:w="19"/><text x="12.3970%" y="607.50"></text></g><g><title>__fget_files (8 samples, 0.02%)</title><rect x="12.1799%" y="581" width="0.0240%" height="15" fill="rgb(210,195,18)" fg:x="4067" fg:w="8"/><text x="12.4299%" y="591.50"></text></g><g><title>default_wake_function (4 samples, 0.01%)</title><rect x="12.4794%" y="501" width="0.0120%" height="15" fill="rgb(249,80,12)" fg:x="4167" fg:w="4"/><text x="12.7294%" y="511.50"></text></g><g><title>_raw_spin_lock_irqsave (6 samples, 0.02%)</title><rect x="12.5243%" y="485" width="0.0180%" height="15" fill="rgb(221,65,9)" fg:x="4182" fg:w="6"/><text x="12.7743%" y="495.50"></text></g><g><title>_raw_spin_unlock_irqrestore (7 samples, 0.02%)</title><rect x="12.5423%" y="485" width="0.0210%" height="15" fill="rgb(235,49,36)" fg:x="4188" fg:w="7"/><text x="12.7923%" y="495.50"></text></g><g><title>__raw_callee_save___pv_queued_spin_unlock (4 samples, 0.01%)</title><rect x="12.5513%" y="469" width="0.0120%" height="15" fill="rgb(225,32,20)" fg:x="4191" fg:w="4"/><text x="12.8013%" y="479.50"></text></g><g><title>is_cpu_allowed (7 samples, 0.02%)</title><rect x="12.5633%" y="485" width="0.0210%" height="15" fill="rgb(215,141,46)" fg:x="4195" fg:w="7"/><text x="12.8133%" y="495.50"></text></g><g><title>select_task_rq_fair (22 samples, 0.07%)</title><rect x="12.5842%" y="485" width="0.0659%" height="15" fill="rgb(250,160,47)" fg:x="4202" fg:w="22"/><text x="12.8342%" y="495.50"></text></g><g><title>available_idle_cpu (9 samples, 0.03%)</title><rect x="12.6232%" y="469" width="0.0270%" height="15" fill="rgb(216,222,40)" fg:x="4215" fg:w="9"/><text x="12.8732%" y="479.50"></text></g><g><title>__smp_call_single_queue (12 samples, 0.04%)</title><rect x="12.6711%" y="469" width="0.0359%" height="15" fill="rgb(234,217,39)" fg:x="4231" fg:w="12"/><text x="12.9211%" y="479.50"></text></g><g><title>llist_add_batch (11 samples, 0.03%)</title><rect x="12.6741%" y="453" width="0.0329%" height="15" fill="rgb(207,178,40)" fg:x="4232" fg:w="11"/><text x="12.9241%" y="463.50"></text></g><g><title>hv_send_ipi (16 samples, 0.05%)</title><rect x="12.7070%" y="469" width="0.0479%" height="15" fill="rgb(221,136,13)" fg:x="4243" fg:w="16"/><text x="12.9570%" y="479.50"></text></g><g><title>__send_ipi_one (12 samples, 0.04%)</title><rect x="12.7190%" y="453" width="0.0359%" height="15" fill="rgb(249,199,10)" fg:x="4247" fg:w="12"/><text x="12.9690%" y="463.50"></text></g><g><title>__wake_up_common (115 samples, 0.34%)</title><rect x="12.4225%" y="533" width="0.3444%" height="15" fill="rgb(249,222,13)" fg:x="4148" fg:w="115"/><text x="12.6725%" y="543.50"></text></g><g><title>ep_autoremove_wake_function (102 samples, 0.31%)</title><rect x="12.4614%" y="517" width="0.3055%" height="15" fill="rgb(244,185,38)" fg:x="4161" fg:w="102"/><text x="12.7114%" y="527.50"></text></g><g><title>try_to_wake_up (92 samples, 0.28%)</title><rect x="12.4914%" y="501" width="0.2755%" height="15" fill="rgb(236,202,9)" fg:x="4171" fg:w="92"/><text x="12.7414%" y="511.50"></text></g><g><title>ttwu_queue_wakelist (39 samples, 0.12%)</title><rect x="12.6501%" y="485" width="0.1168%" height="15" fill="rgb(250,229,37)" fg:x="4224" fg:w="39"/><text x="12.9001%" y="495.50"></text></g><g><title>_raw_spin_lock_irqsave (11 samples, 0.03%)</title><rect x="12.7669%" y="533" width="0.0329%" height="15" fill="rgb(206,174,23)" fg:x="4263" fg:w="11"/><text x="13.0169%" y="543.50"></text></g><g><title>__pv_queued_spin_lock_slowpath (8 samples, 0.02%)</title><rect x="12.7759%" y="517" width="0.0240%" height="15" fill="rgb(211,33,43)" fg:x="4266" fg:w="8"/><text x="13.0259%" y="527.50"></text></g><g><title>__wake_up_common_lock (130 samples, 0.39%)</title><rect x="12.4135%" y="549" width="0.3893%" height="15" fill="rgb(245,58,50)" fg:x="4145" fg:w="130"/><text x="12.6635%" y="559.50"></text></g><g><title>_raw_read_lock_irqsave (9 samples, 0.03%)</title><rect x="12.8029%" y="549" width="0.0270%" height="15" fill="rgb(244,68,36)" fg:x="4275" fg:w="9"/><text x="13.0529%" y="559.50"></text></g><g><title>__wake_up_common (174 samples, 0.52%)</title><rect x="12.3147%" y="581" width="0.5211%" height="15" fill="rgb(232,229,15)" fg:x="4112" fg:w="174"/><text x="12.5647%" y="591.50"></text></g><g><title>ep_poll_callback (162 samples, 0.49%)</title><rect x="12.3506%" y="565" width="0.4852%" height="15" fill="rgb(254,30,23)" fg:x="4124" fg:w="162"/><text x="12.6006%" y="575.50"></text></g><g><title>_copy_from_user (10 samples, 0.03%)</title><rect x="12.8448%" y="581" width="0.0299%" height="15" fill="rgb(235,160,14)" fg:x="4289" fg:w="10"/><text x="13.0948%" y="591.50"></text></g><g><title>_raw_spin_lock_irq (10 samples, 0.03%)</title><rect x="12.8747%" y="581" width="0.0299%" height="15" fill="rgb(212,155,44)" fg:x="4299" fg:w="10"/><text x="13.1247%" y="591.50"></text></g><g><title>eventfd_write (209 samples, 0.63%)</title><rect x="12.2818%" y="597" width="0.6259%" height="15" fill="rgb(226,2,50)" fg:x="4101" fg:w="209"/><text x="12.5318%" y="607.50"></text></g><g><title>ksys_write (272 samples, 0.81%)</title><rect x="12.1110%" y="629" width="0.8146%" height="15" fill="rgb(234,177,6)" fg:x="4044" fg:w="272"/><text x="12.3610%" y="639.50"></text></g><g><title>vfs_write (238 samples, 0.71%)</title><rect x="12.2129%" y="613" width="0.7128%" height="15" fill="rgb(217,24,9)" fg:x="4078" fg:w="238"/><text x="12.4629%" y="623.50"></text></g><g><title>security_file_permission (4 samples, 0.01%)</title><rect x="12.9137%" y="597" width="0.0120%" height="15" fill="rgb(220,13,46)" fg:x="4312" fg:w="4"/><text x="13.1637%" y="607.50"></text></g><g><title>amd_clear_divider (4 samples, 0.01%)</title><rect x="12.9346%" y="613" width="0.0120%" height="15" fill="rgb(239,221,27)" fg:x="4319" fg:w="4"/><text x="13.1846%" y="623.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (298 samples, 0.89%)</title><rect x="12.0571%" y="661" width="0.8925%" height="15" fill="rgb(222,198,25)" fg:x="4026" fg:w="298"/><text x="12.3071%" y="671.50"></text></g><g><title>do_syscall_64 (293 samples, 0.88%)</title><rect x="12.0721%" y="645" width="0.8775%" height="15" fill="rgb(211,99,13)" fg:x="4031" fg:w="293"/><text x="12.3221%" y="655.50"></text></g><g><title>syscall_exit_to_user_mode (6 samples, 0.02%)</title><rect x="12.9316%" y="629" width="0.0180%" height="15" fill="rgb(232,111,31)" fg:x="4318" fg:w="6"/><text x="13.1816%" y="639.50"></text></g><g><title>mio::sys::unix::waker::eventfd::WakerInternal::wake (361 samples, 1.08%)</title><rect x="11.8745%" y="709" width="1.0811%" height="15" fill="rgb(245,82,37)" fg:x="3965" fg:w="361"/><text x="12.1245%" y="719.50"></text></g><g><title>&lt;&amp;std::process::ChildStdin as std::io::Write&gt;::write (354 samples, 1.06%)</title><rect x="11.8954%" y="693" width="1.0602%" height="15" fill="rgb(227,149,46)" fg:x="3972" fg:w="354"/><text x="12.1454%" y="703.50"></text></g><g><title>__write (350 samples, 1.05%)</title><rect x="11.9074%" y="677" width="1.0482%" height="15" fill="rgb(218,36,50)" fg:x="3976" fg:w="350"/><text x="12.1574%" y="687.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Unparker::unpark (387 samples, 1.16%)</title><rect x="11.8026%" y="725" width="1.1590%" height="15" fill="rgb(226,80,48)" fg:x="3941" fg:w="387"/><text x="12.0526%" y="735.50"></text></g><g><title>__smp_call_single_queue (5 samples, 0.01%)</title><rect x="13.2311%" y="533" width="0.0150%" height="15" fill="rgb(238,224,15)" fg:x="4418" fg:w="5"/><text x="13.4811%" y="543.50"></text></g><g><title>llist_add_batch (5 samples, 0.01%)</title><rect x="13.2311%" y="517" width="0.0150%" height="15" fill="rgb(241,136,10)" fg:x="4418" fg:w="5"/><text x="13.4811%" y="527.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (33 samples, 0.10%)</title><rect x="13.1592%" y="661" width="0.0988%" height="15" fill="rgb(208,32,45)" fg:x="4394" fg:w="33"/><text x="13.4092%" y="671.50"></text></g><g><title>do_syscall_64 (33 samples, 0.10%)</title><rect x="13.1592%" y="645" width="0.0988%" height="15" fill="rgb(207,135,9)" fg:x="4394" fg:w="33"/><text x="13.4092%" y="655.50"></text></g><g><title>__x64_sys_futex (30 samples, 0.09%)</title><rect x="13.1682%" y="629" width="0.0898%" height="15" fill="rgb(206,86,44)" fg:x="4397" fg:w="30"/><text x="13.4182%" y="639.50"></text></g><g><title>do_futex (30 samples, 0.09%)</title><rect x="13.1682%" y="613" width="0.0898%" height="15" fill="rgb(245,177,15)" fg:x="4397" fg:w="30"/><text x="13.4182%" y="623.50"></text></g><g><title>futex_wake (26 samples, 0.08%)</title><rect x="13.1802%" y="597" width="0.0779%" height="15" fill="rgb(206,64,50)" fg:x="4401" fg:w="26"/><text x="13.4302%" y="607.50"></text></g><g><title>wake_up_q (20 samples, 0.06%)</title><rect x="13.1982%" y="581" width="0.0599%" height="15" fill="rgb(234,36,40)" fg:x="4407" fg:w="20"/><text x="13.4482%" y="591.50"></text></g><g><title>try_to_wake_up (17 samples, 0.05%)</title><rect x="13.2072%" y="565" width="0.0509%" height="15" fill="rgb(213,64,8)" fg:x="4410" fg:w="17"/><text x="13.4572%" y="575.50"></text></g><g><title>ttwu_queue_wakelist (10 samples, 0.03%)</title><rect x="13.2281%" y="549" width="0.0299%" height="15" fill="rgb(210,75,36)" fg:x="4417" fg:w="10"/><text x="13.4781%" y="559.50"></text></g><g><title>syscall (38 samples, 0.11%)</title><rect x="13.1473%" y="677" width="0.1138%" height="15" fill="rgb(229,88,21)" fg:x="4390" fg:w="38"/><text x="13.3973%" y="687.50"></text></g><g><title>__wake_up_common (14 samples, 0.04%)</title><rect x="13.3629%" y="485" width="0.0419%" height="15" fill="rgb(252,204,47)" fg:x="4462" fg:w="14"/><text x="13.6129%" y="495.50"></text></g><g><title>ep_autoremove_wake_function (13 samples, 0.04%)</title><rect x="13.3659%" y="469" width="0.0389%" height="15" fill="rgb(208,77,27)" fg:x="4463" fg:w="13"/><text x="13.6159%" y="479.50"></text></g><g><title>try_to_wake_up (12 samples, 0.04%)</title><rect x="13.3689%" y="453" width="0.0359%" height="15" fill="rgb(221,76,26)" fg:x="4464" fg:w="12"/><text x="13.6189%" y="463.50"></text></g><g><title>ttwu_queue_wakelist (5 samples, 0.01%)</title><rect x="13.3898%" y="437" width="0.0150%" height="15" fill="rgb(225,139,18)" fg:x="4471" fg:w="5"/><text x="13.6398%" y="447.50"></text></g><g><title>__wake_up_common (32 samples, 0.10%)</title><rect x="13.3299%" y="533" width="0.0958%" height="15" fill="rgb(230,137,11)" fg:x="4451" fg:w="32"/><text x="13.5799%" y="543.50"></text></g><g><title>ep_poll_callback (30 samples, 0.09%)</title><rect x="13.3359%" y="517" width="0.0898%" height="15" fill="rgb(212,28,1)" fg:x="4453" fg:w="30"/><text x="13.5859%" y="527.50"></text></g><g><title>__wake_up_common_lock (22 samples, 0.07%)</title><rect x="13.3599%" y="501" width="0.0659%" height="15" fill="rgb(248,164,17)" fg:x="4461" fg:w="22"/><text x="13.6099%" y="511.50"></text></g><g><title>_raw_spin_lock_irqsave (7 samples, 0.02%)</title><rect x="13.4048%" y="485" width="0.0210%" height="15" fill="rgb(222,171,42)" fg:x="4476" fg:w="7"/><text x="13.6548%" y="495.50"></text></g><g><title>__pv_queued_spin_lock_slowpath (6 samples, 0.02%)</title><rect x="13.4078%" y="469" width="0.0180%" height="15" fill="rgb(243,84,45)" fg:x="4477" fg:w="6"/><text x="13.6578%" y="479.50"></text></g><g><title>eventfd_write (36 samples, 0.11%)</title><rect x="13.3210%" y="549" width="0.1078%" height="15" fill="rgb(252,49,23)" fg:x="4448" fg:w="36"/><text x="13.5710%" y="559.50"></text></g><g><title>ksys_write (44 samples, 0.13%)</title><rect x="13.3000%" y="581" width="0.1318%" height="15" fill="rgb(215,19,7)" fg:x="4441" fg:w="44"/><text x="13.5500%" y="591.50"></text></g><g><title>vfs_write (41 samples, 0.12%)</title><rect x="13.3090%" y="565" width="0.1228%" height="15" fill="rgb(238,81,41)" fg:x="4444" fg:w="41"/><text x="13.5590%" y="575.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Unparker::unpark (58 samples, 0.17%)</title><rect x="13.2611%" y="677" width="0.1737%" height="15" fill="rgb(210,199,37)" fg:x="4428" fg:w="58"/><text x="13.5111%" y="687.50"></text></g><g><title>mio::sys::unix::waker::eventfd::WakerInternal::wake (55 samples, 0.16%)</title><rect x="13.2700%" y="661" width="0.1647%" height="15" fill="rgb(244,192,49)" fg:x="4431" fg:w="55"/><text x="13.5200%" y="671.50"></text></g><g><title>&lt;&amp;std::process::ChildStdin as std::io::Write&gt;::write (54 samples, 0.16%)</title><rect x="13.2730%" y="645" width="0.1617%" height="15" fill="rgb(226,211,11)" fg:x="4432" fg:w="54"/><text x="13.5230%" y="655.50"></text></g><g><title>__write (53 samples, 0.16%)</title><rect x="13.2760%" y="629" width="0.1587%" height="15" fill="rgb(236,162,54)" fg:x="4433" fg:w="53"/><text x="13.5260%" y="639.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (50 samples, 0.15%)</title><rect x="13.2850%" y="613" width="0.1497%" height="15" fill="rgb(220,229,9)" fg:x="4436" fg:w="50"/><text x="13.5350%" y="623.50"></text></g><g><title>do_syscall_64 (48 samples, 0.14%)</title><rect x="13.2910%" y="597" width="0.1438%" height="15" fill="rgb(250,87,22)" fg:x="4438" fg:w="48"/><text x="13.5410%" y="607.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::yield_now (130 samples, 0.39%)</title><rect x="13.1113%" y="709" width="0.3893%" height="15" fill="rgb(239,43,17)" fg:x="4378" fg:w="130"/><text x="13.3613%" y="719.50"></text></g><g><title>tokio::runtime::context::with_scheduler (124 samples, 0.37%)</title><rect x="13.1293%" y="693" width="0.3714%" height="15" fill="rgb(231,177,25)" fg:x="4384" fg:w="124"/><text x="13.3793%" y="703.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_local (22 samples, 0.07%)</title><rect x="13.4348%" y="677" width="0.0659%" height="15" fill="rgb(219,179,1)" fg:x="4486" fg:w="22"/><text x="13.6848%" y="687.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::worker_to_notify (11 samples, 0.03%)</title><rect x="13.4677%" y="661" width="0.0329%" height="15" fill="rgb(238,219,53)" fg:x="4497" fg:w="11"/><text x="13.7177%" y="671.50"></text></g><g><title>&lt;tokio::runtime::task::core::TaskIdGuard as core::ops::drop::Drop&gt;::drop (13 samples, 0.04%)</title><rect x="13.5725%" y="693" width="0.0389%" height="15" fill="rgb(232,167,36)" fg:x="4532" fg:w="13"/><text x="13.8225%" y="703.50"></text></g><g><title>&lt;netstack_lwip::tcp_stream::TcpStream as tokio::io::async_read::AsyncRead&gt;::poll_read (14 samples, 0.04%)</title><rect x="13.9469%" y="645" width="0.0419%" height="15" fill="rgb(244,19,51)" fg:x="4657" fg:w="14"/><text x="14.1969%" y="655.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as core::ops::drop::Drop&gt;::drop (5 samples, 0.01%)</title><rect x="14.3092%" y="629" width="0.0150%" height="15" fill="rgb(224,6,22)" fg:x="4778" fg:w="5"/><text x="14.5592%" y="639.50"></text></g><g><title>[libc.so.6] (164 samples, 0.49%)</title><rect x="14.3242%" y="629" width="0.4912%" height="15" fill="rgb(224,145,5)" fg:x="4783" fg:w="164"/><text x="14.5742%" y="639.50"></text></g><g><title>[libc.so.6] (14 samples, 0.04%)</title><rect x="15.2796%" y="597" width="0.0419%" height="15" fill="rgb(234,130,49)" fg:x="5102" fg:w="14"/><text x="15.5296%" y="607.50"></text></g><g><title>[libc.so.6] (143 samples, 0.43%)</title><rect x="14.9142%" y="613" width="0.4283%" height="15" fill="rgb(254,6,2)" fg:x="4980" fg:w="143"/><text x="15.1642%" y="623.50"></text></g><g><title>__lll_lock_wait_private (7 samples, 0.02%)</title><rect x="15.3215%" y="597" width="0.0210%" height="15" fill="rgb(208,96,46)" fg:x="5116" fg:w="7"/><text x="15.5715%" y="607.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (4 samples, 0.01%)</title><rect x="15.3305%" y="581" width="0.0120%" height="15" fill="rgb(239,3,39)" fg:x="5119" fg:w="4"/><text x="15.5805%" y="591.50"></text></g><g><title>do_syscall_64 (4 samples, 0.01%)</title><rect x="15.3305%" y="565" width="0.0120%" height="15" fill="rgb(233,210,1)" fg:x="5119" fg:w="4"/><text x="15.5805%" y="575.50"></text></g><g><title>__libc_free (181 samples, 0.54%)</title><rect x="14.8154%" y="629" width="0.5421%" height="15" fill="rgb(244,137,37)" fg:x="4947" fg:w="181"/><text x="15.0654%" y="639.50"></text></g><g><title>__lll_lock_wake_private (5 samples, 0.01%)</title><rect x="15.3425%" y="613" width="0.0150%" height="15" fill="rgb(240,136,2)" fg:x="5123" fg:w="5"/><text x="15.5925%" y="623.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (5 samples, 0.01%)</title><rect x="15.3425%" y="597" width="0.0150%" height="15" fill="rgb(239,18,37)" fg:x="5123" fg:w="5"/><text x="15.5925%" y="607.50"></text></g><g><title>do_syscall_64 (5 samples, 0.01%)</title><rect x="15.3425%" y="581" width="0.0150%" height="15" fill="rgb(218,185,22)" fg:x="5123" fg:w="5"/><text x="15.5925%" y="591.50"></text></g><g><title>__x64_sys_futex (5 samples, 0.01%)</title><rect x="15.3425%" y="565" width="0.0150%" height="15" fill="rgb(225,218,4)" fg:x="5123" fg:w="5"/><text x="15.5925%" y="575.50"></text></g><g><title>do_futex (5 samples, 0.01%)</title><rect x="15.3425%" y="549" width="0.0150%" height="15" fill="rgb(230,182,32)" fg:x="5123" fg:w="5"/><text x="15.5925%" y="559.50"></text></g><g><title>futex_wake (4 samples, 0.01%)</title><rect x="15.3455%" y="533" width="0.0120%" height="15" fill="rgb(242,56,43)" fg:x="5124" fg:w="4"/><text x="15.5955%" y="543.50"></text></g><g><title>__rdl_dealloc (6 samples, 0.02%)</title><rect x="15.3574%" y="629" width="0.0180%" height="15" fill="rgb(233,99,24)" fg:x="5128" fg:w="6"/><text x="15.6074%" y="639.50"></text></g><g><title>bytes::bytes_mut::BytesMut::reserve_inner (8 samples, 0.02%)</title><rect x="15.3844%" y="629" width="0.0240%" height="15" fill="rgb(234,209,42)" fg:x="5137" fg:w="8"/><text x="15.6344%" y="639.50"></text></g><g><title>bytes::bytes_mut::BytesMut::split_to (8 samples, 0.02%)</title><rect x="15.4083%" y="629" width="0.0240%" height="15" fill="rgb(227,7,12)" fg:x="5145" fg:w="8"/><text x="15.6583%" y="639.50"></text></g><g><title>tcp_output (14 samples, 0.04%)</title><rect x="15.4353%" y="629" width="0.0419%" height="15" fill="rgb(245,203,43)" fg:x="5154" fg:w="14"/><text x="15.6853%" y="639.50"></text></g><g><title>tcp_recved (24 samples, 0.07%)</title><rect x="15.4772%" y="629" width="0.0719%" height="15" fill="rgb(238,205,33)" fg:x="5168" fg:w="24"/><text x="15.7272%" y="639.50"></text></g><g><title>lwip_htonl (5 samples, 0.01%)</title><rect x="15.5641%" y="613" width="0.0150%" height="15" fill="rgb(231,56,7)" fg:x="5197" fg:w="5"/><text x="15.8141%" y="623.50"></text></g><g><title>tcp_output_alloc_header_common (37 samples, 0.11%)</title><rect x="15.5790%" y="613" width="0.1108%" height="15" fill="rgb(244,186,29)" fg:x="5202" fg:w="37"/><text x="15.8290%" y="623.50"></text></g><g><title>pbuf_alloc (28 samples, 0.08%)</title><rect x="15.6060%" y="597" width="0.0839%" height="15" fill="rgb(234,111,31)" fg:x="5211" fg:w="28"/><text x="15.8560%" y="607.50"></text></g><g><title>mem_malloc (18 samples, 0.05%)</title><rect x="15.6359%" y="581" width="0.0539%" height="15" fill="rgb(241,149,10)" fg:x="5221" fg:w="18"/><text x="15.8859%" y="591.50"></text></g><g><title>inet_chksum_pseudo (6 samples, 0.02%)</title><rect x="15.6988%" y="597" width="0.0180%" height="15" fill="rgb(249,206,44)" fg:x="5242" fg:w="6"/><text x="15.9488%" y="607.50"></text></g><g><title>inet_cksum_pseudo_base (14 samples, 0.04%)</title><rect x="15.7168%" y="597" width="0.0419%" height="15" fill="rgb(251,153,30)" fg:x="5248" fg:w="14"/><text x="15.9668%" y="607.50"></text></g><g><title>lwip_standard_chksum (8 samples, 0.02%)</title><rect x="15.7348%" y="581" width="0.0240%" height="15" fill="rgb(239,152,38)" fg:x="5254" fg:w="8"/><text x="15.9848%" y="591.50"></text></g><g><title>malloc (41 samples, 0.12%)</title><rect x="15.8845%" y="549" width="0.1228%" height="15" fill="rgb(249,139,47)" fg:x="5304" fg:w="41"/><text x="16.1345%" y="559.50"></text></g><g><title>[libc.so.6] (24 samples, 0.07%)</title><rect x="15.9354%" y="533" width="0.0719%" height="15" fill="rgb(244,64,35)" fg:x="5321" fg:w="24"/><text x="16.1854%" y="543.50"></text></g><g><title>pbuf_copy_partial (10 samples, 0.03%)</title><rect x="16.0073%" y="549" width="0.0299%" height="15" fill="rgb(216,46,15)" fg:x="5345" fg:w="10"/><text x="16.2573%" y="559.50"></text></g><g><title>[proxy_lwip] (4 samples, 0.01%)</title><rect x="16.0253%" y="533" width="0.0120%" height="15" fill="rgb(250,74,19)" fg:x="5351" fg:w="4"/><text x="16.2753%" y="543.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_ref (5 samples, 0.01%)</title><rect x="16.0373%" y="549" width="0.0150%" height="15" fill="rgb(249,42,33)" fg:x="5355" fg:w="5"/><text x="16.2873%" y="559.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::try_acquire (20 samples, 0.06%)</title><rect x="16.0522%" y="549" width="0.0599%" height="15" fill="rgb(242,149,17)" fg:x="5360" fg:w="20"/><text x="16.3022%" y="559.50"></text></g><g><title>tokio::sync::mpsc::list::Tx&lt;T&gt;::push (10 samples, 0.03%)</title><rect x="16.1121%" y="549" width="0.0299%" height="15" fill="rgb(244,29,21)" fg:x="5380" fg:w="10"/><text x="16.3621%" y="559.50"></text></g><g><title>netstack_lwip::output::output_ip6 (118 samples, 0.35%)</title><rect x="15.8096%" y="581" width="0.3534%" height="15" fill="rgb(220,130,37)" fg:x="5279" fg:w="118"/><text x="16.0596%" y="591.50"></text></g><g><title>netstack_lwip::output::output (118 samples, 0.35%)</title><rect x="15.8096%" y="565" width="0.3534%" height="15" fill="rgb(211,67,2)" fg:x="5279" fg:w="118"/><text x="16.0596%" y="575.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::wake (7 samples, 0.02%)</title><rect x="16.1421%" y="549" width="0.0210%" height="15" fill="rgb(235,68,52)" fg:x="5390" fg:w="7"/><text x="16.3921%" y="559.50"></text></g><g><title>ip4_output_if_src (133 samples, 0.40%)</title><rect x="15.7677%" y="597" width="0.3983%" height="15" fill="rgb(246,142,3)" fg:x="5265" fg:w="133"/><text x="16.0177%" y="607.50"></text></g><g><title>ip4_route (5 samples, 0.01%)</title><rect x="16.1660%" y="597" width="0.0150%" height="15" fill="rgb(241,25,7)" fg:x="5398" fg:w="5"/><text x="16.4160%" y="607.50"></text></g><g><title>tcp_send_empty_ack (218 samples, 0.65%)</title><rect x="15.5491%" y="629" width="0.6529%" height="15" fill="rgb(242,119,39)" fg:x="5192" fg:w="218"/><text x="15.7991%" y="639.50"></text></g><g><title>tcp_output_control_segment (171 samples, 0.51%)</title><rect x="15.6899%" y="613" width="0.5121%" height="15" fill="rgb(241,98,45)" fg:x="5239" fg:w="171"/><text x="15.9399%" y="623.50"></text></g><g><title>pbuf_free (4 samples, 0.01%)</title><rect x="16.1900%" y="597" width="0.0120%" height="15" fill="rgb(254,28,30)" fg:x="5406" fg:w="4"/><text x="16.4400%" y="607.50"></text></g><g><title>mem_free (4 samples, 0.01%)</title><rect x="16.1900%" y="581" width="0.0120%" height="15" fill="rgb(241,142,54)" fg:x="5406" fg:w="4"/><text x="16.4400%" y="591.50"></text></g><g><title>&lt;tokio::runtime::coop::RestoreOnPending as core::ops::drop::Drop&gt;::drop (8 samples, 0.02%)</title><rect x="16.2619%" y="613" width="0.0240%" height="15" fill="rgb(222,85,15)" fg:x="5430" fg:w="8"/><text x="16.5119%" y="623.50"></text></g><g><title>&lt;tokio::sync::mpsc::unbounded::Semaphore as tokio::sync::mpsc::chan::Semaphore&gt;::add_permit (18 samples, 0.05%)</title><rect x="16.2858%" y="613" width="0.0539%" height="15" fill="rgb(210,85,47)" fg:x="5438" fg:w="18"/><text x="16.5358%" y="623.50"></text></g><g><title>tokio::sync::mpsc::list::Rx&lt;T&gt;::pop (51 samples, 0.15%)</title><rect x="16.3397%" y="613" width="0.1527%" height="15" fill="rgb(224,206,25)" fg:x="5456" fg:w="51"/><text x="16.5897%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (6 samples, 0.02%)</title><rect x="16.4745%" y="597" width="0.0180%" height="15" fill="rgb(243,201,19)" fg:x="5501" fg:w="6"/><text x="16.7245%" y="607.50"></text></g><g><title>tokio::runtime::task::waker::clone_waker (6 samples, 0.02%)</title><rect x="16.5404%" y="597" width="0.0180%" height="15" fill="rgb(236,59,4)" fg:x="5523" fg:w="6"/><text x="16.7904%" y="607.50"></text></g><g><title>&lt;netstack_lwip::tcp_stream_impl::TcpStreamImpl as tokio::io::async_read::AsyncRead&gt;::poll_read (860 samples, 2.58%)</title><rect x="13.9888%" y="645" width="2.5755%" height="15" fill="rgb(254,179,45)" fg:x="4671" fg:w="860"/><text x="14.2388%" y="655.50">&lt;n..</text></g><g><title>tokio::sync::mpsc::chan::Rx&lt;T,S&gt;::recv (121 samples, 0.36%)</title><rect x="16.2020%" y="629" width="0.3624%" height="15" fill="rgb(226,14,10)" fg:x="5410" fg:w="121"/><text x="16.4520%" y="639.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::register_by_ref (24 samples, 0.07%)</title><rect x="16.4925%" y="613" width="0.0719%" height="15" fill="rgb(244,27,41)" fg:x="5507" fg:w="24"/><text x="16.7425%" y="623.50"></text></g><g><title>&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_read::AsyncRead&gt;::poll_read (5 samples, 0.01%)</title><rect x="16.5643%" y="645" width="0.0150%" height="15" fill="rgb(235,35,32)" fg:x="5531" fg:w="5"/><text x="16.8143%" y="655.50"></text></g><g><title>[libc.so.6] (22 samples, 0.07%)</title><rect x="16.7740%" y="565" width="0.0659%" height="15" fill="rgb(218,68,31)" fg:x="5601" fg:w="22"/><text x="17.0240%" y="575.50"></text></g><g><title>entry_SYSCALL_64 (6 samples, 0.02%)</title><rect x="16.8399%" y="565" width="0.0180%" height="15" fill="rgb(207,120,37)" fg:x="5623" fg:w="6"/><text x="17.0899%" y="575.50"></text></g><g><title>fput (5 samples, 0.01%)</title><rect x="16.9866%" y="501" width="0.0150%" height="15" fill="rgb(227,98,0)" fg:x="5672" fg:w="5"/><text x="17.2366%" y="511.50"></text></g><g><title>fput_many (4 samples, 0.01%)</title><rect x="17.0016%" y="501" width="0.0120%" height="15" fill="rgb(207,7,3)" fg:x="5677" fg:w="4"/><text x="17.2516%" y="511.50"></text></g><g><title>import_single_range (9 samples, 0.03%)</title><rect x="17.0136%" y="501" width="0.0270%" height="15" fill="rgb(206,98,19)" fg:x="5681" fg:w="9"/><text x="17.2636%" y="511.50"></text></g><g><title>inet_sendmsg (13 samples, 0.04%)</title><rect x="17.0405%" y="501" width="0.0389%" height="15" fill="rgb(217,5,26)" fg:x="5690" fg:w="13"/><text x="17.2905%" y="511.50"></text></g><g><title>inet_send_prepare (5 samples, 0.01%)</title><rect x="17.0645%" y="485" width="0.0150%" height="15" fill="rgb(235,190,38)" fg:x="5698" fg:w="5"/><text x="17.3145%" y="495.50"></text></g><g><title>sockfd_lookup_light (45 samples, 0.13%)</title><rect x="17.0795%" y="501" width="0.1348%" height="15" fill="rgb(247,86,24)" fg:x="5703" fg:w="45"/><text x="17.3295%" y="511.50"></text></g><g><title>__fget_light (34 samples, 0.10%)</title><rect x="17.1124%" y="485" width="0.1018%" height="15" fill="rgb(205,101,16)" fg:x="5714" fg:w="34"/><text x="17.3624%" y="495.50"></text></g><g><title>__fget_files (22 samples, 0.07%)</title><rect x="17.1483%" y="469" width="0.0659%" height="15" fill="rgb(246,168,33)" fg:x="5726" fg:w="22"/><text x="17.3983%" y="479.50"></text></g><g><title>__local_bh_enable_ip (10 samples, 0.03%)</title><rect x="17.2232%" y="485" width="0.0299%" height="15" fill="rgb(231,114,1)" fg:x="5751" fg:w="10"/><text x="17.4732%" y="495.50"></text></g><g><title>_raw_spin_unlock_bh (13 samples, 0.04%)</title><rect x="17.2532%" y="485" width="0.0389%" height="15" fill="rgb(207,184,53)" fg:x="5761" fg:w="13"/><text x="17.5032%" y="495.50"></text></g><g><title>__raw_callee_save___pv_queued_spin_unlock (12 samples, 0.04%)</title><rect x="17.2561%" y="469" width="0.0359%" height="15" fill="rgb(224,95,51)" fg:x="5762" fg:w="12"/><text x="17.5061%" y="479.50"></text></g><g><title>lock_sock_nested (86 samples, 0.26%)</title><rect x="17.2921%" y="485" width="0.2576%" height="15" fill="rgb(212,188,45)" fg:x="5774" fg:w="86"/><text x="17.5421%" y="495.50"></text></g><g><title>_raw_spin_lock_bh (85 samples, 0.25%)</title><rect x="17.2951%" y="469" width="0.2546%" height="15" fill="rgb(223,154,38)" fg:x="5775" fg:w="85"/><text x="17.5451%" y="479.50"></text></g><g><title>__pv_queued_spin_lock_slowpath (72 samples, 0.22%)</title><rect x="17.3340%" y="453" width="0.2156%" height="15" fill="rgb(251,22,52)" fg:x="5788" fg:w="72"/><text x="17.5840%" y="463.50"></text></g><g><title>__dev_queue_xmit (9 samples, 0.03%)</title><rect x="17.5946%" y="341" width="0.0270%" height="15" fill="rgb(229,209,22)" fg:x="5875" fg:w="9"/><text x="17.8446%" y="351.50"></text></g><g><title>sch_direct_xmit (7 samples, 0.02%)</title><rect x="17.6006%" y="325" width="0.0210%" height="15" fill="rgb(234,138,34)" fg:x="5877" fg:w="7"/><text x="17.8506%" y="335.50"></text></g><g><title>__tcp_transmit_skb (13 samples, 0.04%)</title><rect x="17.5856%" y="389" width="0.0389%" height="15" fill="rgb(212,95,11)" fg:x="5872" fg:w="13"/><text x="17.8356%" y="399.50"></text></g><g><title>__ip_queue_xmit (13 samples, 0.04%)</title><rect x="17.5856%" y="373" width="0.0389%" height="15" fill="rgb(240,179,47)" fg:x="5872" fg:w="13"/><text x="17.8356%" y="383.50"></text></g><g><title>ip_finish_output2 (11 samples, 0.03%)</title><rect x="17.5916%" y="357" width="0.0329%" height="15" fill="rgb(240,163,11)" fg:x="5874" fg:w="11"/><text x="17.8416%" y="367.50"></text></g><g><title>__tcp_push_pending_frames (15 samples, 0.04%)</title><rect x="17.5856%" y="421" width="0.0449%" height="15" fill="rgb(236,37,12)" fg:x="5872" fg:w="15"/><text x="17.8356%" y="431.50"></text></g><g><title>tcp_write_xmit (15 samples, 0.04%)</title><rect x="17.5856%" y="405" width="0.0449%" height="15" fill="rgb(232,164,16)" fg:x="5872" fg:w="15"/><text x="17.8356%" y="415.50"></text></g><g><title>__kfree_skb (4 samples, 0.01%)</title><rect x="17.6395%" y="405" width="0.0120%" height="15" fill="rgb(244,205,15)" fg:x="5890" fg:w="4"/><text x="17.8895%" y="415.50"></text></g><g><title>skb_release_data (4 samples, 0.01%)</title><rect x="17.6395%" y="389" width="0.0120%" height="15" fill="rgb(223,117,47)" fg:x="5890" fg:w="4"/><text x="17.8895%" y="399.50"></text></g><g><title>tcp_ack (12 samples, 0.04%)</title><rect x="17.6335%" y="421" width="0.0359%" height="15" fill="rgb(244,107,35)" fg:x="5888" fg:w="12"/><text x="17.8835%" y="431.50"></text></g><g><title>__release_sock (35 samples, 0.10%)</title><rect x="17.5706%" y="469" width="0.1048%" height="15" fill="rgb(205,140,8)" fg:x="5867" fg:w="35"/><text x="17.8206%" y="479.50"></text></g><g><title>tcp_v4_do_rcv (33 samples, 0.10%)</title><rect x="17.5766%" y="453" width="0.0988%" height="15" fill="rgb(228,84,46)" fg:x="5869" fg:w="33"/><text x="17.8266%" y="463.50"></text></g><g><title>tcp_rcv_established (32 samples, 0.10%)</title><rect x="17.5796%" y="437" width="0.0958%" height="15" fill="rgb(254,188,9)" fg:x="5870" fg:w="32"/><text x="17.8296%" y="447.50"></text></g><g><title>_raw_spin_lock_bh (17 samples, 0.05%)</title><rect x="17.6754%" y="469" width="0.0509%" height="15" fill="rgb(206,112,54)" fg:x="5902" fg:w="17"/><text x="17.9254%" y="479.50"></text></g><g><title>release_sock (70 samples, 0.21%)</title><rect x="17.5496%" y="485" width="0.2096%" height="15" fill="rgb(216,84,49)" fg:x="5860" fg:w="70"/><text x="17.7996%" y="495.50"></text></g><g><title>tcp_release_cb (11 samples, 0.03%)</title><rect x="17.7263%" y="469" width="0.0329%" height="15" fill="rgb(214,194,35)" fg:x="5919" fg:w="11"/><text x="17.9763%" y="479.50"></text></g><g><title>__virt_addr_valid (34 samples, 0.10%)</title><rect x="18.0049%" y="453" width="0.1018%" height="15" fill="rgb(249,28,3)" fg:x="6012" fg:w="34"/><text x="18.2549%" y="463.50"></text></g><g><title>__check_object_size (42 samples, 0.13%)</title><rect x="17.9899%" y="469" width="0.1258%" height="15" fill="rgb(222,56,52)" fg:x="6007" fg:w="42"/><text x="18.2399%" y="479.50"></text></g><g><title>__ip_finish_output (17 samples, 0.05%)</title><rect x="18.3493%" y="405" width="0.0509%" height="15" fill="rgb(245,217,50)" fg:x="6127" fg:w="17"/><text x="18.5993%" y="415.50"></text></g><g><title>skb_gso_validate_network_len (6 samples, 0.02%)</title><rect x="18.3822%" y="389" width="0.0180%" height="15" fill="rgb(213,201,24)" fg:x="6138" fg:w="6"/><text x="18.6322%" y="399.50"></text></g><g><title>__sk_dst_check (15 samples, 0.04%)</title><rect x="18.4002%" y="405" width="0.0449%" height="15" fill="rgb(248,116,28)" fg:x="6144" fg:w="15"/><text x="18.6502%" y="415.50"></text></g><g><title>ipv4_dst_check (9 samples, 0.03%)</title><rect x="18.4181%" y="389" width="0.0270%" height="15" fill="rgb(219,72,43)" fg:x="6150" fg:w="9"/><text x="18.6681%" y="399.50"></text></g><g><title>__qdisc_run (8 samples, 0.02%)</title><rect x="18.5978%" y="373" width="0.0240%" height="15" fill="rgb(209,138,14)" fg:x="6210" fg:w="8"/><text x="18.8478%" y="383.50"></text></g><g><title>fq_codel_dequeue (5 samples, 0.01%)</title><rect x="18.6068%" y="357" width="0.0150%" height="15" fill="rgb(222,18,33)" fg:x="6213" fg:w="5"/><text x="18.8568%" y="367.50"></text></g><g><title>netdev_core_pick_tx (43 samples, 0.13%)</title><rect x="18.6308%" y="373" width="0.1288%" height="15" fill="rgb(213,199,7)" fg:x="6221" fg:w="43"/><text x="18.8808%" y="383.50"></text></g><g><title>netvsc_select_queue (36 samples, 0.11%)</title><rect x="18.6517%" y="357" width="0.1078%" height="15" fill="rgb(250,110,10)" fg:x="6228" fg:w="36"/><text x="18.9017%" y="367.50"></text></g><g><title>__skb_flow_dissect (22 samples, 0.07%)</title><rect x="18.6937%" y="341" width="0.0659%" height="15" fill="rgb(248,123,6)" fg:x="6242" fg:w="22"/><text x="18.9437%" y="351.50"></text></g><g><title>_raw_spin_lock (10 samples, 0.03%)</title><rect x="18.7745%" y="357" width="0.0299%" height="15" fill="rgb(206,91,31)" fg:x="6269" fg:w="10"/><text x="19.0245%" y="367.50"></text></g><g><title>fill_pg_buf (15 samples, 0.04%)</title><rect x="18.8943%" y="325" width="0.0449%" height="15" fill="rgb(211,154,13)" fg:x="6309" fg:w="15"/><text x="19.1443%" y="335.50"></text></g><g><title>is_vmalloc_addr (6 samples, 0.02%)</title><rect x="18.9392%" y="325" width="0.0180%" height="15" fill="rgb(225,148,7)" fg:x="6324" fg:w="6"/><text x="19.1892%" y="335.50"></text></g><g><title>memcpy_erms (7 samples, 0.02%)</title><rect x="18.9961%" y="309" width="0.0210%" height="15" fill="rgb(220,160,43)" fg:x="6343" fg:w="7"/><text x="19.2461%" y="319.50"></text></g><g><title>vmbus_sendpacket (9 samples, 0.03%)</title><rect x="19.0950%" y="293" width="0.0270%" height="15" fill="rgb(213,52,39)" fg:x="6376" fg:w="9"/><text x="19.3450%" y="303.50"></text></g><g><title>hv_ringbuffer_write (9 samples, 0.03%)</title><rect x="19.0950%" y="277" width="0.0270%" height="15" fill="rgb(243,137,7)" fg:x="6376" fg:w="9"/><text x="19.3450%" y="287.50"></text></g><g><title>_raw_spin_lock_irqsave (6 samples, 0.02%)</title><rect x="19.1668%" y="261" width="0.0180%" height="15" fill="rgb(230,79,13)" fg:x="6400" fg:w="6"/><text x="19.4168%" y="271.50"></text></g><g><title>memcpy_erms (7 samples, 0.02%)</title><rect x="19.1938%" y="261" width="0.0210%" height="15" fill="rgb(247,105,23)" fg:x="6409" fg:w="7"/><text x="19.4438%" y="271.50"></text></g><g><title>vmbus_next_request_id (9 samples, 0.03%)</title><rect x="19.2148%" y="261" width="0.0270%" height="15" fill="rgb(223,179,41)" fg:x="6416" fg:w="9"/><text x="19.4648%" y="271.50"></text></g><g><title>netvsc_send (101 samples, 0.30%)</title><rect x="18.9602%" y="325" width="0.3025%" height="15" fill="rgb(218,9,34)" fg:x="6331" fg:w="101"/><text x="19.2102%" y="335.50"></text></g><g><title>netvsc_send_pkt (82 samples, 0.25%)</title><rect x="19.0171%" y="309" width="0.2456%" height="15" fill="rgb(222,106,8)" fg:x="6350" fg:w="82"/><text x="19.2671%" y="319.50"></text></g><g><title>vmbus_sendpacket_pagebuffer (47 samples, 0.14%)</title><rect x="19.1219%" y="293" width="0.1408%" height="15" fill="rgb(211,220,0)" fg:x="6385" fg:w="47"/><text x="19.3719%" y="303.50"></text></g><g><title>hv_ringbuffer_write (46 samples, 0.14%)</title><rect x="19.1249%" y="277" width="0.1378%" height="15" fill="rgb(229,52,16)" fg:x="6386" fg:w="46"/><text x="19.3749%" y="287.50"></text></g><g><title>vmbus_setevent (7 samples, 0.02%)</title><rect x="19.2417%" y="261" width="0.0210%" height="15" fill="rgb(212,155,18)" fg:x="6425" fg:w="7"/><text x="19.4917%" y="271.50"></text></g><g><title>dev_hard_start_xmit (157 samples, 0.47%)</title><rect x="18.8045%" y="357" width="0.4702%" height="15" fill="rgb(242,21,14)" fg:x="6279" fg:w="157"/><text x="19.0545%" y="367.50"></text></g><g><title>netvsc_xmit (148 samples, 0.44%)</title><rect x="18.8314%" y="341" width="0.4432%" height="15" fill="rgb(222,19,48)" fg:x="6288" fg:w="148"/><text x="19.0814%" y="351.50"></text></g><g><title>skb_clone_tx_timestamp (4 samples, 0.01%)</title><rect x="19.2627%" y="325" width="0.0120%" height="15" fill="rgb(232,45,27)" fg:x="6432" fg:w="4"/><text x="19.5127%" y="335.50"></text></g><g><title>netif_skb_features (13 samples, 0.04%)</title><rect x="19.3076%" y="325" width="0.0389%" height="15" fill="rgb(249,103,42)" fg:x="6447" fg:w="13"/><text x="19.5576%" y="335.50"></text></g><g><title>skb_network_protocol (8 samples, 0.02%)</title><rect x="19.3226%" y="309" width="0.0240%" height="15" fill="rgb(246,81,33)" fg:x="6452" fg:w="8"/><text x="19.5726%" y="319.50"></text></g><g><title>__dev_queue_xmit (273 samples, 0.82%)</title><rect x="18.5379%" y="389" width="0.8176%" height="15" fill="rgb(252,33,42)" fg:x="6190" fg:w="273"/><text x="18.7879%" y="399.50"></text></g><g><title>sch_direct_xmit (199 samples, 0.60%)</title><rect x="18.7595%" y="373" width="0.5960%" height="15" fill="rgb(209,212,41)" fg:x="6264" fg:w="199"/><text x="19.0095%" y="383.50"></text></g><g><title>validate_xmit_skb_list (27 samples, 0.08%)</title><rect x="19.2747%" y="357" width="0.0809%" height="15" fill="rgb(207,154,6)" fg:x="6436" fg:w="27"/><text x="19.5247%" y="367.50"></text></g><g><title>validate_xmit_skb.constprop.0 (22 samples, 0.07%)</title><rect x="19.2896%" y="341" width="0.0659%" height="15" fill="rgb(223,64,47)" fg:x="6441" fg:w="22"/><text x="19.5396%" y="351.50"></text></g><g><title>ip_finish_output2 (312 samples, 0.93%)</title><rect x="18.4541%" y="405" width="0.9344%" height="15" fill="rgb(211,161,38)" fg:x="6162" fg:w="312"/><text x="18.7041%" y="415.50"></text></g><g><title>neigh_resolve_output (9 samples, 0.03%)</title><rect x="19.3615%" y="389" width="0.0270%" height="15" fill="rgb(219,138,40)" fg:x="6465" fg:w="9"/><text x="19.6115%" y="399.50"></text></g><g><title>eth_header (4 samples, 0.01%)</title><rect x="19.3765%" y="373" width="0.0120%" height="15" fill="rgb(241,228,46)" fg:x="6470" fg:w="4"/><text x="19.6265%" y="383.50"></text></g><g><title>ip_local_out (5 samples, 0.01%)</title><rect x="19.3885%" y="405" width="0.0150%" height="15" fill="rgb(223,209,38)" fg:x="6474" fg:w="5"/><text x="19.6385%" y="415.50"></text></g><g><title>__ip_local_out (5 samples, 0.01%)</title><rect x="19.3885%" y="389" width="0.0150%" height="15" fill="rgb(236,164,45)" fg:x="6474" fg:w="5"/><text x="19.6385%" y="399.50"></text></g><g><title>__ip_queue_xmit (373 samples, 1.12%)</title><rect x="18.3043%" y="421" width="1.1171%" height="15" fill="rgb(231,15,5)" fg:x="6112" fg:w="373"/><text x="18.5543%" y="431.50"></text></g><g><title>ip_output (6 samples, 0.02%)</title><rect x="19.4034%" y="405" width="0.0180%" height="15" fill="rgb(252,35,15)" fg:x="6479" fg:w="6"/><text x="19.6534%" y="415.50"></text></g><g><title>__skb_clone (10 samples, 0.03%)</title><rect x="19.4214%" y="421" width="0.0299%" height="15" fill="rgb(248,181,18)" fg:x="6485" fg:w="10"/><text x="19.6714%" y="431.50"></text></g><g><title>__copy_skb_header (4 samples, 0.01%)</title><rect x="19.4394%" y="405" width="0.0120%" height="15" fill="rgb(233,39,42)" fg:x="6491" fg:w="4"/><text x="19.6894%" y="415.50"></text></g><g><title>skb_clone (4 samples, 0.01%)</title><rect x="19.4633%" y="421" width="0.0120%" height="15" fill="rgb(238,110,33)" fg:x="6499" fg:w="4"/><text x="19.7133%" y="431.50"></text></g><g><title>tcp_options_write (5 samples, 0.01%)</title><rect x="19.4783%" y="421" width="0.0150%" height="15" fill="rgb(233,195,10)" fg:x="6504" fg:w="5"/><text x="19.7283%" y="431.50"></text></g><g><title>__list_add_valid (5 samples, 0.01%)</title><rect x="19.5202%" y="405" width="0.0150%" height="15" fill="rgb(254,105,3)" fg:x="6518" fg:w="5"/><text x="19.7702%" y="415.50"></text></g><g><title>tcp_update_skb_after_send (15 samples, 0.04%)</title><rect x="19.4993%" y="421" width="0.0449%" height="15" fill="rgb(221,225,9)" fg:x="6511" fg:w="15"/><text x="19.7493%" y="431.50"></text></g><g><title>__tcp_transmit_skb (445 samples, 1.33%)</title><rect x="18.2295%" y="437" width="1.3327%" height="15" fill="rgb(224,227,45)" fg:x="6087" fg:w="445"/><text x="18.4795%" y="447.50"></text></g><g><title>tcp_v4_send_check (6 samples, 0.02%)</title><rect x="19.5442%" y="421" width="0.0180%" height="15" fill="rgb(229,198,43)" fg:x="6526" fg:w="6"/><text x="19.7942%" y="431.50"></text></g><g><title>read_hv_clock_tsc (8 samples, 0.02%)</title><rect x="19.5771%" y="421" width="0.0240%" height="15" fill="rgb(206,209,35)" fg:x="6537" fg:w="8"/><text x="19.8271%" y="431.50"></text></g><g><title>ktime_get (15 samples, 0.04%)</title><rect x="19.5622%" y="437" width="0.0449%" height="15" fill="rgb(245,195,53)" fg:x="6532" fg:w="15"/><text x="19.8122%" y="447.50"></text></g><g><title>rb_insert_color (11 samples, 0.03%)</title><rect x="19.6191%" y="421" width="0.0329%" height="15" fill="rgb(240,92,26)" fg:x="6551" fg:w="11"/><text x="19.8691%" y="431.50"></text></g><g><title>_raw_spin_unlock_irqrestore (7 samples, 0.02%)</title><rect x="19.6849%" y="389" width="0.0210%" height="15" fill="rgb(207,40,23)" fg:x="6573" fg:w="7"/><text x="19.9349%" y="399.50"></text></g><g><title>__raw_callee_save___pv_queued_spin_unlock (7 samples, 0.02%)</title><rect x="19.6849%" y="373" width="0.0210%" height="15" fill="rgb(223,111,35)" fg:x="6573" fg:w="7"/><text x="19.9349%" y="383.50"></text></g><g><title>enqueue_timer (6 samples, 0.02%)</title><rect x="19.7149%" y="389" width="0.0180%" height="15" fill="rgb(229,147,28)" fg:x="6583" fg:w="6"/><text x="19.9649%" y="399.50"></text></g><g><title>get_nohz_timer_target (9 samples, 0.03%)</title><rect x="19.7329%" y="389" width="0.0270%" height="15" fill="rgb(211,29,28)" fg:x="6589" fg:w="9"/><text x="19.9829%" y="399.50"></text></g><g><title>__mod_timer (46 samples, 0.14%)</title><rect x="19.6550%" y="405" width="0.1378%" height="15" fill="rgb(228,72,33)" fg:x="6563" fg:w="46"/><text x="19.9050%" y="415.50"></text></g><g><title>lock_timer_base (11 samples, 0.03%)</title><rect x="19.7598%" y="389" width="0.0329%" height="15" fill="rgb(205,214,31)" fg:x="6598" fg:w="11"/><text x="20.0098%" y="399.50"></text></g><g><title>_raw_spin_lock_irqsave (5 samples, 0.01%)</title><rect x="19.7778%" y="373" width="0.0150%" height="15" fill="rgb(224,111,15)" fg:x="6604" fg:w="5"/><text x="20.0278%" y="383.50"></text></g><g><title>sk_reset_timer (53 samples, 0.16%)</title><rect x="19.6520%" y="421" width="0.1587%" height="15" fill="rgb(253,21,26)" fg:x="6562" fg:w="53"/><text x="19.9020%" y="431.50"></text></g><g><title>mod_timer (6 samples, 0.02%)</title><rect x="19.7928%" y="405" width="0.0180%" height="15" fill="rgb(245,139,43)" fg:x="6609" fg:w="6"/><text x="20.0428%" y="415.50"></text></g><g><title>tcp_rbtree_insert (15 samples, 0.04%)</title><rect x="19.8107%" y="421" width="0.0449%" height="15" fill="rgb(252,170,7)" fg:x="6615" fg:w="15"/><text x="20.0607%" y="431.50"></text></g><g><title>tcp_event_new_data_sent (107 samples, 0.32%)</title><rect x="19.6131%" y="437" width="0.3204%" height="15" fill="rgb(231,118,14)" fg:x="6549" fg:w="107"/><text x="19.8631%" y="447.50"></text></g><g><title>tcp_rearm_rto.part.0 (24 samples, 0.07%)</title><rect x="19.8616%" y="421" width="0.0719%" height="15" fill="rgb(238,83,0)" fg:x="6632" fg:w="24"/><text x="20.1116%" y="431.50"></text></g><g><title>rb_first (9 samples, 0.03%)</title><rect x="19.9066%" y="405" width="0.0270%" height="15" fill="rgb(221,39,39)" fg:x="6647" fg:w="9"/><text x="20.1566%" y="415.50"></text></g><g><title>tcp_schedule_loss_probe.part.0 (19 samples, 0.06%)</title><rect x="19.9335%" y="437" width="0.0569%" height="15" fill="rgb(222,119,46)" fg:x="6656" fg:w="19"/><text x="20.1835%" y="447.50"></text></g><g><title>sk_reset_timer (14 samples, 0.04%)</title><rect x="19.9485%" y="421" width="0.0419%" height="15" fill="rgb(222,165,49)" fg:x="6661" fg:w="14"/><text x="20.1985%" y="431.50"></text></g><g><title>__mod_timer (13 samples, 0.04%)</title><rect x="19.9515%" y="405" width="0.0389%" height="15" fill="rgb(219,113,52)" fg:x="6662" fg:w="13"/><text x="20.2015%" y="415.50"></text></g><g><title>__tcp_push_pending_frames (629 samples, 1.88%)</title><rect x="18.1157%" y="469" width="1.8837%" height="15" fill="rgb(214,7,15)" fg:x="6049" fg:w="629"/><text x="18.3657%" y="479.50">_..</text></g><g><title>tcp_write_xmit (627 samples, 1.88%)</title><rect x="18.1216%" y="453" width="1.8778%" height="15" fill="rgb(235,32,4)" fg:x="6051" fg:w="627"/><text x="18.3716%" y="463.50">t..</text></g><g><title>_copy_from_iter (154 samples, 0.46%)</title><rect x="19.9994%" y="469" width="0.4612%" height="15" fill="rgb(238,90,54)" fg:x="6678" fg:w="154"/><text x="20.2494%" y="479.50"></text></g><g><title>copy_user_enhanced_fast_string (143 samples, 0.43%)</title><rect x="20.0323%" y="453" width="0.4283%" height="15" fill="rgb(213,208,19)" fg:x="6689" fg:w="143"/><text x="20.2823%" y="463.50"></text></g><g><title>__list_del_entry_valid (11 samples, 0.03%)</title><rect x="20.5325%" y="405" width="0.0329%" height="15" fill="rgb(233,156,4)" fg:x="6856" fg:w="11"/><text x="20.7825%" y="415.50"></text></g><g><title>get_page_from_freelist (17 samples, 0.05%)</title><rect x="20.5205%" y="421" width="0.0509%" height="15" fill="rgb(207,194,5)" fg:x="6852" fg:w="17"/><text x="20.7705%" y="431.50"></text></g><g><title>sk_page_frag_refill (38 samples, 0.11%)</title><rect x="20.4606%" y="469" width="0.1138%" height="15" fill="rgb(206,111,30)" fg:x="6832" fg:w="38"/><text x="20.7106%" y="479.50"></text></g><g><title>skb_page_frag_refill (35 samples, 0.10%)</title><rect x="20.4696%" y="453" width="0.1048%" height="15" fill="rgb(243,70,54)" fg:x="6835" fg:w="35"/><text x="20.7196%" y="463.50"></text></g><g><title>__alloc_pages (24 samples, 0.07%)</title><rect x="20.5025%" y="437" width="0.0719%" height="15" fill="rgb(242,28,8)" fg:x="6846" fg:w="24"/><text x="20.7525%" y="447.50"></text></g><g><title>__kmalloc_track_caller (14 samples, 0.04%)</title><rect x="20.6103%" y="437" width="0.0419%" height="15" fill="rgb(219,106,18)" fg:x="6882" fg:w="14"/><text x="20.8603%" y="447.50"></text></g><g><title>__ksize (19 samples, 0.06%)</title><rect x="20.6523%" y="437" width="0.0569%" height="15" fill="rgb(244,222,10)" fg:x="6896" fg:w="19"/><text x="20.9023%" y="447.50"></text></g><g><title>kmem_cache_alloc (32 samples, 0.10%)</title><rect x="20.7092%" y="437" width="0.0958%" height="15" fill="rgb(236,179,52)" fg:x="6915" fg:w="32"/><text x="20.9592%" y="447.50"></text></g><g><title>sk_stream_alloc_skb (79 samples, 0.24%)</title><rect x="20.5744%" y="469" width="0.2366%" height="15" fill="rgb(213,23,39)" fg:x="6870" fg:w="79"/><text x="20.8244%" y="479.50"></text></g><g><title>__alloc_skb (76 samples, 0.23%)</title><rect x="20.5834%" y="453" width="0.2276%" height="15" fill="rgb(238,48,10)" fg:x="6873" fg:w="76"/><text x="20.8334%" y="463.50"></text></g><g><title>tcp_push (6 samples, 0.02%)</title><rect x="20.8110%" y="469" width="0.0180%" height="15" fill="rgb(251,196,23)" fg:x="6949" fg:w="6"/><text x="21.0610%" y="479.50"></text></g><g><title>tcp_rate_check_app_limited (7 samples, 0.02%)</title><rect x="20.8290%" y="469" width="0.0210%" height="15" fill="rgb(250,152,24)" fg:x="6955" fg:w="7"/><text x="21.0790%" y="479.50"></text></g><g><title>tcp_send_mss (39 samples, 0.12%)</title><rect x="20.8499%" y="469" width="0.1168%" height="15" fill="rgb(209,150,17)" fg:x="6962" fg:w="39"/><text x="21.0999%" y="479.50"></text></g><g><title>tcp_current_mss (36 samples, 0.11%)</title><rect x="20.8589%" y="453" width="0.1078%" height="15" fill="rgb(234,202,34)" fg:x="6965" fg:w="36"/><text x="21.1089%" y="463.50"></text></g><g><title>ipv4_mtu (22 samples, 0.07%)</title><rect x="20.9008%" y="437" width="0.0659%" height="15" fill="rgb(253,148,53)" fg:x="6979" fg:w="22"/><text x="21.1508%" y="447.50"></text></g><g><title>tcp_skb_entail (15 samples, 0.04%)</title><rect x="20.9667%" y="469" width="0.0449%" height="15" fill="rgb(218,129,16)" fg:x="7001" fg:w="15"/><text x="21.2167%" y="479.50"></text></g><g><title>__x64_sys_sendto (1,380 samples, 4.13%)</title><rect x="16.8908%" y="533" width="4.1329%" height="15" fill="rgb(216,85,19)" fg:x="5640" fg:w="1380"/><text x="17.1408%" y="543.50">__x64..</text></g><g><title>__sys_sendto (1,370 samples, 4.10%)</title><rect x="16.9207%" y="517" width="4.1029%" height="15" fill="rgb(235,228,7)" fg:x="5650" fg:w="1370"/><text x="17.1707%" y="527.50">__sy..</text></g><g><title>tcp_sendmsg (1,272 samples, 3.81%)</title><rect x="17.2142%" y="501" width="3.8094%" height="15" fill="rgb(245,175,0)" fg:x="5748" fg:w="1272"/><text x="17.4642%" y="511.50">tcp_..</text></g><g><title>tcp_sendmsg_locked (1,090 samples, 3.26%)</title><rect x="17.7593%" y="485" width="3.2644%" height="15" fill="rgb(208,168,36)" fg:x="5930" fg:w="1090"/><text x="18.0093%" y="495.50">tcp..</text></g><g><title>syscall_enter_from_user_mode (4 samples, 0.01%)</title><rect x="21.0236%" y="533" width="0.0120%" height="15" fill="rgb(246,171,24)" fg:x="7020" fg:w="4"/><text x="21.2736%" y="543.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1,403 samples, 4.20%)</title><rect x="16.8578%" y="565" width="4.2017%" height="15" fill="rgb(215,142,24)" fg:x="5629" fg:w="1403"/><text x="17.1078%" y="575.50">entry..</text></g><g><title>do_syscall_64 (1,395 samples, 4.18%)</title><rect x="16.8818%" y="549" width="4.1778%" height="15" fill="rgb(250,187,7)" fg:x="5637" fg:w="1395"/><text x="17.1318%" y="559.50">do_sy..</text></g><g><title>syscall_exit_to_user_mode (8 samples, 0.02%)</title><rect x="21.0356%" y="533" width="0.0240%" height="15" fill="rgb(228,66,33)" fg:x="7024" fg:w="8"/><text x="21.2856%" y="543.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write (1,488 samples, 4.46%)</title><rect x="16.6153%" y="613" width="4.4563%" height="15" fill="rgb(234,215,21)" fg:x="5548" fg:w="1488"/><text x="16.8653%" y="623.50">&lt;&amp;mio..</text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (1,477 samples, 4.42%)</title><rect x="16.6482%" y="597" width="4.4233%" height="15" fill="rgb(222,191,20)" fg:x="5559" fg:w="1477"/><text x="16.8982%" y="607.50">&lt;&amp;std..</text></g><g><title>send (1,463 samples, 4.38%)</title><rect x="16.6901%" y="581" width="4.3814%" height="15" fill="rgb(245,79,54)" fg:x="5573" fg:w="1463"/><text x="16.9401%" y="591.50">send</text></g><g><title>syscall_return_via_sysret (4 samples, 0.01%)</title><rect x="21.0596%" y="565" width="0.0120%" height="15" fill="rgb(240,10,37)" fg:x="7032" fg:w="4"/><text x="21.3096%" y="575.50"></text></g><g><title>&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_write::AsyncWrite&gt;::poll_write (1,523 samples, 4.56%)</title><rect x="16.5793%" y="645" width="4.5611%" height="15" fill="rgb(214,192,32)" fg:x="5536" fg:w="1523"/><text x="16.8293%" y="655.50">&lt;toki..</text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_write_priv (1,520 samples, 4.55%)</title><rect x="16.5883%" y="629" width="4.5521%" height="15" fill="rgb(209,36,54)" fg:x="5539" fg:w="1520"/><text x="16.8383%" y="639.50">tokio..</text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (23 samples, 0.07%)</title><rect x="21.0715%" y="613" width="0.0689%" height="15" fill="rgb(220,10,11)" fg:x="7036" fg:w="23"/><text x="21.3215%" y="623.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness (10 samples, 0.03%)</title><rect x="21.1105%" y="597" width="0.0299%" height="15" fill="rgb(221,106,17)" fg:x="7049" fg:w="10"/><text x="21.3605%" y="607.50"></text></g><g><title>&lt;tokio::runtime::coop::RestoreOnPending as core::ops::drop::Drop&gt;::drop (13 samples, 0.04%)</title><rect x="21.1404%" y="645" width="0.0389%" height="15" fill="rgb(251,142,44)" fg:x="7059" fg:w="13"/><text x="21.3904%" y="655.50"></text></g><g><title>proxy_lwip::handle_inbound_stream::{{closure}}::{{closure}} (2,542 samples, 7.61%)</title><rect x="13.6115%" y="693" width="7.6128%" height="15" fill="rgb(238,13,15)" fg:x="4545" fg:w="2542"/><text x="13.8615%" y="703.50">proxy_lwip..</text></g><g><title>tokio::io::util::copy_bidirectional::transfer_one_direction (2,511 samples, 7.52%)</title><rect x="13.7043%" y="677" width="7.5200%" height="15" fill="rgb(208,107,27)" fg:x="4576" fg:w="2511"/><text x="13.9543%" y="687.50">tokio::io:..</text></g><g><title>tokio::io::util::copy::CopyBuffer::poll_copy (2,479 samples, 7.42%)</title><rect x="13.8001%" y="661" width="7.4242%" height="15" fill="rgb(205,136,37)" fg:x="4608" fg:w="2479"/><text x="14.0501%" y="671.50">tokio::io:..</text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_read_priv (15 samples, 0.04%)</title><rect x="21.1794%" y="645" width="0.0449%" height="15" fill="rgb(250,205,27)" fg:x="7072" fg:w="15"/><text x="21.4294%" y="655.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (10 samples, 0.03%)</title><rect x="21.1943%" y="629" width="0.0299%" height="15" fill="rgb(210,80,43)" fg:x="7077" fg:w="10"/><text x="21.4443%" y="639.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness (6 samples, 0.02%)</title><rect x="21.2063%" y="613" width="0.0180%" height="15" fill="rgb(247,160,36)" fg:x="7081" fg:w="6"/><text x="21.4563%" y="623.50"></text></g><g><title>&lt;netstack_lwip::stack::NetStack as futures_sink::Sink&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;::poll_ready (7 samples, 0.02%)</title><rect x="21.8442%" y="661" width="0.0210%" height="15" fill="rgb(234,13,49)" fg:x="7294" fg:w="7"/><text x="22.0942%" y="671.50"></text></g><g><title>&lt;netstack_lwip::stack::NetStack as futures_sink::Sink&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;::start_send (14 samples, 0.04%)</title><rect x="21.8652%" y="661" width="0.0419%" height="15" fill="rgb(234,122,0)" fg:x="7301" fg:w="14"/><text x="22.1152%" y="671.50"></text></g><g><title>__libc_free (64 samples, 0.19%)</title><rect x="22.5240%" y="645" width="0.1917%" height="15" fill="rgb(207,146,38)" fg:x="7521" fg:w="64"/><text x="22.7740%" y="655.50"></text></g><g><title>[libc.so.6] (54 samples, 0.16%)</title><rect x="22.5540%" y="629" width="0.1617%" height="15" fill="rgb(207,177,25)" fg:x="7531" fg:w="54"/><text x="22.8040%" y="639.50"></text></g><g><title>[libc.so.6] (9 samples, 0.03%)</title><rect x="22.6887%" y="613" width="0.0270%" height="15" fill="rgb(211,178,42)" fg:x="7576" fg:w="9"/><text x="22.9387%" y="623.50"></text></g><g><title>ip4_addr_isbroadcast_u32 (5 samples, 0.01%)</title><rect x="22.8205%" y="629" width="0.0150%" height="15" fill="rgb(230,69,54)" fg:x="7620" fg:w="5"/><text x="23.0705%" y="639.50"></text></g><g><title>lwip_htons (7 samples, 0.02%)</title><rect x="22.8355%" y="629" width="0.0210%" height="15" fill="rgb(214,135,41)" fg:x="7625" fg:w="7"/><text x="23.0855%" y="639.50"></text></g><g><title>pbuf_remove_header (6 samples, 0.02%)</title><rect x="22.8565%" y="629" width="0.0180%" height="15" fill="rgb(237,67,25)" fg:x="7632" fg:w="6"/><text x="23.1065%" y="639.50"></text></g><g><title>raw_input (10 samples, 0.03%)</title><rect x="22.8744%" y="629" width="0.0299%" height="15" fill="rgb(222,189,50)" fg:x="7638" fg:w="10"/><text x="23.1244%" y="639.50"></text></g><g><title>malloc (146 samples, 0.44%)</title><rect x="23.5453%" y="597" width="0.4372%" height="15" fill="rgb(245,148,34)" fg:x="7862" fg:w="146"/><text x="23.7953%" y="607.50"></text></g><g><title>[libc.so.6] (89 samples, 0.27%)</title><rect x="23.7160%" y="581" width="0.2665%" height="15" fill="rgb(222,29,6)" fg:x="7919" fg:w="89"/><text x="23.9660%" y="591.50"></text></g><g><title>[libc.so.6] (9 samples, 0.03%)</title><rect x="23.9556%" y="565" width="0.0270%" height="15" fill="rgb(221,189,43)" fg:x="7999" fg:w="9"/><text x="24.2056%" y="575.50"></text></g><g><title>[libc.so.6] (26 samples, 0.08%)</title><rect x="24.0184%" y="581" width="0.0779%" height="15" fill="rgb(207,36,27)" fg:x="8020" fg:w="26"/><text x="24.2684%" y="591.50"></text></g><g><title>pbuf_copy_partial (39 samples, 0.12%)</title><rect x="23.9825%" y="597" width="0.1168%" height="15" fill="rgb(217,90,24)" fg:x="8008" fg:w="39"/><text x="24.2325%" y="607.50"></text></g><g><title>pbuf_free (11 samples, 0.03%)</title><rect x="24.0993%" y="597" width="0.0329%" height="15" fill="rgb(224,66,35)" fg:x="8047" fg:w="11"/><text x="24.3493%" y="607.50"></text></g><g><title>mem_free (6 samples, 0.02%)</title><rect x="24.1143%" y="581" width="0.0180%" height="15" fill="rgb(221,13,50)" fg:x="8052" fg:w="6"/><text x="24.3643%" y="591.50"></text></g><g><title>syscall (33 samples, 0.10%)</title><rect x="24.1742%" y="549" width="0.0988%" height="15" fill="rgb(236,68,49)" fg:x="8072" fg:w="33"/><text x="24.4242%" y="559.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (28 samples, 0.08%)</title><rect x="24.1892%" y="533" width="0.0839%" height="15" fill="rgb(229,146,28)" fg:x="8077" fg:w="28"/><text x="24.4392%" y="543.50"></text></g><g><title>do_syscall_64 (27 samples, 0.08%)</title><rect x="24.1921%" y="517" width="0.0809%" height="15" fill="rgb(225,31,38)" fg:x="8078" fg:w="27"/><text x="24.4421%" y="527.50"></text></g><g><title>__x64_sys_futex (26 samples, 0.08%)</title><rect x="24.1951%" y="501" width="0.0779%" height="15" fill="rgb(250,208,3)" fg:x="8079" fg:w="26"/><text x="24.4451%" y="511.50"></text></g><g><title>do_futex (26 samples, 0.08%)</title><rect x="24.1951%" y="485" width="0.0779%" height="15" fill="rgb(246,54,23)" fg:x="8079" fg:w="26"/><text x="24.4451%" y="495.50"></text></g><g><title>futex_wake (25 samples, 0.07%)</title><rect x="24.1981%" y="469" width="0.0749%" height="15" fill="rgb(243,76,11)" fg:x="8080" fg:w="25"/><text x="24.4481%" y="479.50"></text></g><g><title>wake_up_q (18 samples, 0.05%)</title><rect x="24.2191%" y="453" width="0.0539%" height="15" fill="rgb(245,21,50)" fg:x="8087" fg:w="18"/><text x="24.4691%" y="463.50"></text></g><g><title>try_to_wake_up (18 samples, 0.05%)</title><rect x="24.2191%" y="437" width="0.0539%" height="15" fill="rgb(228,9,43)" fg:x="8087" fg:w="18"/><text x="24.4691%" y="447.50"></text></g><g><title>ttwu_queue_wakelist (6 samples, 0.02%)</title><rect x="24.2550%" y="421" width="0.0180%" height="15" fill="rgb(208,100,47)" fg:x="8099" fg:w="6"/><text x="24.5050%" y="431.50"></text></g><g><title>__wake_up_common (11 samples, 0.03%)</title><rect x="24.3149%" y="357" width="0.0329%" height="15" fill="rgb(232,26,8)" fg:x="8119" fg:w="11"/><text x="24.5649%" y="367.50"></text></g><g><title>ep_autoremove_wake_function (10 samples, 0.03%)</title><rect x="24.3179%" y="341" width="0.0299%" height="15" fill="rgb(216,166,38)" fg:x="8120" fg:w="10"/><text x="24.5679%" y="351.50"></text></g><g><title>try_to_wake_up (9 samples, 0.03%)</title><rect x="24.3209%" y="325" width="0.0270%" height="15" fill="rgb(251,202,51)" fg:x="8121" fg:w="9"/><text x="24.5709%" y="335.50"></text></g><g><title>ttwu_queue_wakelist (5 samples, 0.01%)</title><rect x="24.3329%" y="309" width="0.0150%" height="15" fill="rgb(254,216,34)" fg:x="8125" fg:w="5"/><text x="24.5829%" y="319.50"></text></g><g><title>__wake_up_common_lock (12 samples, 0.04%)</title><rect x="24.3149%" y="373" width="0.0359%" height="15" fill="rgb(251,32,27)" fg:x="8119" fg:w="12"/><text x="24.5649%" y="383.50"></text></g><g><title>__wake_up_common (14 samples, 0.04%)</title><rect x="24.3119%" y="405" width="0.0419%" height="15" fill="rgb(208,127,28)" fg:x="8118" fg:w="14"/><text x="24.5619%" y="415.50"></text></g><g><title>ep_poll_callback (14 samples, 0.04%)</title><rect x="24.3119%" y="389" width="0.0419%" height="15" fill="rgb(224,137,22)" fg:x="8118" fg:w="14"/><text x="24.5619%" y="399.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Unparker::unpark (29 samples, 0.09%)</title><rect x="24.2730%" y="549" width="0.0868%" height="15" fill="rgb(254,70,32)" fg:x="8105" fg:w="29"/><text x="24.5230%" y="559.50"></text></g><g><title>mio::sys::unix::waker::eventfd::WakerInternal::wake (27 samples, 0.08%)</title><rect x="24.2790%" y="533" width="0.0809%" height="15" fill="rgb(229,75,37)" fg:x="8107" fg:w="27"/><text x="24.5290%" y="543.50"></text></g><g><title>&lt;&amp;std::process::ChildStdin as std::io::Write&gt;::write (25 samples, 0.07%)</title><rect x="24.2850%" y="517" width="0.0749%" height="15" fill="rgb(252,64,23)" fg:x="8109" fg:w="25"/><text x="24.5350%" y="527.50"></text></g><g><title>__write (25 samples, 0.07%)</title><rect x="24.2850%" y="501" width="0.0749%" height="15" fill="rgb(232,162,48)" fg:x="8109" fg:w="25"/><text x="24.5350%" y="511.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (21 samples, 0.06%)</title><rect x="24.2970%" y="485" width="0.0629%" height="15" fill="rgb(246,160,12)" fg:x="8113" fg:w="21"/><text x="24.5470%" y="495.50"></text></g><g><title>do_syscall_64 (20 samples, 0.06%)</title><rect x="24.3000%" y="469" width="0.0599%" height="15" fill="rgb(247,166,0)" fg:x="8114" fg:w="20"/><text x="24.5500%" y="479.50"></text></g><g><title>ksys_write (20 samples, 0.06%)</title><rect x="24.3000%" y="453" width="0.0599%" height="15" fill="rgb(249,219,21)" fg:x="8114" fg:w="20"/><text x="24.5500%" y="463.50"></text></g><g><title>vfs_write (19 samples, 0.06%)</title><rect x="24.3030%" y="437" width="0.0569%" height="15" fill="rgb(205,209,3)" fg:x="8115" fg:w="19"/><text x="24.5530%" y="447.50"></text></g><g><title>eventfd_write (16 samples, 0.05%)</title><rect x="24.3119%" y="421" width="0.0479%" height="15" fill="rgb(243,44,1)" fg:x="8118" fg:w="16"/><text x="24.5619%" y="431.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::schedule (96 samples, 0.29%)</title><rect x="24.1412%" y="581" width="0.2875%" height="15" fill="rgb(206,159,16)" fg:x="8061" fg:w="96"/><text x="24.3912%" y="591.50"></text></g><g><title>tokio::runtime::context::with_scheduler (94 samples, 0.28%)</title><rect x="24.1472%" y="565" width="0.2815%" height="15" fill="rgb(244,77,30)" fg:x="8063" fg:w="94"/><text x="24.3972%" y="575.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_local (23 samples, 0.07%)</title><rect x="24.3599%" y="549" width="0.0689%" height="15" fill="rgb(218,69,12)" fg:x="8134" fg:w="23"/><text x="24.6099%" y="559.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::worker_to_notify (19 samples, 0.06%)</title><rect x="24.3718%" y="533" width="0.0569%" height="15" fill="rgb(212,87,7)" fg:x="8138" fg:w="19"/><text x="24.6218%" y="543.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (123 samples, 0.37%)</title><rect x="24.1323%" y="597" width="0.3684%" height="15" fill="rgb(245,114,25)" fg:x="8058" fg:w="123"/><text x="24.3823%" y="607.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_notified_by_val (22 samples, 0.07%)</title><rect x="24.4347%" y="581" width="0.0659%" height="15" fill="rgb(210,61,42)" fg:x="8159" fg:w="22"/><text x="24.6847%" y="591.50"></text></g><g><title>tokio::sync::mpsc::list::Tx&lt;T&gt;::push (64 samples, 0.19%)</title><rect x="24.5006%" y="597" width="0.1917%" height="15" fill="rgb(211,52,33)" fg:x="8181" fg:w="64"/><text x="24.7506%" y="607.50"></text></g><g><title>netstack_lwip::tcp_stream_impl::tcp_recv_cb (511 samples, 1.53%)</title><rect x="23.2069%" y="613" width="1.5304%" height="15" fill="rgb(234,58,33)" fg:x="7749" fg:w="511"/><text x="23.4569%" y="623.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::wake (15 samples, 0.04%)</title><rect x="24.6923%" y="597" width="0.0449%" height="15" fill="rgb(220,115,36)" fg:x="8245" fg:w="15"/><text x="24.9423%" y="607.50"></text></g><g><title>pbuf_remove_header (4 samples, 0.01%)</title><rect x="24.7372%" y="613" width="0.0120%" height="15" fill="rgb(243,153,54)" fg:x="8260" fg:w="4"/><text x="24.9872%" y="623.50"></text></g><g><title>tcp_input_delayed_close (5 samples, 0.01%)</title><rect x="24.7492%" y="613" width="0.0150%" height="15" fill="rgb(251,47,18)" fg:x="8264" fg:w="5"/><text x="24.9992%" y="623.50"></text></g><g><title>tcp_output (15 samples, 0.04%)</title><rect x="24.7642%" y="613" width="0.0449%" height="15" fill="rgb(242,102,42)" fg:x="8269" fg:w="15"/><text x="25.0142%" y="623.50"></text></g><g><title>tcp_pcbs_sane (11 samples, 0.03%)</title><rect x="24.8151%" y="613" width="0.0329%" height="15" fill="rgb(234,31,38)" fg:x="8286" fg:w="11"/><text x="25.0651%" y="623.50"></text></g><g><title>tcp_receive (58 samples, 0.17%)</title><rect x="24.8480%" y="613" width="0.1737%" height="15" fill="rgb(221,117,51)" fg:x="8297" fg:w="58"/><text x="25.0980%" y="623.50"></text></g><g><title>tcp_update_rcv_ann_wnd (16 samples, 0.05%)</title><rect x="24.9738%" y="597" width="0.0479%" height="15" fill="rgb(212,20,18)" fg:x="8339" fg:w="16"/><text x="25.2238%" y="607.50"></text></g><g><title>tcp_output_alloc_header_common (20 samples, 0.06%)</title><rect x="25.0337%" y="597" width="0.0599%" height="15" fill="rgb(245,133,36)" fg:x="8359" fg:w="20"/><text x="25.2837%" y="607.50"></text></g><g><title>pbuf_alloc (7 samples, 0.02%)</title><rect x="25.0726%" y="581" width="0.0210%" height="15" fill="rgb(212,6,19)" fg:x="8372" fg:w="7"/><text x="25.3226%" y="591.50"></text></g><g><title>mem_malloc (6 samples, 0.02%)</title><rect x="25.0756%" y="565" width="0.0180%" height="15" fill="rgb(218,1,36)" fg:x="8373" fg:w="6"/><text x="25.3256%" y="575.50"></text></g><g><title>inet_cksum_pseudo_base (17 samples, 0.05%)</title><rect x="25.1265%" y="581" width="0.0509%" height="15" fill="rgb(246,84,54)" fg:x="8390" fg:w="17"/><text x="25.3765%" y="591.50"></text></g><g><title>lwip_standard_chksum (5 samples, 0.01%)</title><rect x="25.1625%" y="565" width="0.0150%" height="15" fill="rgb(242,110,6)" fg:x="8402" fg:w="5"/><text x="25.4125%" y="575.50"></text></g><g><title>malloc (37 samples, 0.11%)</title><rect x="25.2373%" y="533" width="0.1108%" height="15" fill="rgb(214,47,5)" fg:x="8427" fg:w="37"/><text x="25.4873%" y="543.50"></text></g><g><title>[libc.so.6] (16 samples, 0.05%)</title><rect x="25.3002%" y="517" width="0.0479%" height="15" fill="rgb(218,159,25)" fg:x="8448" fg:w="16"/><text x="25.5502%" y="527.50"></text></g><g><title>syscall (14 samples, 0.04%)</title><rect x="25.3721%" y="485" width="0.0419%" height="15" fill="rgb(215,211,28)" fg:x="8472" fg:w="14"/><text x="25.6221%" y="495.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (12 samples, 0.04%)</title><rect x="25.3781%" y="469" width="0.0359%" height="15" fill="rgb(238,59,32)" fg:x="8474" fg:w="12"/><text x="25.6281%" y="479.50"></text></g><g><title>do_syscall_64 (11 samples, 0.03%)</title><rect x="25.3811%" y="453" width="0.0329%" height="15" fill="rgb(226,82,3)" fg:x="8475" fg:w="11"/><text x="25.6311%" y="463.50"></text></g><g><title>__x64_sys_futex (10 samples, 0.03%)</title><rect x="25.3841%" y="437" width="0.0299%" height="15" fill="rgb(240,164,32)" fg:x="8476" fg:w="10"/><text x="25.6341%" y="447.50"></text></g><g><title>do_futex (7 samples, 0.02%)</title><rect x="25.3931%" y="421" width="0.0210%" height="15" fill="rgb(232,46,7)" fg:x="8479" fg:w="7"/><text x="25.6431%" y="431.50"></text></g><g><title>futex_wake (7 samples, 0.02%)</title><rect x="25.3931%" y="405" width="0.0210%" height="15" fill="rgb(229,129,53)" fg:x="8479" fg:w="7"/><text x="25.6431%" y="415.50"></text></g><g><title>wake_up_q (7 samples, 0.02%)</title><rect x="25.3931%" y="389" width="0.0210%" height="15" fill="rgb(234,188,29)" fg:x="8479" fg:w="7"/><text x="25.6431%" y="399.50"></text></g><g><title>try_to_wake_up (7 samples, 0.02%)</title><rect x="25.3931%" y="373" width="0.0210%" height="15" fill="rgb(246,141,4)" fg:x="8479" fg:w="7"/><text x="25.6431%" y="383.50"></text></g><g><title>ttwu_queue_wakelist (4 samples, 0.01%)</title><rect x="25.4021%" y="357" width="0.0120%" height="15" fill="rgb(229,23,39)" fg:x="8482" fg:w="4"/><text x="25.6521%" y="367.50"></text></g><g><title>select_task_rq_fair (4 samples, 0.01%)</title><rect x="25.4769%" y="245" width="0.0120%" height="15" fill="rgb(206,12,3)" fg:x="8507" fg:w="4"/><text x="25.7269%" y="255.50"></text></g><g><title>__wake_up_common (18 samples, 0.05%)</title><rect x="25.4560%" y="293" width="0.0539%" height="15" fill="rgb(252,226,20)" fg:x="8500" fg:w="18"/><text x="25.7060%" y="303.50"></text></g><g><title>ep_autoremove_wake_function (18 samples, 0.05%)</title><rect x="25.4560%" y="277" width="0.0539%" height="15" fill="rgb(216,123,35)" fg:x="8500" fg:w="18"/><text x="25.7060%" y="287.50"></text></g><g><title>try_to_wake_up (15 samples, 0.04%)</title><rect x="25.4649%" y="261" width="0.0449%" height="15" fill="rgb(212,68,40)" fg:x="8503" fg:w="15"/><text x="25.7149%" y="271.50"></text></g><g><title>ttwu_queue_wakelist (7 samples, 0.02%)</title><rect x="25.4889%" y="245" width="0.0210%" height="15" fill="rgb(254,125,32)" fg:x="8511" fg:w="7"/><text x="25.7389%" y="255.50"></text></g><g><title>__wake_up_common (21 samples, 0.06%)</title><rect x="25.4560%" y="341" width="0.0629%" height="15" fill="rgb(253,97,22)" fg:x="8500" fg:w="21"/><text x="25.7060%" y="351.50"></text></g><g><title>ep_poll_callback (21 samples, 0.06%)</title><rect x="25.4560%" y="325" width="0.0629%" height="15" fill="rgb(241,101,14)" fg:x="8500" fg:w="21"/><text x="25.7060%" y="335.50"></text></g><g><title>__wake_up_common_lock (21 samples, 0.06%)</title><rect x="25.4560%" y="309" width="0.0629%" height="15" fill="rgb(238,103,29)" fg:x="8500" fg:w="21"/><text x="25.7060%" y="319.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Unparker::unpark (38 samples, 0.11%)</title><rect x="25.4140%" y="485" width="0.1138%" height="15" fill="rgb(233,195,47)" fg:x="8486" fg:w="38"/><text x="25.6640%" y="495.50"></text></g><g><title>mio::sys::unix::waker::eventfd::WakerInternal::wake (36 samples, 0.11%)</title><rect x="25.4200%" y="469" width="0.1078%" height="15" fill="rgb(246,218,30)" fg:x="8488" fg:w="36"/><text x="25.6700%" y="479.50"></text></g><g><title>&lt;&amp;std::process::ChildStdin as std::io::Write&gt;::write (36 samples, 0.11%)</title><rect x="25.4200%" y="453" width="0.1078%" height="15" fill="rgb(219,145,47)" fg:x="8488" fg:w="36"/><text x="25.6700%" y="463.50"></text></g><g><title>__write (35 samples, 0.10%)</title><rect x="25.4230%" y="437" width="0.1048%" height="15" fill="rgb(243,12,26)" fg:x="8489" fg:w="35"/><text x="25.6730%" y="447.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (30 samples, 0.09%)</title><rect x="25.4380%" y="421" width="0.0898%" height="15" fill="rgb(214,87,16)" fg:x="8494" fg:w="30"/><text x="25.6880%" y="431.50"></text></g><g><title>do_syscall_64 (29 samples, 0.09%)</title><rect x="25.4410%" y="405" width="0.0868%" height="15" fill="rgb(208,99,42)" fg:x="8495" fg:w="29"/><text x="25.6910%" y="415.50"></text></g><g><title>ksys_write (27 samples, 0.08%)</title><rect x="25.4470%" y="389" width="0.0809%" height="15" fill="rgb(253,99,2)" fg:x="8497" fg:w="27"/><text x="25.6970%" y="399.50"></text></g><g><title>vfs_write (26 samples, 0.08%)</title><rect x="25.4500%" y="373" width="0.0779%" height="15" fill="rgb(220,168,23)" fg:x="8498" fg:w="26"/><text x="25.7000%" y="383.50"></text></g><g><title>eventfd_write (26 samples, 0.08%)</title><rect x="25.4500%" y="357" width="0.0779%" height="15" fill="rgb(242,38,24)" fg:x="8498" fg:w="26"/><text x="25.7000%" y="367.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::schedule (63 samples, 0.19%)</title><rect x="25.3661%" y="517" width="0.1887%" height="15" fill="rgb(225,182,9)" fg:x="8470" fg:w="63"/><text x="25.6161%" y="527.50"></text></g><g><title>tokio::runtime::context::with_scheduler (63 samples, 0.19%)</title><rect x="25.3661%" y="501" width="0.1887%" height="15" fill="rgb(243,178,37)" fg:x="8470" fg:w="63"/><text x="25.6161%" y="511.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_local (9 samples, 0.03%)</title><rect x="25.5278%" y="485" width="0.0270%" height="15" fill="rgb(232,139,19)" fg:x="8524" fg:w="9"/><text x="25.7778%" y="495.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::worker_to_notify (7 samples, 0.02%)</title><rect x="25.5338%" y="469" width="0.0210%" height="15" fill="rgb(225,201,24)" fg:x="8526" fg:w="7"/><text x="25.7838%" y="479.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (66 samples, 0.20%)</title><rect x="25.3631%" y="533" width="0.1977%" height="15" fill="rgb(221,47,46)" fg:x="8469" fg:w="66"/><text x="25.6131%" y="543.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::try_acquire (24 samples, 0.07%)</title><rect x="25.5608%" y="533" width="0.0719%" height="15" fill="rgb(249,23,13)" fg:x="8535" fg:w="24"/><text x="25.8108%" y="543.50"></text></g><g><title>tokio::sync::mpsc::list::Tx&lt;T&gt;::push (21 samples, 0.06%)</title><rect x="25.6327%" y="533" width="0.0629%" height="15" fill="rgb(219,9,5)" fg:x="8559" fg:w="21"/><text x="25.8827%" y="543.50"></text></g><g><title>netstack_lwip::output::output_ip6 (176 samples, 0.53%)</title><rect x="25.1984%" y="565" width="0.5271%" height="15" fill="rgb(254,171,16)" fg:x="8414" fg:w="176"/><text x="25.4484%" y="575.50"></text></g><g><title>netstack_lwip::output::output (171 samples, 0.51%)</title><rect x="25.2134%" y="549" width="0.5121%" height="15" fill="rgb(230,171,20)" fg:x="8419" fg:w="171"/><text x="25.4634%" y="559.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::wake (10 samples, 0.03%)</title><rect x="25.6955%" y="533" width="0.0299%" height="15" fill="rgb(210,71,41)" fg:x="8580" fg:w="10"/><text x="25.9455%" y="543.50"></text></g><g><title>ip4_output_if_src (188 samples, 0.56%)</title><rect x="25.1864%" y="581" width="0.5630%" height="15" fill="rgb(206,173,20)" fg:x="8410" fg:w="188"/><text x="25.4364%" y="591.50"></text></g><g><title>pbuf_add_header (8 samples, 0.02%)</title><rect x="25.7255%" y="565" width="0.0240%" height="15" fill="rgb(233,88,34)" fg:x="8590" fg:w="8"/><text x="25.9755%" y="575.50"></text></g><g><title>ip4_input (1,016 samples, 3.04%)</title><rect x="22.7247%" y="645" width="3.0427%" height="15" fill="rgb(223,209,46)" fg:x="7588" fg:w="1016"/><text x="22.9747%" y="655.50">ip4..</text></g><g><title>tcp_input (956 samples, 2.86%)</title><rect x="22.9044%" y="629" width="2.8630%" height="15" fill="rgb(250,43,18)" fg:x="7648" fg:w="956"/><text x="23.1544%" y="639.50">tc..</text></g><g><title>tcp_send_empty_ack (249 samples, 0.75%)</title><rect x="25.0217%" y="613" width="0.7457%" height="15" fill="rgb(208,13,10)" fg:x="8355" fg:w="249"/><text x="25.2717%" y="623.50"></text></g><g><title>tcp_output_control_segment (225 samples, 0.67%)</title><rect x="25.0936%" y="597" width="0.6738%" height="15" fill="rgb(212,200,36)" fg:x="8379" fg:w="225"/><text x="25.3436%" y="607.50"></text></g><g><title>pbuf_free (4 samples, 0.01%)</title><rect x="25.7554%" y="581" width="0.0120%" height="15" fill="rgb(225,90,30)" fg:x="8600" fg:w="4"/><text x="26.0054%" y="591.50"></text></g><g><title>pbuf_alloc (28 samples, 0.08%)</title><rect x="25.7734%" y="645" width="0.0839%" height="15" fill="rgb(236,182,39)" fg:x="8606" fg:w="28"/><text x="26.0234%" y="655.50"></text></g><g><title>mem_malloc (16 samples, 0.05%)</title><rect x="25.8093%" y="629" width="0.0479%" height="15" fill="rgb(212,144,35)" fg:x="8618" fg:w="16"/><text x="26.0593%" y="639.50"></text></g><g><title>[libc.so.6] (24 samples, 0.07%)</title><rect x="25.8872%" y="629" width="0.0719%" height="15" fill="rgb(228,63,44)" fg:x="8644" fg:w="24"/><text x="26.1372%" y="639.50"></text></g><g><title>&lt;netstack_lwip::stack_impl::NetStackImpl as futures_sink::Sink&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;::poll_flush (1,356 samples, 4.06%)</title><rect x="21.9071%" y="661" width="4.0610%" height="15" fill="rgb(228,109,6)" fg:x="7315" fg:w="1356"/><text x="22.1571%" y="671.50">&lt;net..</text></g><g><title>pbuf_take (37 samples, 0.11%)</title><rect x="25.8573%" y="645" width="0.1108%" height="15" fill="rgb(238,117,24)" fg:x="8634" fg:w="37"/><text x="26.1073%" y="655.50"></text></g><g><title>&lt;tun::async::device::AsyncDevice as tokio::io::async_write::AsyncWrite&gt;::poll_flush (51 samples, 0.15%)</title><rect x="26.3185%" y="645" width="0.1527%" height="15" fill="rgb(242,26,26)" fg:x="8788" fg:w="51"/><text x="26.5685%" y="655.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_write_ready (32 samples, 0.10%)</title><rect x="26.3754%" y="629" width="0.0958%" height="15" fill="rgb(221,92,48)" fg:x="8807" fg:w="32"/><text x="26.6254%" y="639.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (21 samples, 0.06%)</title><rect x="26.4083%" y="613" width="0.0629%" height="15" fill="rgb(209,209,32)" fg:x="8818" fg:w="21"/><text x="26.6583%" y="623.50"></text></g><g><title>[[kernel.kallsyms]] (23 samples, 0.07%)</title><rect x="26.9773%" y="581" width="0.0689%" height="15" fill="rgb(221,70,22)" fg:x="9008" fg:w="23"/><text x="27.2273%" y="591.50"></text></g><g><title>[libc.so.6] (33 samples, 0.10%)</title><rect x="27.0462%" y="581" width="0.0988%" height="15" fill="rgb(248,145,5)" fg:x="9031" fg:w="33"/><text x="27.2962%" y="591.50"></text></g><g><title>__x64_sys_writev (11 samples, 0.03%)</title><rect x="27.2469%" y="549" width="0.0329%" height="15" fill="rgb(226,116,26)" fg:x="9098" fg:w="11"/><text x="27.4969%" y="559.50"></text></g><g><title>__fdget_pos (31 samples, 0.09%)</title><rect x="27.3397%" y="533" width="0.0928%" height="15" fill="rgb(244,5,17)" fg:x="9129" fg:w="31"/><text x="27.5897%" y="543.50"></text></g><g><title>__fget_light (30 samples, 0.09%)</title><rect x="27.3427%" y="517" width="0.0898%" height="15" fill="rgb(252,159,33)" fg:x="9130" fg:w="30"/><text x="27.5927%" y="527.50"></text></g><g><title>__fget_files (19 samples, 0.06%)</title><rect x="27.3756%" y="501" width="0.0569%" height="15" fill="rgb(206,71,0)" fg:x="9141" fg:w="19"/><text x="27.6256%" y="511.50"></text></g><g><title>fput (5 samples, 0.01%)</title><rect x="27.4325%" y="533" width="0.0150%" height="15" fill="rgb(233,118,54)" fg:x="9160" fg:w="5"/><text x="27.6825%" y="543.50"></text></g><g><title>fput_many (6 samples, 0.02%)</title><rect x="27.4475%" y="533" width="0.0180%" height="15" fill="rgb(234,83,48)" fg:x="9165" fg:w="6"/><text x="27.6975%" y="543.50"></text></g><g><title>tun_get (29 samples, 0.09%)</title><rect x="27.7500%" y="469" width="0.0868%" height="15" fill="rgb(228,3,54)" fg:x="9266" fg:w="29"/><text x="28.0000%" y="479.50"></text></g><g><title>__local_bh_enable_ip (23 samples, 0.07%)</title><rect x="28.1783%" y="453" width="0.0689%" height="15" fill="rgb(226,155,13)" fg:x="9409" fg:w="23"/><text x="28.4283%" y="463.50"></text></g><g><title>do_softirq (6 samples, 0.02%)</title><rect x="28.2292%" y="437" width="0.0180%" height="15" fill="rgb(241,28,37)" fg:x="9426" fg:w="6"/><text x="28.4792%" y="447.50"></text></g><g><title>__softirqentry_text_start (5 samples, 0.01%)</title><rect x="28.2322%" y="421" width="0.0150%" height="15" fill="rgb(233,93,10)" fg:x="9427" fg:w="5"/><text x="28.4822%" y="431.50"></text></g><g><title>__skb_flow_dissect (71 samples, 0.21%)</title><rect x="28.2471%" y="453" width="0.2126%" height="15" fill="rgb(225,113,19)" fg:x="9432" fg:w="71"/><text x="28.4971%" y="463.50"></text></g><g><title>__netif_receive_skb_core.constprop.0 (84 samples, 0.25%)</title><rect x="28.5586%" y="421" width="0.2516%" height="15" fill="rgb(241,2,18)" fg:x="9536" fg:w="84"/><text x="28.8086%" y="431.50"></text></g><g><title>raw_local_deliver (10 samples, 0.03%)</title><rect x="28.9419%" y="389" width="0.0299%" height="15" fill="rgb(228,207,21)" fg:x="9664" fg:w="10"/><text x="29.1919%" y="399.50"></text></g><g><title>__raw_callee_save___pv_queued_spin_unlock (14 samples, 0.04%)</title><rect x="29.1486%" y="373" width="0.0419%" height="15" fill="rgb(213,211,35)" fg:x="9733" fg:w="14"/><text x="29.3986%" y="383.50"></text></g><g><title>__skb_checksum_complete (49 samples, 0.15%)</title><rect x="29.1905%" y="373" width="0.1467%" height="15" fill="rgb(209,83,10)" fg:x="9747" fg:w="49"/><text x="29.4405%" y="383.50"></text></g><g><title>__skb_checksum (38 samples, 0.11%)</title><rect x="29.2234%" y="357" width="0.1138%" height="15" fill="rgb(209,164,1)" fg:x="9758" fg:w="38"/><text x="29.4734%" y="367.50"></text></g><g><title>csum_partial (24 samples, 0.07%)</title><rect x="29.2654%" y="341" width="0.0719%" height="15" fill="rgb(213,184,43)" fg:x="9772" fg:w="24"/><text x="29.5154%" y="351.50"></text></g><g><title>do_csum (17 samples, 0.05%)</title><rect x="29.2863%" y="325" width="0.0509%" height="15" fill="rgb(231,61,34)" fg:x="9779" fg:w="17"/><text x="29.5363%" y="335.50"></text></g><g><title>_raw_spin_lock (5 samples, 0.01%)</title><rect x="29.3372%" y="373" width="0.0150%" height="15" fill="rgb(235,75,3)" fg:x="9796" fg:w="5"/><text x="29.5872%" y="383.50"></text></g><g><title>nf_conntrack_put (5 samples, 0.01%)</title><rect x="29.3522%" y="373" width="0.0150%" height="15" fill="rgb(220,106,47)" fg:x="9801" fg:w="5"/><text x="29.6022%" y="383.50"></text></g><g><title>sk_filter_trim_cap (17 samples, 0.05%)</title><rect x="29.3672%" y="373" width="0.0509%" height="15" fill="rgb(210,196,33)" fg:x="9806" fg:w="17"/><text x="29.6172%" y="383.50"></text></g><g><title>rcu_read_unlock_strict (4 samples, 0.01%)</title><rect x="29.4061%" y="357" width="0.0120%" height="15" fill="rgb(229,154,42)" fg:x="9819" fg:w="4"/><text x="29.6561%" y="367.50"></text></g><g><title>tcp_add_backlog (4 samples, 0.01%)</title><rect x="29.4271%" y="373" width="0.0120%" height="15" fill="rgb(228,114,26)" fg:x="9826" fg:w="4"/><text x="29.6771%" y="383.50"></text></g><g><title>tcp_filter (11 samples, 0.03%)</title><rect x="29.4391%" y="373" width="0.0329%" height="15" fill="rgb(208,144,1)" fg:x="9830" fg:w="11"/><text x="29.6891%" y="383.50"></text></g><g><title>skb_release_data (30 samples, 0.09%)</title><rect x="29.6128%" y="325" width="0.0898%" height="15" fill="rgb(239,112,37)" fg:x="9888" fg:w="30"/><text x="29.8628%" y="335.50"></text></g><g><title>kfree (15 samples, 0.04%)</title><rect x="29.6577%" y="309" width="0.0449%" height="15" fill="rgb(210,96,50)" fg:x="9903" fg:w="15"/><text x="29.9077%" y="319.50"></text></g><g><title>__kfree_skb (39 samples, 0.12%)</title><rect x="29.5888%" y="341" width="0.1168%" height="15" fill="rgb(222,178,2)" fg:x="9880" fg:w="39"/><text x="29.8388%" y="351.50"></text></g><g><title>__ip_finish_output (27 samples, 0.08%)</title><rect x="30.2357%" y="277" width="0.0809%" height="15" fill="rgb(226,74,18)" fg:x="10096" fg:w="27"/><text x="30.4857%" y="287.50"></text></g><g><title>skb_gso_validate_network_len (13 samples, 0.04%)</title><rect x="30.2776%" y="261" width="0.0389%" height="15" fill="rgb(225,67,54)" fg:x="10110" fg:w="13"/><text x="30.5276%" y="271.50"></text></g><g><title>skb_gso_transport_seglen (5 samples, 0.01%)</title><rect x="30.3016%" y="245" width="0.0150%" height="15" fill="rgb(251,92,32)" fg:x="10118" fg:w="5"/><text x="30.5516%" y="255.50"></text></g><g><title>__sk_dst_check (9 samples, 0.03%)</title><rect x="30.3166%" y="277" width="0.0270%" height="15" fill="rgb(228,149,22)" fg:x="10123" fg:w="9"/><text x="30.5666%" y="287.50"></text></g><g><title>__local_bh_enable_ip (11 samples, 0.03%)</title><rect x="30.5442%" y="245" width="0.0329%" height="15" fill="rgb(243,54,13)" fg:x="10199" fg:w="11"/><text x="30.7942%" y="255.50"></text></g><g><title>__qdisc_run (22 samples, 0.07%)</title><rect x="30.5771%" y="245" width="0.0659%" height="15" fill="rgb(243,180,28)" fg:x="10210" fg:w="22"/><text x="30.8271%" y="255.50"></text></g><g><title>fq_codel_dequeue (9 samples, 0.03%)</title><rect x="30.6160%" y="229" width="0.0270%" height="15" fill="rgb(208,167,24)" fg:x="10223" fg:w="9"/><text x="30.8660%" y="239.50"></text></g><g><title>netdev_core_pick_tx (6 samples, 0.02%)</title><rect x="30.6610%" y="245" width="0.0180%" height="15" fill="rgb(245,73,45)" fg:x="10238" fg:w="6"/><text x="30.9110%" y="255.50"></text></g><g><title>__raw_callee_save___pv_queued_spin_unlock (11 samples, 0.03%)</title><rect x="30.9095%" y="197" width="0.0329%" height="15" fill="rgb(237,203,48)" fg:x="10321" fg:w="11"/><text x="31.1595%" y="207.50"></text></g><g><title>_raw_spin_lock (9 samples, 0.03%)</title><rect x="30.9425%" y="197" width="0.0270%" height="15" fill="rgb(211,197,16)" fg:x="10332" fg:w="9"/><text x="31.1925%" y="207.50"></text></g><g><title>sk_free (9 samples, 0.03%)</title><rect x="30.9724%" y="197" width="0.0270%" height="15" fill="rgb(243,99,51)" fg:x="10342" fg:w="9"/><text x="31.2224%" y="207.50"></text></g><g><title>__list_del_entry_valid (6 samples, 0.02%)</title><rect x="31.2150%" y="85" width="0.0180%" height="15" fill="rgb(215,123,29)" fg:x="10423" fg:w="6"/><text x="31.4650%" y="95.50"></text></g><g><title>default_wake_function (6 samples, 0.02%)</title><rect x="31.2330%" y="85" width="0.0180%" height="15" fill="rgb(239,186,37)" fg:x="10429" fg:w="6"/><text x="31.4830%" y="95.50"></text></g><g><title>_raw_spin_lock_irqsave (14 samples, 0.04%)</title><rect x="31.3168%" y="69" width="0.0419%" height="15" fill="rgb(252,136,39)" fg:x="10457" fg:w="14"/><text x="31.5668%" y="79.50"></text></g><g><title>_raw_spin_unlock_irqrestore (8 samples, 0.02%)</title><rect x="31.3587%" y="69" width="0.0240%" height="15" fill="rgb(223,213,32)" fg:x="10471" fg:w="8"/><text x="31.6087%" y="79.50"></text></g><g><title>__raw_callee_save___pv_queued_spin_unlock (5 samples, 0.01%)</title><rect x="31.3677%" y="53" width="0.0150%" height="15" fill="rgb(233,115,5)" fg:x="10474" fg:w="5"/><text x="31.6177%" y="63.50"></text></g><g><title>select_task_rq_fair (30 samples, 0.09%)</title><rect x="31.3887%" y="69" width="0.0898%" height="15" fill="rgb(207,226,44)" fg:x="10481" fg:w="30"/><text x="31.6387%" y="79.50"></text></g><g><title>available_idle_cpu (12 samples, 0.04%)</title><rect x="31.4426%" y="53" width="0.0359%" height="15" fill="rgb(208,126,0)" fg:x="10499" fg:w="12"/><text x="31.6926%" y="63.50"></text></g><g><title>__smp_call_single_queue (14 samples, 0.04%)</title><rect x="31.5295%" y="53" width="0.0419%" height="15" fill="rgb(244,66,21)" fg:x="10528" fg:w="14"/><text x="31.7795%" y="63.50"></text></g><g><title>llist_add_batch (13 samples, 0.04%)</title><rect x="31.5324%" y="37" width="0.0389%" height="15" fill="rgb(222,97,12)" fg:x="10529" fg:w="13"/><text x="31.7824%" y="47.50"></text></g><g><title>hv_send_ipi (27 samples, 0.08%)</title><rect x="31.5714%" y="53" width="0.0809%" height="15" fill="rgb(219,213,19)" fg:x="10542" fg:w="27"/><text x="31.8214%" y="63.50"></text></g><g><title>__send_ipi_one (22 samples, 0.07%)</title><rect x="31.5864%" y="37" width="0.0659%" height="15" fill="rgb(252,169,30)" fg:x="10547" fg:w="22"/><text x="31.8364%" y="47.50"></text></g><g><title>sched_clock_cpu (5 samples, 0.01%)</title><rect x="31.6612%" y="53" width="0.0150%" height="15" fill="rgb(206,32,51)" fg:x="10572" fg:w="5"/><text x="31.9112%" y="63.50"></text></g><g><title>read_hv_sched_clock_tsc (5 samples, 0.01%)</title><rect x="31.6612%" y="37" width="0.0150%" height="15" fill="rgb(250,172,42)" fg:x="10572" fg:w="5"/><text x="31.9112%" y="47.50"></text></g><g><title>__wake_up_common (173 samples, 0.52%)</title><rect x="31.1671%" y="117" width="0.5181%" height="15" fill="rgb(209,34,43)" fg:x="10407" fg:w="173"/><text x="31.4171%" y="127.50"></text></g><g><title>ep_autoremove_wake_function (165 samples, 0.49%)</title><rect x="31.1910%" y="101" width="0.4941%" height="15" fill="rgb(223,11,35)" fg:x="10415" fg:w="165"/><text x="31.4410%" y="111.50"></text></g><g><title>try_to_wake_up (145 samples, 0.43%)</title><rect x="31.2509%" y="85" width="0.4342%" height="15" fill="rgb(251,219,26)" fg:x="10435" fg:w="145"/><text x="31.5009%" y="95.50"></text></g><g><title>ttwu_queue_wakelist (69 samples, 0.21%)</title><rect x="31.4785%" y="69" width="0.2066%" height="15" fill="rgb(231,119,3)" fg:x="10511" fg:w="69"/><text x="31.7285%" y="79.50"></text></g><g><title>_raw_spin_lock_irqsave (35 samples, 0.10%)</title><rect x="31.6852%" y="117" width="0.1048%" height="15" fill="rgb(216,97,11)" fg:x="10580" fg:w="35"/><text x="31.9352%" y="127.50"></text></g><g><title>__pv_queued_spin_lock_slowpath (29 samples, 0.09%)</title><rect x="31.7032%" y="101" width="0.0868%" height="15" fill="rgb(223,59,9)" fg:x="10586" fg:w="29"/><text x="31.9532%" y="111.50"></text></g><g><title>__wake_up_common_lock (212 samples, 0.63%)</title><rect x="31.1641%" y="133" width="0.6349%" height="15" fill="rgb(233,93,31)" fg:x="10406" fg:w="212"/><text x="31.4141%" y="143.50"></text></g><g><title>_raw_read_lock_irqsave (26 samples, 0.08%)</title><rect x="31.7990%" y="133" width="0.0779%" height="15" fill="rgb(239,81,33)" fg:x="10618" fg:w="26"/><text x="32.0490%" y="143.50"></text></g><g><title>__wake_up_common (282 samples, 0.84%)</title><rect x="31.0712%" y="165" width="0.8445%" height="15" fill="rgb(213,120,34)" fg:x="10375" fg:w="282"/><text x="31.3212%" y="175.50"></text></g><g><title>ep_poll_callback (274 samples, 0.82%)</title><rect x="31.0952%" y="149" width="0.8206%" height="15" fill="rgb(243,49,53)" fg:x="10383" fg:w="274"/><text x="31.3452%" y="159.50"></text></g><g><title>_raw_read_unlock_irqrestore (13 samples, 0.04%)</title><rect x="31.8769%" y="133" width="0.0389%" height="15" fill="rgb(247,216,33)" fg:x="10644" fg:w="13"/><text x="32.1269%" y="143.50"></text></g><g><title>_raw_spin_lock_irqsave (13 samples, 0.04%)</title><rect x="31.9158%" y="165" width="0.0389%" height="15" fill="rgb(226,26,14)" fg:x="10657" fg:w="13"/><text x="32.1658%" y="175.50"></text></g><g><title>_raw_spin_unlock_irqrestore (11 samples, 0.03%)</title><rect x="31.9547%" y="165" width="0.0329%" height="15" fill="rgb(215,49,53)" fg:x="10670" fg:w="11"/><text x="32.2047%" y="175.50"></text></g><g><title>__raw_callee_save___pv_queued_spin_unlock (10 samples, 0.03%)</title><rect x="31.9577%" y="149" width="0.0299%" height="15" fill="rgb(245,162,40)" fg:x="10671" fg:w="10"/><text x="32.2077%" y="159.50"></text></g><g><title>sock_def_readable (330 samples, 0.99%)</title><rect x="31.0024%" y="197" width="0.9883%" height="15" fill="rgb(229,68,17)" fg:x="10352" fg:w="330"/><text x="31.2524%" y="207.50"></text></g><g><title>__wake_up_common_lock (318 samples, 0.95%)</title><rect x="31.0383%" y="181" width="0.9524%" height="15" fill="rgb(213,182,10)" fg:x="10364" fg:w="318"/><text x="31.2883%" y="191.50"></text></g><g><title>dev_hard_start_xmit (446 samples, 1.34%)</title><rect x="30.7209%" y="229" width="1.3357%" height="15" fill="rgb(245,125,30)" fg:x="10258" fg:w="446"/><text x="30.9709%" y="239.50"></text></g><g><title>tun_net_xmit (424 samples, 1.27%)</title><rect x="30.7867%" y="213" width="1.2698%" height="15" fill="rgb(232,202,2)" fg:x="10280" fg:w="424"/><text x="31.0367%" y="223.50"></text></g><g><title>tcp_wfree (22 samples, 0.07%)</title><rect x="31.9907%" y="197" width="0.0659%" height="15" fill="rgb(237,140,51)" fg:x="10682" fg:w="22"/><text x="32.2407%" y="207.50"></text></g><g><title>ip_send_check (8 samples, 0.02%)</title><rect x="32.2123%" y="149" width="0.0240%" height="15" fill="rgb(236,157,25)" fg:x="10756" fg:w="8"/><text x="32.4623%" y="159.50"></text></g><g><title>tcp4_gso_segment (10 samples, 0.03%)</title><rect x="32.2362%" y="149" width="0.0299%" height="15" fill="rgb(219,209,0)" fg:x="10764" fg:w="10"/><text x="32.4862%" y="159.50"></text></g><g><title>csum_partial (10 samples, 0.03%)</title><rect x="32.3410%" y="133" width="0.0299%" height="15" fill="rgb(240,116,54)" fg:x="10799" fg:w="10"/><text x="32.5910%" y="143.50"></text></g><g><title>do_csum (9 samples, 0.03%)</title><rect x="32.3440%" y="117" width="0.0270%" height="15" fill="rgb(216,10,36)" fg:x="10800" fg:w="9"/><text x="32.5940%" y="127.50"></text></g><g><title>__build_skb_around (4 samples, 0.01%)</title><rect x="32.7004%" y="101" width="0.0120%" height="15" fill="rgb(222,72,44)" fg:x="10919" fg:w="4"/><text x="32.9504%" y="111.50"></text></g><g><title>___slab_alloc.constprop.0 (25 samples, 0.07%)</title><rect x="32.7843%" y="85" width="0.0749%" height="15" fill="rgb(232,159,9)" fg:x="10947" fg:w="25"/><text x="33.0343%" y="95.50"></text></g><g><title>__kmalloc_track_caller (51 samples, 0.15%)</title><rect x="32.7124%" y="101" width="0.1527%" height="15" fill="rgb(210,39,32)" fg:x="10923" fg:w="51"/><text x="32.9624%" y="111.50"></text></g><g><title>__ksize (12 samples, 0.04%)</title><rect x="32.8651%" y="101" width="0.0359%" height="15" fill="rgb(216,194,45)" fg:x="10974" fg:w="12"/><text x="33.1151%" y="111.50"></text></g><g><title>kmem_cache_alloc (19 samples, 0.06%)</title><rect x="32.9011%" y="101" width="0.0569%" height="15" fill="rgb(218,18,35)" fg:x="10986" fg:w="19"/><text x="33.1511%" y="111.50"></text></g><g><title>__alloc_skb (101 samples, 0.30%)</title><rect x="32.6585%" y="117" width="0.3025%" height="15" fill="rgb(207,83,51)" fg:x="10905" fg:w="101"/><text x="32.9085%" y="127.50"></text></g><g><title>__copy_skb_header (7 samples, 0.02%)</title><rect x="32.9610%" y="117" width="0.0210%" height="15" fill="rgb(225,63,43)" fg:x="11006" fg:w="7"/><text x="33.2110%" y="127.50"></text></g><g><title>__skb_checksum (191 samples, 0.57%)</title><rect x="32.9819%" y="117" width="0.5720%" height="15" fill="rgb(207,57,36)" fg:x="11013" fg:w="191"/><text x="33.2319%" y="127.50"></text></g><g><title>csum_partial (164 samples, 0.49%)</title><rect x="33.0628%" y="101" width="0.4912%" height="15" fill="rgb(216,99,33)" fg:x="11040" fg:w="164"/><text x="33.3128%" y="111.50"></text></g><g><title>do_csum (163 samples, 0.49%)</title><rect x="33.0658%" y="85" width="0.4882%" height="15" fill="rgb(225,42,16)" fg:x="11041" fg:w="163"/><text x="33.3158%" y="95.50"></text></g><g><title>memcpy_erms (34 samples, 0.10%)</title><rect x="33.5629%" y="117" width="0.1018%" height="15" fill="rgb(220,201,45)" fg:x="11207" fg:w="34"/><text x="33.8129%" y="127.50"></text></g><g><title>skb_headers_offset_update (5 samples, 0.01%)</title><rect x="33.6648%" y="117" width="0.0150%" height="15" fill="rgb(225,33,4)" fg:x="11241" fg:w="5"/><text x="33.9148%" y="127.50"></text></g><g><title>inet_gso_segment (522 samples, 1.56%)</title><rect x="32.1464%" y="165" width="1.5633%" height="15" fill="rgb(224,33,50)" fg:x="10734" fg:w="522"/><text x="32.3964%" y="175.50"></text></g><g><title>tcp_gso_segment (482 samples, 1.44%)</title><rect x="32.2662%" y="149" width="1.4435%" height="15" fill="rgb(246,198,51)" fg:x="10774" fg:w="482"/><text x="32.5162%" y="159.50"></text></g><g><title>skb_segment (447 samples, 1.34%)</title><rect x="32.3710%" y="133" width="1.3387%" height="15" fill="rgb(205,22,4)" fg:x="10809" fg:w="447"/><text x="32.6210%" y="143.50"></text></g><g><title>skb_zerocopy_clone (10 samples, 0.03%)</title><rect x="33.6797%" y="117" width="0.0299%" height="15" fill="rgb(206,3,8)" fg:x="11246" fg:w="10"/><text x="33.9297%" y="127.50"></text></g><g><title>__skb_gso_segment (538 samples, 1.61%)</title><rect x="32.1015%" y="197" width="1.6112%" height="15" fill="rgb(251,23,15)" fg:x="10719" fg:w="538"/><text x="32.3515%" y="207.50"></text></g><g><title>skb_mac_gso_segment (531 samples, 1.59%)</title><rect x="32.1224%" y="181" width="1.5902%" height="15" fill="rgb(252,88,28)" fg:x="10726" fg:w="531"/><text x="32.3724%" y="191.50"></text></g><g><title>consume_skb (6 samples, 0.02%)</title><rect x="33.7127%" y="197" width="0.0180%" height="15" fill="rgb(212,127,14)" fg:x="11257" fg:w="6"/><text x="33.9627%" y="207.50"></text></g><g><title>netif_skb_features (16 samples, 0.05%)</title><rect x="33.7336%" y="197" width="0.0479%" height="15" fill="rgb(247,145,37)" fg:x="11264" fg:w="16"/><text x="33.9836%" y="207.50"></text></g><g><title>skb_network_protocol (7 samples, 0.02%)</title><rect x="33.7606%" y="181" width="0.0210%" height="15" fill="rgb(209,117,53)" fg:x="11273" fg:w="7"/><text x="34.0106%" y="191.50"></text></g><g><title>__dev_queue_xmit (1,109 samples, 3.32%)</title><rect x="30.4633%" y="261" width="3.3213%" height="15" fill="rgb(212,90,42)" fg:x="10172" fg:w="1109"/><text x="30.7133%" y="271.50">__d..</text></g><g><title>sch_direct_xmit (1,037 samples, 3.11%)</title><rect x="30.6789%" y="245" width="3.1056%" height="15" fill="rgb(218,164,37)" fg:x="10244" fg:w="1037"/><text x="30.9289%" y="255.50">sch..</text></g><g><title>validate_xmit_skb_list (577 samples, 1.73%)</title><rect x="32.0565%" y="229" width="1.7280%" height="15" fill="rgb(246,65,34)" fg:x="10704" fg:w="577"/><text x="32.3065%" y="239.50"></text></g><g><title>validate_xmit_skb.constprop.0 (572 samples, 1.71%)</title><rect x="32.0715%" y="213" width="1.7130%" height="15" fill="rgb(231,100,33)" fg:x="10709" fg:w="572"/><text x="32.3215%" y="223.50"></text></g><g><title>ip_finish_output2 (1,165 samples, 3.49%)</title><rect x="30.3465%" y="277" width="3.4890%" height="15" fill="rgb(228,126,14)" fg:x="10133" fg:w="1165"/><text x="30.5965%" y="287.50">ip_..</text></g><g><title>neigh_connected_output (14 samples, 0.04%)</title><rect x="33.7935%" y="261" width="0.0419%" height="15" fill="rgb(215,173,21)" fg:x="11284" fg:w="14"/><text x="34.0435%" y="271.50"></text></g><g><title>ip_local_out (8 samples, 0.02%)</title><rect x="33.8355%" y="277" width="0.0240%" height="15" fill="rgb(210,6,40)" fg:x="11298" fg:w="8"/><text x="34.0855%" y="287.50"></text></g><g><title>__ip_local_out (6 samples, 0.02%)</title><rect x="33.8415%" y="261" width="0.0180%" height="15" fill="rgb(212,48,18)" fg:x="11300" fg:w="6"/><text x="34.0915%" y="271.50"></text></g><g><title>ip_output (8 samples, 0.02%)</title><rect x="33.8594%" y="277" width="0.0240%" height="15" fill="rgb(230,214,11)" fg:x="11306" fg:w="8"/><text x="34.1094%" y="287.50"></text></g><g><title>__ip_queue_xmit (1,240 samples, 3.71%)</title><rect x="30.1728%" y="293" width="3.7136%" height="15" fill="rgb(254,105,39)" fg:x="10075" fg:w="1240"/><text x="30.4228%" y="303.50">__ip..</text></g><g><title>__skb_clone (16 samples, 0.05%)</title><rect x="33.8864%" y="293" width="0.0479%" height="15" fill="rgb(245,158,5)" fg:x="11315" fg:w="16"/><text x="34.1364%" y="303.50"></text></g><g><title>__copy_skb_header (6 samples, 0.02%)</title><rect x="33.9163%" y="277" width="0.0180%" height="15" fill="rgb(249,208,11)" fg:x="11325" fg:w="6"/><text x="34.1663%" y="287.50"></text></g><g><title>__tcp_select_window (6 samples, 0.02%)</title><rect x="33.9343%" y="293" width="0.0180%" height="15" fill="rgb(210,39,28)" fg:x="11331" fg:w="6"/><text x="34.1843%" y="303.50"></text></g><g><title>bpf_skops_write_hdr_opt.isra.0 (7 samples, 0.02%)</title><rect x="33.9523%" y="293" width="0.0210%" height="15" fill="rgb(211,56,53)" fg:x="11337" fg:w="7"/><text x="34.2023%" y="303.50"></text></g><g><title>ip_queue_xmit (4 samples, 0.01%)</title><rect x="33.9732%" y="293" width="0.0120%" height="15" fill="rgb(226,201,30)" fg:x="11344" fg:w="4"/><text x="34.2232%" y="303.50"></text></g><g><title>skb_clone (6 samples, 0.02%)</title><rect x="33.9852%" y="293" width="0.0180%" height="15" fill="rgb(239,101,34)" fg:x="11348" fg:w="6"/><text x="34.2352%" y="303.50"></text></g><g><title>tcp_options_write (5 samples, 0.01%)</title><rect x="34.0122%" y="293" width="0.0150%" height="15" fill="rgb(226,209,5)" fg:x="11357" fg:w="5"/><text x="34.2622%" y="303.50"></text></g><g><title>__tcp_transmit_skb (1,331 samples, 3.99%)</title><rect x="30.0710%" y="309" width="3.9861%" height="15" fill="rgb(250,105,47)" fg:x="10041" fg:w="1331"/><text x="30.3210%" y="319.50">__tc..</text></g><g><title>tcp_update_skb_after_send (8 samples, 0.02%)</title><rect x="34.0331%" y="293" width="0.0240%" height="15" fill="rgb(230,72,3)" fg:x="11364" fg:w="8"/><text x="34.2831%" y="303.50"></text></g><g><title>__list_add_valid (4 samples, 0.01%)</title><rect x="34.0451%" y="277" width="0.0120%" height="15" fill="rgb(232,218,39)" fg:x="11368" fg:w="4"/><text x="34.2951%" y="287.50"></text></g><g><title>asm_sysvec_irq_work (4 samples, 0.01%)</title><rect x="34.0571%" y="309" width="0.0120%" height="15" fill="rgb(248,166,6)" fg:x="11372" fg:w="4"/><text x="34.3071%" y="319.50"></text></g><g><title>sysvec_irq_work (4 samples, 0.01%)</title><rect x="34.0571%" y="293" width="0.0120%" height="15" fill="rgb(247,89,20)" fg:x="11372" fg:w="4"/><text x="34.3071%" y="303.50"></text></g><g><title>__sysvec_irq_work (4 samples, 0.01%)</title><rect x="34.0571%" y="277" width="0.0120%" height="15" fill="rgb(248,130,54)" fg:x="11372" fg:w="4"/><text x="34.3071%" y="287.50"></text></g><g><title>irq_work_run (4 samples, 0.01%)</title><rect x="34.0571%" y="261" width="0.0120%" height="15" fill="rgb(234,196,4)" fg:x="11372" fg:w="4"/><text x="34.3071%" y="271.50"></text></g><g><title>irq_work_run_list (4 samples, 0.01%)</title><rect x="34.0571%" y="245" width="0.0120%" height="15" fill="rgb(250,143,31)" fg:x="11372" fg:w="4"/><text x="34.3071%" y="255.50"></text></g><g><title>_printk (4 samples, 0.01%)</title><rect x="34.0571%" y="229" width="0.0120%" height="15" fill="rgb(211,110,34)" fg:x="11372" fg:w="4"/><text x="34.3071%" y="239.50"></text></g><g><title>vprintk_emit (4 samples, 0.01%)</title><rect x="34.0571%" y="213" width="0.0120%" height="15" fill="rgb(215,124,48)" fg:x="11372" fg:w="4"/><text x="34.3071%" y="223.50"></text></g><g><title>console_unlock (4 samples, 0.01%)</title><rect x="34.0571%" y="197" width="0.0120%" height="15" fill="rgb(216,46,13)" fg:x="11372" fg:w="4"/><text x="34.3071%" y="207.50"></text></g><g><title>hvc_console_print (4 samples, 0.01%)</title><rect x="34.0571%" y="181" width="0.0120%" height="15" fill="rgb(205,184,25)" fg:x="11372" fg:w="4"/><text x="34.3071%" y="191.50"></text></g><g><title>put_chars (4 samples, 0.01%)</title><rect x="34.0571%" y="165" width="0.0120%" height="15" fill="rgb(228,1,10)" fg:x="11372" fg:w="4"/><text x="34.3071%" y="175.50"></text></g><g><title>__send_to_port (4 samples, 0.01%)</title><rect x="34.0571%" y="149" width="0.0120%" height="15" fill="rgb(213,116,27)" fg:x="11372" fg:w="4"/><text x="34.3071%" y="159.50"></text></g><g><title>ktime_get (12 samples, 0.04%)</title><rect x="34.0691%" y="309" width="0.0359%" height="15" fill="rgb(241,95,50)" fg:x="11376" fg:w="12"/><text x="34.3191%" y="319.50"></text></g><g><title>read_hv_clock_tsc (8 samples, 0.02%)</title><rect x="34.0810%" y="293" width="0.0240%" height="15" fill="rgb(238,48,32)" fg:x="11380" fg:w="8"/><text x="34.3310%" y="303.50"></text></g><g><title>__kmalloc_track_caller (5 samples, 0.01%)</title><rect x="34.1409%" y="277" width="0.0150%" height="15" fill="rgb(235,113,49)" fg:x="11400" fg:w="5"/><text x="34.3909%" y="287.50"></text></g><g><title>sk_stream_alloc_skb (23 samples, 0.07%)</title><rect x="34.1140%" y="309" width="0.0689%" height="15" fill="rgb(205,127,43)" fg:x="11391" fg:w="23"/><text x="34.3640%" y="319.50"></text></g><g><title>__alloc_skb (17 samples, 0.05%)</title><rect x="34.1320%" y="293" width="0.0509%" height="15" fill="rgb(250,162,2)" fg:x="11397" fg:w="17"/><text x="34.3820%" y="303.50"></text></g><g><title>kmem_cache_alloc (9 samples, 0.03%)</title><rect x="34.1559%" y="277" width="0.0270%" height="15" fill="rgb(220,13,41)" fg:x="11405" fg:w="9"/><text x="34.4059%" y="287.50"></text></g><g><title>skb_split (21 samples, 0.06%)</title><rect x="34.1829%" y="309" width="0.0629%" height="15" fill="rgb(249,221,25)" fg:x="11414" fg:w="21"/><text x="34.4329%" y="319.50"></text></g><g><title>sk_stream_write_space (7 samples, 0.02%)</title><rect x="34.2637%" y="293" width="0.0210%" height="15" fill="rgb(215,208,19)" fg:x="11441" fg:w="7"/><text x="34.5137%" y="303.50"></text></g><g><title>tcp_check_space (18 samples, 0.05%)</title><rect x="34.2458%" y="309" width="0.0539%" height="15" fill="rgb(236,175,2)" fg:x="11435" fg:w="18"/><text x="34.4958%" y="319.50"></text></g><g><title>tcp_sndbuf_expand (5 samples, 0.01%)</title><rect x="34.2847%" y="293" width="0.0150%" height="15" fill="rgb(241,52,2)" fg:x="11448" fg:w="5"/><text x="34.5347%" y="303.50"></text></g><g><title>tcp_event_new_data_sent (28 samples, 0.08%)</title><rect x="34.2997%" y="309" width="0.0839%" height="15" fill="rgb(248,140,14)" fg:x="11453" fg:w="28"/><text x="34.5497%" y="319.50"></text></g><g><title>tcp_rbtree_insert (10 samples, 0.03%)</title><rect x="34.3536%" y="293" width="0.0299%" height="15" fill="rgb(253,22,42)" fg:x="11471" fg:w="10"/><text x="34.6036%" y="303.50"></text></g><g><title>tcp_schedule_loss_probe.part.0 (4 samples, 0.01%)</title><rect x="34.3865%" y="309" width="0.0120%" height="15" fill="rgb(234,61,47)" fg:x="11482" fg:w="4"/><text x="34.6365%" y="319.50"></text></g><g><title>__tcp_push_pending_frames (1,569 samples, 4.70%)</title><rect x="29.7056%" y="341" width="4.6989%" height="15" fill="rgb(208,226,15)" fg:x="9919" fg:w="1569"/><text x="29.9556%" y="351.50">__tcp..</text></g><g><title>tcp_write_xmit (1,555 samples, 4.66%)</title><rect x="29.7475%" y="325" width="4.6569%" height="15" fill="rgb(217,221,4)" fg:x="9933" fg:w="1555"/><text x="29.9975%" y="335.50">tcp_w..</text></g><g><title>kfree_skbmem (4 samples, 0.01%)</title><rect x="34.4075%" y="341" width="0.0120%" height="15" fill="rgb(212,174,34)" fg:x="11489" fg:w="4"/><text x="34.6575%" y="351.50"></text></g><g><title>kmem_cache_free.part.0 (15 samples, 0.04%)</title><rect x="34.4254%" y="341" width="0.0449%" height="15" fill="rgb(253,83,4)" fg:x="11495" fg:w="15"/><text x="34.6754%" y="351.50"></text></g><g><title>skb_release_data (40 samples, 0.12%)</title><rect x="34.9915%" y="309" width="0.1198%" height="15" fill="rgb(250,195,49)" fg:x="11684" fg:w="40"/><text x="35.2415%" y="319.50"></text></g><g><title>kfree (17 samples, 0.05%)</title><rect x="35.0603%" y="293" width="0.0509%" height="15" fill="rgb(241,192,25)" fg:x="11707" fg:w="17"/><text x="35.3103%" y="303.50"></text></g><g><title>__slab_free.constprop.0 (8 samples, 0.02%)</title><rect x="35.0873%" y="277" width="0.0240%" height="15" fill="rgb(208,124,10)" fg:x="11716" fg:w="8"/><text x="35.3373%" y="287.50"></text></g><g><title>__kfree_skb (42 samples, 0.13%)</title><rect x="34.9915%" y="325" width="0.1258%" height="15" fill="rgb(222,33,0)" fg:x="11684" fg:w="42"/><text x="35.2415%" y="335.50"></text></g><g><title>__list_del_entry_valid (9 samples, 0.03%)</title><rect x="35.1172%" y="325" width="0.0270%" height="15" fill="rgb(234,209,28)" fg:x="11726" fg:w="9"/><text x="35.3672%" y="335.50"></text></g><g><title>cubictcp_acked (12 samples, 0.04%)</title><rect x="35.1442%" y="325" width="0.0359%" height="15" fill="rgb(224,11,23)" fg:x="11735" fg:w="12"/><text x="35.3942%" y="335.50"></text></g><g><title>cubictcp_cong_avoid (10 samples, 0.03%)</title><rect x="35.1801%" y="325" width="0.0299%" height="15" fill="rgb(232,99,1)" fg:x="11747" fg:w="10"/><text x="35.4301%" y="335.50"></text></g><g><title>kmem_cache_free.part.0 (9 samples, 0.03%)</title><rect x="35.2101%" y="325" width="0.0270%" height="15" fill="rgb(237,95,45)" fg:x="11757" fg:w="9"/><text x="35.4601%" y="335.50"></text></g><g><title>__slab_free.constprop.0 (6 samples, 0.02%)</title><rect x="35.2191%" y="309" width="0.0180%" height="15" fill="rgb(208,109,11)" fg:x="11760" fg:w="6"/><text x="35.4691%" y="319.50"></text></g><g><title>rb_erase (11 samples, 0.03%)</title><rect x="35.2370%" y="325" width="0.0329%" height="15" fill="rgb(216,190,48)" fg:x="11766" fg:w="11"/><text x="35.4870%" y="335.50"></text></g><g><title>rb_first (14 samples, 0.04%)</title><rect x="35.2700%" y="325" width="0.0419%" height="15" fill="rgb(251,171,36)" fg:x="11777" fg:w="14"/><text x="35.5200%" y="335.50"></text></g><g><title>rb_next (6 samples, 0.02%)</title><rect x="35.3119%" y="325" width="0.0180%" height="15" fill="rgb(230,62,22)" fg:x="11791" fg:w="6"/><text x="35.5619%" y="335.50"></text></g><g><title>__mod_timer (14 samples, 0.04%)</title><rect x="35.3419%" y="309" width="0.0419%" height="15" fill="rgb(225,114,35)" fg:x="11801" fg:w="14"/><text x="35.5919%" y="319.50"></text></g><g><title>sk_reset_timer (24 samples, 0.07%)</title><rect x="35.3299%" y="325" width="0.0719%" height="15" fill="rgb(215,118,42)" fg:x="11797" fg:w="24"/><text x="35.5799%" y="335.50"></text></g><g><title>mod_timer (6 samples, 0.02%)</title><rect x="35.3838%" y="309" width="0.0180%" height="15" fill="rgb(243,119,21)" fg:x="11815" fg:w="6"/><text x="35.6338%" y="319.50"></text></g><g><title>tcp_ack_tstamp (9 samples, 0.03%)</title><rect x="35.4018%" y="325" width="0.0270%" height="15" fill="rgb(252,177,53)" fg:x="11821" fg:w="9"/><text x="35.6518%" y="335.50"></text></g><g><title>__usecs_to_jiffies (4 samples, 0.01%)</title><rect x="35.5186%" y="309" width="0.0120%" height="15" fill="rgb(237,209,29)" fg:x="11860" fg:w="4"/><text x="35.7686%" y="319.50"></text></g><g><title>tcp_ack_update_rtt (49 samples, 0.15%)</title><rect x="35.4287%" y="325" width="0.1467%" height="15" fill="rgb(212,65,23)" fg:x="11830" fg:w="49"/><text x="35.6787%" y="335.50"></text></g><g><title>minmax_running_min (15 samples, 0.04%)</title><rect x="35.5305%" y="309" width="0.0449%" height="15" fill="rgb(230,222,46)" fg:x="11864" fg:w="15"/><text x="35.7805%" y="319.50"></text></g><g><title>tcp_newly_delivered (14 samples, 0.04%)</title><rect x="35.5755%" y="325" width="0.0419%" height="15" fill="rgb(215,135,32)" fg:x="11879" fg:w="14"/><text x="35.8255%" y="335.50"></text></g><g><title>tcp_rack_update_reo_wnd (6 samples, 0.02%)</title><rect x="35.6174%" y="325" width="0.0180%" height="15" fill="rgb(246,101,22)" fg:x="11893" fg:w="6"/><text x="35.8674%" y="335.50"></text></g><g><title>tcp_rate_gen (7 samples, 0.02%)</title><rect x="35.6354%" y="325" width="0.0210%" height="15" fill="rgb(206,107,13)" fg:x="11899" fg:w="7"/><text x="35.8854%" y="335.50"></text></g><g><title>tcp_rate_skb_delivered (7 samples, 0.02%)</title><rect x="35.6563%" y="325" width="0.0210%" height="15" fill="rgb(250,100,44)" fg:x="11906" fg:w="7"/><text x="35.9063%" y="335.50"></text></g><g><title>tcp_rearm_rto.part.0 (7 samples, 0.02%)</title><rect x="35.6773%" y="325" width="0.0210%" height="15" fill="rgb(231,147,38)" fg:x="11913" fg:w="7"/><text x="35.9273%" y="335.50"></text></g><g><title>tcp_schedule_loss_probe (7 samples, 0.02%)</title><rect x="35.6982%" y="325" width="0.0210%" height="15" fill="rgb(229,8,40)" fg:x="11920" fg:w="7"/><text x="35.9482%" y="335.50"></text></g><g><title>tcp_schedule_loss_probe.part.0 (8 samples, 0.02%)</title><rect x="35.7192%" y="325" width="0.0240%" height="15" fill="rgb(221,135,30)" fg:x="11927" fg:w="8"/><text x="35.9692%" y="335.50"></text></g><g><title>__put_page (9 samples, 0.03%)</title><rect x="35.8570%" y="293" width="0.0270%" height="15" fill="rgb(249,193,18)" fg:x="11973" fg:w="9"/><text x="36.1070%" y="303.50"></text></g><g><title>free_pcp_prepare (8 samples, 0.02%)</title><rect x="35.9079%" y="277" width="0.0240%" height="15" fill="rgb(209,133,39)" fg:x="11990" fg:w="8"/><text x="36.1579%" y="287.50"></text></g><g><title>tcp_trim_head (69 samples, 0.21%)</title><rect x="35.7432%" y="325" width="0.2066%" height="15" fill="rgb(232,100,14)" fg:x="11935" fg:w="69"/><text x="35.9932%" y="335.50"></text></g><g><title>__pskb_trim_head (47 samples, 0.14%)</title><rect x="35.8091%" y="309" width="0.1408%" height="15" fill="rgb(224,185,1)" fg:x="11957" fg:w="47"/><text x="36.0591%" y="319.50"></text></g><g><title>free_unref_page (19 samples, 0.06%)</title><rect x="35.8929%" y="293" width="0.0569%" height="15" fill="rgb(223,139,8)" fg:x="11985" fg:w="19"/><text x="36.1429%" y="303.50"></text></g><g><title>tcp_update_pacing_rate (14 samples, 0.04%)</title><rect x="35.9498%" y="325" width="0.0419%" height="15" fill="rgb(232,213,38)" fg:x="12004" fg:w="14"/><text x="36.1998%" y="335.50"></text></g><g><title>tcp_ack (509 samples, 1.52%)</title><rect x="34.4704%" y="341" width="1.5244%" height="15" fill="rgb(207,94,22)" fg:x="11510" fg:w="509"/><text x="34.7204%" y="351.50"></text></g><g><title>hv_send_ipi (4 samples, 0.01%)</title><rect x="36.1445%" y="229" width="0.0120%" height="15" fill="rgb(219,183,54)" fg:x="12069" fg:w="4"/><text x="36.3945%" y="239.50"></text></g><g><title>__send_ipi_one (4 samples, 0.01%)</title><rect x="36.1445%" y="213" width="0.0120%" height="15" fill="rgb(216,185,54)" fg:x="12069" fg:w="4"/><text x="36.3945%" y="223.50"></text></g><g><title>__wake_up_common (25 samples, 0.07%)</title><rect x="36.0846%" y="293" width="0.0749%" height="15" fill="rgb(254,217,39)" fg:x="12049" fg:w="25"/><text x="36.3346%" y="303.50"></text></g><g><title>pollwake (22 samples, 0.07%)</title><rect x="36.0936%" y="277" width="0.0659%" height="15" fill="rgb(240,178,23)" fg:x="12052" fg:w="22"/><text x="36.3436%" y="287.50"></text></g><g><title>try_to_wake_up (19 samples, 0.06%)</title><rect x="36.1025%" y="261" width="0.0569%" height="15" fill="rgb(218,11,47)" fg:x="12055" fg:w="19"/><text x="36.3525%" y="271.50"></text></g><g><title>ttwu_queue_wakelist (12 samples, 0.04%)</title><rect x="36.1235%" y="245" width="0.0359%" height="15" fill="rgb(218,51,51)" fg:x="12062" fg:w="12"/><text x="36.3735%" y="255.50"></text></g><g><title>sk_stream_write_space (31 samples, 0.09%)</title><rect x="36.0696%" y="325" width="0.0928%" height="15" fill="rgb(238,126,27)" fg:x="12044" fg:w="31"/><text x="36.3196%" y="335.50"></text></g><g><title>__wake_up_common_lock (27 samples, 0.08%)</title><rect x="36.0816%" y="309" width="0.0809%" height="15" fill="rgb(249,202,22)" fg:x="12048" fg:w="27"/><text x="36.3316%" y="319.50"></text></g><g><title>tcp_check_space (62 samples, 0.19%)</title><rect x="35.9947%" y="341" width="0.1857%" height="15" fill="rgb(254,195,49)" fg:x="12019" fg:w="62"/><text x="36.2447%" y="351.50"></text></g><g><title>tcp_sndbuf_expand (6 samples, 0.02%)</title><rect x="36.1624%" y="325" width="0.0180%" height="15" fill="rgb(208,123,14)" fg:x="12075" fg:w="6"/><text x="36.4124%" y="335.50"></text></g><g><title>tcp_current_mss (22 samples, 0.07%)</title><rect x="36.1864%" y="341" width="0.0659%" height="15" fill="rgb(224,200,8)" fg:x="12083" fg:w="22"/><text x="36.4364%" y="351.50"></text></g><g><title>ipv4_mtu (9 samples, 0.03%)</title><rect x="36.2253%" y="325" width="0.0270%" height="15" fill="rgb(217,61,36)" fg:x="12096" fg:w="9"/><text x="36.4753%" y="335.50"></text></g><g><title>tcp_data_queue (11 samples, 0.03%)</title><rect x="36.2523%" y="341" width="0.0329%" height="15" fill="rgb(206,35,45)" fg:x="12105" fg:w="11"/><text x="36.5023%" y="351.50"></text></g><g><title>read_hv_clock_tsc (21 samples, 0.06%)</title><rect x="36.3811%" y="309" width="0.0629%" height="15" fill="rgb(217,65,33)" fg:x="12148" fg:w="21"/><text x="36.6311%" y="319.50"></text></g><g><title>tcp_mstamp_refresh (66 samples, 0.20%)</title><rect x="36.2852%" y="341" width="0.1977%" height="15" fill="rgb(222,158,48)" fg:x="12116" fg:w="66"/><text x="36.5352%" y="351.50"></text></g><g><title>ktime_get (64 samples, 0.19%)</title><rect x="36.2912%" y="325" width="0.1917%" height="15" fill="rgb(254,2,54)" fg:x="12118" fg:w="64"/><text x="36.5412%" y="335.50"></text></g><g><title>read_hv_clock_tsc_cs (13 samples, 0.04%)</title><rect x="36.4440%" y="309" width="0.0389%" height="15" fill="rgb(250,143,38)" fg:x="12169" fg:w="13"/><text x="36.6940%" y="319.50"></text></g><g><title>tcp_urg (7 samples, 0.02%)</title><rect x="36.4829%" y="341" width="0.0210%" height="15" fill="rgb(248,25,0)" fg:x="12182" fg:w="7"/><text x="36.7329%" y="351.50"></text></g><g><title>tcp_v4_do_rcv (2,374 samples, 7.11%)</title><rect x="29.4720%" y="373" width="7.1097%" height="15" fill="rgb(206,152,27)" fg:x="9841" fg:w="2374"/><text x="29.7220%" y="383.50">tcp_v4_do_..</text></g><g><title>tcp_rcv_established (2,355 samples, 7.05%)</title><rect x="29.5289%" y="357" width="7.0528%" height="15" fill="rgb(240,77,30)" fg:x="9860" fg:w="2355"/><text x="29.7789%" y="367.50">tcp_rcv_e..</text></g><g><title>tcp_validate_incoming (26 samples, 0.08%)</title><rect x="36.5038%" y="341" width="0.0779%" height="15" fill="rgb(231,5,3)" fg:x="12189" fg:w="26"/><text x="36.7538%" y="351.50"></text></g><g><title>ip_protocol_deliver_rcu (2,594 samples, 7.77%)</title><rect x="28.8311%" y="405" width="7.7686%" height="15" fill="rgb(207,226,32)" fg:x="9627" fg:w="2594"/><text x="29.0811%" y="415.50">ip_protocol..</text></g><g><title>tcp_v4_rcv (2,547 samples, 7.63%)</title><rect x="28.9719%" y="389" width="7.6278%" height="15" fill="rgb(222,207,47)" fg:x="9674" fg:w="2547"/><text x="29.2219%" y="399.50">tcp_v4_rcv</text></g><g><title>tcp_v4_fill_cb (6 samples, 0.02%)</title><rect x="36.5817%" y="373" width="0.0180%" height="15" fill="rgb(229,115,45)" fg:x="12215" fg:w="6"/><text x="36.8317%" y="383.50"></text></g><g><title>ip_local_deliver_finish (2,600 samples, 7.79%)</title><rect x="28.8161%" y="421" width="7.7865%" height="15" fill="rgb(224,191,6)" fg:x="9622" fg:w="2600"/><text x="29.0661%" y="431.50">ip_local_de..</text></g><g><title>ip_rcv_core (63 samples, 0.19%)</title><rect x="36.6356%" y="405" width="0.1887%" height="15" fill="rgb(230,227,24)" fg:x="12233" fg:w="63"/><text x="36.8856%" y="415.50"></text></g><g><title>sock_wfree (39 samples, 0.12%)</title><rect x="36.7075%" y="389" width="0.1168%" height="15" fill="rgb(228,80,19)" fg:x="12257" fg:w="39"/><text x="36.9575%" y="399.50"></text></g><g><title>tun_sock_write_space (20 samples, 0.06%)</title><rect x="36.7644%" y="373" width="0.0599%" height="15" fill="rgb(247,229,0)" fg:x="12276" fg:w="20"/><text x="37.0144%" y="383.50"></text></g><g><title>__inet_lookup_established (61 samples, 0.18%)</title><rect x="37.0160%" y="373" width="0.1827%" height="15" fill="rgb(237,194,15)" fg:x="12360" fg:w="61"/><text x="37.2660%" y="383.50"></text></g><g><title>inet_ehashfn (16 samples, 0.05%)</title><rect x="37.1507%" y="357" width="0.0479%" height="15" fill="rgb(219,203,20)" fg:x="12405" fg:w="16"/><text x="37.4007%" y="367.50"></text></g><g><title>__netif_receive_skb_one_core (2,911 samples, 8.72%)</title><rect x="28.5077%" y="437" width="8.7179%" height="15" fill="rgb(234,128,8)" fg:x="9519" fg:w="2911"/><text x="28.7577%" y="447.50">__netif_rece..</text></g><g><title>ip_rcv (208 samples, 0.62%)</title><rect x="36.6027%" y="421" width="0.6229%" height="15" fill="rgb(248,202,8)" fg:x="12222" fg:w="208"/><text x="36.8527%" y="431.50"></text></g><g><title>ip_rcv_finish_core.constprop.0 (134 samples, 0.40%)</title><rect x="36.8243%" y="405" width="0.4013%" height="15" fill="rgb(206,104,37)" fg:x="12296" fg:w="134"/><text x="37.0743%" y="415.50"></text></g><g><title>tcp_v4_early_demux (100 samples, 0.30%)</title><rect x="36.9261%" y="389" width="0.2995%" height="15" fill="rgb(223,8,27)" fg:x="12330" fg:w="100"/><text x="37.1761%" y="399.50"></text></g><g><title>ipv4_dst_check (9 samples, 0.03%)</title><rect x="37.1986%" y="373" width="0.0270%" height="15" fill="rgb(216,217,28)" fg:x="12421" fg:w="9"/><text x="37.4486%" y="383.50"></text></g><g><title>netif_receive_skb (2,935 samples, 8.79%)</title><rect x="28.4628%" y="453" width="8.7898%" height="15" fill="rgb(249,199,1)" fg:x="9504" fg:w="2935"/><text x="28.7128%" y="463.50">netif_receiv..</text></g><g><title>skb_defer_rx_timestamp (9 samples, 0.03%)</title><rect x="37.2256%" y="437" width="0.0270%" height="15" fill="rgb(240,85,17)" fg:x="12430" fg:w="9"/><text x="37.4756%" y="447.50"></text></g><g><title>__check_heap_object (9 samples, 0.03%)</title><rect x="37.3065%" y="421" width="0.0270%" height="15" fill="rgb(206,108,45)" fg:x="12457" fg:w="9"/><text x="37.5565%" y="431.50"></text></g><g><title>__virt_addr_valid (35 samples, 0.10%)</title><rect x="37.3334%" y="421" width="0.1048%" height="15" fill="rgb(245,210,41)" fg:x="12466" fg:w="35"/><text x="37.5834%" y="431.50"></text></g><g><title>__check_object_size (57 samples, 0.17%)</title><rect x="37.2705%" y="437" width="0.1707%" height="15" fill="rgb(206,13,37)" fg:x="12445" fg:w="57"/><text x="37.5205%" y="447.50"></text></g><g><title>skb_copy_datagram_from_iter (88 samples, 0.26%)</title><rect x="37.2526%" y="453" width="0.2635%" height="15" fill="rgb(250,61,18)" fg:x="12439" fg:w="88"/><text x="37.5026%" y="463.50"></text></g><g><title>_copy_from_iter (25 samples, 0.07%)</title><rect x="37.4412%" y="437" width="0.0749%" height="15" fill="rgb(235,172,48)" fg:x="12502" fg:w="25"/><text x="37.6912%" y="447.50"></text></g><g><title>copy_user_generic_unrolled (9 samples, 0.03%)</title><rect x="37.4891%" y="421" width="0.0270%" height="15" fill="rgb(249,201,17)" fg:x="12518" fg:w="9"/><text x="37.7391%" y="431.50"></text></g><g><title>skb_put (4 samples, 0.01%)</title><rect x="37.5161%" y="453" width="0.0120%" height="15" fill="rgb(219,208,6)" fg:x="12527" fg:w="4"/><text x="37.7661%" y="463.50"></text></g><g><title>__build_skb_around (5 samples, 0.01%)</title><rect x="37.7197%" y="405" width="0.0150%" height="15" fill="rgb(248,31,23)" fg:x="12595" fg:w="5"/><text x="37.9697%" y="415.50"></text></g><g><title>__kmalloc_track_caller (36 samples, 0.11%)</title><rect x="37.7347%" y="405" width="0.1078%" height="15" fill="rgb(245,15,42)" fg:x="12600" fg:w="36"/><text x="37.9847%" y="415.50"></text></g><g><title>kmalloc_slab (9 samples, 0.03%)</title><rect x="37.8156%" y="389" width="0.0270%" height="15" fill="rgb(222,217,39)" fg:x="12627" fg:w="9"/><text x="38.0656%" y="399.50"></text></g><g><title>__ksize (9 samples, 0.03%)</title><rect x="37.8425%" y="405" width="0.0270%" height="15" fill="rgb(210,219,27)" fg:x="12636" fg:w="9"/><text x="38.0925%" y="415.50"></text></g><g><title>alloc_skb_with_frags (123 samples, 0.37%)</title><rect x="37.5940%" y="437" width="0.3684%" height="15" fill="rgb(252,166,36)" fg:x="12553" fg:w="123"/><text x="37.8440%" y="447.50"></text></g><g><title>__alloc_skb (108 samples, 0.32%)</title><rect x="37.6389%" y="421" width="0.3234%" height="15" fill="rgb(245,132,34)" fg:x="12568" fg:w="108"/><text x="37.8889%" y="431.50"></text></g><g><title>kmem_cache_alloc (30 samples, 0.09%)</title><rect x="37.8725%" y="405" width="0.0898%" height="15" fill="rgb(236,54,3)" fg:x="12646" fg:w="30"/><text x="38.1225%" y="415.50"></text></g><g><title>sock_alloc_send_pskb (160 samples, 0.48%)</title><rect x="37.5281%" y="453" width="0.4792%" height="15" fill="rgb(241,173,43)" fg:x="12531" fg:w="160"/><text x="37.7781%" y="463.50"></text></g><g><title>skb_set_owner_w (15 samples, 0.04%)</title><rect x="37.9623%" y="437" width="0.0449%" height="15" fill="rgb(215,190,9)" fg:x="12676" fg:w="15"/><text x="38.2123%" y="447.50"></text></g><g><title>do_iter_readv_writev (3,487 samples, 10.44%)</title><rect x="27.6272%" y="501" width="10.4429%" height="15" fill="rgb(242,101,16)" fg:x="9225" fg:w="3487"/><text x="27.8772%" y="511.50">do_iter_readv_w..</text></g><g><title>tun_chr_write_iter (3,466 samples, 10.38%)</title><rect x="27.6901%" y="485" width="10.3800%" height="15" fill="rgb(223,190,21)" fg:x="9246" fg:w="3466"/><text x="27.9401%" y="495.50">tun_chr_write_i..</text></g><g><title>tun_get_user (3,417 samples, 10.23%)</title><rect x="27.8368%" y="469" width="10.2333%" height="15" fill="rgb(215,228,25)" fg:x="9295" fg:w="3417"/><text x="28.0868%" y="479.50">tun_get_user</text></g><g><title>virtio_net_hdr_to_skb.constprop.0 (21 samples, 0.06%)</title><rect x="38.0072%" y="453" width="0.0629%" height="15" fill="rgb(225,36,22)" fg:x="12691" fg:w="21"/><text x="38.2572%" y="463.50"></text></g><g><title>rw_verify_area (4 samples, 0.01%)</title><rect x="38.0701%" y="501" width="0.0120%" height="15" fill="rgb(251,106,46)" fg:x="12712" fg:w="4"/><text x="38.3201%" y="511.50"></text></g><g><title>do_iter_write (3,533 samples, 10.58%)</title><rect x="27.5194%" y="517" width="10.5807%" height="15" fill="rgb(208,90,1)" fg:x="9189" fg:w="3533"/><text x="27.7694%" y="527.50">do_iter_write</text></g><g><title>security_file_permission (6 samples, 0.02%)</title><rect x="38.0821%" y="501" width="0.0180%" height="15" fill="rgb(243,10,4)" fg:x="12716" fg:w="6"/><text x="38.3321%" y="511.50"></text></g><g><title>__check_object_size (18 samples, 0.05%)</title><rect x="38.1600%" y="469" width="0.0539%" height="15" fill="rgb(212,137,27)" fg:x="12742" fg:w="18"/><text x="38.4100%" y="479.50"></text></g><g><title>check_stack_object (5 samples, 0.01%)</title><rect x="38.1989%" y="453" width="0.0150%" height="15" fill="rgb(231,220,49)" fg:x="12755" fg:w="5"/><text x="38.4489%" y="463.50"></text></g><g><title>copy_user_enhanced_fast_string (8 samples, 0.02%)</title><rect x="38.2349%" y="453" width="0.0240%" height="15" fill="rgb(237,96,20)" fg:x="12767" fg:w="8"/><text x="38.4849%" y="463.50"></text></g><g><title>import_iovec (72 samples, 0.22%)</title><rect x="38.1001%" y="517" width="0.2156%" height="15" fill="rgb(239,229,30)" fg:x="12722" fg:w="72"/><text x="38.3501%" y="527.50"></text></g><g><title>__import_iovec (71 samples, 0.21%)</title><rect x="38.1031%" y="501" width="0.2126%" height="15" fill="rgb(219,65,33)" fg:x="12723" fg:w="71"/><text x="38.3531%" y="511.50"></text></g><g><title>iovec_from_user.part.0 (63 samples, 0.19%)</title><rect x="38.1270%" y="485" width="0.1887%" height="15" fill="rgb(243,134,7)" fg:x="12731" fg:w="63"/><text x="38.3770%" y="495.50"></text></g><g><title>_copy_from_user (34 samples, 0.10%)</title><rect x="38.2139%" y="469" width="0.1018%" height="15" fill="rgb(216,177,54)" fg:x="12760" fg:w="34"/><text x="38.4639%" y="479.50"></text></g><g><title>copy_user_generic_unrolled (19 samples, 0.06%)</title><rect x="38.2588%" y="453" width="0.0569%" height="15" fill="rgb(211,160,20)" fg:x="12775" fg:w="19"/><text x="38.5088%" y="463.50"></text></g><g><title>do_writev (3,689 samples, 11.05%)</title><rect x="27.2798%" y="549" width="11.0479%" height="15" fill="rgb(239,85,39)" fg:x="9109" fg:w="3689"/><text x="27.5298%" y="559.50">do_writev</text></g><g><title>vfs_writev (3,627 samples, 10.86%)</title><rect x="27.4655%" y="533" width="10.8622%" height="15" fill="rgb(232,125,22)" fg:x="9171" fg:w="3627"/><text x="27.7155%" y="543.50">vfs_writev</text></g><g><title>kfree (4 samples, 0.01%)</title><rect x="38.3157%" y="517" width="0.0120%" height="15" fill="rgb(244,57,34)" fg:x="12794" fg:w="4"/><text x="38.5657%" y="527.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (3,751 samples, 11.23%)</title><rect x="27.1450%" y="581" width="11.2336%" height="15" fill="rgb(214,203,32)" fg:x="9064" fg:w="3751"/><text x="27.3950%" y="591.50">entry_SYSCALL_64_..</text></g><g><title>do_syscall_64 (3,727 samples, 11.16%)</title><rect x="27.2169%" y="565" width="11.1617%" height="15" fill="rgb(207,58,43)" fg:x="9088" fg:w="3727"/><text x="27.4669%" y="575.50">do_syscall_64</text></g><g><title>syscall_exit_to_user_mode (16 samples, 0.05%)</title><rect x="38.3307%" y="549" width="0.0479%" height="15" fill="rgb(215,193,15)" fg:x="12799" fg:w="16"/><text x="38.5807%" y="559.50"></text></g><g><title>exit_to_user_mode_prepare (4 samples, 0.01%)</title><rect x="38.3666%" y="533" width="0.0120%" height="15" fill="rgb(232,15,44)" fg:x="12811" fg:w="4"/><text x="38.6166%" y="543.50"></text></g><g><title>tokio::io::async_fd::AsyncFdReadyMutGuard&lt;Inner&gt;::try_io (3,881 samples, 11.62%)</title><rect x="26.7857%" y="613" width="11.6229%" height="15" fill="rgb(212,3,48)" fg:x="8944" fg:w="3881"/><text x="27.0357%" y="623.50">tokio::io::async_..</text></g><g><title>writev (3,838 samples, 11.49%)</title><rect x="26.9144%" y="597" width="11.4941%" height="15" fill="rgb(218,128,7)" fg:x="8987" fg:w="3838"/><text x="27.1644%" y="607.50">writev</text></g><g><title>syscall_return_via_sysret (10 samples, 0.03%)</title><rect x="38.3786%" y="581" width="0.0299%" height="15" fill="rgb(226,216,39)" fg:x="12815" fg:w="10"/><text x="38.6286%" y="591.50"></text></g><g><title>&lt;tun::async::device::AsyncDevice as tokio::io::async_write::AsyncWrite&gt;::poll_write_vectored (3,948 samples, 11.82%)</title><rect x="26.6988%" y="629" width="11.8235%" height="15" fill="rgb(243,47,51)" fg:x="8915" fg:w="3948"/><text x="26.9488%" y="639.50">&lt;tun::async::devic..</text></g><g><title>tokio::runtime::io::registration::Registration::poll_write_ready (38 samples, 0.11%)</title><rect x="38.4086%" y="613" width="0.1138%" height="15" fill="rgb(241,183,40)" fg:x="12825" fg:w="38"/><text x="38.6586%" y="623.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (30 samples, 0.09%)</title><rect x="38.4325%" y="597" width="0.0898%" height="15" fill="rgb(231,217,32)" fg:x="12833" fg:w="30"/><text x="38.6825%" y="607.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness (14 samples, 0.04%)</title><rect x="38.4804%" y="581" width="0.0419%" height="15" fill="rgb(229,61,38)" fg:x="12849" fg:w="14"/><text x="38.7304%" y="591.50"></text></g><g><title>tokio_util::util::poll_buf::poll_write_buf (4,047 samples, 12.12%)</title><rect x="26.4712%" y="645" width="12.1200%" height="15" fill="rgb(225,210,5)" fg:x="8839" fg:w="4047"/><text x="26.7212%" y="655.50">tokio_util::util::..</text></g><g><title>bytes::bytes_mut::BytesMut::advance_unchecked (23 samples, 0.07%)</title><rect x="38.5224%" y="629" width="0.0689%" height="15" fill="rgb(231,79,45)" fg:x="12863" fg:w="23"/><text x="38.7724%" y="639.50"></text></g><g><title>tracing::__macro_support::__is_enabled (19 samples, 0.06%)</title><rect x="38.5912%" y="645" width="0.0569%" height="15" fill="rgb(224,100,7)" fg:x="12886" fg:w="19"/><text x="38.8412%" y="655.50"></text></g><g><title>&lt;tracing_subscriber::fmt::Subscriber&lt;N,E,F,W&gt; as tracing_core::subscriber::Subscriber&gt;::event (7 samples, 0.02%)</title><rect x="38.7560%" y="629" width="0.0210%" height="15" fill="rgb(241,198,18)" fg:x="12941" fg:w="7"/><text x="39.0060%" y="639.50"></text></g><g><title>[libc.so.6] (78 samples, 0.23%)</title><rect x="39.9629%" y="533" width="0.2336%" height="15" fill="rgb(252,97,53)" fg:x="13344" fg:w="78"/><text x="40.2129%" y="543.50"></text></g><g><title>entry_SYSCALL_64 (52 samples, 0.16%)</title><rect x="40.1965%" y="533" width="0.1557%" height="15" fill="rgb(220,88,7)" fg:x="13422" fg:w="52"/><text x="40.4465%" y="543.50"></text></g><g><title>__x64_sys_write (7 samples, 0.02%)</title><rect x="40.4031%" y="501" width="0.0210%" height="15" fill="rgb(213,176,14)" fg:x="13491" fg:w="7"/><text x="40.6531%" y="511.50"></text></g><g><title>__fget_light (64 samples, 0.19%)</title><rect x="40.5858%" y="469" width="0.1917%" height="15" fill="rgb(246,73,7)" fg:x="13552" fg:w="64"/><text x="40.8358%" y="479.50"></text></g><g><title>__fget_files (42 samples, 0.13%)</title><rect x="40.6517%" y="453" width="0.1258%" height="15" fill="rgb(245,64,36)" fg:x="13574" fg:w="42"/><text x="40.9017%" y="463.50"></text></g><g><title>__fdget_pos (96 samples, 0.29%)</title><rect x="40.5469%" y="485" width="0.2875%" height="15" fill="rgb(245,80,10)" fg:x="13539" fg:w="96"/><text x="40.7969%" y="495.50"></text></g><g><title>mutex_lock (19 samples, 0.06%)</title><rect x="40.7775%" y="469" width="0.0569%" height="15" fill="rgb(232,107,50)" fg:x="13616" fg:w="19"/><text x="41.0275%" y="479.50"></text></g><g><title>fput (6 samples, 0.02%)</title><rect x="40.8344%" y="485" width="0.0180%" height="15" fill="rgb(253,3,0)" fg:x="13635" fg:w="6"/><text x="41.0844%" y="495.50"></text></g><g><title>fput_many (20 samples, 0.06%)</title><rect x="40.8523%" y="485" width="0.0599%" height="15" fill="rgb(212,99,53)" fg:x="13641" fg:w="20"/><text x="41.1023%" y="495.50"></text></g><g><title>mutex_unlock (23 samples, 0.07%)</title><rect x="40.9122%" y="485" width="0.0689%" height="15" fill="rgb(249,111,54)" fg:x="13661" fg:w="23"/><text x="41.1622%" y="495.50"></text></g><g><title>__fsnotify_parent (27 samples, 0.08%)</title><rect x="41.2417%" y="469" width="0.0809%" height="15" fill="rgb(249,55,30)" fg:x="13771" fg:w="27"/><text x="41.4917%" y="479.50"></text></g><g><title>down_write (22 samples, 0.07%)</title><rect x="41.4273%" y="437" width="0.0659%" height="15" fill="rgb(237,47,42)" fg:x="13833" fg:w="22"/><text x="41.6773%" y="447.50"></text></g><g><title>ext4_generic_write_checks (48 samples, 0.14%)</title><rect x="41.4932%" y="437" width="0.1438%" height="15" fill="rgb(211,20,18)" fg:x="13855" fg:w="48"/><text x="41.7432%" y="447.50"></text></g><g><title>generic_write_checks (37 samples, 0.11%)</title><rect x="41.5262%" y="421" width="0.1108%" height="15" fill="rgb(231,203,46)" fg:x="13866" fg:w="37"/><text x="41.7762%" y="431.50"></text></g><g><title>generic_write_check_limits (17 samples, 0.05%)</title><rect x="41.5861%" y="405" width="0.0509%" height="15" fill="rgb(237,142,3)" fg:x="13886" fg:w="17"/><text x="41.8361%" y="415.50"></text></g><g><title>file_modified (30 samples, 0.09%)</title><rect x="41.6370%" y="437" width="0.0898%" height="15" fill="rgb(241,107,1)" fg:x="13903" fg:w="30"/><text x="41.8870%" y="447.50"></text></g><g><title>file_remove_privs (22 samples, 0.07%)</title><rect x="41.6609%" y="421" width="0.0659%" height="15" fill="rgb(229,83,13)" fg:x="13911" fg:w="22"/><text x="41.9109%" y="431.50"></text></g><g><title>current_time (19 samples, 0.06%)</title><rect x="41.7598%" y="421" width="0.0569%" height="15" fill="rgb(241,91,40)" fg:x="13944" fg:w="19"/><text x="42.0098%" y="431.50"></text></g><g><title>ktime_get_coarse_real_ts64 (14 samples, 0.04%)</title><rect x="41.7747%" y="405" width="0.0419%" height="15" fill="rgb(225,3,45)" fg:x="13949" fg:w="14"/><text x="42.0247%" y="415.50"></text></g><g><title>file_update_time (32 samples, 0.10%)</title><rect x="41.7268%" y="437" width="0.0958%" height="15" fill="rgb(244,223,14)" fg:x="13933" fg:w="32"/><text x="41.9768%" y="447.50"></text></g><g><title>__cond_resched (24 samples, 0.07%)</title><rect x="41.9604%" y="421" width="0.0719%" height="15" fill="rgb(224,124,37)" fg:x="14011" fg:w="24"/><text x="42.2104%" y="431.50"></text></g><g><title>rcu_all_qs (17 samples, 0.05%)</title><rect x="41.9814%" y="405" width="0.0509%" height="15" fill="rgb(251,171,30)" fg:x="14018" fg:w="17"/><text x="42.2314%" y="415.50"></text></g><g><title>balance_dirty_pages_ratelimited (29 samples, 0.09%)</title><rect x="42.0323%" y="421" width="0.0868%" height="15" fill="rgb(236,46,54)" fg:x="14035" fg:w="29"/><text x="42.2823%" y="431.50"></text></g><g><title>copy_user_enhanced_fast_string (65 samples, 0.19%)</title><rect x="42.2838%" y="405" width="0.1947%" height="15" fill="rgb(245,213,5)" fg:x="14119" fg:w="65"/><text x="42.5338%" y="415.50"></text></g><g><title>copy_page_from_iter_atomic (125 samples, 0.37%)</title><rect x="42.1191%" y="421" width="0.3744%" height="15" fill="rgb(230,144,27)" fg:x="14064" fg:w="125"/><text x="42.3691%" y="431.50"></text></g><g><title>copy_user_generic_unrolled (5 samples, 0.01%)</title><rect x="42.4785%" y="405" width="0.0150%" height="15" fill="rgb(220,86,6)" fg:x="14184" fg:w="5"/><text x="42.7285%" y="415.50"></text></g><g><title>clean_bdev_aliases (13 samples, 0.04%)</title><rect x="42.7480%" y="389" width="0.0389%" height="15" fill="rgb(240,20,13)" fg:x="14274" fg:w="13"/><text x="42.9980%" y="399.50"></text></g><g><title>pagevec_lookup_range (10 samples, 0.03%)</title><rect x="42.7570%" y="373" width="0.0299%" height="15" fill="rgb(217,89,34)" fg:x="14277" fg:w="10"/><text x="43.0070%" y="383.50"></text></g><g><title>find_get_pages_range (8 samples, 0.02%)</title><rect x="42.7630%" y="357" width="0.0240%" height="15" fill="rgb(229,13,5)" fg:x="14279" fg:w="8"/><text x="43.0130%" y="367.50"></text></g><g><title>xas_find (5 samples, 0.01%)</title><rect x="42.7720%" y="341" width="0.0150%" height="15" fill="rgb(244,67,35)" fg:x="14282" fg:w="5"/><text x="43.0220%" y="351.50"></text></g><g><title>create_page_buffers (29 samples, 0.09%)</title><rect x="42.7870%" y="389" width="0.0868%" height="15" fill="rgb(221,40,2)" fg:x="14287" fg:w="29"/><text x="43.0370%" y="399.50"></text></g><g><title>create_empty_buffers (26 samples, 0.08%)</title><rect x="42.7960%" y="373" width="0.0779%" height="15" fill="rgb(237,157,21)" fg:x="14290" fg:w="26"/><text x="43.0460%" y="383.50"></text></g><g><title>alloc_page_buffers (22 samples, 0.07%)</title><rect x="42.8079%" y="357" width="0.0659%" height="15" fill="rgb(222,94,11)" fg:x="14294" fg:w="22"/><text x="43.0579%" y="367.50"></text></g><g><title>alloc_buffer_head (18 samples, 0.05%)</title><rect x="42.8199%" y="341" width="0.0539%" height="15" fill="rgb(249,113,6)" fg:x="14298" fg:w="18"/><text x="43.0699%" y="351.50"></text></g><g><title>kmem_cache_alloc (15 samples, 0.04%)</title><rect x="42.8289%" y="325" width="0.0449%" height="15" fill="rgb(238,137,36)" fg:x="14301" fg:w="15"/><text x="43.0789%" y="335.50"></text></g><g><title>down_read (4 samples, 0.01%)</title><rect x="42.9008%" y="373" width="0.0120%" height="15" fill="rgb(210,102,26)" fg:x="14325" fg:w="4"/><text x="43.1508%" y="383.50"></text></g><g><title>__dquot_alloc_space (6 samples, 0.02%)</title><rect x="42.9128%" y="357" width="0.0180%" height="15" fill="rgb(218,30,30)" fg:x="14329" fg:w="6"/><text x="43.1628%" y="367.50"></text></g><g><title>ext4_has_free_clusters (4 samples, 0.01%)</title><rect x="42.9397%" y="341" width="0.0120%" height="15" fill="rgb(214,67,26)" fg:x="14338" fg:w="4"/><text x="43.1897%" y="351.50"></text></g><g><title>ext4_da_reserve_space (14 samples, 0.04%)</title><rect x="42.9128%" y="373" width="0.0419%" height="15" fill="rgb(251,9,53)" fg:x="14329" fg:w="14"/><text x="43.1628%" y="383.50"></text></g><g><title>ext4_claim_free_clusters (7 samples, 0.02%)</title><rect x="42.9337%" y="357" width="0.0210%" height="15" fill="rgb(228,204,25)" fg:x="14336" fg:w="7"/><text x="43.1837%" y="367.50"></text></g><g><title>__es_insert_extent (8 samples, 0.02%)</title><rect x="42.9637%" y="357" width="0.0240%" height="15" fill="rgb(207,153,8)" fg:x="14346" fg:w="8"/><text x="43.2137%" y="367.50"></text></g><g><title>__es_remove_extent (7 samples, 0.02%)</title><rect x="42.9876%" y="357" width="0.0210%" height="15" fill="rgb(242,9,16)" fg:x="14354" fg:w="7"/><text x="43.2376%" y="367.50"></text></g><g><title>__es_tree_search.isra.0 (5 samples, 0.01%)</title><rect x="42.9936%" y="341" width="0.0150%" height="15" fill="rgb(217,211,10)" fg:x="14356" fg:w="5"/><text x="43.2436%" y="351.50"></text></g><g><title>ext4_es_insert_delayed_block (20 samples, 0.06%)</title><rect x="42.9547%" y="373" width="0.0599%" height="15" fill="rgb(219,228,52)" fg:x="14343" fg:w="20"/><text x="43.2047%" y="383.50"></text></g><g><title>ext4_es_lookup_extent (14 samples, 0.04%)</title><rect x="43.0146%" y="373" width="0.0419%" height="15" fill="rgb(231,92,29)" fg:x="14363" fg:w="14"/><text x="43.2646%" y="383.50"></text></g><g><title>ext4_da_get_block_prep (63 samples, 0.19%)</title><rect x="42.8738%" y="389" width="0.1887%" height="15" fill="rgb(232,8,23)" fg:x="14316" fg:w="63"/><text x="43.1238%" y="399.50"></text></g><g><title>__block_write_begin_int (174 samples, 0.52%)</title><rect x="42.6432%" y="405" width="0.5211%" height="15" fill="rgb(216,211,34)" fg:x="14239" fg:w="174"/><text x="42.8932%" y="415.50"></text></g><g><title>zero_user_segments (34 samples, 0.10%)</title><rect x="43.0625%" y="389" width="0.1018%" height="15" fill="rgb(236,151,0)" fg:x="14379" fg:w="34"/><text x="43.3125%" y="399.50"></text></g><g><title>memset_erms (30 samples, 0.09%)</title><rect x="43.0745%" y="373" width="0.0898%" height="15" fill="rgb(209,168,3)" fg:x="14383" fg:w="30"/><text x="43.3245%" y="383.50"></text></g><g><title>ext4_nonda_switch (25 samples, 0.07%)</title><rect x="43.1643%" y="405" width="0.0749%" height="15" fill="rgb(208,129,28)" fg:x="14413" fg:w="25"/><text x="43.4143%" y="415.50"></text></g><g><title>PageHuge (13 samples, 0.04%)</title><rect x="43.4758%" y="373" width="0.0389%" height="15" fill="rgb(229,78,22)" fg:x="14517" fg:w="13"/><text x="43.7258%" y="383.50"></text></g><g><title>node_dirty_ok (7 samples, 0.02%)</title><rect x="43.5537%" y="341" width="0.0210%" height="15" fill="rgb(228,187,13)" fg:x="14543" fg:w="7"/><text x="43.8037%" y="351.50"></text></g><g><title>get_page_from_freelist (16 samples, 0.05%)</title><rect x="43.5387%" y="357" width="0.0479%" height="15" fill="rgb(240,119,24)" fg:x="14538" fg:w="16"/><text x="43.7887%" y="367.50"></text></g><g><title>rmqueue_bulk (4 samples, 0.01%)</title><rect x="43.5746%" y="341" width="0.0120%" height="15" fill="rgb(209,194,42)" fg:x="14550" fg:w="4"/><text x="43.8246%" y="351.50"></text></g><g><title>__alloc_pages (26 samples, 0.08%)</title><rect x="43.5147%" y="373" width="0.0779%" height="15" fill="rgb(247,200,46)" fg:x="14530" fg:w="26"/><text x="43.7647%" y="383.50"></text></g><g><title>charge_memcg (5 samples, 0.01%)</title><rect x="43.6225%" y="325" width="0.0150%" height="15" fill="rgb(218,76,16)" fg:x="14566" fg:w="5"/><text x="43.8725%" y="335.50"></text></g><g><title>mem_cgroup_charge_statistics.constprop.0 (5 samples, 0.01%)</title><rect x="43.6225%" y="309" width="0.0150%" height="15" fill="rgb(225,21,48)" fg:x="14566" fg:w="5"/><text x="43.8725%" y="319.50"></text></g><g><title>__mem_cgroup_charge (14 samples, 0.04%)</title><rect x="43.6225%" y="341" width="0.0419%" height="15" fill="rgb(239,223,50)" fg:x="14566" fg:w="14"/><text x="43.8725%" y="351.50"></text></g><g><title>get_mem_cgroup_from_mm (9 samples, 0.03%)</title><rect x="43.6375%" y="325" width="0.0270%" height="15" fill="rgb(244,45,21)" fg:x="14571" fg:w="9"/><text x="43.8875%" y="335.50"></text></g><g><title>__mod_lruvec_page_state (7 samples, 0.02%)</title><rect x="43.6645%" y="341" width="0.0210%" height="15" fill="rgb(232,33,43)" fg:x="14580" fg:w="7"/><text x="43.9145%" y="351.50"></text></g><g><title>__mod_memcg_lruvec_state (4 samples, 0.01%)</title><rect x="43.6734%" y="325" width="0.0120%" height="15" fill="rgb(209,8,3)" fg:x="14583" fg:w="4"/><text x="43.9234%" y="335.50"></text></g><g><title>xa_get_order (4 samples, 0.01%)</title><rect x="43.6914%" y="341" width="0.0120%" height="15" fill="rgb(214,25,53)" fg:x="14589" fg:w="4"/><text x="43.9414%" y="351.50"></text></g><g><title>xas_find_conflict (7 samples, 0.02%)</title><rect x="43.7034%" y="341" width="0.0210%" height="15" fill="rgb(254,186,54)" fg:x="14593" fg:w="7"/><text x="43.9534%" y="351.50"></text></g><g><title>workingset_update_node (6 samples, 0.02%)</title><rect x="43.7483%" y="325" width="0.0180%" height="15" fill="rgb(208,174,49)" fg:x="14608" fg:w="6"/><text x="43.9983%" y="335.50"></text></g><g><title>__add_to_page_cache_locked (60 samples, 0.18%)</title><rect x="43.6016%" y="357" width="0.1797%" height="15" fill="rgb(233,191,51)" fg:x="14559" fg:w="60"/><text x="43.8516%" y="367.50"></text></g><g><title>xas_store (19 samples, 0.06%)</title><rect x="43.7244%" y="341" width="0.0569%" height="15" fill="rgb(222,134,10)" fg:x="14600" fg:w="19"/><text x="43.9744%" y="351.50"></text></g><g><title>xas_create (5 samples, 0.01%)</title><rect x="43.7663%" y="325" width="0.0150%" height="15" fill="rgb(230,226,20)" fg:x="14614" fg:w="5"/><text x="44.0163%" y="335.50"></text></g><g><title>add_to_page_cache_lru (74 samples, 0.22%)</title><rect x="43.5926%" y="373" width="0.2216%" height="15" fill="rgb(251,111,25)" fg:x="14556" fg:w="74"/><text x="43.8426%" y="383.50"></text></g><g><title>lru_cache_add (11 samples, 0.03%)</title><rect x="43.7813%" y="357" width="0.0329%" height="15" fill="rgb(224,40,46)" fg:x="14619" fg:w="11"/><text x="44.0313%" y="367.50"></text></g><g><title>__pagevec_lru_add (6 samples, 0.02%)</title><rect x="43.7962%" y="341" width="0.0180%" height="15" fill="rgb(236,108,47)" fg:x="14624" fg:w="6"/><text x="44.0462%" y="351.50"></text></g><g><title>pagecache_get_page (293 samples, 0.88%)</title><rect x="43.2452%" y="389" width="0.8775%" height="15" fill="rgb(234,93,0)" fg:x="14440" fg:w="293"/><text x="43.4952%" y="399.50"></text></g><g><title>xas_load (102 samples, 0.31%)</title><rect x="43.8172%" y="373" width="0.3055%" height="15" fill="rgb(224,213,32)" fg:x="14631" fg:w="102"/><text x="44.0672%" y="383.50"></text></g><g><title>xas_start (27 samples, 0.08%)</title><rect x="44.0418%" y="357" width="0.0809%" height="15" fill="rgb(251,11,48)" fg:x="14706" fg:w="27"/><text x="44.2918%" y="367.50"></text></g><g><title>ext4_da_write_begin (546 samples, 1.64%)</title><rect x="42.4935%" y="421" width="1.6352%" height="15" fill="rgb(236,173,5)" fg:x="14189" fg:w="546"/><text x="42.7435%" y="431.50"></text></g><g><title>grab_cache_page_write_begin (297 samples, 0.89%)</title><rect x="43.2392%" y="405" width="0.8895%" height="15" fill="rgb(230,95,12)" fg:x="14438" fg:w="297"/><text x="43.4892%" y="415.50"></text></g><g><title>ext4_da_write_end (31 samples, 0.09%)</title><rect x="44.1287%" y="421" width="0.0928%" height="15" fill="rgb(232,209,1)" fg:x="14735" fg:w="31"/><text x="44.3787%" y="431.50"></text></g><g><title>fault_in_iov_iter_readable (80 samples, 0.24%)</title><rect x="44.2215%" y="421" width="0.2396%" height="15" fill="rgb(232,6,1)" fg:x="14766" fg:w="80"/><text x="44.4715%" y="431.50"></text></g><g><title>fault_in_readable (73 samples, 0.22%)</title><rect x="44.2425%" y="405" width="0.2186%" height="15" fill="rgb(210,224,50)" fg:x="14773" fg:w="73"/><text x="44.4925%" y="415.50"></text></g><g><title>__get_user_nocheck_1 (48 samples, 0.14%)</title><rect x="44.3173%" y="389" width="0.1438%" height="15" fill="rgb(228,127,35)" fg:x="14798" fg:w="48"/><text x="44.5673%" y="399.50"></text></g><g><title>__set_page_dirty (13 samples, 0.04%)</title><rect x="44.7995%" y="373" width="0.0389%" height="15" fill="rgb(245,102,45)" fg:x="14959" fg:w="13"/><text x="45.0495%" y="383.50"></text></g><g><title>percpu_counter_add_batch (5 samples, 0.01%)</title><rect x="44.8235%" y="357" width="0.0150%" height="15" fill="rgb(214,1,49)" fg:x="14967" fg:w="5"/><text x="45.0735%" y="367.50"></text></g><g><title>__block_commit_write.constprop.0.isra.0 (92 samples, 0.28%)</title><rect x="44.5958%" y="405" width="0.2755%" height="15" fill="rgb(226,163,40)" fg:x="14891" fg:w="92"/><text x="44.8458%" y="415.50"></text></g><g><title>mark_buffer_dirty (45 samples, 0.13%)</title><rect x="44.7366%" y="389" width="0.1348%" height="15" fill="rgb(239,212,28)" fg:x="14938" fg:w="45"/><text x="44.9866%" y="399.50"></text></g><g><title>unlock_page_memcg (4 samples, 0.01%)</title><rect x="44.8594%" y="373" width="0.0120%" height="15" fill="rgb(220,20,13)" fg:x="14979" fg:w="4"/><text x="45.1094%" y="383.50"></text></g><g><title>kmem_cache_free (8 samples, 0.02%)</title><rect x="45.1738%" y="357" width="0.0240%" height="15" fill="rgb(210,164,35)" fg:x="15084" fg:w="8"/><text x="45.4238%" y="367.50"></text></g><g><title>kmem_cache_free.part.0 (57 samples, 0.17%)</title><rect x="45.1978%" y="357" width="0.1707%" height="15" fill="rgb(248,109,41)" fg:x="15092" fg:w="57"/><text x="45.4478%" y="367.50"></text></g><g><title>__wake_up (5 samples, 0.01%)</title><rect x="45.4973%" y="341" width="0.0150%" height="15" fill="rgb(238,23,50)" fg:x="15192" fg:w="5"/><text x="45.7473%" y="351.50"></text></g><g><title>__wake_up_common (7 samples, 0.02%)</title><rect x="45.5722%" y="325" width="0.0210%" height="15" fill="rgb(211,48,49)" fg:x="15217" fg:w="7"/><text x="45.8222%" y="335.50"></text></g><g><title>_raw_spin_lock_irqsave (31 samples, 0.09%)</title><rect x="45.5931%" y="325" width="0.0928%" height="15" fill="rgb(223,36,21)" fg:x="15224" fg:w="31"/><text x="45.8431%" y="335.50"></text></g><g><title>__ext4_journal_stop (231 samples, 0.69%)</title><rect x="45.0481%" y="389" width="0.6918%" height="15" fill="rgb(207,123,46)" fg:x="15042" fg:w="231"/><text x="45.2981%" y="399.50"></text></g><g><title>jbd2_journal_stop (215 samples, 0.64%)</title><rect x="45.0960%" y="373" width="0.6439%" height="15" fill="rgb(240,218,32)" fg:x="15058" fg:w="215"/><text x="45.3460%" y="383.50"></text></g><g><title>stop_this_handle (124 samples, 0.37%)</title><rect x="45.3685%" y="357" width="0.3714%" height="15" fill="rgb(252,5,43)" fg:x="15149" fg:w="124"/><text x="45.6185%" y="367.50"></text></g><g><title>__wake_up_common_lock (76 samples, 0.23%)</title><rect x="45.5123%" y="341" width="0.2276%" height="15" fill="rgb(252,84,19)" fg:x="15197" fg:w="76"/><text x="45.7623%" y="351.50"></text></g><g><title>_raw_spin_unlock_irqrestore (18 samples, 0.05%)</title><rect x="45.6860%" y="325" width="0.0539%" height="15" fill="rgb(243,152,39)" fg:x="15255" fg:w="18"/><text x="45.9360%" y="335.50"></text></g><g><title>__raw_callee_save___pv_queued_spin_unlock (18 samples, 0.05%)</title><rect x="45.6860%" y="309" width="0.0539%" height="15" fill="rgb(234,160,15)" fg:x="15255" fg:w="18"/><text x="45.9360%" y="319.50"></text></g><g><title>ext4_journal_check_start (19 samples, 0.06%)</title><rect x="45.8477%" y="357" width="0.0569%" height="15" fill="rgb(237,34,20)" fg:x="15309" fg:w="19"/><text x="46.0977%" y="367.50"></text></g><g><title>memset_erms (22 samples, 0.07%)</title><rect x="46.2250%" y="325" width="0.0659%" height="15" fill="rgb(229,97,13)" fg:x="15435" fg:w="22"/><text x="46.4750%" y="335.50"></text></g><g><title>kmem_cache_alloc (90 samples, 0.27%)</title><rect x="46.0274%" y="341" width="0.2695%" height="15" fill="rgb(234,71,50)" fg:x="15369" fg:w="90"/><text x="46.2774%" y="351.50"></text></g><g><title>_raw_read_lock (24 samples, 0.07%)</title><rect x="46.5814%" y="325" width="0.0719%" height="15" fill="rgb(253,155,4)" fg:x="15554" fg:w="24"/><text x="46.8314%" y="335.50"></text></g><g><title>__ext4_journal_start_sb (328 samples, 0.98%)</title><rect x="45.8058%" y="373" width="0.9823%" height="15" fill="rgb(222,185,37)" fg:x="15295" fg:w="328"/><text x="46.0558%" y="383.50"></text></g><g><title>jbd2__journal_start (295 samples, 0.88%)</title><rect x="45.9046%" y="357" width="0.8835%" height="15" fill="rgb(251,177,13)" fg:x="15328" fg:w="295"/><text x="46.1546%" y="367.50"></text></g><g><title>start_this_handle (164 samples, 0.49%)</title><rect x="46.2969%" y="341" width="0.4912%" height="15" fill="rgb(250,179,40)" fg:x="15459" fg:w="164"/><text x="46.5469%" y="351.50"></text></g><g><title>add_transaction_credits (45 samples, 0.13%)</title><rect x="46.6533%" y="325" width="0.1348%" height="15" fill="rgb(242,44,2)" fg:x="15578" fg:w="45"/><text x="46.9033%" y="335.50"></text></g><g><title>__brelse (19 samples, 0.06%)</title><rect x="47.4110%" y="341" width="0.0569%" height="15" fill="rgb(216,177,13)" fg:x="15831" fg:w="19"/><text x="47.6610%" y="351.50"></text></g><g><title>__ext4_handle_dirty_metadata (14 samples, 0.04%)</title><rect x="47.4679%" y="341" width="0.0419%" height="15" fill="rgb(216,106,43)" fg:x="15850" fg:w="14"/><text x="47.7179%" y="351.50"></text></g><g><title>jbd2_journal_dirty_metadata (4 samples, 0.01%)</title><rect x="47.4978%" y="325" width="0.0120%" height="15" fill="rgb(216,183,2)" fg:x="15860" fg:w="4"/><text x="47.7478%" y="335.50"></text></g><g><title>__raw_callee_save___pv_queued_spin_unlock (23 samples, 0.07%)</title><rect x="47.5098%" y="341" width="0.0689%" height="15" fill="rgb(249,75,3)" fg:x="15864" fg:w="23"/><text x="47.7598%" y="351.50"></text></g><g><title>_raw_spin_lock (14 samples, 0.04%)</title><rect x="47.5787%" y="341" width="0.0419%" height="15" fill="rgb(219,67,39)" fg:x="15887" fg:w="14"/><text x="47.8287%" y="351.50"></text></g><g><title>ext4_fc_track_template (32 samples, 0.10%)</title><rect x="47.6655%" y="325" width="0.0958%" height="15" fill="rgb(253,228,2)" fg:x="15916" fg:w="32"/><text x="47.9155%" y="335.50"></text></g><g><title>ext4_fc_track_inode (57 samples, 0.17%)</title><rect x="47.6236%" y="341" width="0.1707%" height="15" fill="rgb(235,138,27)" fg:x="15902" fg:w="57"/><text x="47.8736%" y="351.50"></text></g><g><title>ext4_inode_journal_mode (11 samples, 0.03%)</title><rect x="47.7614%" y="325" width="0.0329%" height="15" fill="rgb(236,97,51)" fg:x="15948" fg:w="11"/><text x="48.0114%" y="335.50"></text></g><g><title>__crc32c_le (11 samples, 0.03%)</title><rect x="48.0818%" y="293" width="0.0329%" height="15" fill="rgb(240,80,30)" fg:x="16055" fg:w="11"/><text x="48.3318%" y="303.50"></text></g><g><title>chksum_update (692 samples, 2.07%)</title><rect x="47.9560%" y="309" width="2.0724%" height="15" fill="rgb(230,178,19)" fg:x="16013" fg:w="692"/><text x="48.2060%" y="319.50">c..</text></g><g><title>crc32_body (639 samples, 1.91%)</title><rect x="48.1148%" y="293" width="1.9137%" height="15" fill="rgb(210,190,27)" fg:x="16066" fg:w="639"/><text x="48.3648%" y="303.50">c..</text></g><g><title>ext4_inode_csum_set (783 samples, 2.34%)</title><rect x="47.7943%" y="341" width="2.3449%" height="15" fill="rgb(222,107,31)" fg:x="15959" fg:w="783"/><text x="48.0443%" y="351.50">e..</text></g><g><title>ext4_inode_csum (768 samples, 2.30%)</title><rect x="47.8392%" y="325" width="2.3000%" height="15" fill="rgb(216,127,34)" fg:x="15974" fg:w="768"/><text x="48.0892%" y="335.50">e..</text></g><g><title>crypto_shash_update (37 samples, 0.11%)</title><rect x="50.0285%" y="309" width="0.1108%" height="15" fill="rgb(234,116,52)" fg:x="16705" fg:w="37"/><text x="50.2785%" y="319.50"></text></g><g><title>ext4_mark_iloc_dirty (1,133 samples, 3.39%)</title><rect x="46.8180%" y="357" width="3.3931%" height="15" fill="rgb(222,124,15)" fg:x="15633" fg:w="1133"/><text x="47.0680%" y="367.50">ext..</text></g><g><title>map_id_up (22 samples, 0.07%)</title><rect x="50.1452%" y="341" width="0.0659%" height="15" fill="rgb(231,179,28)" fg:x="16744" fg:w="22"/><text x="50.3952%" y="351.50"></text></g><g><title>errseq_check (6 samples, 0.02%)</title><rect x="50.2980%" y="325" width="0.0180%" height="15" fill="rgb(226,93,45)" fg:x="16795" fg:w="6"/><text x="50.5480%" y="335.50"></text></g><g><title>__ext4_journal_get_write_access (65 samples, 0.19%)</title><rect x="50.2441%" y="341" width="0.1947%" height="15" fill="rgb(215,8,51)" fg:x="16777" fg:w="65"/><text x="50.4941%" y="351.50"></text></g><g><title>jbd2_journal_get_write_access (41 samples, 0.12%)</title><rect x="50.3160%" y="325" width="0.1228%" height="15" fill="rgb(223,106,5)" fg:x="16801" fg:w="41"/><text x="50.5660%" y="335.50"></text></g><g><title>jbd2_write_access_granted.part.0 (33 samples, 0.10%)</title><rect x="50.3399%" y="309" width="0.0988%" height="15" fill="rgb(250,191,5)" fg:x="16809" fg:w="33"/><text x="50.5899%" y="319.50"></text></g><g><title>__getblk_gfp (73 samples, 0.22%)</title><rect x="50.7352%" y="309" width="0.2186%" height="15" fill="rgb(242,132,44)" fg:x="16941" fg:w="73"/><text x="50.9852%" y="319.50"></text></g><g><title>__find_get_block (61 samples, 0.18%)</title><rect x="50.7712%" y="293" width="0.1827%" height="15" fill="rgb(251,152,29)" fg:x="16953" fg:w="61"/><text x="51.0212%" y="303.50"></text></g><g><title>mark_page_accessed (16 samples, 0.05%)</title><rect x="50.9059%" y="277" width="0.0479%" height="15" fill="rgb(218,179,5)" fg:x="16998" fg:w="16"/><text x="51.1559%" y="287.50"></text></g><g><title>ext4_get_group_desc (34 samples, 0.10%)</title><rect x="50.9538%" y="309" width="0.1018%" height="15" fill="rgb(227,67,19)" fg:x="17014" fg:w="34"/><text x="51.2038%" y="319.50"></text></g><g><title>__mark_inode_dirty (2,071 samples, 6.20%)</title><rect x="44.8714%" y="405" width="6.2023%" height="15" fill="rgb(233,119,31)" fg:x="14983" fg:w="2071"/><text x="45.1214%" y="415.50">__mark_i..</text></g><g><title>ext4_dirty_inode (1,781 samples, 5.33%)</title><rect x="45.7399%" y="389" width="5.3338%" height="15" fill="rgb(241,120,22)" fg:x="15273" fg:w="1781"/><text x="45.9899%" y="399.50">ext4_di..</text></g><g><title>__ext4_mark_inode_dirty (1,431 samples, 4.29%)</title><rect x="46.7881%" y="373" width="4.2856%" height="15" fill="rgb(224,102,30)" fg:x="15623" fg:w="1431"/><text x="47.0381%" y="383.50">__ext..</text></g><g><title>ext4_reserve_inode_write (288 samples, 0.86%)</title><rect x="50.2111%" y="357" width="0.8625%" height="15" fill="rgb(210,164,37)" fg:x="16766" fg:w="288"/><text x="50.4611%" y="367.50"></text></g><g><title>ext4_get_inode_loc (212 samples, 0.63%)</title><rect x="50.4387%" y="341" width="0.6349%" height="15" fill="rgb(226,191,16)" fg:x="16842" fg:w="212"/><text x="50.6887%" y="351.50"></text></g><g><title>__ext4_get_inode_loc (201 samples, 0.60%)</title><rect x="50.4717%" y="325" width="0.6020%" height="15" fill="rgb(214,40,45)" fg:x="16853" fg:w="201"/><text x="50.7217%" y="335.50"></text></g><g><title>ext4_inode_table (6 samples, 0.02%)</title><rect x="51.0557%" y="309" width="0.0180%" height="15" fill="rgb(244,29,26)" fg:x="17048" fg:w="6"/><text x="51.3057%" y="319.50"></text></g><g><title>generic_perform_write (3,117 samples, 9.33%)</title><rect x="41.8226%" y="437" width="9.3349%" height="15" fill="rgb(216,16,5)" fg:x="13965" fg:w="3117"/><text x="42.0726%" y="447.50">generic_perfo..</text></g><g><title>generic_write_end (2,236 samples, 6.70%)</title><rect x="44.4611%" y="421" width="6.6964%" height="15" fill="rgb(249,76,35)" fg:x="14846" fg:w="2236"/><text x="44.7111%" y="431.50">generic_w..</text></g><g><title>unlock_page (28 samples, 0.08%)</title><rect x="51.0736%" y="405" width="0.0839%" height="15" fill="rgb(207,11,44)" fg:x="17054" fg:w="28"/><text x="51.3236%" y="415.50"></text></g><g><title>ext4_buffered_write_iter (3,281 samples, 9.83%)</title><rect x="41.3824%" y="453" width="9.8260%" height="15" fill="rgb(228,190,49)" fg:x="13818" fg:w="3281"/><text x="41.6324%" y="463.50">ext4_buffered_..</text></g><g><title>up_write (17 samples, 0.05%)</title><rect x="51.1575%" y="437" width="0.0509%" height="15" fill="rgb(214,173,12)" fg:x="17082" fg:w="17"/><text x="51.4075%" y="447.50"></text></g><g><title>ext4_file_write_iter (32 samples, 0.10%)</title><rect x="51.2084%" y="453" width="0.0958%" height="15" fill="rgb(218,26,35)" fg:x="17099" fg:w="32"/><text x="51.4584%" y="463.50"></text></g><g><title>new_sync_write (3,338 samples, 10.00%)</title><rect x="41.3225%" y="469" width="9.9967%" height="15" fill="rgb(220,200,19)" fg:x="13798" fg:w="3338"/><text x="41.5725%" y="479.50">new_sync_write</text></g><g><title>iov_iter_init (5 samples, 0.01%)</title><rect x="51.3042%" y="453" width="0.0150%" height="15" fill="rgb(239,95,49)" fg:x="17131" fg:w="5"/><text x="51.5542%" y="463.50"></text></g><g><title>rw_verify_area (4 samples, 0.01%)</title><rect x="51.3192%" y="469" width="0.0120%" height="15" fill="rgb(235,85,53)" fg:x="17136" fg:w="4"/><text x="51.5692%" y="479.50"></text></g><g><title>ksys_write (3,650 samples, 10.93%)</title><rect x="40.4241%" y="501" width="10.9311%" height="15" fill="rgb(233,133,31)" fg:x="13498" fg:w="3650"/><text x="40.6741%" y="511.50">ksys_write</text></g><g><title>vfs_write (3,464 samples, 10.37%)</title><rect x="40.9811%" y="485" width="10.3741%" height="15" fill="rgb(218,25,20)" fg:x="13684" fg:w="3464"/><text x="41.2311%" y="495.50">vfs_write</text></g><g><title>security_file_permission (8 samples, 0.02%)</title><rect x="51.3312%" y="469" width="0.0240%" height="15" fill="rgb(252,210,38)" fg:x="17140" fg:w="8"/><text x="51.5812%" y="479.50"></text></g><g><title>syscall_enter_from_user_mode (8 samples, 0.02%)</title><rect x="51.3552%" y="501" width="0.0240%" height="15" fill="rgb(242,134,21)" fg:x="17148" fg:w="8"/><text x="51.6052%" y="511.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (3,701 samples, 11.08%)</title><rect x="40.3522%" y="533" width="11.0838%" height="15" fill="rgb(213,28,48)" fg:x="13474" fg:w="3701"/><text x="40.6022%" y="543.50">entry_SYSCALL_64..</text></g><g><title>do_syscall_64 (3,691 samples, 11.05%)</title><rect x="40.3821%" y="517" width="11.0539%" height="15" fill="rgb(250,196,2)" fg:x="13484" fg:w="3691"/><text x="40.6321%" y="527.50">do_syscall_64</text></g><g><title>syscall_exit_to_user_mode (19 samples, 0.06%)</title><rect x="51.3791%" y="501" width="0.0569%" height="15" fill="rgb(227,5,17)" fg:x="17156" fg:w="19"/><text x="51.6291%" y="511.50"></text></g><g><title>exit_to_user_mode_prepare (11 samples, 0.03%)</title><rect x="51.4031%" y="485" width="0.0329%" height="15" fill="rgb(221,226,24)" fg:x="17164" fg:w="11"/><text x="51.6531%" y="495.50"></text></g><g><title>&lt;std::io::stdio::StdoutRaw as std::io::Write&gt;::write_all (3,980 samples, 11.92%)</title><rect x="39.5675%" y="565" width="11.9194%" height="15" fill="rgb(211,5,48)" fg:x="13212" fg:w="3980"/><text x="39.8175%" y="575.50">&lt;std::io::stdio::S..</text></g><g><title>__write (3,922 samples, 11.75%)</title><rect x="39.7412%" y="549" width="11.7457%" height="15" fill="rgb(219,150,6)" fg:x="13270" fg:w="3922"/><text x="39.9912%" y="559.50">__write</text></g><g><title>syscall_return_via_sysret (17 samples, 0.05%)</title><rect x="51.4360%" y="533" width="0.0509%" height="15" fill="rgb(251,46,16)" fg:x="17175" fg:w="17"/><text x="51.6860%" y="543.50"></text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write_all (4,324 samples, 12.95%)</title><rect x="39.0045%" y="613" width="12.9496%" height="15" fill="rgb(220,204,40)" fg:x="13024" fg:w="4324"/><text x="39.2545%" y="623.50">&lt;std::io::stdio::St..</text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_all (4,303 samples, 12.89%)</title><rect x="39.0674%" y="597" width="12.8867%" height="15" fill="rgb(211,85,2)" fg:x="13045" fg:w="4303"/><text x="39.3174%" y="607.50">&lt;&amp;std::io::stdio::S..</text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (4,219 samples, 12.64%)</title><rect x="39.3190%" y="581" width="12.6351%" height="15" fill="rgb(229,17,7)" fg:x="13129" fg:w="4219"/><text x="39.5690%" y="591.50">&lt;std::io::stdio::St..</text></g><g><title>[libc.so.6] (156 samples, 0.47%)</title><rect x="51.4869%" y="565" width="0.4672%" height="15" fill="rgb(239,72,28)" fg:x="17192" fg:w="156"/><text x="51.7369%" y="575.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_fmt (13 samples, 0.04%)</title><rect x="52.5711%" y="597" width="0.0389%" height="15" fill="rgb(230,47,54)" fg:x="17554" fg:w="13"/><text x="52.8211%" y="607.50"></text></g><g><title>&lt;tracing_core::event::Event as tracing_log::NormalizeEvent&gt;::normalized_metadata (57 samples, 0.17%)</title><rect x="52.6100%" y="597" width="0.1707%" height="15" fill="rgb(214,50,8)" fg:x="17567" fg:w="57"/><text x="52.8600%" y="607.50"></text></g><g><title>tracing_log::level_to_cs (29 samples, 0.09%)</title><rect x="52.6938%" y="581" width="0.0868%" height="15" fill="rgb(216,198,43)" fg:x="17595" fg:w="29"/><text x="52.9438%" y="591.50"></text></g><g><title>&lt;tracing_core::event::Event as tracing_subscriber::field::RecordFields&gt;::record (9 samples, 0.03%)</title><rect x="52.7807%" y="597" width="0.0270%" height="15" fill="rgb(234,20,35)" fg:x="17624" fg:w="9"/><text x="53.0307%" y="607.50"></text></g><g><title>&lt;tracing_subscriber::fmt::time::datetime::DateTime as core::convert::From&lt;std::time::SystemTime&gt;&gt;::from (108 samples, 0.32%)</title><rect x="52.8645%" y="581" width="0.3234%" height="15" fill="rgb(254,45,19)" fg:x="17652" fg:w="108"/><text x="53.1145%" y="591.50"></text></g><g><title>std::time::SystemTime::duration_since (25 samples, 0.07%)</title><rect x="53.1131%" y="565" width="0.0749%" height="15" fill="rgb(219,14,44)" fg:x="17735" fg:w="25"/><text x="53.3631%" y="575.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::sub_timespec (12 samples, 0.04%)</title><rect x="53.1520%" y="549" width="0.0359%" height="15" fill="rgb(217,220,26)" fg:x="17748" fg:w="12"/><text x="53.4020%" y="559.50"></text></g><g><title>core::fmt::Formatter::write_fmt (14 samples, 0.04%)</title><rect x="53.3856%" y="549" width="0.0419%" height="15" fill="rgb(213,158,28)" fg:x="17826" fg:w="14"/><text x="53.6356%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (104 samples, 0.31%)</title><rect x="53.8888%" y="533" width="0.3115%" height="15" fill="rgb(252,51,52)" fg:x="17994" fg:w="104"/><text x="54.1388%" y="543.50"></text></g><g><title>[libc.so.6] (52 samples, 0.16%)</title><rect x="54.0445%" y="517" width="0.1557%" height="15" fill="rgb(246,89,16)" fg:x="18046" fg:w="52"/><text x="54.2945%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (14 samples, 0.04%)</title><rect x="54.3859%" y="517" width="0.0419%" height="15" fill="rgb(216,158,49)" fg:x="18160" fg:w="14"/><text x="54.6359%" y="527.50"></text></g><g><title>[libc.so.6] (5 samples, 0.01%)</title><rect x="54.4129%" y="501" width="0.0150%" height="15" fill="rgb(236,107,19)" fg:x="18169" fg:w="5"/><text x="54.6629%" y="511.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for isize&gt;::fmt (122 samples, 0.37%)</title><rect x="54.2002%" y="533" width="0.3654%" height="15" fill="rgb(228,185,30)" fg:x="18098" fg:w="122"/><text x="54.4502%" y="543.50"></text></g><g><title>core::fmt::Formatter::pad_integral (46 samples, 0.14%)</title><rect x="54.4278%" y="517" width="0.1378%" height="15" fill="rgb(246,134,8)" fg:x="18174" fg:w="46"/><text x="54.6778%" y="527.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (15 samples, 0.04%)</title><rect x="54.5207%" y="501" width="0.0449%" height="15" fill="rgb(214,143,50)" fg:x="18205" fg:w="15"/><text x="54.7707%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (11 samples, 0.03%)</title><rect x="54.7153%" y="517" width="0.0329%" height="15" fill="rgb(228,75,8)" fg:x="18270" fg:w="11"/><text x="54.9653%" y="527.50"></text></g><g><title>[libc.so.6] (5 samples, 0.01%)</title><rect x="54.7333%" y="501" width="0.0150%" height="15" fill="rgb(207,175,4)" fg:x="18276" fg:w="5"/><text x="54.9833%" y="511.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (88 samples, 0.26%)</title><rect x="54.5656%" y="533" width="0.2635%" height="15" fill="rgb(205,108,24)" fg:x="18220" fg:w="88"/><text x="54.8156%" y="543.50"></text></g><g><title>core::fmt::Formatter::pad_integral (27 samples, 0.08%)</title><rect x="54.7483%" y="517" width="0.0809%" height="15" fill="rgb(244,120,49)" fg:x="18281" fg:w="27"/><text x="54.9983%" y="527.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (6 samples, 0.02%)</title><rect x="54.8112%" y="501" width="0.0180%" height="15" fill="rgb(223,47,38)" fg:x="18302" fg:w="6"/><text x="55.0612%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (28 samples, 0.08%)</title><rect x="55.0508%" y="517" width="0.0839%" height="15" fill="rgb(229,179,11)" fg:x="18382" fg:w="28"/><text x="55.3008%" y="527.50"></text></g><g><title>[libc.so.6] (15 samples, 0.04%)</title><rect x="55.0897%" y="501" width="0.0449%" height="15" fill="rgb(231,122,1)" fg:x="18395" fg:w="15"/><text x="55.3397%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_char (37 samples, 0.11%)</title><rect x="55.4071%" y="501" width="0.1108%" height="15" fill="rgb(245,119,9)" fg:x="18501" fg:w="37"/><text x="55.6571%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (44 samples, 0.13%)</title><rect x="55.5180%" y="501" width="0.1318%" height="15" fill="rgb(241,163,25)" fg:x="18538" fg:w="44"/><text x="55.7680%" y="511.50"></text></g><g><title>[libc.so.6] (17 samples, 0.05%)</title><rect x="55.5988%" y="485" width="0.0509%" height="15" fill="rgb(217,214,3)" fg:x="18565" fg:w="17"/><text x="55.8488%" y="495.50"></text></g><g><title>core::fmt::write (847 samples, 2.54%)</title><rect x="53.1880%" y="581" width="2.5366%" height="15" fill="rgb(240,86,28)" fg:x="17760" fg:w="847"/><text x="53.4380%" y="591.50">co..</text></g><g><title>&lt;tracing_subscriber::fmt::time::datetime::DateTime as core::fmt::Display&gt;::fmt (830 samples, 2.49%)</title><rect x="53.2389%" y="565" width="2.4857%" height="15" fill="rgb(215,47,9)" fg:x="17777" fg:w="830"/><text x="53.4889%" y="575.50">&lt;t..</text></g><g><title>core::fmt::write (767 samples, 2.30%)</title><rect x="53.4276%" y="549" width="2.2970%" height="15" fill="rgb(252,25,45)" fg:x="17840" fg:w="767"/><text x="53.6776%" y="559.50">c..</text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u8&gt;::fmt (299 samples, 0.90%)</title><rect x="54.8291%" y="533" width="0.8955%" height="15" fill="rgb(251,164,9)" fg:x="18308" fg:w="299"/><text x="55.0791%" y="543.50"></text></g><g><title>core::fmt::Formatter::pad_integral (197 samples, 0.59%)</title><rect x="55.1346%" y="517" width="0.5900%" height="15" fill="rgb(233,194,0)" fg:x="18410" fg:w="197"/><text x="55.3846%" y="527.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (24 samples, 0.07%)</title><rect x="55.6527%" y="501" width="0.0719%" height="15" fill="rgb(249,111,24)" fg:x="18583" fg:w="24"/><text x="55.9027%" y="511.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (139 samples, 0.42%)</title><rect x="55.7246%" y="581" width="0.4163%" height="15" fill="rgb(250,223,3)" fg:x="18607" fg:w="139"/><text x="55.9746%" y="591.50"></text></g><g><title>clock_gettime (129 samples, 0.39%)</title><rect x="55.7545%" y="565" width="0.3863%" height="15" fill="rgb(236,178,37)" fg:x="18617" fg:w="129"/><text x="56.0045%" y="575.50"></text></g><g><title>__vdso_clock_gettime (89 samples, 0.27%)</title><rect x="55.8743%" y="549" width="0.2665%" height="15" fill="rgb(241,158,50)" fg:x="18657" fg:w="89"/><text x="56.1243%" y="559.50"></text></g><g><title>&lt;tracing_subscriber::fmt::time::SystemTime as tracing_subscriber::fmt::time::FormatTime&gt;::format_time (1,121 samples, 3.36%)</title><rect x="52.8076%" y="597" width="3.3572%" height="15" fill="rgb(213,121,41)" fg:x="17633" fg:w="1121"/><text x="53.0576%" y="607.50">&lt;tr..</text></g><g><title>std::time::SystemTime::now (8 samples, 0.02%)</title><rect x="56.1409%" y="581" width="0.0240%" height="15" fill="rgb(240,92,3)" fg:x="18746" fg:w="8"/><text x="56.3909%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (56 samples, 0.17%)</title><rect x="56.6440%" y="581" width="0.1677%" height="15" fill="rgb(205,123,3)" fg:x="18914" fg:w="56"/><text x="56.8940%" y="591.50"></text></g><g><title>[libc.so.6] (24 samples, 0.07%)</title><rect x="56.7398%" y="565" width="0.0719%" height="15" fill="rgb(205,97,47)" fg:x="18946" fg:w="24"/><text x="56.9898%" y="575.50"></text></g><g><title>&lt;nu_ansi_term::ansi::Prefix as core::fmt::Display&gt;::fmt (7 samples, 0.02%)</title><rect x="56.8117%" y="581" width="0.0210%" height="15" fill="rgb(247,152,14)" fg:x="18970" fg:w="7"/><text x="57.0617%" y="591.50"></text></g><g><title>core::fmt::Formatter::write_fmt (5 samples, 0.01%)</title><rect x="56.8716%" y="565" width="0.0150%" height="15" fill="rgb(248,195,53)" fg:x="18990" fg:w="5"/><text x="57.1216%" y="575.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (12 samples, 0.04%)</title><rect x="56.9225%" y="549" width="0.0359%" height="15" fill="rgb(226,201,16)" fg:x="19007" fg:w="12"/><text x="57.1725%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (25 samples, 0.07%)</title><rect x="56.9585%" y="549" width="0.0749%" height="15" fill="rgb(205,98,0)" fg:x="19019" fg:w="25"/><text x="57.2085%" y="559.50"></text></g><g><title>[libc.so.6] (15 samples, 0.04%)</title><rect x="56.9884%" y="533" width="0.0449%" height="15" fill="rgb(214,191,48)" fg:x="19029" fg:w="15"/><text x="57.2384%" y="543.50"></text></g><g><title>&lt;nu_ansi_term::ansi::Suffix as core::fmt::Display&gt;::fmt (82 samples, 0.25%)</title><rect x="56.8327%" y="581" width="0.2456%" height="15" fill="rgb(237,112,39)" fg:x="18977" fg:w="82"/><text x="57.0827%" y="591.50"></text></g><g><title>core::fmt::write (64 samples, 0.19%)</title><rect x="56.8866%" y="565" width="0.1917%" height="15" fill="rgb(247,203,27)" fg:x="18995" fg:w="64"/><text x="57.1366%" y="575.50"></text></g><g><title>core::fmt::Formatter::pad (12 samples, 0.04%)</title><rect x="57.0423%" y="549" width="0.0359%" height="15" fill="rgb(235,124,28)" fg:x="19047" fg:w="12"/><text x="57.2923%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (47 samples, 0.14%)</title><rect x="57.2070%" y="565" width="0.1408%" height="15" fill="rgb(208,207,46)" fg:x="19102" fg:w="47"/><text x="57.4570%" y="575.50"></text></g><g><title>[libc.so.6] (32 samples, 0.10%)</title><rect x="57.2520%" y="549" width="0.0958%" height="15" fill="rgb(234,176,4)" fg:x="19117" fg:w="32"/><text x="57.5020%" y="559.50"></text></g><g><title>&lt;core::fmt::Formatter as core::fmt::Write&gt;::write_str (5 samples, 0.01%)</title><rect x="57.3478%" y="565" width="0.0150%" height="15" fill="rgb(230,133,28)" fg:x="19149" fg:w="5"/><text x="57.5978%" y="575.50"></text></g><g><title>core::fmt::Formatter::write_fmt (4 samples, 0.01%)</title><rect x="57.3628%" y="565" width="0.0120%" height="15" fill="rgb(211,137,40)" fg:x="19154" fg:w="4"/><text x="57.6128%" y="575.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (11 samples, 0.03%)</title><rect x="57.6892%" y="517" width="0.0329%" height="15" fill="rgb(254,35,13)" fg:x="19263" fg:w="11"/><text x="57.9392%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (26 samples, 0.08%)</title><rect x="57.7221%" y="517" width="0.0779%" height="15" fill="rgb(225,49,51)" fg:x="19274" fg:w="26"/><text x="57.9721%" y="527.50"></text></g><g><title>[libc.so.6] (9 samples, 0.03%)</title><rect x="57.7731%" y="501" width="0.0270%" height="15" fill="rgb(251,10,15)" fg:x="19291" fg:w="9"/><text x="58.0231%" y="511.50"></text></g><g><title>&lt;str as core::fmt::Display&gt;::fmt (8 samples, 0.02%)</title><rect x="57.8000%" y="517" width="0.0240%" height="15" fill="rgb(228,207,15)" fg:x="19300" fg:w="8"/><text x="58.0500%" y="527.50"></text></g><g><title>&lt;nu_ansi_term::ansi::Suffix as core::fmt::Display&gt;::fmt (115 samples, 0.34%)</title><rect x="57.5245%" y="549" width="0.3444%" height="15" fill="rgb(241,99,19)" fg:x="19208" fg:w="115"/><text x="57.7745%" y="559.50"></text></g><g><title>core::fmt::write (100 samples, 0.30%)</title><rect x="57.5694%" y="533" width="0.2995%" height="15" fill="rgb(207,104,49)" fg:x="19223" fg:w="100"/><text x="57.8194%" y="543.50"></text></g><g><title>core::fmt::Formatter::pad (15 samples, 0.04%)</title><rect x="57.8240%" y="517" width="0.0449%" height="15" fill="rgb(234,99,18)" fg:x="19308" fg:w="15"/><text x="58.0740%" y="527.50"></text></g><g><title>core::fmt::Formatter::write_fmt (11 samples, 0.03%)</title><rect x="58.0546%" y="533" width="0.0329%" height="15" fill="rgb(213,191,49)" fg:x="19385" fg:w="11"/><text x="58.3046%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_char (8 samples, 0.02%)</title><rect x="58.4109%" y="517" width="0.0240%" height="15" fill="rgb(210,226,19)" fg:x="19504" fg:w="8"/><text x="58.6609%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (41 samples, 0.12%)</title><rect x="58.4349%" y="517" width="0.1228%" height="15" fill="rgb(229,97,18)" fg:x="19512" fg:w="41"/><text x="58.6849%" y="527.50"></text></g><g><title>[libc.so.6] (19 samples, 0.06%)</title><rect x="58.5008%" y="501" width="0.0569%" height="15" fill="rgb(211,167,15)" fg:x="19534" fg:w="19"/><text x="58.7508%" y="511.50"></text></g><g><title>&lt;char as core::fmt::Display&gt;::fmt (10 samples, 0.03%)</title><rect x="58.5577%" y="517" width="0.0299%" height="15" fill="rgb(210,169,34)" fg:x="19553" fg:w="10"/><text x="58.8077%" y="527.50"></text></g><g><title>&lt;nu_ansi_term::display::AnsiGenericString&lt;str&gt; as core::fmt::Display&gt;::fmt (505 samples, 1.51%)</title><rect x="57.0783%" y="581" width="1.5124%" height="15" fill="rgb(241,121,31)" fg:x="19059" fg:w="505"/><text x="57.3283%" y="591.50"></text></g><g><title>core::fmt::write (406 samples, 1.22%)</title><rect x="57.3747%" y="565" width="1.2159%" height="15" fill="rgb(232,40,11)" fg:x="19158" fg:w="406"/><text x="57.6247%" y="575.50"></text></g><g><title>nu_ansi_term::ansi::&lt;impl nu_ansi_term::style::Style&gt;::write_prefix (240 samples, 0.72%)</title><rect x="57.8719%" y="549" width="0.7188%" height="15" fill="rgb(205,86,26)" fg:x="19324" fg:w="240"/><text x="58.1219%" y="559.50"></text></g><g><title>core::fmt::write (168 samples, 0.50%)</title><rect x="58.0875%" y="533" width="0.5031%" height="15" fill="rgb(231,126,28)" fg:x="19396" fg:w="168"/><text x="58.3375%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_fmt (4 samples, 0.01%)</title><rect x="58.7194%" y="565" width="0.0120%" height="15" fill="rgb(219,221,18)" fg:x="19607" fg:w="4"/><text x="58.9694%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (15 samples, 0.04%)</title><rect x="58.8632%" y="533" width="0.0449%" height="15" fill="rgb(211,40,0)" fg:x="19655" fg:w="15"/><text x="59.1132%" y="543.50"></text></g><g><title>[libc.so.6] (10 samples, 0.03%)</title><rect x="58.8781%" y="517" width="0.0299%" height="15" fill="rgb(239,85,43)" fg:x="19660" fg:w="10"/><text x="59.1281%" y="527.50"></text></g><g><title>&lt;core::fmt::Formatter as core::fmt::Write&gt;::write_str (7 samples, 0.02%)</title><rect x="58.9081%" y="533" width="0.0210%" height="15" fill="rgb(231,55,21)" fg:x="19670" fg:w="7"/><text x="59.1581%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_fmt (8 samples, 0.02%)</title><rect x="58.9291%" y="533" width="0.0240%" height="15" fill="rgb(225,184,43)" fg:x="19677" fg:w="8"/><text x="59.1791%" y="543.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (5 samples, 0.01%)</title><rect x="59.1597%" y="485" width="0.0150%" height="15" fill="rgb(251,158,41)" fg:x="19754" fg:w="5"/><text x="59.4097%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (18 samples, 0.05%)</title><rect x="59.1746%" y="485" width="0.0539%" height="15" fill="rgb(234,159,37)" fg:x="19759" fg:w="18"/><text x="59.4246%" y="495.50"></text></g><g><title>[libc.so.6] (8 samples, 0.02%)</title><rect x="59.2046%" y="469" width="0.0240%" height="15" fill="rgb(216,204,22)" fg:x="19769" fg:w="8"/><text x="59.4546%" y="479.50"></text></g><g><title>&lt;nu_ansi_term::ansi::Suffix as core::fmt::Display&gt;::fmt (63 samples, 0.19%)</title><rect x="59.0698%" y="517" width="0.1887%" height="15" fill="rgb(214,17,3)" fg:x="19724" fg:w="63"/><text x="59.3198%" y="527.50"></text></g><g><title>core::fmt::write (57 samples, 0.17%)</title><rect x="59.0878%" y="501" width="0.1707%" height="15" fill="rgb(212,111,17)" fg:x="19730" fg:w="57"/><text x="59.3378%" y="511.50"></text></g><g><title>core::fmt::Formatter::pad (8 samples, 0.02%)</title><rect x="59.2345%" y="485" width="0.0240%" height="15" fill="rgb(221,157,24)" fg:x="19779" fg:w="8"/><text x="59.4845%" y="495.50"></text></g><g><title>core::fmt::Formatter::write_fmt (10 samples, 0.03%)</title><rect x="59.3723%" y="501" width="0.0299%" height="15" fill="rgb(252,16,13)" fg:x="19825" fg:w="10"/><text x="59.6223%" y="511.50"></text></g><g><title>core::fmt::write (56 samples, 0.17%)</title><rect x="59.4022%" y="501" width="0.1677%" height="15" fill="rgb(221,62,2)" fg:x="19835" fg:w="56"/><text x="59.6522%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (29 samples, 0.09%)</title><rect x="59.4831%" y="485" width="0.0868%" height="15" fill="rgb(247,87,22)" fg:x="19862" fg:w="29"/><text x="59.7331%" y="495.50"></text></g><g><title>[libc.so.6] (18 samples, 0.05%)</title><rect x="59.5160%" y="469" width="0.0539%" height="15" fill="rgb(215,73,9)" fg:x="19873" fg:w="18"/><text x="59.7660%" y="479.50"></text></g><g><title>core::fmt::Formatter::write_fmt (6 samples, 0.02%)</title><rect x="59.6328%" y="485" width="0.0180%" height="15" fill="rgb(207,175,33)" fg:x="19912" fg:w="6"/><text x="59.8828%" y="495.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::FmtLevel as core::fmt::Display&gt;::fmt (388 samples, 1.16%)</title><rect x="58.5906%" y="581" width="1.1620%" height="15" fill="rgb(243,129,54)" fg:x="19564" fg:w="388"/><text x="58.8406%" y="591.50"></text></g><g><title>core::fmt::write (341 samples, 1.02%)</title><rect x="58.7314%" y="565" width="1.0212%" height="15" fill="rgb(227,119,45)" fg:x="19611" fg:w="341"/><text x="58.9814%" y="575.50"></text></g><g><title>&lt;nu_ansi_term::display::AnsiGenericString&lt;str&gt; as core::fmt::Display&gt;::fmt (326 samples, 0.98%)</title><rect x="58.7763%" y="549" width="0.9763%" height="15" fill="rgb(205,109,36)" fg:x="19626" fg:w="326"/><text x="59.0263%" y="559.50"></text></g><g><title>core::fmt::write (267 samples, 0.80%)</title><rect x="58.9530%" y="533" width="0.7996%" height="15" fill="rgb(205,6,39)" fg:x="19685" fg:w="267"/><text x="59.2030%" y="543.50"></text></g><g><title>nu_ansi_term::ansi::&lt;impl nu_ansi_term::style::Style&gt;::write_prefix (165 samples, 0.49%)</title><rect x="59.2585%" y="517" width="0.4941%" height="15" fill="rgb(221,32,16)" fg:x="19787" fg:w="165"/><text x="59.5085%" y="527.50"></text></g><g><title>nu_ansi_term::ansi::&lt;impl nu_ansi_term::style::Color&gt;::write_foreground_code (61 samples, 0.18%)</title><rect x="59.5699%" y="501" width="0.1827%" height="15" fill="rgb(228,144,50)" fg:x="19891" fg:w="61"/><text x="59.8199%" y="511.50"></text></g><g><title>core::fmt::write (34 samples, 0.10%)</title><rect x="59.6508%" y="485" width="0.1018%" height="15" fill="rgb(229,201,53)" fg:x="19918" fg:w="34"/><text x="59.9008%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (9 samples, 0.03%)</title><rect x="59.7257%" y="469" width="0.0270%" height="15" fill="rgb(249,153,27)" fg:x="19943" fg:w="9"/><text x="59.9757%" y="479.50"></text></g><g><title>core::fmt::Formatter::write_fmt (18 samples, 0.05%)</title><rect x="59.9233%" y="565" width="0.0539%" height="15" fill="rgb(227,106,25)" fg:x="20009" fg:w="18"/><text x="60.1733%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_char (18 samples, 0.05%)</title><rect x="60.1240%" y="549" width="0.0539%" height="15" fill="rgb(230,65,29)" fg:x="20076" fg:w="18"/><text x="60.3740%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (61 samples, 0.18%)</title><rect x="60.1779%" y="549" width="0.1827%" height="15" fill="rgb(221,57,46)" fg:x="20094" fg:w="61"/><text x="60.4279%" y="559.50"></text></g><g><title>[libc.so.6] (38 samples, 0.11%)</title><rect x="60.2468%" y="533" width="0.1138%" height="15" fill="rgb(229,161,17)" fg:x="20117" fg:w="38"/><text x="60.4968%" y="543.50"></text></g><g><title>core::fmt::write (1,411 samples, 4.23%)</title><rect x="56.1648%" y="597" width="4.2257%" height="15" fill="rgb(222,213,11)" fg:x="18754" fg:w="1411"/><text x="56.4148%" y="607.50">core:..</text></g><g><title>nu_ansi_term::ansi::&lt;impl nu_ansi_term::style::Style&gt;::write_prefix (213 samples, 0.64%)</title><rect x="59.7526%" y="581" width="0.6379%" height="15" fill="rgb(235,35,13)" fg:x="19952" fg:w="213"/><text x="60.0026%" y="591.50"></text></g><g><title>core::fmt::write (138 samples, 0.41%)</title><rect x="59.9772%" y="565" width="0.4133%" height="15" fill="rgb(233,158,34)" fg:x="20027" fg:w="138"/><text x="60.2272%" y="575.50"></text></g><g><title>&lt;char as core::fmt::Display&gt;::fmt (10 samples, 0.03%)</title><rect x="60.3606%" y="549" width="0.0299%" height="15" fill="rgb(215,151,48)" fg:x="20155" fg:w="10"/><text x="60.6106%" y="559.50"></text></g><g><title>&lt;core::fmt::Arguments as tracing_core::field::Value&gt;::record (19 samples, 0.06%)</title><rect x="60.4774%" y="581" width="0.0569%" height="15" fill="rgb(229,84,14)" fg:x="20194" fg:w="19"/><text x="60.7274%" y="591.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::Writer as core::fmt::Write&gt;::write_fmt (5 samples, 0.01%)</title><rect x="60.6211%" y="565" width="0.0150%" height="15" fill="rgb(229,68,14)" fg:x="20242" fg:w="5"/><text x="60.8711%" y="575.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (13 samples, 0.04%)</title><rect x="60.6840%" y="549" width="0.0389%" height="15" fill="rgb(243,106,26)" fg:x="20263" fg:w="13"/><text x="60.9340%" y="559.50"></text></g><g><title>&lt;core::fmt::Arguments as core::fmt::Debug&gt;::fmt (13 samples, 0.04%)</title><rect x="60.7229%" y="549" width="0.0389%" height="15" fill="rgb(206,45,38)" fg:x="20276" fg:w="13"/><text x="60.9729%" y="559.50"></text></g><g><title>core::fmt::write (117 samples, 0.35%)</title><rect x="60.6361%" y="565" width="0.3504%" height="15" fill="rgb(226,6,15)" fg:x="20247" fg:w="117"/><text x="60.8861%" y="575.50"></text></g><g><title>core::fmt::write (75 samples, 0.22%)</title><rect x="60.7619%" y="549" width="0.2246%" height="15" fill="rgb(232,22,54)" fg:x="20289" fg:w="75"/><text x="61.0119%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (51 samples, 0.15%)</title><rect x="60.8338%" y="533" width="0.1527%" height="15" fill="rgb(229,222,32)" fg:x="20313" fg:w="51"/><text x="61.0838%" y="543.50"></text></g><g><title>[libc.so.6] (47 samples, 0.14%)</title><rect x="60.8457%" y="517" width="0.1408%" height="15" fill="rgb(228,62,29)" fg:x="20317" fg:w="47"/><text x="61.0957%" y="527.50"></text></g><g><title>tracing_core::field::Field::name (30 samples, 0.09%)</title><rect x="60.9865%" y="565" width="0.0898%" height="15" fill="rgb(251,103,34)" fg:x="20364" fg:w="30"/><text x="61.2365%" y="575.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::DefaultVisitor as tracing_core::field::Visit&gt;::record_debug (185 samples, 0.55%)</title><rect x="60.5343%" y="581" width="0.5540%" height="15" fill="rgb(233,12,30)" fg:x="20213" fg:w="185"/><text x="60.7843%" y="591.50"></text></g><g><title>tracing_subscriber::fmt::format::Writer::write_fmt (4 samples, 0.01%)</title><rect x="61.0763%" y="565" width="0.0120%" height="15" fill="rgb(238,52,0)" fg:x="20394" fg:w="4"/><text x="61.3263%" y="575.50"></text></g><g><title>&lt;u64 as tracing_core::field::Value&gt;::record (4 samples, 0.01%)</title><rect x="61.0883%" y="581" width="0.0120%" height="15" fill="rgb(223,98,5)" fg:x="20398" fg:w="4"/><text x="61.3383%" y="591.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::Writer as core::fmt::Write&gt;::write_fmt (7 samples, 0.02%)</title><rect x="61.2351%" y="549" width="0.0210%" height="15" fill="rgb(228,75,37)" fg:x="20447" fg:w="7"/><text x="61.4851%" y="559.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (14 samples, 0.04%)</title><rect x="61.3279%" y="533" width="0.0419%" height="15" fill="rgb(205,115,49)" fg:x="20478" fg:w="14"/><text x="61.5779%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (6 samples, 0.02%)</title><rect x="61.3698%" y="533" width="0.0180%" height="15" fill="rgb(250,154,43)" fg:x="20492" fg:w="6"/><text x="61.6198%" y="543.50"></text></g><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="61.3758%" y="517" width="0.0120%" height="15" fill="rgb(226,43,29)" fg:x="20494" fg:w="4"/><text x="61.6258%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (12 samples, 0.04%)</title><rect x="61.4207%" y="517" width="0.0359%" height="15" fill="rgb(249,228,39)" fg:x="20509" fg:w="12"/><text x="61.6707%" y="527.50"></text></g><g><title>[libc.so.6] (7 samples, 0.02%)</title><rect x="61.4357%" y="501" width="0.0210%" height="15" fill="rgb(216,79,43)" fg:x="20514" fg:w="7"/><text x="61.6857%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (5 samples, 0.01%)</title><rect x="61.5825%" y="469" width="0.0150%" height="15" fill="rgb(228,95,12)" fg:x="20563" fg:w="5"/><text x="61.8325%" y="479.50"></text></g><g><title>&lt;nu_ansi_term::ansi::Suffix as core::fmt::Display&gt;::fmt (27 samples, 0.08%)</title><rect x="61.5375%" y="501" width="0.0809%" height="15" fill="rgb(249,221,15)" fg:x="20548" fg:w="27"/><text x="61.7875%" y="511.50"></text></g><g><title>core::fmt::write (22 samples, 0.07%)</title><rect x="61.5525%" y="485" width="0.0659%" height="15" fill="rgb(233,34,13)" fg:x="20553" fg:w="22"/><text x="61.8025%" y="495.50"></text></g><g><title>core::fmt::Formatter::pad (6 samples, 0.02%)</title><rect x="61.6004%" y="469" width="0.0180%" height="15" fill="rgb(214,103,39)" fg:x="20569" fg:w="6"/><text x="61.8504%" y="479.50"></text></g><g><title>core::fmt::Formatter::write_fmt (7 samples, 0.02%)</title><rect x="61.7262%" y="485" width="0.0210%" height="15" fill="rgb(251,126,39)" fg:x="20611" fg:w="7"/><text x="61.9762%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (15 samples, 0.04%)</title><rect x="61.8520%" y="469" width="0.0449%" height="15" fill="rgb(214,216,36)" fg:x="20653" fg:w="15"/><text x="62.1020%" y="479.50"></text></g><g><title>[libc.so.6] (9 samples, 0.03%)</title><rect x="61.8700%" y="453" width="0.0270%" height="15" fill="rgb(220,221,8)" fg:x="20659" fg:w="9"/><text x="62.1200%" y="463.50"></text></g><g><title>&lt;nu_ansi_term::display::AnsiGenericString&lt;str&gt; as core::fmt::Display&gt;::fmt (172 samples, 0.52%)</title><rect x="61.3878%" y="533" width="0.5151%" height="15" fill="rgb(240,216,3)" fg:x="20498" fg:w="172"/><text x="61.6378%" y="543.50"></text></g><g><title>core::fmt::write (145 samples, 0.43%)</title><rect x="61.4687%" y="517" width="0.4342%" height="15" fill="rgb(232,218,17)" fg:x="20525" fg:w="145"/><text x="61.7187%" y="527.50"></text></g><g><title>nu_ansi_term::ansi::&lt;impl nu_ansi_term::style::Style&gt;::write_prefix (95 samples, 0.28%)</title><rect x="61.6184%" y="501" width="0.2845%" height="15" fill="rgb(229,163,45)" fg:x="20575" fg:w="95"/><text x="61.8684%" y="511.50"></text></g><g><title>core::fmt::write (52 samples, 0.16%)</title><rect x="61.7472%" y="485" width="0.1557%" height="15" fill="rgb(231,110,42)" fg:x="20618" fg:w="52"/><text x="61.9972%" y="495.50"></text></g><g><title>core::fmt::num::&lt;impl core::fmt::Debug for u64&gt;::fmt (6 samples, 0.02%)</title><rect x="61.9029%" y="533" width="0.0180%" height="15" fill="rgb(208,170,48)" fg:x="20670" fg:w="6"/><text x="62.1529%" y="543.50"></text></g><g><title>core::fmt::write (252 samples, 0.75%)</title><rect x="61.2560%" y="549" width="0.7547%" height="15" fill="rgb(239,116,25)" fg:x="20454" fg:w="252"/><text x="61.5060%" y="559.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (30 samples, 0.09%)</title><rect x="61.9209%" y="533" width="0.0898%" height="15" fill="rgb(219,200,50)" fg:x="20676" fg:w="30"/><text x="62.1709%" y="543.50"></text></g><g><title>core::fmt::Formatter::pad_integral (11 samples, 0.03%)</title><rect x="61.9778%" y="517" width="0.0329%" height="15" fill="rgb(245,200,0)" fg:x="20695" fg:w="11"/><text x="62.2278%" y="527.50"></text></g><g><title>tracing_core::field::ValueSet::record (546 samples, 1.64%)</title><rect x="60.3905%" y="597" width="1.6352%" height="15" fill="rgb(245,119,33)" fg:x="20165" fg:w="546"/><text x="60.6405%" y="607.50"></text></g><g><title>tracing_core::field::Visit::record_u64 (309 samples, 0.93%)</title><rect x="61.1003%" y="581" width="0.9254%" height="15" fill="rgb(231,125,12)" fg:x="20402" fg:w="309"/><text x="61.3503%" y="591.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::DefaultVisitor as tracing_core::field::Visit&gt;::record_debug (300 samples, 0.90%)</title><rect x="61.1272%" y="565" width="0.8984%" height="15" fill="rgb(216,96,41)" fg:x="20411" fg:w="300"/><text x="61.3772%" y="575.50"></text></g><g><title>tracing_subscriber::fmt::format::Writer::write_fmt (4 samples, 0.01%)</title><rect x="62.0137%" y="549" width="0.0120%" height="15" fill="rgb(248,43,45)" fg:x="20707" fg:w="4"/><text x="62.2637%" y="559.50"></text></g><g><title>tracing_subscriber::fmt::format::Writer::write_fmt (37 samples, 0.11%)</title><rect x="62.0257%" y="597" width="0.1108%" height="15" fill="rgb(217,222,7)" fg:x="20711" fg:w="37"/><text x="62.2757%" y="607.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::Format&lt;tracing_subscriber::fmt::format::Full,T&gt; as tracing_subscriber::fmt::format::FormatEvent&lt;S,N&gt;&gt;::format_event (3,447 samples, 10.32%)</title><rect x="51.9541%" y="613" width="10.3231%" height="15" fill="rgb(233,28,6)" fg:x="17348" fg:w="3447"/><text x="52.2041%" y="623.50">&lt;tracing_subscr..</text></g><g><title>tracing_subscriber::layer::context::Context&lt;S&gt;::event_scope (47 samples, 0.14%)</title><rect x="62.1365%" y="597" width="0.1408%" height="15" fill="rgb(231,218,15)" fg:x="20748" fg:w="47"/><text x="62.3865%" y="607.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::current_span (35 samples, 0.10%)</title><rect x="62.1724%" y="581" width="0.1048%" height="15" fill="rgb(226,171,48)" fg:x="20760" fg:w="35"/><text x="62.4224%" y="591.50"></text></g><g><title>&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_event (7,858 samples, 23.53%)</title><rect x="38.7769%" y="629" width="23.5333%" height="15" fill="rgb(235,201,9)" fg:x="12948" fg:w="7858"/><text x="39.0269%" y="639.50">&lt;tracing_subscriber::fmt::fmt_layer::..</text></g><g><title>std::io::stdio::stdout (11 samples, 0.03%)</title><rect x="62.2773%" y="613" width="0.0329%" height="15" fill="rgb(217,80,15)" fg:x="20795" fg:w="11"/><text x="62.5273%" y="623.50"></text></g><g><title>&lt;tracing_subscriber::fmt::Subscriber&lt;N,E,F,W&gt; as tracing_core::subscriber::Subscriber&gt;::event_enabled (25 samples, 0.07%)</title><rect x="62.3791%" y="613" width="0.0749%" height="15" fill="rgb(219,152,8)" fg:x="20829" fg:w="25"/><text x="62.6291%" y="623.50"></text></g><g><title>&lt;tokio_util::codec::framed_impl::FramedImpl&lt;T,U,W&gt; as futures_sink::Sink&lt;I&gt;&gt;::poll_flush (12,199 samples, 36.53%)</title><rect x="25.9681%" y="661" width="36.5338%" height="15" fill="rgb(243,107,38)" fg:x="8671" fg:w="12199"/><text x="26.2181%" y="671.50">&lt;tokio_util::codec::framed_impl::FramedImpl&lt;T,U,W&gt; as futur..</text></g><g><title>tracing_core::event::Event::dispatch (7,965 samples, 23.85%)</title><rect x="38.6481%" y="645" width="23.8537%" height="15" fill="rgb(231,17,5)" fg:x="12905" fg:w="7965"/><text x="38.8981%" y="655.50">tracing_core::event::Event::dispatch</text></g><g><title>tracing_core::dispatcher::get_default (64 samples, 0.19%)</title><rect x="62.3102%" y="629" width="0.1917%" height="15" fill="rgb(209,25,54)" fg:x="20806" fg:w="64"/><text x="62.5602%" y="639.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::event_enabled (16 samples, 0.05%)</title><rect x="62.4540%" y="613" width="0.0479%" height="15" fill="rgb(219,0,2)" fg:x="20854" fg:w="16"/><text x="62.7040%" y="623.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::put (53 samples, 0.16%)</title><rect x="62.5378%" y="645" width="0.1587%" height="15" fill="rgb(246,9,5)" fg:x="20882" fg:w="53"/><text x="62.7878%" y="655.50"></text></g><g><title>[libc.so.6] (43 samples, 0.13%)</title><rect x="62.5678%" y="629" width="0.1288%" height="15" fill="rgb(226,159,4)" fg:x="20892" fg:w="43"/><text x="62.8178%" y="639.50"></text></g><g><title>__libc_free (57 samples, 0.17%)</title><rect x="62.6965%" y="645" width="0.1707%" height="15" fill="rgb(219,175,34)" fg:x="20935" fg:w="57"/><text x="62.9465%" y="655.50"></text></g><g><title>[libc.so.6] (22 samples, 0.07%)</title><rect x="62.8014%" y="629" width="0.0659%" height="15" fill="rgb(236,10,46)" fg:x="20970" fg:w="22"/><text x="63.0514%" y="639.50"></text></g><g><title>&lt;tun::async::codec::TunPacketCodec as tokio_util::codec::encoder::Encoder&lt;tun::async::codec::TunPacket&gt;&gt;::encode (135 samples, 0.40%)</title><rect x="62.5019%" y="661" width="0.4043%" height="15" fill="rgb(240,211,16)" fg:x="20870" fg:w="135"/><text x="62.7519%" y="671.50"></text></g><g><title>bytes::bytes::promotable_even_drop (9 samples, 0.03%)</title><rect x="62.8792%" y="645" width="0.0270%" height="15" fill="rgb(205,3,43)" fg:x="20996" fg:w="9"/><text x="63.1292%" y="655.50"></text></g><g><title>__libc_free (9 samples, 0.03%)</title><rect x="62.9062%" y="661" width="0.0270%" height="15" fill="rgb(245,7,22)" fg:x="21005" fg:w="9"/><text x="63.1562%" y="671.50"></text></g><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="62.9211%" y="645" width="0.0120%" height="15" fill="rgb(239,132,32)" fg:x="21010" fg:w="4"/><text x="63.1711%" y="655.50"></text></g><g><title>malloc (34 samples, 0.10%)</title><rect x="63.0799%" y="645" width="0.1018%" height="15" fill="rgb(228,202,34)" fg:x="21063" fg:w="34"/><text x="63.3299%" y="655.50"></text></g><g><title>[libc.so.6] (9 samples, 0.03%)</title><rect x="63.1547%" y="629" width="0.0270%" height="15" fill="rgb(254,200,22)" fg:x="21088" fg:w="9"/><text x="63.4047%" y="639.50"></text></g><g><title>tokio::runtime::task::waker::clone_waker (5 samples, 0.01%)</title><rect x="63.1817%" y="645" width="0.0150%" height="15" fill="rgb(219,10,39)" fg:x="21097" fg:w="5"/><text x="63.4317%" y="655.50"></text></g><g><title>futures_util::lock::bilock::BiLock&lt;T&gt;::poll_lock (88 samples, 0.26%)</title><rect x="62.9361%" y="661" width="0.2635%" height="15" fill="rgb(226,210,39)" fg:x="21015" fg:w="88"/><text x="63.1861%" y="671.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::schedule (15 samples, 0.04%)</title><rect x="63.2116%" y="645" width="0.0449%" height="15" fill="rgb(208,219,16)" fg:x="21107" fg:w="15"/><text x="63.4616%" y="655.50"></text></g><g><title>tokio::runtime::context::with_scheduler (11 samples, 0.03%)</title><rect x="63.2236%" y="629" width="0.0329%" height="15" fill="rgb(216,158,51)" fg:x="21111" fg:w="11"/><text x="63.4736%" y="639.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_local (4 samples, 0.01%)</title><rect x="63.2446%" y="613" width="0.0120%" height="15" fill="rgb(233,14,44)" fg:x="21118" fg:w="4"/><text x="63.4946%" y="623.50"></text></g><g><title>&lt;futures_util::stream::stream::split::SplitSink&lt;S,Item&gt; as futures_sink::Sink&lt;Item&gt;&gt;::poll_flush (13,920 samples, 41.69%)</title><rect x="21.5777%" y="677" width="41.6879%" height="15" fill="rgb(237,97,39)" fg:x="7205" fg:w="13920"/><text x="21.8277%" y="687.50">&lt;futures_util::stream::stream::split::SplitSink&lt;S,Item&gt; as futures_s..</text></g><g><title>tokio::runtime::task::waker::wake_by_val (22 samples, 0.07%)</title><rect x="63.1997%" y="661" width="0.0659%" height="15" fill="rgb(218,198,43)" fg:x="21103" fg:w="22"/><text x="63.4497%" y="671.50"></text></g><g><title>&lt;futures_util::stream::stream::split::SplitSink&lt;S,Item&gt; as futures_sink::Sink&lt;Item&gt;&gt;::poll_ready (16 samples, 0.05%)</title><rect x="63.2656%" y="677" width="0.0479%" height="15" fill="rgb(231,104,20)" fg:x="21125" fg:w="16"/><text x="63.5156%" y="687.50"></text></g><g><title>[libc.so.6] (64 samples, 0.19%)</title><rect x="63.5920%" y="645" width="0.1917%" height="15" fill="rgb(254,36,13)" fg:x="21234" fg:w="64"/><text x="63.8420%" y="655.50"></text></g><g><title>[libc.so.6] (127 samples, 0.38%)</title><rect x="63.9663%" y="629" width="0.3803%" height="15" fill="rgb(248,14,50)" fg:x="21359" fg:w="127"/><text x="64.2163%" y="639.50"></text></g><g><title>[libc.so.6] (33 samples, 0.10%)</title><rect x="64.2479%" y="613" width="0.0988%" height="15" fill="rgb(217,107,29)" fg:x="21453" fg:w="33"/><text x="64.4979%" y="623.50"></text></g><g><title>__lll_lock_wake_private (7 samples, 0.02%)</title><rect x="64.3527%" y="629" width="0.0210%" height="15" fill="rgb(251,169,33)" fg:x="21488" fg:w="7"/><text x="64.6027%" y="639.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (7 samples, 0.02%)</title><rect x="64.3527%" y="613" width="0.0210%" height="15" fill="rgb(217,108,32)" fg:x="21488" fg:w="7"/><text x="64.6027%" y="623.50"></text></g><g><title>do_syscall_64 (7 samples, 0.02%)</title><rect x="64.3527%" y="597" width="0.0210%" height="15" fill="rgb(219,66,42)" fg:x="21488" fg:w="7"/><text x="64.6027%" y="607.50"></text></g><g><title>__x64_sys_futex (6 samples, 0.02%)</title><rect x="64.3557%" y="581" width="0.0180%" height="15" fill="rgb(206,180,7)" fg:x="21489" fg:w="6"/><text x="64.6057%" y="591.50"></text></g><g><title>do_futex (6 samples, 0.02%)</title><rect x="64.3557%" y="565" width="0.0180%" height="15" fill="rgb(208,226,31)" fg:x="21489" fg:w="6"/><text x="64.6057%" y="575.50"></text></g><g><title>futex_wake (5 samples, 0.01%)</title><rect x="64.3587%" y="549" width="0.0150%" height="15" fill="rgb(218,26,49)" fg:x="21490" fg:w="5"/><text x="64.6087%" y="559.50"></text></g><g><title>bytes::bytes::&lt;impl core::convert::From&lt;bytes::bytes::Bytes&gt; for alloc::vec::Vec&lt;u8&gt;&gt;::from (355 samples, 1.06%)</title><rect x="63.3135%" y="677" width="1.0632%" height="15" fill="rgb(233,197,48)" fg:x="21141" fg:w="355"/><text x="63.5635%" y="687.50"></text></g><g><title>bytes::bytes_mut::shared_v_to_vec (344 samples, 1.03%)</title><rect x="63.3464%" y="661" width="1.0302%" height="15" fill="rgb(252,181,51)" fg:x="21152" fg:w="344"/><text x="63.5964%" y="671.50"></text></g><g><title>malloc (193 samples, 0.58%)</title><rect x="63.7986%" y="645" width="0.5780%" height="15" fill="rgb(253,90,19)" fg:x="21303" fg:w="193"/><text x="64.0486%" y="655.50"></text></g><g><title>&lt;tokio::runtime::coop::RestoreOnPending as core::ops::drop::Drop&gt;::drop (19 samples, 0.06%)</title><rect x="64.7959%" y="629" width="0.0569%" height="15" fill="rgb(215,171,30)" fg:x="21636" fg:w="19"/><text x="65.0459%" y="639.50"></text></g><g><title>&lt;tokio::sync::mpsc::bounded::Semaphore as tokio::sync::mpsc::chan::Semaphore&gt;::add_permit (17 samples, 0.05%)</title><rect x="64.8528%" y="629" width="0.0509%" height="15" fill="rgb(214,222,9)" fg:x="21655" fg:w="17"/><text x="65.1028%" y="639.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::add_permits_locked (25 samples, 0.07%)</title><rect x="64.9037%" y="629" width="0.0749%" height="15" fill="rgb(223,3,22)" fg:x="21672" fg:w="25"/><text x="65.1537%" y="639.50"></text></g><g><title>tokio::sync::mpsc::list::Rx&lt;T&gt;::pop (56 samples, 0.17%)</title><rect x="64.9786%" y="629" width="0.1677%" height="15" fill="rgb(225,196,46)" fg:x="21697" fg:w="56"/><text x="65.2286%" y="639.50"></text></g><g><title>&lt;netstack_lwip::stack::NetStack as futures_core::stream::Stream&gt;::poll_next (176 samples, 0.53%)</title><rect x="64.6342%" y="661" width="0.5271%" height="15" fill="rgb(209,110,37)" fg:x="21582" fg:w="176"/><text x="64.8842%" y="671.50"></text></g><g><title>tokio::sync::mpsc::chan::Rx&lt;T,S&gt;::recv (168 samples, 0.50%)</title><rect x="64.6581%" y="645" width="0.5031%" height="15" fill="rgb(249,89,12)" fg:x="21590" fg:w="168"/><text x="64.9081%" y="655.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::register_by_ref (5 samples, 0.01%)</title><rect x="65.1463%" y="629" width="0.0150%" height="15" fill="rgb(226,27,33)" fg:x="21753" fg:w="5"/><text x="65.3963%" y="639.50"></text></g><g><title>[libc.so.6] (39 samples, 0.12%)</title><rect x="65.9848%" y="597" width="0.1168%" height="15" fill="rgb(213,82,22)" fg:x="22033" fg:w="39"/><text x="66.2348%" y="607.50"></text></g><g><title>[libc.so.6] (8 samples, 0.02%)</title><rect x="66.0777%" y="581" width="0.0240%" height="15" fill="rgb(248,140,0)" fg:x="22064" fg:w="8"/><text x="66.3277%" y="591.50"></text></g><g><title>bytes::bytes_mut::BytesMut::reserve_inner (73 samples, 0.22%)</title><rect x="65.8920%" y="629" width="0.2186%" height="15" fill="rgb(228,106,3)" fg:x="22002" fg:w="73"/><text x="66.1420%" y="639.50"></text></g><g><title>malloc (58 samples, 0.17%)</title><rect x="65.9369%" y="613" width="0.1737%" height="15" fill="rgb(209,23,37)" fg:x="22017" fg:w="58"/><text x="66.1869%" y="623.50"></text></g><g><title>bytes::bytes_mut::BytesMut::advance_unchecked (5 samples, 0.01%)</title><rect x="66.2334%" y="613" width="0.0150%" height="15" fill="rgb(241,93,50)" fg:x="22116" fg:w="5"/><text x="66.4834%" y="623.50"></text></g><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="66.2903%" y="597" width="0.0120%" height="15" fill="rgb(253,46,43)" fg:x="22135" fg:w="4"/><text x="66.5403%" y="607.50"></text></g><g><title>&lt;tun::async::codec::TunPacketCodec as tokio_util::codec::decoder::Decoder&gt;::decode (185 samples, 0.55%)</title><rect x="65.7513%" y="645" width="0.5540%" height="15" fill="rgb(226,206,43)" fg:x="21955" fg:w="185"/><text x="66.0013%" y="655.50"></text></g><g><title>bytes::bytes_mut::BytesMut::split_to (65 samples, 0.19%)</title><rect x="66.1106%" y="629" width="0.1947%" height="15" fill="rgb(217,54,7)" fg:x="22075" fg:w="65"/><text x="66.3606%" y="639.50"></text></g><g><title>malloc (19 samples, 0.06%)</title><rect x="66.2484%" y="613" width="0.0569%" height="15" fill="rgb(223,5,52)" fg:x="22121" fg:w="19"/><text x="66.4984%" y="623.50"></text></g><g><title>[libc.so.6] (221 samples, 0.66%)</title><rect x="66.3921%" y="629" width="0.6619%" height="15" fill="rgb(206,52,46)" fg:x="22169" fg:w="221"/><text x="66.6421%" y="639.50"></text></g><g><title>[libc.so.6] (62 samples, 0.19%)</title><rect x="67.1379%" y="597" width="0.1857%" height="15" fill="rgb(253,136,11)" fg:x="22418" fg:w="62"/><text x="67.3879%" y="607.50"></text></g><g><title>entry_SYSCALL_64 (39 samples, 0.12%)</title><rect x="67.3235%" y="597" width="0.1168%" height="15" fill="rgb(208,106,33)" fg:x="22480" fg:w="39"/><text x="67.5735%" y="607.50"></text></g><g><title>__x64_sys_read (17 samples, 0.05%)</title><rect x="67.4823%" y="565" width="0.0509%" height="15" fill="rgb(206,54,4)" fg:x="22533" fg:w="17"/><text x="67.7323%" y="575.50"></text></g><g><title>__fdget_pos (55 samples, 0.16%)</title><rect x="67.5631%" y="549" width="0.1647%" height="15" fill="rgb(213,3,15)" fg:x="22560" fg:w="55"/><text x="67.8131%" y="559.50"></text></g><g><title>__fget_light (51 samples, 0.15%)</title><rect x="67.5751%" y="533" width="0.1527%" height="15" fill="rgb(252,211,39)" fg:x="22564" fg:w="51"/><text x="67.8251%" y="543.50"></text></g><g><title>__fget_files (35 samples, 0.10%)</title><rect x="67.6230%" y="517" width="0.1048%" height="15" fill="rgb(223,6,36)" fg:x="22580" fg:w="35"/><text x="67.8730%" y="527.50"></text></g><g><title>fput_many (9 samples, 0.03%)</title><rect x="67.7308%" y="549" width="0.0270%" height="15" fill="rgb(252,169,45)" fg:x="22616" fg:w="9"/><text x="67.9808%" y="559.50"></text></g><g><title>fsnotify_perm.part.0 (42 samples, 0.13%)</title><rect x="67.7907%" y="533" width="0.1258%" height="15" fill="rgb(212,48,26)" fg:x="22636" fg:w="42"/><text x="68.0407%" y="543.50"></text></g><g><title>__raw_callee_save___pv_queued_spin_unlock (14 samples, 0.04%)</title><rect x="68.2459%" y="485" width="0.0419%" height="15" fill="rgb(251,102,48)" fg:x="22788" fg:w="14"/><text x="68.4959%" y="495.50"></text></g><g><title>_raw_spin_lock (14 samples, 0.04%)</title><rect x="68.2879%" y="485" width="0.0419%" height="15" fill="rgb(243,208,16)" fg:x="22802" fg:w="14"/><text x="68.5379%" y="495.50"></text></g><g><title>__slab_free.constprop.0 (34 samples, 0.10%)</title><rect x="68.4196%" y="437" width="0.1018%" height="15" fill="rgb(219,96,24)" fg:x="22846" fg:w="34"/><text x="68.6696%" y="447.50"></text></g><g><title>skb_release_data (69 samples, 0.21%)</title><rect x="68.3328%" y="469" width="0.2066%" height="15" fill="rgb(219,33,29)" fg:x="22817" fg:w="69"/><text x="68.5828%" y="479.50"></text></g><g><title>kfree (52 samples, 0.16%)</title><rect x="68.3837%" y="453" width="0.1557%" height="15" fill="rgb(223,176,5)" fg:x="22834" fg:w="52"/><text x="68.6337%" y="463.50"></text></g><g><title>memcg_slab_free_hook (5 samples, 0.01%)</title><rect x="68.5245%" y="437" width="0.0150%" height="15" fill="rgb(228,140,14)" fg:x="22881" fg:w="5"/><text x="68.7745%" y="447.50"></text></g><g><title>consume_skb (72 samples, 0.22%)</title><rect x="68.3328%" y="485" width="0.2156%" height="15" fill="rgb(217,179,31)" fg:x="22817" fg:w="72"/><text x="68.5828%" y="495.50"></text></g><g><title>__slab_free.constprop.0 (13 samples, 0.04%)</title><rect x="68.6083%" y="469" width="0.0389%" height="15" fill="rgb(230,9,30)" fg:x="22909" fg:w="13"/><text x="68.8583%" y="479.50"></text></g><g><title>kmem_cache_free.part.0 (30 samples, 0.09%)</title><rect x="68.5604%" y="485" width="0.0898%" height="15" fill="rgb(230,136,20)" fg:x="22893" fg:w="30"/><text x="68.8104%" y="495.50"></text></g><g><title>copy_user_enhanced_fast_string (124 samples, 0.37%)</title><rect x="68.8569%" y="437" width="0.3714%" height="15" fill="rgb(215,210,22)" fg:x="22992" fg:w="124"/><text x="69.1069%" y="447.50"></text></g><g><title>_copy_to_iter (197 samples, 0.59%)</title><rect x="68.7700%" y="453" width="0.5900%" height="15" fill="rgb(218,43,5)" fg:x="22963" fg:w="197"/><text x="69.0200%" y="463.50"></text></g><g><title>copy_user_generic_unrolled (44 samples, 0.13%)</title><rect x="69.2282%" y="437" width="0.1318%" height="15" fill="rgb(216,11,5)" fg:x="23116" fg:w="44"/><text x="69.4782%" y="447.50"></text></g><g><title>__check_heap_object (23 samples, 0.07%)</title><rect x="69.5307%" y="421" width="0.0689%" height="15" fill="rgb(209,82,29)" fg:x="23217" fg:w="23"/><text x="69.7807%" y="431.50"></text></g><g><title>__virt_addr_valid (42 samples, 0.13%)</title><rect x="69.5996%" y="421" width="0.1258%" height="15" fill="rgb(244,115,12)" fg:x="23240" fg:w="42"/><text x="69.8496%" y="431.50"></text></g><g><title>tun_do_read (561 samples, 1.68%)</title><rect x="68.0513%" y="501" width="1.6801%" height="15" fill="rgb(222,82,18)" fg:x="22723" fg:w="561"/><text x="68.3013%" y="511.50"></text></g><g><title>skb_copy_datagram_iter (361 samples, 1.08%)</title><rect x="68.6502%" y="485" width="1.0811%" height="15" fill="rgb(249,227,8)" fg:x="22923" fg:w="361"/><text x="68.9002%" y="495.50"></text></g><g><title>__skb_datagram_iter (357 samples, 1.07%)</title><rect x="68.6622%" y="469" width="1.0692%" height="15" fill="rgb(253,141,45)" fg:x="22927" fg:w="357"/><text x="68.9122%" y="479.50"></text></g><g><title>simple_copy_to_iter (124 samples, 0.37%)</title><rect x="69.3600%" y="453" width="0.3714%" height="15" fill="rgb(234,184,4)" fg:x="23160" fg:w="124"/><text x="69.6100%" y="463.50"></text></g><g><title>__check_object_size (121 samples, 0.36%)</title><rect x="69.3690%" y="437" width="0.3624%" height="15" fill="rgb(218,194,23)" fg:x="23163" fg:w="121"/><text x="69.6190%" y="447.50"></text></g><g><title>new_sync_read (640 samples, 1.92%)</title><rect x="67.9165%" y="533" width="1.9167%" height="15" fill="rgb(235,66,41)" fg:x="22678" fg:w="640"/><text x="68.1665%" y="543.50">n..</text></g><g><title>tun_chr_read_iter (620 samples, 1.86%)</title><rect x="67.9764%" y="517" width="1.8568%" height="15" fill="rgb(245,217,1)" fg:x="22698" fg:w="620"/><text x="68.2264%" y="527.50">t..</text></g><g><title>tun_get (34 samples, 0.10%)</title><rect x="69.7314%" y="501" width="0.1018%" height="15" fill="rgb(229,91,1)" fg:x="23284" fg:w="34"/><text x="69.9814%" y="511.50"></text></g><g><title>ksys_read (772 samples, 2.31%)</title><rect x="67.5332%" y="565" width="2.3120%" height="15" fill="rgb(207,101,30)" fg:x="22550" fg:w="772"/><text x="67.7832%" y="575.50">k..</text></g><g><title>vfs_read (697 samples, 2.09%)</title><rect x="67.7578%" y="549" width="2.0874%" height="15" fill="rgb(223,82,49)" fg:x="22625" fg:w="697"/><text x="68.0078%" y="559.50">v..</text></g><g><title>entry_SYSCALL_64_after_hwframe (813 samples, 2.43%)</title><rect x="67.4403%" y="597" width="2.4348%" height="15" fill="rgb(218,167,17)" fg:x="22519" fg:w="813"/><text x="67.6903%" y="607.50">en..</text></g><g><title>do_syscall_64 (806 samples, 2.41%)</title><rect x="67.4613%" y="581" width="2.4138%" height="15" fill="rgb(208,103,14)" fg:x="22526" fg:w="806"/><text x="67.7113%" y="591.50">do..</text></g><g><title>syscall_exit_to_user_mode (8 samples, 0.02%)</title><rect x="69.8512%" y="565" width="0.0240%" height="15" fill="rgb(238,20,8)" fg:x="23324" fg:w="8"/><text x="70.1012%" y="575.50"></text></g><g><title>read (933 samples, 2.79%)</title><rect x="67.0929%" y="613" width="2.7942%" height="15" fill="rgb(218,80,54)" fg:x="22403" fg:w="933"/><text x="67.3429%" y="623.50">re..</text></g><g><title>syscall_return_via_sysret (4 samples, 0.01%)</title><rect x="69.8751%" y="597" width="0.0120%" height="15" fill="rgb(240,144,17)" fg:x="23332" fg:w="4"/><text x="70.1251%" y="607.50"></text></g><g><title>std::sys::pal::unix::os::errno (9 samples, 0.03%)</title><rect x="69.8931%" y="613" width="0.0270%" height="15" fill="rgb(245,27,50)" fg:x="23338" fg:w="9"/><text x="70.1431%" y="623.50"></text></g><g><title>tokio::io::async_fd::AsyncFdReadyMutGuard&lt;Inner&gt;::try_io (959 samples, 2.87%)</title><rect x="67.0540%" y="629" width="2.8720%" height="15" fill="rgb(251,51,7)" fg:x="22390" fg:w="959"/><text x="67.3040%" y="639.50">to..</text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness (5 samples, 0.01%)</title><rect x="70.0488%" y="597" width="0.0150%" height="15" fill="rgb(245,217,29)" fg:x="23390" fg:w="5"/><text x="70.2988%" y="607.50"></text></g><g><title>&lt;tun::async::device::AsyncDevice as tokio::io::async_read::AsyncRead&gt;::poll_read (1,256 samples, 3.76%)</title><rect x="66.3053%" y="645" width="3.7615%" height="15" fill="rgb(221,176,29)" fg:x="22140" fg:w="1256"/><text x="66.5553%" y="655.50">&lt;tun..</text></g><g><title>tokio::runtime::io::registration::Registration::poll_read_ready (47 samples, 0.14%)</title><rect x="69.9260%" y="629" width="0.1408%" height="15" fill="rgb(212,180,24)" fg:x="23349" fg:w="47"/><text x="70.1760%" y="639.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (40 samples, 0.12%)</title><rect x="69.9470%" y="613" width="0.1198%" height="15" fill="rgb(254,24,2)" fg:x="23356" fg:w="40"/><text x="70.1970%" y="623.50"></text></g><g><title>tracing::__macro_support::__is_enabled (10 samples, 0.03%)</title><rect x="70.0698%" y="645" width="0.0299%" height="15" fill="rgb(230,100,2)" fg:x="23397" fg:w="10"/><text x="70.3198%" y="655.50"></text></g><g><title>&lt;tracing_subscriber::fmt::Subscriber&lt;N,E,F,W&gt; as tracing_core::subscriber::Subscriber&gt;::event (5 samples, 0.01%)</title><rect x="70.2075%" y="629" width="0.0150%" height="15" fill="rgb(219,142,25)" fg:x="23443" fg:w="5"/><text x="70.4575%" y="639.50"></text></g><g><title>[libc.so.6] (133 samples, 0.40%)</title><rect x="71.7199%" y="533" width="0.3983%" height="15" fill="rgb(240,73,43)" fg:x="23948" fg:w="133"/><text x="71.9699%" y="543.50"></text></g><g><title>entry_SYSCALL_64 (61 samples, 0.18%)</title><rect x="72.1182%" y="533" width="0.1827%" height="15" fill="rgb(214,114,15)" fg:x="24081" fg:w="61"/><text x="72.3682%" y="543.50"></text></g><g><title>__x64_sys_write (22 samples, 0.07%)</title><rect x="72.4806%" y="501" width="0.0659%" height="15" fill="rgb(207,130,4)" fg:x="24202" fg:w="22"/><text x="72.7306%" y="511.50"></text></g><g><title>__fget_light (97 samples, 0.29%)</title><rect x="72.7292%" y="469" width="0.2905%" height="15" fill="rgb(221,25,40)" fg:x="24285" fg:w="97"/><text x="72.9792%" y="479.50"></text></g><g><title>__fget_files (72 samples, 0.22%)</title><rect x="72.8040%" y="453" width="0.2156%" height="15" fill="rgb(241,184,7)" fg:x="24310" fg:w="72"/><text x="73.0540%" y="463.50"></text></g><g><title>__fdget_pos (143 samples, 0.43%)</title><rect x="72.6813%" y="485" width="0.4283%" height="15" fill="rgb(235,159,4)" fg:x="24269" fg:w="143"/><text x="72.9313%" y="495.50"></text></g><g><title>mutex_lock (30 samples, 0.09%)</title><rect x="73.0197%" y="469" width="0.0898%" height="15" fill="rgb(214,87,48)" fg:x="24382" fg:w="30"/><text x="73.2697%" y="479.50"></text></g><g><title>fput (4 samples, 0.01%)</title><rect x="73.1095%" y="485" width="0.0120%" height="15" fill="rgb(246,198,24)" fg:x="24412" fg:w="4"/><text x="73.3595%" y="495.50"></text></g><g><title>fput_many (31 samples, 0.09%)</title><rect x="73.1215%" y="485" width="0.0928%" height="15" fill="rgb(209,66,40)" fg:x="24416" fg:w="31"/><text x="73.3715%" y="495.50"></text></g><g><title>mutex_unlock (19 samples, 0.06%)</title><rect x="73.2143%" y="485" width="0.0569%" height="15" fill="rgb(233,147,39)" fg:x="24447" fg:w="19"/><text x="73.4643%" y="495.50"></text></g><g><title>__fsnotify_parent (28 samples, 0.08%)</title><rect x="73.4959%" y="469" width="0.0839%" height="15" fill="rgb(231,145,52)" fg:x="24541" fg:w="28"/><text x="73.7459%" y="479.50"></text></g><g><title>down_write (42 samples, 0.13%)</title><rect x="73.7624%" y="437" width="0.1258%" height="15" fill="rgb(206,20,26)" fg:x="24630" fg:w="42"/><text x="74.0124%" y="447.50"></text></g><g><title>ext4_generic_write_checks (40 samples, 0.12%)</title><rect x="73.8882%" y="437" width="0.1198%" height="15" fill="rgb(238,220,4)" fg:x="24672" fg:w="40"/><text x="74.1382%" y="447.50"></text></g><g><title>generic_write_checks (31 samples, 0.09%)</title><rect x="73.9151%" y="421" width="0.0928%" height="15" fill="rgb(252,195,42)" fg:x="24681" fg:w="31"/><text x="74.1651%" y="431.50"></text></g><g><title>generic_write_check_limits (9 samples, 0.03%)</title><rect x="73.9810%" y="405" width="0.0270%" height="15" fill="rgb(209,10,6)" fg:x="24703" fg:w="9"/><text x="74.2310%" y="415.50"></text></g><g><title>file_modified (23 samples, 0.07%)</title><rect x="74.0080%" y="437" width="0.0689%" height="15" fill="rgb(229,3,52)" fg:x="24712" fg:w="23"/><text x="74.2580%" y="447.50"></text></g><g><title>file_remove_privs (16 samples, 0.05%)</title><rect x="74.0289%" y="421" width="0.0479%" height="15" fill="rgb(253,49,37)" fg:x="24719" fg:w="16"/><text x="74.2789%" y="431.50"></text></g><g><title>current_time (39 samples, 0.12%)</title><rect x="74.1278%" y="421" width="0.1168%" height="15" fill="rgb(240,103,49)" fg:x="24752" fg:w="39"/><text x="74.3778%" y="431.50"></text></g><g><title>ktime_get_coarse_real_ts64 (27 samples, 0.08%)</title><rect x="74.1637%" y="405" width="0.0809%" height="15" fill="rgb(250,182,30)" fg:x="24764" fg:w="27"/><text x="74.4137%" y="415.50"></text></g><g><title>file_update_time (59 samples, 0.18%)</title><rect x="74.0768%" y="437" width="0.1767%" height="15" fill="rgb(248,8,30)" fg:x="24735" fg:w="59"/><text x="74.3268%" y="447.50"></text></g><g><title>__cond_resched (12 samples, 0.04%)</title><rect x="74.3673%" y="421" width="0.0359%" height="15" fill="rgb(237,120,30)" fg:x="24832" fg:w="12"/><text x="74.6173%" y="431.50"></text></g><g><title>rcu_all_qs (6 samples, 0.02%)</title><rect x="74.3853%" y="405" width="0.0180%" height="15" fill="rgb(221,146,34)" fg:x="24838" fg:w="6"/><text x="74.6353%" y="415.50"></text></g><g><title>balance_dirty_pages_ratelimited (40 samples, 0.12%)</title><rect x="74.4033%" y="421" width="0.1198%" height="15" fill="rgb(242,55,13)" fg:x="24844" fg:w="40"/><text x="74.6533%" y="431.50"></text></g><g><title>copy_user_enhanced_fast_string (102 samples, 0.31%)</title><rect x="74.7537%" y="405" width="0.3055%" height="15" fill="rgb(242,112,31)" fg:x="24961" fg:w="102"/><text x="75.0037%" y="415.50"></text></g><g><title>copy_page_from_iter_atomic (185 samples, 0.55%)</title><rect x="74.5231%" y="421" width="0.5540%" height="15" fill="rgb(249,192,27)" fg:x="24884" fg:w="185"/><text x="74.7731%" y="431.50"></text></g><g><title>copy_user_generic_unrolled (6 samples, 0.02%)</title><rect x="75.0591%" y="405" width="0.0180%" height="15" fill="rgb(208,204,44)" fg:x="25063" fg:w="6"/><text x="75.3091%" y="415.50"></text></g><g><title>clean_bdev_aliases (15 samples, 0.04%)</title><rect x="75.4844%" y="389" width="0.0449%" height="15" fill="rgb(208,93,54)" fg:x="25205" fg:w="15"/><text x="75.7344%" y="399.50"></text></g><g><title>pagevec_lookup_range (13 samples, 0.04%)</title><rect x="75.4904%" y="373" width="0.0389%" height="15" fill="rgb(242,1,31)" fg:x="25207" fg:w="13"/><text x="75.7404%" y="383.50"></text></g><g><title>find_get_pages_range (10 samples, 0.03%)</title><rect x="75.4994%" y="357" width="0.0299%" height="15" fill="rgb(241,83,25)" fg:x="25210" fg:w="10"/><text x="75.7494%" y="367.50"></text></g><g><title>xas_find (5 samples, 0.01%)</title><rect x="75.5144%" y="341" width="0.0150%" height="15" fill="rgb(205,169,50)" fg:x="25215" fg:w="5"/><text x="75.7644%" y="351.50"></text></g><g><title>create_page_buffers (27 samples, 0.08%)</title><rect x="75.5293%" y="389" width="0.0809%" height="15" fill="rgb(239,186,37)" fg:x="25220" fg:w="27"/><text x="75.7793%" y="399.50"></text></g><g><title>create_empty_buffers (17 samples, 0.05%)</title><rect x="75.5593%" y="373" width="0.0509%" height="15" fill="rgb(205,221,10)" fg:x="25230" fg:w="17"/><text x="75.8093%" y="383.50"></text></g><g><title>alloc_page_buffers (13 samples, 0.04%)</title><rect x="75.5713%" y="357" width="0.0389%" height="15" fill="rgb(218,196,15)" fg:x="25234" fg:w="13"/><text x="75.8213%" y="367.50"></text></g><g><title>alloc_buffer_head (10 samples, 0.03%)</title><rect x="75.5802%" y="341" width="0.0299%" height="15" fill="rgb(218,196,35)" fg:x="25237" fg:w="10"/><text x="75.8302%" y="351.50"></text></g><g><title>kmem_cache_alloc (6 samples, 0.02%)</title><rect x="75.5922%" y="325" width="0.0180%" height="15" fill="rgb(233,63,24)" fg:x="25241" fg:w="6"/><text x="75.8422%" y="335.50"></text></g><g><title>__dquot_alloc_space (9 samples, 0.03%)</title><rect x="75.6431%" y="357" width="0.0270%" height="15" fill="rgb(225,8,4)" fg:x="25258" fg:w="9"/><text x="75.8931%" y="367.50"></text></g><g><title>ext4_da_reserve_space (20 samples, 0.06%)</title><rect x="75.6371%" y="373" width="0.0599%" height="15" fill="rgb(234,105,35)" fg:x="25256" fg:w="20"/><text x="75.8871%" y="383.50"></text></g><g><title>ext4_claim_free_clusters (8 samples, 0.02%)</title><rect x="75.6731%" y="357" width="0.0240%" height="15" fill="rgb(236,21,32)" fg:x="25268" fg:w="8"/><text x="75.9231%" y="367.50"></text></g><g><title>percpu_counter_add_batch (5 samples, 0.01%)</title><rect x="75.6821%" y="341" width="0.0150%" height="15" fill="rgb(228,109,6)" fg:x="25271" fg:w="5"/><text x="75.9321%" y="351.50"></text></g><g><title>ext4_es_can_be_merged.isra.0 (4 samples, 0.01%)</title><rect x="75.7300%" y="341" width="0.0120%" height="15" fill="rgb(229,215,31)" fg:x="25287" fg:w="4"/><text x="75.9800%" y="351.50"></text></g><g><title>__es_insert_extent (11 samples, 0.03%)</title><rect x="75.7120%" y="357" width="0.0329%" height="15" fill="rgb(221,52,54)" fg:x="25281" fg:w="11"/><text x="75.9620%" y="367.50"></text></g><g><title>__es_remove_extent (12 samples, 0.04%)</title><rect x="75.7450%" y="357" width="0.0359%" height="15" fill="rgb(252,129,43)" fg:x="25292" fg:w="12"/><text x="75.9950%" y="367.50"></text></g><g><title>__es_tree_search.isra.0 (5 samples, 0.01%)</title><rect x="75.7659%" y="341" width="0.0150%" height="15" fill="rgb(248,183,27)" fg:x="25299" fg:w="5"/><text x="76.0159%" y="351.50"></text></g><g><title>ext4_es_insert_delayed_block (31 samples, 0.09%)</title><rect x="75.6970%" y="373" width="0.0928%" height="15" fill="rgb(250,0,22)" fg:x="25276" fg:w="31"/><text x="75.9470%" y="383.50"></text></g><g><title>ext4_es_lookup_extent (11 samples, 0.03%)</title><rect x="75.7899%" y="373" width="0.0329%" height="15" fill="rgb(213,166,10)" fg:x="25307" fg:w="11"/><text x="76.0399%" y="383.50"></text></g><g><title>ext4_da_get_block_prep (72 samples, 0.22%)</title><rect x="75.6102%" y="389" width="0.2156%" height="15" fill="rgb(207,163,36)" fg:x="25247" fg:w="72"/><text x="75.8602%" y="399.50"></text></g><g><title>__block_write_begin_int (214 samples, 0.64%)</title><rect x="75.3197%" y="405" width="0.6409%" height="15" fill="rgb(208,122,22)" fg:x="25150" fg:w="214"/><text x="75.5697%" y="415.50"></text></g><g><title>zero_user_segments (45 samples, 0.13%)</title><rect x="75.8258%" y="389" width="0.1348%" height="15" fill="rgb(207,104,49)" fg:x="25319" fg:w="45"/><text x="76.0758%" y="399.50"></text></g><g><title>memset_erms (44 samples, 0.13%)</title><rect x="75.8288%" y="373" width="0.1318%" height="15" fill="rgb(248,211,50)" fg:x="25320" fg:w="44"/><text x="76.0788%" y="383.50"></text></g><g><title>ext4_nonda_switch (32 samples, 0.10%)</title><rect x="75.9606%" y="405" width="0.0958%" height="15" fill="rgb(217,13,45)" fg:x="25364" fg:w="32"/><text x="76.2106%" y="415.50"></text></g><g><title>PageHuge (15 samples, 0.04%)</title><rect x="76.3439%" y="373" width="0.0449%" height="15" fill="rgb(211,216,49)" fg:x="25492" fg:w="15"/><text x="76.5939%" y="383.50"></text></g><g><title>node_dirty_ok (7 samples, 0.02%)</title><rect x="76.4547%" y="341" width="0.0210%" height="15" fill="rgb(221,58,53)" fg:x="25529" fg:w="7"/><text x="76.7047%" y="351.50"></text></g><g><title>get_page_from_freelist (22 samples, 0.07%)</title><rect x="76.4248%" y="357" width="0.0659%" height="15" fill="rgb(220,112,41)" fg:x="25519" fg:w="22"/><text x="76.6748%" y="367.50"></text></g><g><title>rmqueue_bulk (5 samples, 0.01%)</title><rect x="76.4757%" y="341" width="0.0150%" height="15" fill="rgb(236,38,28)" fg:x="25536" fg:w="5"/><text x="76.7257%" y="351.50"></text></g><g><title>__alloc_pages (36 samples, 0.11%)</title><rect x="76.3888%" y="373" width="0.1078%" height="15" fill="rgb(227,195,22)" fg:x="25507" fg:w="36"/><text x="76.6388%" y="383.50"></text></g><g><title>mem_cgroup_charge_statistics.constprop.0 (7 samples, 0.02%)</title><rect x="76.5356%" y="309" width="0.0210%" height="15" fill="rgb(214,55,33)" fg:x="25556" fg:w="7"/><text x="76.7856%" y="319.50"></text></g><g><title>charge_memcg (8 samples, 0.02%)</title><rect x="76.5356%" y="325" width="0.0240%" height="15" fill="rgb(248,80,13)" fg:x="25556" fg:w="8"/><text x="76.7856%" y="335.50"></text></g><g><title>__mem_cgroup_charge (30 samples, 0.09%)</title><rect x="76.5296%" y="341" width="0.0898%" height="15" fill="rgb(238,52,6)" fg:x="25554" fg:w="30"/><text x="76.7796%" y="351.50"></text></g><g><title>get_mem_cgroup_from_mm (20 samples, 0.06%)</title><rect x="76.5596%" y="325" width="0.0599%" height="15" fill="rgb(224,198,47)" fg:x="25564" fg:w="20"/><text x="76.8096%" y="335.50"></text></g><g><title>__mod_lruvec_state (5 samples, 0.01%)</title><rect x="76.6374%" y="325" width="0.0150%" height="15" fill="rgb(233,171,20)" fg:x="25590" fg:w="5"/><text x="76.8874%" y="335.50"></text></g><g><title>__mod_node_page_state (5 samples, 0.01%)</title><rect x="76.6374%" y="309" width="0.0150%" height="15" fill="rgb(241,30,25)" fg:x="25590" fg:w="5"/><text x="76.8874%" y="319.50"></text></g><g><title>__mod_lruvec_page_state (16 samples, 0.05%)</title><rect x="76.6194%" y="341" width="0.0479%" height="15" fill="rgb(207,171,38)" fg:x="25584" fg:w="16"/><text x="76.8694%" y="351.50"></text></g><g><title>__mod_memcg_lruvec_state (5 samples, 0.01%)</title><rect x="76.6524%" y="325" width="0.0150%" height="15" fill="rgb(234,70,1)" fg:x="25595" fg:w="5"/><text x="76.9024%" y="335.50"></text></g><g><title>xa_get_order (4 samples, 0.01%)</title><rect x="76.6763%" y="341" width="0.0120%" height="15" fill="rgb(232,178,18)" fg:x="25603" fg:w="4"/><text x="76.9263%" y="351.50"></text></g><g><title>xas_find_conflict (6 samples, 0.02%)</title><rect x="76.6883%" y="341" width="0.0180%" height="15" fill="rgb(241,78,40)" fg:x="25607" fg:w="6"/><text x="76.9383%" y="351.50"></text></g><g><title>workingset_update_node (4 samples, 0.01%)</title><rect x="76.7243%" y="325" width="0.0120%" height="15" fill="rgb(222,35,25)" fg:x="25619" fg:w="4"/><text x="76.9743%" y="335.50"></text></g><g><title>__add_to_page_cache_locked (81 samples, 0.24%)</title><rect x="76.5056%" y="357" width="0.2426%" height="15" fill="rgb(207,92,16)" fg:x="25546" fg:w="81"/><text x="76.7556%" y="367.50"></text></g><g><title>xas_store (14 samples, 0.04%)</title><rect x="76.7063%" y="341" width="0.0419%" height="15" fill="rgb(216,59,51)" fg:x="25613" fg:w="14"/><text x="76.9563%" y="351.50"></text></g><g><title>xas_create (4 samples, 0.01%)</title><rect x="76.7362%" y="325" width="0.0120%" height="15" fill="rgb(213,80,28)" fg:x="25623" fg:w="4"/><text x="76.9862%" y="335.50"></text></g><g><title>add_to_page_cache_lru (99 samples, 0.30%)</title><rect x="76.4967%" y="373" width="0.2965%" height="15" fill="rgb(220,93,7)" fg:x="25543" fg:w="99"/><text x="76.7467%" y="383.50"></text></g><g><title>lru_cache_add (15 samples, 0.04%)</title><rect x="76.7482%" y="357" width="0.0449%" height="15" fill="rgb(225,24,44)" fg:x="25627" fg:w="15"/><text x="76.9982%" y="367.50"></text></g><g><title>__pagevec_lru_add (11 samples, 0.03%)</title><rect x="76.7602%" y="341" width="0.0329%" height="15" fill="rgb(243,74,40)" fg:x="25631" fg:w="11"/><text x="77.0102%" y="351.50"></text></g><g><title>pagecache_get_page (364 samples, 1.09%)</title><rect x="76.0744%" y="389" width="1.0901%" height="15" fill="rgb(228,39,7)" fg:x="25402" fg:w="364"/><text x="76.3244%" y="399.50"></text></g><g><title>xas_load (121 samples, 0.36%)</title><rect x="76.8021%" y="373" width="0.3624%" height="15" fill="rgb(227,79,8)" fg:x="25645" fg:w="121"/><text x="77.0521%" y="383.50"></text></g><g><title>xas_start (19 samples, 0.06%)</title><rect x="77.1076%" y="357" width="0.0569%" height="15" fill="rgb(236,58,11)" fg:x="25747" fg:w="19"/><text x="77.3576%" y="367.50"></text></g><g><title>grab_cache_page_write_begin (376 samples, 1.13%)</title><rect x="76.0564%" y="405" width="1.1261%" height="15" fill="rgb(249,63,35)" fg:x="25396" fg:w="376"/><text x="76.3064%" y="415.50"></text></g><g><title>wait_for_stable_page (6 samples, 0.02%)</title><rect x="77.1645%" y="389" width="0.0180%" height="15" fill="rgb(252,114,16)" fg:x="25766" fg:w="6"/><text x="77.4145%" y="399.50"></text></g><g><title>ext4_da_write_begin (708 samples, 2.12%)</title><rect x="75.0771%" y="421" width="2.1203%" height="15" fill="rgb(254,151,24)" fg:x="25069" fg:w="708"/><text x="75.3271%" y="431.50">e..</text></g><g><title>wait_for_stable_page (5 samples, 0.01%)</title><rect x="77.1825%" y="405" width="0.0150%" height="15" fill="rgb(253,54,39)" fg:x="25772" fg:w="5"/><text x="77.4325%" y="415.50"></text></g><g><title>ext4_da_write_end (60 samples, 0.18%)</title><rect x="77.1974%" y="421" width="0.1797%" height="15" fill="rgb(243,25,45)" fg:x="25777" fg:w="60"/><text x="77.4474%" y="431.50"></text></g><g><title>fault_in_iov_iter_readable (116 samples, 0.35%)</title><rect x="77.3771%" y="421" width="0.3474%" height="15" fill="rgb(234,134,9)" fg:x="25837" fg:w="116"/><text x="77.6271%" y="431.50"></text></g><g><title>fault_in_readable (100 samples, 0.30%)</title><rect x="77.4251%" y="405" width="0.2995%" height="15" fill="rgb(227,166,31)" fg:x="25853" fg:w="100"/><text x="77.6751%" y="415.50"></text></g><g><title>__get_user_nocheck_1 (74 samples, 0.22%)</title><rect x="77.5029%" y="389" width="0.2216%" height="15" fill="rgb(245,143,41)" fg:x="25879" fg:w="74"/><text x="77.7529%" y="399.50"></text></g><g><title>__xa_set_mark (5 samples, 0.01%)</title><rect x="78.2097%" y="357" width="0.0150%" height="15" fill="rgb(238,181,32)" fg:x="26115" fg:w="5"/><text x="78.4597%" y="367.50"></text></g><g><title>__set_page_dirty (20 samples, 0.06%)</title><rect x="78.1857%" y="373" width="0.0599%" height="15" fill="rgb(224,113,18)" fg:x="26107" fg:w="20"/><text x="78.4357%" y="383.50"></text></g><g><title>percpu_counter_add_batch (7 samples, 0.02%)</title><rect x="78.2247%" y="357" width="0.0210%" height="15" fill="rgb(240,229,28)" fg:x="26120" fg:w="7"/><text x="78.4747%" y="367.50"></text></g><g><title>__block_commit_write.constprop.0.isra.0 (122 samples, 0.37%)</title><rect x="77.9042%" y="405" width="0.3654%" height="15" fill="rgb(250,185,3)" fg:x="26013" fg:w="122"/><text x="78.1542%" y="415.50"></text></g><g><title>mark_buffer_dirty (51 samples, 0.15%)</title><rect x="78.1169%" y="389" width="0.1527%" height="15" fill="rgb(212,59,25)" fg:x="26084" fg:w="51"/><text x="78.3669%" y="399.50"></text></g><g><title>lock_page_memcg (6 samples, 0.02%)</title><rect x="78.2516%" y="373" width="0.0180%" height="15" fill="rgb(221,87,20)" fg:x="26129" fg:w="6"/><text x="78.5016%" y="383.50"></text></g><g><title>kmem_cache_free.part.0 (31 samples, 0.09%)</title><rect x="78.5212%" y="357" width="0.0928%" height="15" fill="rgb(213,74,28)" fg:x="26219" fg:w="31"/><text x="78.7712%" y="367.50"></text></g><g><title>__wake_up_common (13 samples, 0.04%)</title><rect x="78.9225%" y="325" width="0.0389%" height="15" fill="rgb(224,132,34)" fg:x="26353" fg:w="13"/><text x="79.1725%" y="335.50"></text></g><g><title>_raw_spin_lock_irqsave (45 samples, 0.13%)</title><rect x="78.9614%" y="325" width="0.1348%" height="15" fill="rgb(222,101,24)" fg:x="26366" fg:w="45"/><text x="79.2114%" y="335.50"></text></g><g><title>__ext4_journal_stop (252 samples, 0.75%)</title><rect x="78.4223%" y="389" width="0.7547%" height="15" fill="rgb(254,142,4)" fg:x="26186" fg:w="252"/><text x="78.6723%" y="399.50"></text></g><g><title>jbd2_journal_stop (234 samples, 0.70%)</title><rect x="78.4762%" y="373" width="0.7008%" height="15" fill="rgb(230,229,49)" fg:x="26204" fg:w="234"/><text x="78.7262%" y="383.50"></text></g><g><title>stop_this_handle (188 samples, 0.56%)</title><rect x="78.6140%" y="357" width="0.5630%" height="15" fill="rgb(238,70,47)" fg:x="26250" fg:w="188"/><text x="78.8640%" y="367.50"></text></g><g><title>__wake_up_common_lock (109 samples, 0.33%)</title><rect x="78.8506%" y="341" width="0.3264%" height="15" fill="rgb(231,160,17)" fg:x="26329" fg:w="109"/><text x="79.1006%" y="351.50"></text></g><g><title>_raw_spin_unlock_irqrestore (27 samples, 0.08%)</title><rect x="79.0962%" y="325" width="0.0809%" height="15" fill="rgb(218,68,53)" fg:x="26411" fg:w="27"/><text x="79.3462%" y="335.50"></text></g><g><title>__raw_callee_save___pv_queued_spin_unlock (25 samples, 0.07%)</title><rect x="79.1022%" y="309" width="0.0749%" height="15" fill="rgb(236,111,10)" fg:x="26413" fg:w="25"/><text x="79.3522%" y="319.50"></text></g><g><title>ext4_journal_check_start (11 samples, 0.03%)</title><rect x="79.2699%" y="357" width="0.0329%" height="15" fill="rgb(224,34,41)" fg:x="26469" fg:w="11"/><text x="79.5199%" y="367.50"></text></g><g><title>memset_erms (27 samples, 0.08%)</title><rect x="79.7191%" y="325" width="0.0809%" height="15" fill="rgb(241,118,19)" fg:x="26619" fg:w="27"/><text x="79.9691%" y="335.50"></text></g><g><title>kmem_cache_alloc (102 samples, 0.31%)</title><rect x="79.4975%" y="341" width="0.3055%" height="15" fill="rgb(238,129,25)" fg:x="26545" fg:w="102"/><text x="79.7475%" y="351.50"></text></g><g><title>_raw_read_lock (34 samples, 0.10%)</title><rect x="80.1024%" y="325" width="0.1018%" height="15" fill="rgb(238,22,31)" fg:x="26747" fg:w="34"/><text x="80.3524%" y="335.50"></text></g><g><title>__ext4_journal_start_sb (374 samples, 1.12%)</title><rect x="79.2369%" y="373" width="1.1201%" height="15" fill="rgb(222,174,48)" fg:x="26458" fg:w="374"/><text x="79.4869%" y="383.50"></text></g><g><title>jbd2__journal_start (352 samples, 1.05%)</title><rect x="79.3028%" y="357" width="1.0542%" height="15" fill="rgb(206,152,40)" fg:x="26480" fg:w="352"/><text x="79.5528%" y="367.50"></text></g><g><title>start_this_handle (185 samples, 0.55%)</title><rect x="79.8029%" y="341" width="0.5540%" height="15" fill="rgb(218,99,54)" fg:x="26647" fg:w="185"/><text x="80.0529%" y="351.50"></text></g><g><title>add_transaction_credits (51 samples, 0.15%)</title><rect x="80.2042%" y="325" width="0.1527%" height="15" fill="rgb(220,174,26)" fg:x="26781" fg:w="51"/><text x="80.4542%" y="335.50"></text></g><g><title>__brelse (18 samples, 0.05%)</title><rect x="81.0128%" y="341" width="0.0539%" height="15" fill="rgb(245,116,9)" fg:x="27051" fg:w="18"/><text x="81.2628%" y="351.50"></text></g><g><title>__ext4_handle_dirty_metadata (31 samples, 0.09%)</title><rect x="81.0668%" y="341" width="0.0928%" height="15" fill="rgb(209,72,35)" fg:x="27069" fg:w="31"/><text x="81.3168%" y="351.50"></text></g><g><title>jbd2_journal_dirty_metadata (17 samples, 0.05%)</title><rect x="81.1087%" y="325" width="0.0509%" height="15" fill="rgb(226,126,21)" fg:x="27083" fg:w="17"/><text x="81.3587%" y="335.50"></text></g><g><title>__raw_callee_save___pv_queued_spin_unlock (29 samples, 0.09%)</title><rect x="81.1596%" y="341" width="0.0868%" height="15" fill="rgb(227,192,1)" fg:x="27100" fg:w="29"/><text x="81.4096%" y="351.50"></text></g><g><title>_raw_spin_lock (36 samples, 0.11%)</title><rect x="81.2464%" y="341" width="0.1078%" height="15" fill="rgb(237,180,29)" fg:x="27129" fg:w="36"/><text x="81.4964%" y="351.50"></text></g><g><title>ext4_fc_track_template (20 samples, 0.06%)</title><rect x="81.3962%" y="325" width="0.0599%" height="15" fill="rgb(230,197,35)" fg:x="27179" fg:w="20"/><text x="81.6462%" y="335.50"></text></g><g><title>ext4_fc_track_inode (43 samples, 0.13%)</title><rect x="81.3543%" y="341" width="0.1288%" height="15" fill="rgb(246,193,31)" fg:x="27165" fg:w="43"/><text x="81.6043%" y="351.50"></text></g><g><title>ext4_inode_journal_mode (9 samples, 0.03%)</title><rect x="81.4561%" y="325" width="0.0270%" height="15" fill="rgb(241,36,4)" fg:x="27199" fg:w="9"/><text x="81.7061%" y="335.50"></text></g><g><title>__crc32c_le (13 samples, 0.04%)</title><rect x="81.9233%" y="293" width="0.0389%" height="15" fill="rgb(241,130,17)" fg:x="27355" fg:w="13"/><text x="82.1733%" y="303.50"></text></g><g><title>chksum_update (1,056 samples, 3.16%)</title><rect x="81.7196%" y="309" width="3.1625%" height="15" fill="rgb(206,137,32)" fg:x="27287" fg:w="1056"/><text x="81.9696%" y="319.50">chk..</text></g><g><title>crc32_body (975 samples, 2.92%)</title><rect x="81.9622%" y="293" width="2.9199%" height="15" fill="rgb(237,228,51)" fg:x="27368" fg:w="975"/><text x="82.2122%" y="303.50">cr..</text></g><g><title>ext4_inode_csum_set (1,192 samples, 3.57%)</title><rect x="81.4830%" y="341" width="3.5698%" height="15" fill="rgb(243,6,42)" fg:x="27208" fg:w="1192"/><text x="81.7330%" y="351.50">ext4..</text></g><g><title>ext4_inode_csum (1,167 samples, 3.49%)</title><rect x="81.5579%" y="325" width="3.4950%" height="15" fill="rgb(251,74,28)" fg:x="27233" fg:w="1167"/><text x="81.8079%" y="335.50">ext..</text></g><g><title>crypto_shash_update (57 samples, 0.17%)</title><rect x="84.8822%" y="309" width="0.1707%" height="15" fill="rgb(218,20,49)" fg:x="28343" fg:w="57"/><text x="85.1322%" y="319.50"></text></g><g><title>ext4_mark_iloc_dirty (1,592 samples, 4.77%)</title><rect x="80.4259%" y="357" width="4.7678%" height="15" fill="rgb(238,28,14)" fg:x="26855" fg:w="1592"/><text x="80.6759%" y="367.50">ext4_m..</text></g><g><title>map_id_up (44 samples, 0.13%)</title><rect x="85.0618%" y="341" width="0.1318%" height="15" fill="rgb(229,40,46)" fg:x="28403" fg:w="44"/><text x="85.3118%" y="351.50"></text></g><g><title>errseq_check (12 samples, 0.04%)</title><rect x="85.3493%" y="325" width="0.0359%" height="15" fill="rgb(244,195,20)" fg:x="28499" fg:w="12"/><text x="85.5993%" y="335.50"></text></g><g><title>__ext4_journal_get_write_access (93 samples, 0.28%)</title><rect x="85.2296%" y="341" width="0.2785%" height="15" fill="rgb(253,56,35)" fg:x="28459" fg:w="93"/><text x="85.4796%" y="351.50"></text></g><g><title>jbd2_journal_get_write_access (41 samples, 0.12%)</title><rect x="85.3853%" y="325" width="0.1228%" height="15" fill="rgb(210,149,44)" fg:x="28511" fg:w="41"/><text x="85.6353%" y="335.50"></text></g><g><title>jbd2_write_access_granted.part.0 (32 samples, 0.10%)</title><rect x="85.4122%" y="309" width="0.0958%" height="15" fill="rgb(240,135,12)" fg:x="28520" fg:w="32"/><text x="85.6622%" y="319.50"></text></g><g><title>__getblk_gfp (122 samples, 0.37%)</title><rect x="85.8076%" y="309" width="0.3654%" height="15" fill="rgb(251,24,50)" fg:x="28652" fg:w="122"/><text x="86.0576%" y="319.50"></text></g><g><title>__find_get_block (103 samples, 0.31%)</title><rect x="85.8645%" y="293" width="0.3085%" height="15" fill="rgb(243,200,47)" fg:x="28671" fg:w="103"/><text x="86.1145%" y="303.50"></text></g><g><title>mark_page_accessed (16 samples, 0.05%)</title><rect x="86.1250%" y="277" width="0.0479%" height="15" fill="rgb(224,166,26)" fg:x="28758" fg:w="16"/><text x="86.3750%" y="287.50"></text></g><g><title>ext4_get_group_desc (22 samples, 0.07%)</title><rect x="86.1729%" y="309" width="0.0659%" height="15" fill="rgb(233,0,47)" fg:x="28774" fg:w="22"/><text x="86.4229%" y="319.50"></text></g><g><title>__mark_inode_dirty (2,667 samples, 7.99%)</title><rect x="78.2696%" y="405" width="7.9872%" height="15" fill="rgb(253,80,5)" fg:x="26135" fg:w="2667"/><text x="78.5196%" y="415.50">__mark_inod..</text></g><g><title>ext4_dirty_inode (2,364 samples, 7.08%)</title><rect x="79.1770%" y="389" width="7.0798%" height="15" fill="rgb(214,133,25)" fg:x="26438" fg:w="2364"/><text x="79.4270%" y="399.50">ext4_dirt..</text></g><g><title>__ext4_mark_inode_dirty (1,970 samples, 5.90%)</title><rect x="80.3570%" y="373" width="5.8998%" height="15" fill="rgb(209,27,14)" fg:x="26832" fg:w="1970"/><text x="80.6070%" y="383.50">__ext4_..</text></g><g><title>ext4_reserve_inode_write (355 samples, 1.06%)</title><rect x="85.1936%" y="357" width="1.0632%" height="15" fill="rgb(219,102,51)" fg:x="28447" fg:w="355"/><text x="85.4436%" y="367.50"></text></g><g><title>ext4_get_inode_loc (250 samples, 0.75%)</title><rect x="85.5081%" y="341" width="0.7487%" height="15" fill="rgb(237,18,16)" fg:x="28552" fg:w="250"/><text x="85.7581%" y="351.50"></text></g><g><title>__ext4_get_inode_loc (240 samples, 0.72%)</title><rect x="85.5380%" y="325" width="0.7188%" height="15" fill="rgb(241,85,17)" fg:x="28562" fg:w="240"/><text x="85.7880%" y="335.50"></text></g><g><title>ext4_inode_table (6 samples, 0.02%)</title><rect x="86.2388%" y="309" width="0.0180%" height="15" fill="rgb(236,90,42)" fg:x="28796" fg:w="6"/><text x="86.4888%" y="319.50"></text></g><g><title>generic_perform_write (4,038 samples, 12.09%)</title><rect x="74.2535%" y="437" width="12.0931%" height="15" fill="rgb(249,57,21)" fg:x="24794" fg:w="4038"/><text x="74.5035%" y="447.50">generic_perform_wr..</text></g><g><title>generic_write_end (2,879 samples, 8.62%)</title><rect x="77.7245%" y="421" width="8.6221%" height="15" fill="rgb(243,12,36)" fg:x="25953" fg:w="2879"/><text x="77.9745%" y="431.50">generic_writ..</text></g><g><title>unlock_page (30 samples, 0.09%)</title><rect x="86.2568%" y="405" width="0.0898%" height="15" fill="rgb(253,128,47)" fg:x="28802" fg:w="30"/><text x="86.5068%" y="415.50"></text></g><g><title>ext4_buffered_write_iter (4,272 samples, 12.79%)</title><rect x="73.6696%" y="453" width="12.7939%" height="15" fill="rgb(207,33,20)" fg:x="24599" fg:w="4272"/><text x="73.9196%" y="463.50">ext4_buffered_write..</text></g><g><title>up_write (39 samples, 0.12%)</title><rect x="86.3466%" y="437" width="0.1168%" height="15" fill="rgb(233,215,35)" fg:x="28832" fg:w="39"/><text x="86.5966%" y="447.50"></text></g><g><title>ext4_file_write_iter (37 samples, 0.11%)</title><rect x="86.4634%" y="453" width="0.1108%" height="15" fill="rgb(249,188,52)" fg:x="28871" fg:w="37"/><text x="86.7134%" y="463.50"></text></g><g><title>new_sync_write (4,347 samples, 13.02%)</title><rect x="73.5797%" y="469" width="13.0185%" height="15" fill="rgb(225,12,32)" fg:x="24569" fg:w="4347"/><text x="73.8297%" y="479.50">new_sync_write</text></g><g><title>iov_iter_init (8 samples, 0.02%)</title><rect x="86.5742%" y="453" width="0.0240%" height="15" fill="rgb(247,98,14)" fg:x="28908" fg:w="8"/><text x="86.8242%" y="463.50"></text></g><g><title>ksys_write (4,702 samples, 14.08%)</title><rect x="72.5465%" y="501" width="14.0816%" height="15" fill="rgb(247,219,48)" fg:x="24224" fg:w="4702"/><text x="72.7965%" y="511.50">ksys_write</text></g><g><title>vfs_write (4,460 samples, 13.36%)</title><rect x="73.2712%" y="485" width="13.3569%" height="15" fill="rgb(253,60,48)" fg:x="24466" fg:w="4460"/><text x="73.5212%" y="495.50">vfs_write</text></g><g><title>security_file_permission (7 samples, 0.02%)</title><rect x="86.6072%" y="469" width="0.0210%" height="15" fill="rgb(245,15,52)" fg:x="28919" fg:w="7"/><text x="86.8572%" y="479.50"></text></g><g><title>syscall_enter_from_user_mode (13 samples, 0.04%)</title><rect x="86.6281%" y="501" width="0.0389%" height="15" fill="rgb(220,133,28)" fg:x="28926" fg:w="13"/><text x="86.8781%" y="511.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (4,840 samples, 14.49%)</title><rect x="72.3009%" y="533" width="14.4949%" height="15" fill="rgb(217,180,4)" fg:x="24142" fg:w="4840"/><text x="72.5509%" y="543.50">entry_SYSCALL_64_after..</text></g><g><title>do_syscall_64 (4,806 samples, 14.39%)</title><rect x="72.4027%" y="517" width="14.3931%" height="15" fill="rgb(251,24,1)" fg:x="24176" fg:w="4806"/><text x="72.6527%" y="527.50">do_syscall_64</text></g><g><title>syscall_exit_to_user_mode (43 samples, 0.13%)</title><rect x="86.6671%" y="501" width="0.1288%" height="15" fill="rgb(212,185,49)" fg:x="28939" fg:w="43"/><text x="86.9171%" y="511.50"></text></g><g><title>exit_to_user_mode_prepare (31 samples, 0.09%)</title><rect x="86.7030%" y="485" width="0.0928%" height="15" fill="rgb(215,175,22)" fg:x="28951" fg:w="31"/><text x="86.9530%" y="495.50"></text></g><g><title>&lt;std::io::stdio::StdoutRaw as std::io::Write&gt;::write_all (5,208 samples, 15.60%)</title><rect x="71.2797%" y="565" width="15.5970%" height="15" fill="rgb(250,205,14)" fg:x="23801" fg:w="5208"/><text x="71.5297%" y="575.50">&lt;std::io::stdio::StdoutR..</text></g><g><title>__write (5,143 samples, 15.40%)</title><rect x="71.4743%" y="549" width="15.4024%" height="15" fill="rgb(225,211,22)" fg:x="23866" fg:w="5143"/><text x="71.7243%" y="559.50">__write</text></g><g><title>syscall_return_via_sysret (27 samples, 0.08%)</title><rect x="86.7958%" y="533" width="0.0809%" height="15" fill="rgb(251,179,42)" fg:x="28982" fg:w="27"/><text x="87.0458%" y="543.50"></text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write_all (5,587 samples, 16.73%)</title><rect x="70.5280%" y="613" width="16.7321%" height="15" fill="rgb(208,216,51)" fg:x="23550" fg:w="5587"/><text x="70.7780%" y="623.50">&lt;std::io::stdio::Stdout as..</text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_all (5,563 samples, 16.66%)</title><rect x="70.5999%" y="597" width="16.6602%" height="15" fill="rgb(235,36,11)" fg:x="23574" fg:w="5563"/><text x="70.8499%" y="607.50">&lt;&amp;std::io::stdio::Stdout a..</text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (5,449 samples, 16.32%)</title><rect x="70.9413%" y="581" width="16.3188%" height="15" fill="rgb(213,189,28)" fg:x="23688" fg:w="5449"/><text x="71.1913%" y="591.50">&lt;std::io::stdio::StdoutLo..</text></g><g><title>[libc.so.6] (128 samples, 0.38%)</title><rect x="86.8767%" y="565" width="0.3833%" height="15" fill="rgb(227,203,42)" fg:x="29009" fg:w="128"/><text x="87.1267%" y="575.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_fmt (13 samples, 0.04%)</title><rect x="87.9758%" y="597" width="0.0389%" height="15" fill="rgb(244,72,36)" fg:x="29376" fg:w="13"/><text x="88.2258%" y="607.50"></text></g><g><title>&lt;tracing_core::event::Event as tracing_log::NormalizeEvent&gt;::normalized_metadata (54 samples, 0.16%)</title><rect x="88.0147%" y="597" width="0.1617%" height="15" fill="rgb(213,53,17)" fg:x="29389" fg:w="54"/><text x="88.2647%" y="607.50"></text></g><g><title>tracing_log::level_to_cs (31 samples, 0.09%)</title><rect x="88.0836%" y="581" width="0.0928%" height="15" fill="rgb(207,167,3)" fg:x="29412" fg:w="31"/><text x="88.3336%" y="591.50"></text></g><g><title>&lt;tracing_core::event::Event as tracing_subscriber::field::RecordFields&gt;::record (12 samples, 0.04%)</title><rect x="88.1765%" y="597" width="0.0359%" height="15" fill="rgb(216,98,30)" fg:x="29443" fg:w="12"/><text x="88.4265%" y="607.50"></text></g><g><title>&lt;tracing_subscriber::fmt::time::datetime::DateTime as core::convert::From&lt;std::time::SystemTime&gt;&gt;::from (128 samples, 0.38%)</title><rect x="88.2573%" y="581" width="0.3833%" height="15" fill="rgb(236,123,15)" fg:x="29470" fg:w="128"/><text x="88.5073%" y="591.50"></text></g><g><title>std::time::SystemTime::duration_since (34 samples, 0.10%)</title><rect x="88.5388%" y="565" width="0.1018%" height="15" fill="rgb(248,81,50)" fg:x="29564" fg:w="34"/><text x="88.7888%" y="575.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::sub_timespec (15 samples, 0.04%)</title><rect x="88.5957%" y="549" width="0.0449%" height="15" fill="rgb(214,120,4)" fg:x="29583" fg:w="15"/><text x="88.8457%" y="559.50"></text></g><g><title>core::fmt::Formatter::write_fmt (7 samples, 0.02%)</title><rect x="88.8503%" y="549" width="0.0210%" height="15" fill="rgb(208,179,34)" fg:x="29668" fg:w="7"/><text x="89.1003%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (134 samples, 0.40%)</title><rect x="89.4223%" y="533" width="0.4013%" height="15" fill="rgb(227,140,7)" fg:x="29859" fg:w="134"/><text x="89.6723%" y="543.50"></text></g><g><title>[libc.so.6] (60 samples, 0.18%)</title><rect x="89.6439%" y="517" width="0.1797%" height="15" fill="rgb(214,22,6)" fg:x="29933" fg:w="60"/><text x="89.8939%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (15 samples, 0.04%)</title><rect x="90.0033%" y="517" width="0.0449%" height="15" fill="rgb(207,137,27)" fg:x="30053" fg:w="15"/><text x="90.2533%" y="527.50"></text></g><g><title>[libc.so.6] (6 samples, 0.02%)</title><rect x="90.0302%" y="501" width="0.0180%" height="15" fill="rgb(210,8,46)" fg:x="30062" fg:w="6"/><text x="90.2802%" y="511.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for isize&gt;::fmt (113 samples, 0.34%)</title><rect x="89.8236%" y="533" width="0.3384%" height="15" fill="rgb(240,16,54)" fg:x="29993" fg:w="113"/><text x="90.0736%" y="543.50"></text></g><g><title>core::fmt::Formatter::pad_integral (38 samples, 0.11%)</title><rect x="90.0482%" y="517" width="0.1138%" height="15" fill="rgb(211,209,29)" fg:x="30068" fg:w="38"/><text x="90.2982%" y="527.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (6 samples, 0.02%)</title><rect x="90.1441%" y="501" width="0.0180%" height="15" fill="rgb(226,228,24)" fg:x="30100" fg:w="6"/><text x="90.3941%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (20 samples, 0.06%)</title><rect x="90.4046%" y="517" width="0.0599%" height="15" fill="rgb(222,84,9)" fg:x="30187" fg:w="20"/><text x="90.6546%" y="527.50"></text></g><g><title>[libc.so.6] (8 samples, 0.02%)</title><rect x="90.4405%" y="501" width="0.0240%" height="15" fill="rgb(234,203,30)" fg:x="30199" fg:w="8"/><text x="90.6905%" y="511.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (122 samples, 0.37%)</title><rect x="90.1620%" y="533" width="0.3654%" height="15" fill="rgb(238,109,14)" fg:x="30106" fg:w="122"/><text x="90.4120%" y="543.50"></text></g><g><title>core::fmt::Formatter::pad_integral (21 samples, 0.06%)</title><rect x="90.4645%" y="517" width="0.0629%" height="15" fill="rgb(233,206,34)" fg:x="30207" fg:w="21"/><text x="90.7145%" y="527.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (5 samples, 0.01%)</title><rect x="90.5124%" y="501" width="0.0150%" height="15" fill="rgb(220,167,47)" fg:x="30223" fg:w="5"/><text x="90.7624%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (42 samples, 0.13%)</title><rect x="90.7879%" y="517" width="0.1258%" height="15" fill="rgb(238,105,10)" fg:x="30315" fg:w="42"/><text x="91.0379%" y="527.50"></text></g><g><title>[libc.so.6] (17 samples, 0.05%)</title><rect x="90.8628%" y="501" width="0.0509%" height="15" fill="rgb(213,227,17)" fg:x="30340" fg:w="17"/><text x="91.1128%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_char (57 samples, 0.17%)</title><rect x="91.3599%" y="501" width="0.1707%" height="15" fill="rgb(217,132,38)" fg:x="30506" fg:w="57"/><text x="91.6099%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (42 samples, 0.13%)</title><rect x="91.5307%" y="501" width="0.1258%" height="15" fill="rgb(242,146,4)" fg:x="30563" fg:w="42"/><text x="91.7807%" y="511.50"></text></g><g><title>[libc.so.6] (7 samples, 0.02%)</title><rect x="91.6355%" y="485" width="0.0210%" height="15" fill="rgb(212,61,9)" fg:x="30598" fg:w="7"/><text x="91.8855%" y="495.50"></text></g><g><title>core::fmt::write (1,043 samples, 3.12%)</title><rect x="88.6407%" y="581" width="3.1236%" height="15" fill="rgb(247,126,22)" fg:x="29598" fg:w="1043"/><text x="88.8907%" y="591.50">cor..</text></g><g><title>&lt;tracing_subscriber::fmt::time::datetime::DateTime as core::fmt::Display&gt;::fmt (1,021 samples, 3.06%)</title><rect x="88.7065%" y="565" width="3.0577%" height="15" fill="rgb(220,196,2)" fg:x="29620" fg:w="1021"/><text x="88.9565%" y="575.50">&lt;tr..</text></g><g><title>core::fmt::write (966 samples, 2.89%)</title><rect x="88.8713%" y="549" width="2.8930%" height="15" fill="rgb(208,46,4)" fg:x="29675" fg:w="966"/><text x="89.1213%" y="559.50">co..</text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u8&gt;::fmt (413 samples, 1.24%)</title><rect x="90.5274%" y="533" width="1.2369%" height="15" fill="rgb(252,104,46)" fg:x="30228" fg:w="413"/><text x="90.7774%" y="543.50"></text></g><g><title>core::fmt::Formatter::pad_integral (284 samples, 0.85%)</title><rect x="90.9137%" y="517" width="0.8505%" height="15" fill="rgb(237,152,48)" fg:x="30357" fg:w="284"/><text x="91.1637%" y="527.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (36 samples, 0.11%)</title><rect x="91.6564%" y="501" width="0.1078%" height="15" fill="rgb(221,59,37)" fg:x="30605" fg:w="36"/><text x="91.9064%" y="511.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (173 samples, 0.52%)</title><rect x="91.7642%" y="581" width="0.5181%" height="15" fill="rgb(209,202,51)" fg:x="30641" fg:w="173"/><text x="92.0142%" y="591.50"></text></g><g><title>clock_gettime (159 samples, 0.48%)</title><rect x="91.8062%" y="565" width="0.4762%" height="15" fill="rgb(228,81,30)" fg:x="30655" fg:w="159"/><text x="92.0562%" y="575.50"></text></g><g><title>__vdso_clock_gettime (129 samples, 0.39%)</title><rect x="91.8960%" y="549" width="0.3863%" height="15" fill="rgb(227,42,39)" fg:x="30685" fg:w="129"/><text x="92.1460%" y="559.50"></text></g><g><title>&lt;tracing_subscriber::fmt::time::SystemTime as tracing_subscriber::fmt::time::FormatTime&gt;::format_time (1,367 samples, 4.09%)</title><rect x="88.2124%" y="597" width="4.0939%" height="15" fill="rgb(221,26,2)" fg:x="29455" fg:w="1367"/><text x="88.4624%" y="607.50">&lt;tra..</text></g><g><title>std::time::SystemTime::now (8 samples, 0.02%)</title><rect x="92.2824%" y="581" width="0.0240%" height="15" fill="rgb(254,61,31)" fg:x="30814" fg:w="8"/><text x="92.5324%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (76 samples, 0.23%)</title><rect x="92.8963%" y="581" width="0.2276%" height="15" fill="rgb(222,173,38)" fg:x="31019" fg:w="76"/><text x="93.1463%" y="591.50"></text></g><g><title>[libc.so.6] (32 samples, 0.10%)</title><rect x="93.0281%" y="565" width="0.0958%" height="15" fill="rgb(218,50,12)" fg:x="31063" fg:w="32"/><text x="93.2781%" y="575.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (5 samples, 0.01%)</title><rect x="93.2407%" y="549" width="0.0150%" height="15" fill="rgb(223,88,40)" fg:x="31134" fg:w="5"/><text x="93.4907%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (21 samples, 0.06%)</title><rect x="93.2557%" y="549" width="0.0629%" height="15" fill="rgb(237,54,19)" fg:x="31139" fg:w="21"/><text x="93.5057%" y="559.50"></text></g><g><title>[libc.so.6] (15 samples, 0.04%)</title><rect x="93.2736%" y="533" width="0.0449%" height="15" fill="rgb(251,129,25)" fg:x="31145" fg:w="15"/><text x="93.5236%" y="543.50"></text></g><g><title>&lt;str as core::fmt::Display&gt;::fmt (8 samples, 0.02%)</title><rect x="93.3186%" y="549" width="0.0240%" height="15" fill="rgb(238,97,19)" fg:x="31160" fg:w="8"/><text x="93.5686%" y="559.50"></text></g><g><title>&lt;nu_ansi_term::ansi::Suffix as core::fmt::Display&gt;::fmt (92 samples, 0.28%)</title><rect x="93.1299%" y="581" width="0.2755%" height="15" fill="rgb(240,169,18)" fg:x="31097" fg:w="92"/><text x="93.3799%" y="591.50"></text></g><g><title>core::fmt::write (77 samples, 0.23%)</title><rect x="93.1748%" y="565" width="0.2306%" height="15" fill="rgb(230,187,49)" fg:x="31112" fg:w="77"/><text x="93.4248%" y="575.50"></text></g><g><title>core::fmt::Formatter::pad (20 samples, 0.06%)</title><rect x="93.3455%" y="549" width="0.0599%" height="15" fill="rgb(209,44,26)" fg:x="31169" fg:w="20"/><text x="93.5955%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (40 samples, 0.12%)</title><rect x="93.5551%" y="565" width="0.1198%" height="15" fill="rgb(244,0,6)" fg:x="31239" fg:w="40"/><text x="93.8051%" y="575.50"></text></g><g><title>[libc.so.6] (19 samples, 0.06%)</title><rect x="93.6180%" y="549" width="0.0569%" height="15" fill="rgb(248,18,21)" fg:x="31260" fg:w="19"/><text x="93.8680%" y="559.50"></text></g><g><title>&lt;core::fmt::Formatter as core::fmt::Write&gt;::write_str (7 samples, 0.02%)</title><rect x="93.6749%" y="565" width="0.0210%" height="15" fill="rgb(245,180,19)" fg:x="31279" fg:w="7"/><text x="93.9249%" y="575.50"></text></g><g><title>core::fmt::Formatter::write_fmt (10 samples, 0.03%)</title><rect x="93.6959%" y="565" width="0.0299%" height="15" fill="rgb(252,118,36)" fg:x="31286" fg:w="10"/><text x="93.9459%" y="575.50"></text></g><g><title>&lt;nu_ansi_term::ansi::Prefix as core::fmt::Display&gt;::fmt (4 samples, 0.01%)</title><rect x="93.9535%" y="549" width="0.0120%" height="15" fill="rgb(210,224,19)" fg:x="31372" fg:w="4"/><text x="94.2035%" y="559.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (5 samples, 0.01%)</title><rect x="94.1901%" y="517" width="0.0150%" height="15" fill="rgb(218,30,24)" fg:x="31451" fg:w="5"/><text x="94.4401%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (22 samples, 0.07%)</title><rect x="94.2050%" y="517" width="0.0659%" height="15" fill="rgb(219,75,50)" fg:x="31456" fg:w="22"/><text x="94.4550%" y="527.50"></text></g><g><title>[libc.so.6] (12 samples, 0.04%)</title><rect x="94.2350%" y="501" width="0.0359%" height="15" fill="rgb(234,72,50)" fg:x="31466" fg:w="12"/><text x="94.4850%" y="511.50"></text></g><g><title>&lt;str as core::fmt::Display&gt;::fmt (6 samples, 0.02%)</title><rect x="94.2709%" y="517" width="0.0180%" height="15" fill="rgb(219,100,48)" fg:x="31478" fg:w="6"/><text x="94.5209%" y="527.50"></text></g><g><title>&lt;nu_ansi_term::ansi::Suffix as core::fmt::Display&gt;::fmt (127 samples, 0.38%)</title><rect x="93.9654%" y="549" width="0.3803%" height="15" fill="rgb(253,5,41)" fg:x="31376" fg:w="127"/><text x="94.2154%" y="559.50"></text></g><g><title>core::fmt::write (103 samples, 0.31%)</title><rect x="94.0373%" y="533" width="0.3085%" height="15" fill="rgb(247,181,11)" fg:x="31400" fg:w="103"/><text x="94.2873%" y="543.50"></text></g><g><title>core::fmt::Formatter::pad (19 samples, 0.06%)</title><rect x="94.2889%" y="517" width="0.0569%" height="15" fill="rgb(222,223,25)" fg:x="31484" fg:w="19"/><text x="94.5389%" y="527.50"></text></g><g><title>core::fmt::Formatter::write_fmt (20 samples, 0.06%)</title><rect x="94.6572%" y="533" width="0.0599%" height="15" fill="rgb(214,198,28)" fg:x="31607" fg:w="20"/><text x="94.9072%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_char (16 samples, 0.05%)</title><rect x="95.1484%" y="517" width="0.0479%" height="15" fill="rgb(230,46,43)" fg:x="31771" fg:w="16"/><text x="95.3984%" y="527.50"></text></g><g><title>[libc.so.6] (25 samples, 0.07%)</title><rect x="95.3011%" y="501" width="0.0749%" height="15" fill="rgb(233,65,53)" fg:x="31822" fg:w="25"/><text x="95.5511%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (61 samples, 0.18%)</title><rect x="95.1963%" y="517" width="0.1827%" height="15" fill="rgb(221,121,27)" fg:x="31787" fg:w="61"/><text x="95.4463%" y="527.50"></text></g><g><title>&lt;char as core::fmt::Display&gt;::fmt (14 samples, 0.04%)</title><rect x="95.3790%" y="517" width="0.0419%" height="15" fill="rgb(247,70,47)" fg:x="31848" fg:w="14"/><text x="95.6290%" y="527.50"></text></g><g><title>&lt;nu_ansi_term::display::AnsiGenericString&lt;str&gt; as core::fmt::Display&gt;::fmt (674 samples, 2.02%)</title><rect x="93.4054%" y="581" width="2.0185%" height="15" fill="rgb(228,85,35)" fg:x="31189" fg:w="674"/><text x="93.6554%" y="591.50">&lt;..</text></g><g><title>core::fmt::write (567 samples, 1.70%)</title><rect x="93.7259%" y="565" width="1.6981%" height="15" fill="rgb(209,50,18)" fg:x="31296" fg:w="567"/><text x="93.9759%" y="575.50"></text></g><g><title>nu_ansi_term::ansi::&lt;impl nu_ansi_term::style::Style&gt;::write_prefix (360 samples, 1.08%)</title><rect x="94.3458%" y="549" width="1.0781%" height="15" fill="rgb(250,19,35)" fg:x="31503" fg:w="360"/><text x="94.5958%" y="559.50"></text></g><g><title>core::fmt::write (236 samples, 0.71%)</title><rect x="94.7171%" y="533" width="0.7068%" height="15" fill="rgb(253,107,29)" fg:x="31627" fg:w="236"/><text x="94.9671%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_fmt (5 samples, 0.01%)</title><rect x="95.5976%" y="565" width="0.0150%" height="15" fill="rgb(252,179,29)" fg:x="31921" fg:w="5"/><text x="95.8476%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (11 samples, 0.03%)</title><rect x="95.7444%" y="533" width="0.0329%" height="15" fill="rgb(238,194,6)" fg:x="31970" fg:w="11"/><text x="95.9944%" y="543.50"></text></g><g><title>[libc.so.6] (6 samples, 0.02%)</title><rect x="95.7593%" y="517" width="0.0180%" height="15" fill="rgb(238,164,29)" fg:x="31975" fg:w="6"/><text x="96.0093%" y="527.50"></text></g><g><title>core::fmt::Formatter::write_fmt (7 samples, 0.02%)</title><rect x="95.7803%" y="533" width="0.0210%" height="15" fill="rgb(224,25,9)" fg:x="31982" fg:w="7"/><text x="96.0303%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_fmt (5 samples, 0.01%)</title><rect x="95.9660%" y="501" width="0.0150%" height="15" fill="rgb(244,153,23)" fg:x="32044" fg:w="5"/><text x="96.2160%" y="511.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (6 samples, 0.02%)</title><rect x="96.0588%" y="485" width="0.0180%" height="15" fill="rgb(212,203,14)" fg:x="32075" fg:w="6"/><text x="96.3088%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (23 samples, 0.07%)</title><rect x="96.0768%" y="485" width="0.0689%" height="15" fill="rgb(220,164,20)" fg:x="32081" fg:w="23"/><text x="96.3268%" y="495.50"></text></g><g><title>[libc.so.6] (10 samples, 0.03%)</title><rect x="96.1157%" y="469" width="0.0299%" height="15" fill="rgb(222,203,48)" fg:x="32094" fg:w="10"/><text x="96.3657%" y="479.50"></text></g><g><title>&lt;nu_ansi_term::ansi::Suffix as core::fmt::Display&gt;::fmt (86 samples, 0.26%)</title><rect x="95.9330%" y="517" width="0.2576%" height="15" fill="rgb(215,159,22)" fg:x="32033" fg:w="86"/><text x="96.1830%" y="527.50"></text></g><g><title>core::fmt::write (70 samples, 0.21%)</title><rect x="95.9810%" y="501" width="0.2096%" height="15" fill="rgb(216,183,47)" fg:x="32049" fg:w="70"/><text x="96.2310%" y="511.50"></text></g><g><title>core::fmt::Formatter::pad (13 samples, 0.04%)</title><rect x="96.1517%" y="485" width="0.0389%" height="15" fill="rgb(229,195,25)" fg:x="32106" fg:w="13"/><text x="96.4017%" y="495.50"></text></g><g><title>core::fmt::Formatter::write_fmt (5 samples, 0.01%)</title><rect x="96.3613%" y="501" width="0.0150%" height="15" fill="rgb(224,132,51)" fg:x="32176" fg:w="5"/><text x="96.6113%" y="511.50"></text></g><g><title>core::fmt::write (80 samples, 0.24%)</title><rect x="96.3763%" y="501" width="0.2396%" height="15" fill="rgb(240,63,7)" fg:x="32181" fg:w="80"/><text x="96.6263%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (28 samples, 0.08%)</title><rect x="96.5320%" y="485" width="0.0839%" height="15" fill="rgb(249,182,41)" fg:x="32233" fg:w="28"/><text x="96.7820%" y="495.50"></text></g><g><title>[libc.so.6] (8 samples, 0.02%)</title><rect x="96.5919%" y="469" width="0.0240%" height="15" fill="rgb(243,47,26)" fg:x="32253" fg:w="8"/><text x="96.8419%" y="479.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::FmtLevel as core::fmt::Display&gt;::fmt (448 samples, 1.34%)</title><rect x="95.4239%" y="581" width="1.3417%" height="15" fill="rgb(233,48,2)" fg:x="31863" fg:w="448"/><text x="95.6739%" y="591.50"></text></g><g><title>core::fmt::write (385 samples, 1.15%)</title><rect x="95.6126%" y="565" width="1.1530%" height="15" fill="rgb(244,165,34)" fg:x="31926" fg:w="385"/><text x="95.8626%" y="575.50"></text></g><g><title>&lt;nu_ansi_term::display::AnsiGenericString&lt;str&gt; as core::fmt::Display&gt;::fmt (364 samples, 1.09%)</title><rect x="95.6755%" y="549" width="1.0901%" height="15" fill="rgb(207,89,7)" fg:x="31947" fg:w="364"/><text x="95.9255%" y="559.50"></text></g><g><title>core::fmt::write (322 samples, 0.96%)</title><rect x="95.8013%" y="533" width="0.9643%" height="15" fill="rgb(244,117,36)" fg:x="31989" fg:w="322"/><text x="96.0513%" y="543.50"></text></g><g><title>nu_ansi_term::ansi::&lt;impl nu_ansi_term::style::Style&gt;::write_prefix (192 samples, 0.58%)</title><rect x="96.1906%" y="517" width="0.5750%" height="15" fill="rgb(226,144,34)" fg:x="32119" fg:w="192"/><text x="96.4406%" y="527.50"></text></g><g><title>nu_ansi_term::ansi::&lt;impl nu_ansi_term::style::Color&gt;::write_foreground_code (50 samples, 0.15%)</title><rect x="96.6159%" y="501" width="0.1497%" height="15" fill="rgb(213,23,19)" fg:x="32261" fg:w="50"/><text x="96.8659%" y="511.50"></text></g><g><title>core::fmt::write (35 samples, 0.10%)</title><rect x="96.6608%" y="485" width="0.1048%" height="15" fill="rgb(217,75,12)" fg:x="32276" fg:w="35"/><text x="96.9108%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (13 samples, 0.04%)</title><rect x="96.7267%" y="469" width="0.0389%" height="15" fill="rgb(224,159,17)" fg:x="32298" fg:w="13"/><text x="96.9767%" y="479.50"></text></g><g><title>[libc.so.6] (8 samples, 0.02%)</title><rect x="96.7416%" y="453" width="0.0240%" height="15" fill="rgb(217,118,1)" fg:x="32303" fg:w="8"/><text x="96.9916%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_fmt (18 samples, 0.05%)</title><rect x="96.9363%" y="565" width="0.0539%" height="15" fill="rgb(232,180,48)" fg:x="32368" fg:w="18"/><text x="97.1863%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_char (13 samples, 0.04%)</title><rect x="97.2418%" y="549" width="0.0389%" height="15" fill="rgb(230,27,33)" fg:x="32470" fg:w="13"/><text x="97.4918%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (39 samples, 0.12%)</title><rect x="97.2807%" y="549" width="0.1168%" height="15" fill="rgb(205,31,21)" fg:x="32483" fg:w="39"/><text x="97.5307%" y="559.50"></text></g><g><title>[libc.so.6] (20 samples, 0.06%)</title><rect x="97.3376%" y="533" width="0.0599%" height="15" fill="rgb(253,59,4)" fg:x="32502" fg:w="20"/><text x="97.5876%" y="543.50"></text></g><g><title>core::fmt::write (1,708 samples, 5.12%)</title><rect x="92.3063%" y="597" width="5.1152%" height="15" fill="rgb(224,201,9)" fg:x="30822" fg:w="1708"/><text x="92.5563%" y="607.50">core::..</text></g><g><title>nu_ansi_term::ansi::&lt;impl nu_ansi_term::style::Style&gt;::write_prefix (218 samples, 0.65%)</title><rect x="96.7686%" y="581" width="0.6529%" height="15" fill="rgb(229,206,30)" fg:x="32312" fg:w="218"/><text x="97.0186%" y="591.50"></text></g><g><title>core::fmt::write (144 samples, 0.43%)</title><rect x="96.9902%" y="565" width="0.4313%" height="15" fill="rgb(212,67,47)" fg:x="32386" fg:w="144"/><text x="97.2402%" y="575.50"></text></g><g><title>&lt;char as core::fmt::Display&gt;::fmt (8 samples, 0.02%)</title><rect x="97.3975%" y="549" width="0.0240%" height="15" fill="rgb(211,96,50)" fg:x="32522" fg:w="8"/><text x="97.6475%" y="559.50"></text></g><g><title>&lt;core::fmt::Arguments as tracing_core::field::Value&gt;::record (11 samples, 0.03%)</title><rect x="97.5143%" y="581" width="0.0329%" height="15" fill="rgb(252,114,18)" fg:x="32561" fg:w="11"/><text x="97.7643%" y="591.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_fmt (4 samples, 0.01%)</title><rect x="97.6401%" y="565" width="0.0120%" height="15" fill="rgb(223,58,37)" fg:x="32603" fg:w="4"/><text x="97.8901%" y="575.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::Writer as core::fmt::Write&gt;::write_fmt (5 samples, 0.01%)</title><rect x="97.6521%" y="565" width="0.0150%" height="15" fill="rgb(237,70,4)" fg:x="32607" fg:w="5"/><text x="97.9021%" y="575.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (17 samples, 0.05%)</title><rect x="97.7389%" y="549" width="0.0509%" height="15" fill="rgb(244,85,46)" fg:x="32636" fg:w="17"/><text x="97.9889%" y="559.50"></text></g><g><title>core::fmt::write (135 samples, 0.40%)</title><rect x="97.6670%" y="565" width="0.4043%" height="15" fill="rgb(223,39,52)" fg:x="32612" fg:w="135"/><text x="97.9170%" y="575.50"></text></g><g><title>core::fmt::write (91 samples, 0.27%)</title><rect x="97.7988%" y="549" width="0.2725%" height="15" fill="rgb(218,200,14)" fg:x="32656" fg:w="91"/><text x="98.0488%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (70 samples, 0.21%)</title><rect x="97.8617%" y="533" width="0.2096%" height="15" fill="rgb(208,171,16)" fg:x="32677" fg:w="70"/><text x="98.1117%" y="543.50"></text></g><g><title>[libc.so.6] (64 samples, 0.19%)</title><rect x="97.8797%" y="517" width="0.1917%" height="15" fill="rgb(234,200,18)" fg:x="32683" fg:w="64"/><text x="98.1297%" y="527.50"></text></g><g><title>tracing_core::field::Field::name (15 samples, 0.04%)</title><rect x="98.0713%" y="565" width="0.0449%" height="15" fill="rgb(228,45,11)" fg:x="32747" fg:w="15"/><text x="98.3213%" y="575.50"></text></g><g><title>tracing_core::field::ValueSet::record (235 samples, 0.70%)</title><rect x="97.4215%" y="597" width="0.7038%" height="15" fill="rgb(237,182,11)" fg:x="32530" fg:w="235"/><text x="97.6715%" y="607.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::DefaultVisitor as tracing_core::field::Visit&gt;::record_debug (193 samples, 0.58%)</title><rect x="97.5472%" y="581" width="0.5780%" height="15" fill="rgb(241,175,49)" fg:x="32572" fg:w="193"/><text x="97.7972%" y="591.50"></text></g><g><title>tracing_subscriber::fmt::format::Writer::write_fmt (26 samples, 0.08%)</title><rect x="98.1252%" y="597" width="0.0779%" height="15" fill="rgb(247,38,35)" fg:x="32765" fg:w="26"/><text x="98.3752%" y="607.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::Format&lt;tracing_subscriber::fmt::format::Full,T&gt; as tracing_subscriber::fmt::format::FormatEvent&lt;S,N&gt;&gt;::format_event (3,703 samples, 11.09%)</title><rect x="87.2600%" y="613" width="11.0898%" height="15" fill="rgb(228,39,49)" fg:x="29137" fg:w="3703"/><text x="87.5100%" y="623.50">&lt;tracing_subscri..</text></g><g><title>tracing_subscriber::layer::context::Context&lt;S&gt;::event_scope (49 samples, 0.15%)</title><rect x="98.2031%" y="597" width="0.1467%" height="15" fill="rgb(226,101,26)" fg:x="32791" fg:w="49"/><text x="98.4531%" y="607.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::current_span (38 samples, 0.11%)</title><rect x="98.2361%" y="581" width="0.1138%" height="15" fill="rgb(206,141,19)" fg:x="32802" fg:w="38"/><text x="98.4861%" y="591.50"></text></g><g><title>&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_event (9,405 samples, 28.17%)</title><rect x="70.2225%" y="629" width="28.1663%" height="15" fill="rgb(211,200,13)" fg:x="23448" fg:w="9405"/><text x="70.4725%" y="639.50">&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,..</text></g><g><title>std::io::stdio::stdout (13 samples, 0.04%)</title><rect x="98.3499%" y="613" width="0.0389%" height="15" fill="rgb(241,121,6)" fg:x="32840" fg:w="13"/><text x="98.5999%" y="623.50"></text></g><g><title>&lt;tracing_subscriber::fmt::Subscriber&lt;N,E,F,W&gt; as tracing_core::subscriber::Subscriber&gt;::event_enabled (11 samples, 0.03%)</title><rect x="98.4906%" y="613" width="0.0329%" height="15" fill="rgb(234,221,29)" fg:x="32887" fg:w="11"/><text x="98.7406%" y="623.50"></text></g><g><title>&lt;tokio_util::codec::framed_impl::FramedImpl&lt;T,U,R&gt; as futures_core::stream::Stream&gt;::poll_next (11,149 samples, 33.39%)</title><rect x="65.1613%" y="661" width="33.3892%" height="15" fill="rgb(229,136,5)" fg:x="21758" fg:w="11149"/><text x="65.4113%" y="671.50">&lt;tokio_util::codec::framed_impl::FramedImpl&lt;T,U,R&gt; as ..</text></g><g><title>tracing_core::event::Event::dispatch (9,500 samples, 28.45%)</title><rect x="70.0997%" y="645" width="28.4508%" height="15" fill="rgb(238,36,11)" fg:x="23407" fg:w="9500"/><text x="70.3497%" y="655.50">tracing_core::event::Event::dispatch</text></g><g><title>tracing_core::dispatcher::get_default (54 samples, 0.16%)</title><rect x="98.3888%" y="629" width="0.1617%" height="15" fill="rgb(251,55,41)" fg:x="32853" fg:w="54"/><text x="98.6388%" y="639.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::event_enabled (9 samples, 0.03%)</title><rect x="98.5236%" y="613" width="0.0270%" height="15" fill="rgb(242,34,40)" fg:x="32898" fg:w="9"/><text x="98.7736%" y="623.50"></text></g><g><title>__libc_free (10 samples, 0.03%)</title><rect x="98.5505%" y="661" width="0.0299%" height="15" fill="rgb(215,42,17)" fg:x="32907" fg:w="10"/><text x="98.8005%" y="671.50"></text></g><g><title>[libc.so.6] (6 samples, 0.02%)</title><rect x="98.5625%" y="645" width="0.0180%" height="15" fill="rgb(207,44,46)" fg:x="32911" fg:w="6"/><text x="98.8125%" y="655.50"></text></g><g><title>malloc (11 samples, 0.03%)</title><rect x="98.7661%" y="645" width="0.0329%" height="15" fill="rgb(211,206,28)" fg:x="32979" fg:w="11"/><text x="99.0161%" y="655.50"></text></g><g><title>futures_util::lock::bilock::BiLock&lt;T&gt;::poll_lock (75 samples, 0.22%)</title><rect x="98.5805%" y="661" width="0.2246%" height="15" fill="rgb(237,167,16)" fg:x="32917" fg:w="75"/><text x="98.8305%" y="671.50"></text></g><g><title>syscall (6 samples, 0.02%)</title><rect x="98.8350%" y="613" width="0.0180%" height="15" fill="rgb(233,66,6)" fg:x="33002" fg:w="6"/><text x="99.0850%" y="623.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (5 samples, 0.01%)</title><rect x="98.8380%" y="597" width="0.0150%" height="15" fill="rgb(246,123,29)" fg:x="33003" fg:w="5"/><text x="99.0880%" y="607.50"></text></g><g><title>do_syscall_64 (5 samples, 0.01%)</title><rect x="98.8380%" y="581" width="0.0150%" height="15" fill="rgb(209,62,40)" fg:x="33003" fg:w="5"/><text x="99.0880%" y="591.50"></text></g><g><title>__x64_sys_futex (5 samples, 0.01%)</title><rect x="98.8380%" y="565" width="0.0150%" height="15" fill="rgb(218,4,25)" fg:x="33003" fg:w="5"/><text x="99.0880%" y="575.50"></text></g><g><title>do_futex (5 samples, 0.01%)</title><rect x="98.8380%" y="549" width="0.0150%" height="15" fill="rgb(253,91,49)" fg:x="33003" fg:w="5"/><text x="99.0880%" y="559.50"></text></g><g><title>futex_wake (5 samples, 0.01%)</title><rect x="98.8380%" y="533" width="0.0150%" height="15" fill="rgb(228,155,29)" fg:x="33003" fg:w="5"/><text x="99.0880%" y="543.50"></text></g><g><title>wake_up_q (4 samples, 0.01%)</title><rect x="98.8410%" y="517" width="0.0120%" height="15" fill="rgb(243,57,37)" fg:x="33004" fg:w="4"/><text x="99.0910%" y="527.50"></text></g><g><title>try_to_wake_up (4 samples, 0.01%)</title><rect x="98.8410%" y="501" width="0.0120%" height="15" fill="rgb(244,167,17)" fg:x="33004" fg:w="4"/><text x="99.0910%" y="511.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Unparker::unpark (13 samples, 0.04%)</title><rect x="98.8530%" y="613" width="0.0389%" height="15" fill="rgb(207,181,38)" fg:x="33008" fg:w="13"/><text x="99.1030%" y="623.50"></text></g><g><title>mio::sys::unix::waker::eventfd::WakerInternal::wake (12 samples, 0.04%)</title><rect x="98.8560%" y="597" width="0.0359%" height="15" fill="rgb(211,8,23)" fg:x="33009" fg:w="12"/><text x="99.1060%" y="607.50"></text></g><g><title>&lt;&amp;std::process::ChildStdin as std::io::Write&gt;::write (11 samples, 0.03%)</title><rect x="98.8590%" y="581" width="0.0329%" height="15" fill="rgb(235,11,44)" fg:x="33010" fg:w="11"/><text x="99.1090%" y="591.50"></text></g><g><title>__write (11 samples, 0.03%)</title><rect x="98.8590%" y="565" width="0.0329%" height="15" fill="rgb(248,18,52)" fg:x="33010" fg:w="11"/><text x="99.1090%" y="575.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (10 samples, 0.03%)</title><rect x="98.8620%" y="549" width="0.0299%" height="15" fill="rgb(208,4,7)" fg:x="33011" fg:w="10"/><text x="99.1120%" y="559.50"></text></g><g><title>do_syscall_64 (10 samples, 0.03%)</title><rect x="98.8620%" y="533" width="0.0299%" height="15" fill="rgb(240,17,39)" fg:x="33011" fg:w="10"/><text x="99.1120%" y="543.50"></text></g><g><title>ksys_write (9 samples, 0.03%)</title><rect x="98.8650%" y="517" width="0.0270%" height="15" fill="rgb(207,170,3)" fg:x="33012" fg:w="9"/><text x="99.1150%" y="527.50"></text></g><g><title>vfs_write (9 samples, 0.03%)</title><rect x="98.8650%" y="501" width="0.0270%" height="15" fill="rgb(236,100,52)" fg:x="33012" fg:w="9"/><text x="99.1150%" y="511.50"></text></g><g><title>eventfd_write (9 samples, 0.03%)</title><rect x="98.8650%" y="485" width="0.0270%" height="15" fill="rgb(246,78,51)" fg:x="33012" fg:w="9"/><text x="99.1150%" y="495.50"></text></g><g><title>__wake_up_common (9 samples, 0.03%)</title><rect x="98.8650%" y="469" width="0.0270%" height="15" fill="rgb(211,17,15)" fg:x="33012" fg:w="9"/><text x="99.1150%" y="479.50"></text></g><g><title>ep_poll_callback (9 samples, 0.03%)</title><rect x="98.8650%" y="453" width="0.0270%" height="15" fill="rgb(209,59,46)" fg:x="33012" fg:w="9"/><text x="99.1150%" y="463.50"></text></g><g><title>__wake_up_common_lock (6 samples, 0.02%)</title><rect x="98.8739%" y="437" width="0.0180%" height="15" fill="rgb(210,92,25)" fg:x="33015" fg:w="6"/><text x="99.1239%" y="447.50"></text></g><g><title>__wake_up_common (6 samples, 0.02%)</title><rect x="98.8739%" y="421" width="0.0180%" height="15" fill="rgb(238,174,52)" fg:x="33015" fg:w="6"/><text x="99.1239%" y="431.50"></text></g><g><title>ep_autoremove_wake_function (6 samples, 0.02%)</title><rect x="98.8739%" y="405" width="0.0180%" height="15" fill="rgb(230,73,7)" fg:x="33015" fg:w="6"/><text x="99.1239%" y="415.50"></text></g><g><title>try_to_wake_up (6 samples, 0.02%)</title><rect x="98.8739%" y="389" width="0.0180%" height="15" fill="rgb(243,124,40)" fg:x="33015" fg:w="6"/><text x="99.1239%" y="399.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::schedule (37 samples, 0.11%)</title><rect x="98.8170%" y="645" width="0.1108%" height="15" fill="rgb(244,170,11)" fg:x="32996" fg:w="37"/><text x="99.0670%" y="655.50"></text></g><g><title>tokio::runtime::context::with_scheduler (37 samples, 0.11%)</title><rect x="98.8170%" y="629" width="0.1108%" height="15" fill="rgb(207,114,54)" fg:x="32996" fg:w="37"/><text x="99.0670%" y="639.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_local (12 samples, 0.04%)</title><rect x="98.8919%" y="613" width="0.0359%" height="15" fill="rgb(205,42,20)" fg:x="33021" fg:w="12"/><text x="99.1419%" y="623.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::worker_to_notify (7 samples, 0.02%)</title><rect x="98.9069%" y="597" width="0.0210%" height="15" fill="rgb(230,30,28)" fg:x="33026" fg:w="7"/><text x="99.1569%" y="607.50"></text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (11,551 samples, 34.59%)</title><rect x="64.3766%" y="677" width="34.5932%" height="15" fill="rgb(205,73,54)" fg:x="21496" fg:w="11551"/><text x="64.6266%" y="687.50">futures_util::stream::stream::StreamExt::poll_next_unpin</text></g><g><title>tokio::runtime::task::waker::wake_by_val (55 samples, 0.16%)</title><rect x="98.8051%" y="661" width="0.1647%" height="15" fill="rgb(254,227,23)" fg:x="32992" fg:w="55"/><text x="99.0551%" y="671.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_notified_by_val (13 samples, 0.04%)</title><rect x="98.9308%" y="645" width="0.0389%" height="15" fill="rgb(228,202,34)" fg:x="33034" fg:w="13"/><text x="99.1808%" y="655.50"></text></g><g><title>proxy_lwip::main::{{closure}}::{{closure}} (26,012 samples, 77.90%)</title><rect x="21.2243%" y="693" width="77.9012%" height="15" fill="rgb(222,225,37)" fg:x="7087" fg:w="26012"/><text x="21.4743%" y="703.50">proxy_lwip::main::{{closure}}::{{closure}}</text></g><g><title>tun::async::codec::TunPacket::new (52 samples, 0.16%)</title><rect x="98.9698%" y="677" width="0.1557%" height="15" fill="rgb(221,14,54)" fg:x="33047" fg:w="52"/><text x="99.2198%" y="687.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::convert::From&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;::from (7 samples, 0.02%)</title><rect x="99.1045%" y="661" width="0.0210%" height="15" fill="rgb(254,102,2)" fg:x="33092" fg:w="7"/><text x="99.3545%" y="671.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (28,610 samples, 85.68%)</title><rect x="13.5006%" y="709" width="85.6818%" height="15" fill="rgb(232,104,17)" fg:x="4508" fg:w="28610"/><text x="13.7506%" y="719.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::task::core::TaskIdGuard::enter (19 samples, 0.06%)</title><rect x="99.1255%" y="693" width="0.0569%" height="15" fill="rgb(250,220,14)" fg:x="33099" fg:w="19"/><text x="99.3755%" y="703.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_idle (21 samples, 0.06%)</title><rect x="99.1914%" y="709" width="0.0629%" height="15" fill="rgb(241,158,9)" fg:x="33121" fg:w="21"/><text x="99.4414%" y="719.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (28,852 samples, 86.41%)</title><rect x="12.9616%" y="725" width="86.4065%" height="15" fill="rgb(246,9,43)" fg:x="4328" fg:w="28852"/><text x="13.2116%" y="735.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::task::state::State::transition_to_running (38 samples, 0.11%)</title><rect x="99.2543%" y="709" width="0.1138%" height="15" fill="rgb(206,73,33)" fg:x="33142" fg:w="38"/><text x="99.5043%" y="719.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (29,693 samples, 88.93%)</title><rect x="10.5178%" y="741" width="88.9252%" height="15" fill="rgb(222,79,8)" fg:x="3512" fg:w="29693"/><text x="10.7678%" y="751.50">tokio::runtime::scheduler::multi_thread::worker::Context::run_task</text></g><g><title>tokio::runtime::task::raw::poll (25 samples, 0.07%)</title><rect x="99.3681%" y="725" width="0.0749%" height="15" fill="rgb(234,8,54)" fg:x="33180" fg:w="25"/><text x="99.6181%" y="735.50"></text></g><g><title>[libc.so.6] (33,178 samples, 99.36%)</title><rect x="0.1797%" y="933" width="99.3621%" height="15" fill="rgb(209,134,38)" fg:x="60" fg:w="33178"/><text x="0.4297%" y="943.50">[libc.so.6]</text></g><g><title>[libc.so.6] (33,178 samples, 99.36%)</title><rect x="0.1797%" y="917" width="99.3621%" height="15" fill="rgb(230,127,29)" fg:x="60" fg:w="33178"/><text x="0.4297%" y="927.50">[libc.so.6]</text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (33,178 samples, 99.36%)</title><rect x="0.1797%" y="901" width="99.3621%" height="15" fill="rgb(242,44,41)" fg:x="60" fg:w="33178"/><text x="0.4297%" y="911.50">std::sys::pal::unix::thread::Thread::new::thread_start</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (33,178 samples, 99.36%)</title><rect x="0.1797%" y="885" width="99.3621%" height="15" fill="rgb(222,56,43)" fg:x="60" fg:w="33178"/><text x="0.4297%" y="895.50">core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (33,170 samples, 99.34%)</title><rect x="0.2036%" y="869" width="99.3381%" height="15" fill="rgb(238,39,47)" fg:x="68" fg:w="33170"/><text x="0.4536%" y="879.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>tokio::runtime::blocking::pool::Inner::run (33,170 samples, 99.34%)</title><rect x="0.2036%" y="853" width="99.3381%" height="15" fill="rgb(226,79,43)" fg:x="68" fg:w="33170"/><text x="0.4536%" y="863.50">tokio::runtime::blocking::pool::Inner::run</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (33,148 samples, 99.27%)</title><rect x="0.2695%" y="837" width="99.2723%" height="15" fill="rgb(242,105,53)" fg:x="90" fg:w="33148"/><text x="0.5195%" y="847.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (33,148 samples, 99.27%)</title><rect x="0.2695%" y="821" width="99.2723%" height="15" fill="rgb(251,132,46)" fg:x="90" fg:w="33148"/><text x="0.5195%" y="831.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run (33,148 samples, 99.27%)</title><rect x="0.2695%" y="805" width="99.2723%" height="15" fill="rgb(231,77,14)" fg:x="90" fg:w="33148"/><text x="0.5195%" y="815.50">tokio::runtime::scheduler::multi_thread::worker::run</text></g><g><title>tokio::runtime::context::runtime::enter_runtime (33,148 samples, 99.27%)</title><rect x="0.2695%" y="789" width="99.2723%" height="15" fill="rgb(240,135,9)" fg:x="90" fg:w="33148"/><text x="0.5195%" y="799.50">tokio::runtime::context::runtime::enter_runtime</text></g><g><title>tokio::runtime::context::set_scheduler (33,148 samples, 99.27%)</title><rect x="0.2695%" y="773" width="99.2723%" height="15" fill="rgb(248,109,14)" fg:x="90" fg:w="33148"/><text x="0.5195%" y="783.50">tokio::runtime::context::set_scheduler</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (33,148 samples, 99.27%)</title><rect x="0.2695%" y="757" width="99.2723%" height="15" fill="rgb(227,146,52)" fg:x="90" fg:w="33148"/><text x="0.5195%" y="767.50">tokio::runtime::scheduler::multi_thread::worker::Context::run</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::maintenance (33 samples, 0.10%)</title><rect x="99.4430%" y="741" width="0.0988%" height="15" fill="rgb(232,54,3)" fg:x="33205" fg:w="33"/><text x="99.6930%" y="751.50"></text></g><g><title>__write (20 samples, 0.06%)</title><rect x="99.5418%" y="917" width="0.0599%" height="15" fill="rgb(229,201,43)" fg:x="33238" fg:w="20"/><text x="99.7918%" y="927.50"></text></g><g><title>entry_SYSCALL_64 (20 samples, 0.06%)</title><rect x="99.5418%" y="901" width="0.0599%" height="15" fill="rgb(252,161,33)" fg:x="33238" fg:w="20"/><text x="99.7918%" y="911.50"></text></g><g><title>send (7 samples, 0.02%)</title><rect x="99.6077%" y="917" width="0.0210%" height="15" fill="rgb(226,146,40)" fg:x="33260" fg:w="7"/><text x="99.8577%" y="927.50"></text></g><g><title>entry_SYSCALL_64 (7 samples, 0.02%)</title><rect x="99.6077%" y="901" width="0.0210%" height="15" fill="rgb(219,47,25)" fg:x="33260" fg:w="7"/><text x="99.8577%" y="911.50"></text></g><g><title>[unknown] (54 samples, 0.16%)</title><rect x="99.5418%" y="933" width="0.1617%" height="15" fill="rgb(250,135,13)" fg:x="33238" fg:w="54"/><text x="99.7918%" y="943.50"></text></g><g><title>tokio::io::async_fd::AsyncFdReadyMutGuard&lt;Inner&gt;::try_io (25 samples, 0.07%)</title><rect x="99.6286%" y="917" width="0.0749%" height="15" fill="rgb(219,229,18)" fg:x="33267" fg:w="25"/><text x="99.8786%" y="927.50"></text></g><g><title>writev (25 samples, 0.07%)</title><rect x="99.6286%" y="901" width="0.0749%" height="15" fill="rgb(217,152,27)" fg:x="33267" fg:w="25"/><text x="99.8786%" y="911.50"></text></g><g><title>entry_SYSCALL_64 (25 samples, 0.07%)</title><rect x="99.6286%" y="885" width="0.0749%" height="15" fill="rgb(225,71,47)" fg:x="33267" fg:w="25"/><text x="99.8786%" y="895.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (30 samples, 0.09%)</title><rect x="99.7035%" y="933" width="0.0898%" height="15" fill="rgb(220,139,14)" fg:x="33292" fg:w="30"/><text x="99.9535%" y="943.50"></text></g><g><title>entry_SYSCALL_64_safe_stack (50 samples, 0.15%)</title><rect x="99.7934%" y="933" width="0.1497%" height="15" fill="rgb(247,54,32)" fg:x="33322" fg:w="50"/><text x="100.0434%" y="943.50"></text></g><g><title>syscall (5 samples, 0.01%)</title><rect x="99.9461%" y="933" width="0.0150%" height="15" fill="rgb(252,131,39)" fg:x="33373" fg:w="5"/><text x="100.1961%" y="943.50"></text></g><g><title>entry_SYSCALL_64 (5 samples, 0.01%)</title><rect x="99.9461%" y="917" width="0.0150%" height="15" fill="rgb(210,108,39)" fg:x="33373" fg:w="5"/><text x="100.1961%" y="927.50"></text></g><g><title>syscall_return_via_sysret (10 samples, 0.03%)</title><rect x="99.9611%" y="933" width="0.0299%" height="15" fill="rgb(205,23,29)" fg:x="33378" fg:w="10"/><text x="100.2111%" y="943.50"></text></g><g><title>all (33,391 samples, 100%)</title><rect x="0.0000%" y="965" width="100.0000%" height="15" fill="rgb(246,139,46)" fg:x="0" fg:w="33391"/><text x="0.2500%" y="975.50"></text></g><g><title>tokio-runtime-w (33,363 samples, 99.92%)</title><rect x="0.0839%" y="949" width="99.9161%" height="15" fill="rgb(250,81,26)" fg:x="28" fg:w="33363"/><text x="0.3339%" y="959.50">tokio-runtime-w</text></g></svg></svg>