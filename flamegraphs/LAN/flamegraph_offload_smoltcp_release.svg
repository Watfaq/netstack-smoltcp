<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1014" onload="init(evt)" viewBox="0 0 1200 1014" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1014" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="997.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="997.00"> </text><svg id="frames" x="10" width="1180" total_samples="30309"><g><title>tokio::runtime::builder::Builder::build (5 samples, 0.02%)</title><rect x="0.0099%" y="805" width="0.0165%" height="15" fill="rgb(227,0,7)" fg:x="3" fg:w="5"/><text x="0.2599%" y="815.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Launch::launch (5 samples, 0.02%)</title><rect x="0.0099%" y="789" width="0.0165%" height="15" fill="rgb(217,0,24)" fg:x="3" fg:w="5"/><text x="0.2599%" y="799.50"></text></g><g><title>tokio::runtime::blocking::pool::spawn_blocking (5 samples, 0.02%)</title><rect x="0.0099%" y="773" width="0.0165%" height="15" fill="rgb(221,193,54)" fg:x="3" fg:w="5"/><text x="0.2599%" y="783.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_blocking (5 samples, 0.02%)</title><rect x="0.0099%" y="757" width="0.0165%" height="15" fill="rgb(248,212,6)" fg:x="3" fg:w="5"/><text x="0.2599%" y="767.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_task (5 samples, 0.02%)</title><rect x="0.0099%" y="741" width="0.0165%" height="15" fill="rgb(208,68,35)" fg:x="3" fg:w="5"/><text x="0.2599%" y="751.50"></text></g><g><title>std::thread::Builder::spawn_unchecked (5 samples, 0.02%)</title><rect x="0.0099%" y="725" width="0.0165%" height="15" fill="rgb(232,128,0)" fg:x="3" fg:w="5"/><text x="0.2599%" y="735.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::new (5 samples, 0.02%)</title><rect x="0.0099%" y="709" width="0.0165%" height="15" fill="rgb(207,160,47)" fg:x="3" fg:w="5"/><text x="0.2599%" y="719.50"></text></g><g><title>pthread_create (4 samples, 0.01%)</title><rect x="0.0132%" y="693" width="0.0132%" height="15" fill="rgb(228,23,34)" fg:x="4" fg:w="4"/><text x="0.2632%" y="703.50"></text></g><g><title>_start (10 samples, 0.03%)</title><rect x="0.0099%" y="933" width="0.0330%" height="15" fill="rgb(218,30,26)" fg:x="3" fg:w="10"/><text x="0.2599%" y="943.50"></text></g><g><title>__libc_start_main (10 samples, 0.03%)</title><rect x="0.0099%" y="917" width="0.0330%" height="15" fill="rgb(220,122,19)" fg:x="3" fg:w="10"/><text x="0.2599%" y="927.50"></text></g><g><title>[libc.so.6] (10 samples, 0.03%)</title><rect x="0.0099%" y="901" width="0.0330%" height="15" fill="rgb(250,228,42)" fg:x="3" fg:w="10"/><text x="0.2599%" y="911.50"></text></g><g><title>main (10 samples, 0.03%)</title><rect x="0.0099%" y="885" width="0.0330%" height="15" fill="rgb(240,193,28)" fg:x="3" fg:w="10"/><text x="0.2599%" y="895.50"></text></g><g><title>std::rt::lang_start_internal (10 samples, 0.03%)</title><rect x="0.0099%" y="869" width="0.0330%" height="15" fill="rgb(216,20,37)" fg:x="3" fg:w="10"/><text x="0.2599%" y="879.50"></text></g><g><title>std::rt::lang_start::{{closure}} (10 samples, 0.03%)</title><rect x="0.0099%" y="853" width="0.0330%" height="15" fill="rgb(206,188,39)" fg:x="3" fg:w="10"/><text x="0.2599%" y="863.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (10 samples, 0.03%)</title><rect x="0.0099%" y="837" width="0.0330%" height="15" fill="rgb(217,207,13)" fg:x="3" fg:w="10"/><text x="0.2599%" y="847.50"></text></g><g><title>proxy::main (10 samples, 0.03%)</title><rect x="0.0099%" y="821" width="0.0330%" height="15" fill="rgb(231,73,38)" fg:x="3" fg:w="10"/><text x="0.2599%" y="831.50"></text></g><g><title>tokio::runtime::runtime::Runtime::block_on (5 samples, 0.02%)</title><rect x="0.0264%" y="805" width="0.0165%" height="15" fill="rgb(225,20,46)" fg:x="8" fg:w="5"/><text x="0.2764%" y="815.50"></text></g><g><title>tokio::runtime::context::runtime::enter_runtime (5 samples, 0.02%)</title><rect x="0.0264%" y="789" width="0.0165%" height="15" fill="rgb(210,31,41)" fg:x="8" fg:w="5"/><text x="0.2764%" y="799.50"></text></g><g><title>tokio::runtime::park::CachedParkThread::block_on (5 samples, 0.02%)</title><rect x="0.0264%" y="773" width="0.0165%" height="15" fill="rgb(221,200,47)" fg:x="8" fg:w="5"/><text x="0.2764%" y="783.50"></text></g><g><title>tun::async::create_as_async (4 samples, 0.01%)</title><rect x="0.0297%" y="757" width="0.0132%" height="15" fill="rgb(226,26,5)" fg:x="9" fg:w="4"/><text x="0.2797%" y="767.50"></text></g><g><title>tun::platform::linux::device::Device::new (4 samples, 0.01%)</title><rect x="0.0297%" y="741" width="0.0132%" height="15" fill="rgb(249,33,26)" fg:x="9" fg:w="4"/><text x="0.2797%" y="751.50"></text></g><g><title>ioctl (4 samples, 0.01%)</title><rect x="0.0297%" y="725" width="0.0132%" height="15" fill="rgb(235,183,28)" fg:x="9" fg:w="4"/><text x="0.2797%" y="735.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (4 samples, 0.01%)</title><rect x="0.0297%" y="709" width="0.0132%" height="15" fill="rgb(221,5,38)" fg:x="9" fg:w="4"/><text x="0.2797%" y="719.50"></text></g><g><title>do_syscall_64 (4 samples, 0.01%)</title><rect x="0.0297%" y="693" width="0.0132%" height="15" fill="rgb(247,18,42)" fg:x="9" fg:w="4"/><text x="0.2797%" y="703.50"></text></g><g><title>syscall_exit_to_user_mode (4 samples, 0.01%)</title><rect x="0.0297%" y="677" width="0.0132%" height="15" fill="rgb(241,131,45)" fg:x="9" fg:w="4"/><text x="0.2797%" y="687.50"></text></g><g><title>exit_to_user_mode_prepare (4 samples, 0.01%)</title><rect x="0.0297%" y="661" width="0.0132%" height="15" fill="rgb(249,31,29)" fg:x="9" fg:w="4"/><text x="0.2797%" y="671.50"></text></g><g><title>schedule (4 samples, 0.01%)</title><rect x="0.0297%" y="645" width="0.0132%" height="15" fill="rgb(225,111,53)" fg:x="9" fg:w="4"/><text x="0.2797%" y="655.50"></text></g><g><title>__schedule (4 samples, 0.01%)</title><rect x="0.0297%" y="629" width="0.0132%" height="15" fill="rgb(238,160,17)" fg:x="9" fg:w="4"/><text x="0.2797%" y="639.50"></text></g><g><title>finish_task_switch.isra.0 (4 samples, 0.01%)</title><rect x="0.0297%" y="613" width="0.0132%" height="15" fill="rgb(214,148,48)" fg:x="9" fg:w="4"/><text x="0.2797%" y="623.50"></text></g><g><title>__perf_event_task_sched_in (4 samples, 0.01%)</title><rect x="0.0297%" y="597" width="0.0132%" height="15" fill="rgb(232,36,49)" fg:x="9" fg:w="4"/><text x="0.2797%" y="607.50"></text></g><g><title>proxy (30 samples, 0.10%)</title><rect x="0.0033%" y="949" width="0.0990%" height="15" fill="rgb(209,103,24)" fg:x="1" fg:w="30"/><text x="0.2533%" y="959.50"></text></g><g><title>ret_from_fork (16 samples, 0.05%)</title><rect x="0.0495%" y="933" width="0.0528%" height="15" fill="rgb(229,88,8)" fg:x="15" fg:w="16"/><text x="0.2995%" y="943.50"></text></g><g><title>schedule_tail (16 samples, 0.05%)</title><rect x="0.0495%" y="917" width="0.0528%" height="15" fill="rgb(213,181,19)" fg:x="15" fg:w="16"/><text x="0.2995%" y="927.50"></text></g><g><title>finish_task_switch.isra.0 (16 samples, 0.05%)</title><rect x="0.0495%" y="901" width="0.0528%" height="15" fill="rgb(254,191,54)" fg:x="15" fg:w="16"/><text x="0.2995%" y="911.50"></text></g><g><title>__perf_event_task_sched_in (16 samples, 0.05%)</title><rect x="0.0495%" y="885" width="0.0528%" height="15" fill="rgb(241,83,37)" fg:x="15" fg:w="16"/><text x="0.2995%" y="895.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (16 samples, 0.05%)</title><rect x="0.0495%" y="869" width="0.0528%" height="15" fill="rgb(233,36,39)" fg:x="15" fg:w="16"/><text x="0.2995%" y="879.50"></text></g><g><title>send (7 samples, 0.02%)</title><rect x="0.1089%" y="917" width="0.0231%" height="15" fill="rgb(226,3,54)" fg:x="33" fg:w="7"/><text x="0.3589%" y="927.50"></text></g><g><title>entry_SYSCALL_64 (7 samples, 0.02%)</title><rect x="0.1089%" y="901" width="0.0231%" height="15" fill="rgb(245,192,40)" fg:x="33" fg:w="7"/><text x="0.3589%" y="911.50"></text></g><g><title>[[heap]] (10 samples, 0.03%)</title><rect x="0.1023%" y="933" width="0.0330%" height="15" fill="rgb(238,167,29)" fg:x="31" fg:w="10"/><text x="0.3523%" y="943.50"></text></g><g><title>entry_SYSCALL_64 (39 samples, 0.13%)</title><rect x="0.1452%" y="837" width="0.1287%" height="15" fill="rgb(232,182,51)" fg:x="44" fg:w="39"/><text x="0.3952%" y="847.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (42 samples, 0.14%)</title><rect x="0.1386%" y="885" width="0.1386%" height="15" fill="rgb(231,60,39)" fg:x="42" fg:w="42"/><text x="0.3886%" y="895.50"></text></g><g><title>&lt;std::io::stdio::StdoutRaw as std::io::Write&gt;::write_all (42 samples, 0.14%)</title><rect x="0.1386%" y="869" width="0.1386%" height="15" fill="rgb(208,69,12)" fg:x="42" fg:w="42"/><text x="0.3886%" y="879.50"></text></g><g><title>__write (42 samples, 0.14%)</title><rect x="0.1386%" y="853" width="0.1386%" height="15" fill="rgb(235,93,37)" fg:x="42" fg:w="42"/><text x="0.3886%" y="863.50"></text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write_all (44 samples, 0.15%)</title><rect x="0.1386%" y="917" width="0.1452%" height="15" fill="rgb(213,116,39)" fg:x="42" fg:w="44"/><text x="0.3886%" y="927.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_all (44 samples, 0.15%)</title><rect x="0.1386%" y="901" width="0.1452%" height="15" fill="rgb(222,207,29)" fg:x="42" fg:w="44"/><text x="0.3886%" y="911.50"></text></g><g><title>[anon] (48 samples, 0.16%)</title><rect x="0.1353%" y="933" width="0.1584%" height="15" fill="rgb(206,96,30)" fg:x="41" fg:w="48"/><text x="0.3853%" y="943.50"></text></g><g><title>std::sys::pal::unix::thread::guard::current (4 samples, 0.01%)</title><rect x="0.2936%" y="869" width="0.0132%" height="15" fill="rgb(218,138,4)" fg:x="89" fg:w="4"/><text x="0.5436%" y="879.50"></text></g><g><title>pthread_getattr_np (4 samples, 0.01%)</title><rect x="0.2936%" y="853" width="0.0132%" height="15" fill="rgb(250,191,14)" fg:x="89" fg:w="4"/><text x="0.5436%" y="863.50"></text></g><g><title>malloc (4 samples, 0.01%)</title><rect x="0.2936%" y="837" width="0.0132%" height="15" fill="rgb(239,60,40)" fg:x="89" fg:w="4"/><text x="0.5436%" y="847.50"></text></g><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="0.2936%" y="821" width="0.0132%" height="15" fill="rgb(206,27,48)" fg:x="89" fg:w="4"/><text x="0.5436%" y="831.50"></text></g><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="0.2936%" y="805" width="0.0132%" height="15" fill="rgb(225,35,8)" fg:x="89" fg:w="4"/><text x="0.5436%" y="815.50"></text></g><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="0.2936%" y="789" width="0.0132%" height="15" fill="rgb(250,213,24)" fg:x="89" fg:w="4"/><text x="0.5436%" y="799.50"></text></g><g><title>std::sys::pal::unix::locks::futex_mutex::Mutex::lock_contended (22 samples, 0.07%)</title><rect x="0.3068%" y="837" width="0.0726%" height="15" fill="rgb(247,123,22)" fg:x="93" fg:w="22"/><text x="0.5568%" y="847.50"></text></g><g><title>syscall (22 samples, 0.07%)</title><rect x="0.3068%" y="821" width="0.0726%" height="15" fill="rgb(231,138,38)" fg:x="93" fg:w="22"/><text x="0.5568%" y="831.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (22 samples, 0.07%)</title><rect x="0.3068%" y="805" width="0.0726%" height="15" fill="rgb(231,145,46)" fg:x="93" fg:w="22"/><text x="0.5568%" y="815.50"></text></g><g><title>do_syscall_64 (22 samples, 0.07%)</title><rect x="0.3068%" y="789" width="0.0726%" height="15" fill="rgb(251,118,11)" fg:x="93" fg:w="22"/><text x="0.5568%" y="799.50"></text></g><g><title>__x64_sys_futex (22 samples, 0.07%)</title><rect x="0.3068%" y="773" width="0.0726%" height="15" fill="rgb(217,147,25)" fg:x="93" fg:w="22"/><text x="0.5568%" y="783.50"></text></g><g><title>do_futex (22 samples, 0.07%)</title><rect x="0.3068%" y="757" width="0.0726%" height="15" fill="rgb(247,81,37)" fg:x="93" fg:w="22"/><text x="0.5568%" y="767.50"></text></g><g><title>futex_wait (22 samples, 0.07%)</title><rect x="0.3068%" y="741" width="0.0726%" height="15" fill="rgb(209,12,38)" fg:x="93" fg:w="22"/><text x="0.5568%" y="751.50"></text></g><g><title>futex_wait_queue_me (22 samples, 0.07%)</title><rect x="0.3068%" y="725" width="0.0726%" height="15" fill="rgb(227,1,9)" fg:x="93" fg:w="22"/><text x="0.5568%" y="735.50"></text></g><g><title>schedule (22 samples, 0.07%)</title><rect x="0.3068%" y="709" width="0.0726%" height="15" fill="rgb(248,47,43)" fg:x="93" fg:w="22"/><text x="0.5568%" y="719.50"></text></g><g><title>__schedule (22 samples, 0.07%)</title><rect x="0.3068%" y="693" width="0.0726%" height="15" fill="rgb(221,10,30)" fg:x="93" fg:w="22"/><text x="0.5568%" y="703.50"></text></g><g><title>finish_task_switch.isra.0 (22 samples, 0.07%)</title><rect x="0.3068%" y="677" width="0.0726%" height="15" fill="rgb(210,229,1)" fg:x="93" fg:w="22"/><text x="0.5568%" y="687.50"></text></g><g><title>__perf_event_task_sched_in (22 samples, 0.07%)</title><rect x="0.3068%" y="661" width="0.0726%" height="15" fill="rgb(222,148,37)" fg:x="93" fg:w="22"/><text x="0.5568%" y="671.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (22 samples, 0.07%)</title><rect x="0.3068%" y="645" width="0.0726%" height="15" fill="rgb(234,67,33)" fg:x="93" fg:w="22"/><text x="0.5568%" y="655.50"></text></g><g><title>__floattidf (7 samples, 0.02%)</title><rect x="0.7556%" y="741" width="0.0231%" height="15" fill="rgb(247,98,35)" fg:x="229" fg:w="7"/><text x="1.0056%" y="751.50"></text></g><g><title>@plt (5 samples, 0.02%)</title><rect x="0.7984%" y="725" width="0.0165%" height="15" fill="rgb(247,138,52)" fg:x="242" fg:w="5"/><text x="1.0484%" y="735.50"></text></g><g><title>powf64 (43 samples, 0.14%)</title><rect x="0.7786%" y="741" width="0.1419%" height="15" fill="rgb(213,79,30)" fg:x="236" fg:w="43"/><text x="1.0286%" y="751.50"></text></g><g><title>[libm.so.6] (32 samples, 0.11%)</title><rect x="0.8149%" y="725" width="0.1056%" height="15" fill="rgb(246,177,23)" fg:x="247" fg:w="32"/><text x="1.0649%" y="735.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (59 samples, 0.19%)</title><rect x="0.9205%" y="741" width="0.1947%" height="15" fill="rgb(230,62,27)" fg:x="279" fg:w="59"/><text x="1.1705%" y="751.50"></text></g><g><title>clock_gettime (55 samples, 0.18%)</title><rect x="0.9337%" y="725" width="0.1815%" height="15" fill="rgb(216,154,8)" fg:x="283" fg:w="55"/><text x="1.1837%" y="735.50"></text></g><g><title>__vdso_clock_gettime (29 samples, 0.10%)</title><rect x="1.0195%" y="709" width="0.0957%" height="15" fill="rgb(244,35,45)" fg:x="309" fg:w="29"/><text x="1.2695%" y="719.50"></text></g><g><title>std::time::Instant::now (9 samples, 0.03%)</title><rect x="1.1152%" y="741" width="0.0297%" height="15" fill="rgb(251,115,12)" fg:x="338" fg:w="9"/><text x="1.3652%" y="751.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::transition_worker_to_parked (17 samples, 0.06%)</title><rect x="1.1449%" y="741" width="0.0561%" height="15" fill="rgb(240,54,50)" fg:x="347" fg:w="17"/><text x="1.3949%" y="751.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into (79 samples, 0.26%)</title><rect x="1.2076%" y="741" width="0.2606%" height="15" fill="rgb(233,84,52)" fg:x="366" fg:w="79"/><text x="1.4576%" y="751.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_if_work_pending (5 samples, 0.02%)</title><rect x="1.4715%" y="741" width="0.0165%" height="15" fill="rgb(207,117,47)" fg:x="446" fg:w="5"/><text x="1.7215%" y="751.50"></text></g><g><title>entry_SYSCALL_64 (4 samples, 0.01%)</title><rect x="1.9433%" y="677" width="0.0132%" height="15" fill="rgb(249,43,39)" fg:x="589" fg:w="4"/><text x="2.1933%" y="687.50"></text></g><g><title>intel_pmu_disable_all (12 samples, 0.04%)</title><rect x="2.2337%" y="533" width="0.0396%" height="15" fill="rgb(209,38,44)" fg:x="677" fg:w="12"/><text x="2.4837%" y="543.50"></text></g><g><title>__perf_event_task_sched_out (19 samples, 0.06%)</title><rect x="2.2139%" y="549" width="0.0627%" height="15" fill="rgb(236,212,23)" fg:x="671" fg:w="19"/><text x="2.4639%" y="559.50"></text></g><g><title>cpuacct_charge (13 samples, 0.04%)</title><rect x="2.3491%" y="501" width="0.0429%" height="15" fill="rgb(242,79,21)" fg:x="712" fg:w="13"/><text x="2.5991%" y="511.50"></text></g><g><title>update_curr (20 samples, 0.07%)</title><rect x="2.3293%" y="517" width="0.0660%" height="15" fill="rgb(211,96,35)" fg:x="706" fg:w="20"/><text x="2.5793%" y="527.50"></text></g><g><title>dequeue_entity (32 samples, 0.11%)</title><rect x="2.2996%" y="533" width="0.1056%" height="15" fill="rgb(253,215,40)" fg:x="697" fg:w="32"/><text x="2.5496%" y="543.50"></text></g><g><title>dequeue_task_fair (41 samples, 0.14%)</title><rect x="2.2766%" y="549" width="0.1353%" height="15" fill="rgb(211,81,21)" fg:x="690" fg:w="41"/><text x="2.5266%" y="559.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (83 samples, 0.27%)</title><rect x="2.5009%" y="517" width="0.2738%" height="15" fill="rgb(208,190,38)" fg:x="758" fg:w="83"/><text x="2.7509%" y="527.50"></text></g><g><title>__perf_event_task_sched_in (102 samples, 0.34%)</title><rect x="2.4712%" y="533" width="0.3365%" height="15" fill="rgb(235,213,38)" fg:x="749" fg:w="102"/><text x="2.7212%" y="543.50"></text></g><g><title>__raw_callee_save___pv_queued_spin_unlock (10 samples, 0.03%)</title><rect x="2.7748%" y="517" width="0.0330%" height="15" fill="rgb(237,122,38)" fg:x="841" fg:w="10"/><text x="3.0248%" y="527.50"></text></g><g><title>finish_task_switch.isra.0 (124 samples, 0.41%)</title><rect x="2.4118%" y="549" width="0.4091%" height="15" fill="rgb(244,218,35)" fg:x="731" fg:w="124"/><text x="2.6618%" y="559.50"></text></g><g><title>pick_next_task_fair (5 samples, 0.02%)</title><rect x="2.8209%" y="549" width="0.0165%" height="15" fill="rgb(240,68,47)" fg:x="855" fg:w="5"/><text x="3.0709%" y="559.50"></text></g><g><title>newidle_balance (5 samples, 0.02%)</title><rect x="2.8209%" y="533" width="0.0165%" height="15" fill="rgb(210,16,53)" fg:x="855" fg:w="5"/><text x="3.0709%" y="543.50"></text></g><g><title>pick_next_task_idle (8 samples, 0.03%)</title><rect x="2.8374%" y="549" width="0.0264%" height="15" fill="rgb(235,124,12)" fg:x="860" fg:w="8"/><text x="3.0874%" y="559.50"></text></g><g><title>__update_idle_core (7 samples, 0.02%)</title><rect x="2.8407%" y="533" width="0.0231%" height="15" fill="rgb(224,169,11)" fg:x="861" fg:w="7"/><text x="3.0907%" y="543.50"></text></g><g><title>futex_wait_queue_me (244 samples, 0.81%)</title><rect x="2.0885%" y="597" width="0.8050%" height="15" fill="rgb(250,166,2)" fg:x="633" fg:w="244"/><text x="2.3385%" y="607.50"></text></g><g><title>schedule (234 samples, 0.77%)</title><rect x="2.1215%" y="581" width="0.7720%" height="15" fill="rgb(242,216,29)" fg:x="643" fg:w="234"/><text x="2.3715%" y="591.50"></text></g><g><title>__schedule (230 samples, 0.76%)</title><rect x="2.1347%" y="565" width="0.7589%" height="15" fill="rgb(230,116,27)" fg:x="647" fg:w="230"/><text x="2.3847%" y="575.50"></text></g><g><title>update_rq_clock (7 samples, 0.02%)</title><rect x="2.8704%" y="549" width="0.0231%" height="15" fill="rgb(228,99,48)" fg:x="870" fg:w="7"/><text x="3.1204%" y="559.50"></text></g><g><title>sched_clock_cpu (4 samples, 0.01%)</title><rect x="2.8803%" y="533" width="0.0132%" height="15" fill="rgb(253,11,6)" fg:x="873" fg:w="4"/><text x="3.1303%" y="543.50"></text></g><g><title>read_hv_sched_clock_tsc (4 samples, 0.01%)</title><rect x="2.8803%" y="517" width="0.0132%" height="15" fill="rgb(247,143,39)" fg:x="873" fg:w="4"/><text x="3.1303%" y="527.50"></text></g><g><title>__x64_sys_futex (304 samples, 1.00%)</title><rect x="1.9829%" y="645" width="1.0030%" height="15" fill="rgb(236,97,10)" fg:x="601" fg:w="304"/><text x="2.2329%" y="655.50"></text></g><g><title>do_futex (297 samples, 0.98%)</title><rect x="2.0060%" y="629" width="0.9799%" height="15" fill="rgb(233,208,19)" fg:x="608" fg:w="297"/><text x="2.2560%" y="639.50"></text></g><g><title>futex_wait (282 samples, 0.93%)</title><rect x="2.0555%" y="613" width="0.9304%" height="15" fill="rgb(216,164,2)" fg:x="623" fg:w="282"/><text x="2.3055%" y="623.50"></text></g><g><title>futex_wait_setup (28 samples, 0.09%)</title><rect x="2.8935%" y="597" width="0.0924%" height="15" fill="rgb(220,129,5)" fg:x="877" fg:w="28"/><text x="3.1435%" y="607.50"></text></g><g><title>hash_futex (5 samples, 0.02%)</title><rect x="2.9694%" y="581" width="0.0165%" height="15" fill="rgb(242,17,10)" fg:x="900" fg:w="5"/><text x="3.2194%" y="591.50"></text></g><g><title>__rseq_handle_notify_resume (23 samples, 0.08%)</title><rect x="3.0585%" y="613" width="0.0759%" height="15" fill="rgb(242,107,0)" fg:x="927" fg:w="23"/><text x="3.3085%" y="623.50"></text></g><g><title>__get_user_8 (18 samples, 0.06%)</title><rect x="3.0750%" y="597" width="0.0594%" height="15" fill="rgb(251,28,31)" fg:x="932" fg:w="18"/><text x="3.3250%" y="607.50"></text></g><g><title>blkcg_maybe_throttle_current (7 samples, 0.02%)</title><rect x="3.1344%" y="613" width="0.0231%" height="15" fill="rgb(233,223,10)" fg:x="950" fg:w="7"/><text x="3.3844%" y="623.50"></text></g><g><title>mem_cgroup_handle_over_high (5 samples, 0.02%)</title><rect x="3.1575%" y="613" width="0.0165%" height="15" fill="rgb(215,21,27)" fg:x="957" fg:w="5"/><text x="3.4075%" y="623.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (374 samples, 1.23%)</title><rect x="1.9565%" y="677" width="1.2340%" height="15" fill="rgb(232,23,21)" fg:x="593" fg:w="374"/><text x="2.2065%" y="687.50"></text></g><g><title>do_syscall_64 (374 samples, 1.23%)</title><rect x="1.9565%" y="661" width="1.2340%" height="15" fill="rgb(244,5,23)" fg:x="593" fg:w="374"/><text x="2.2065%" y="671.50"></text></g><g><title>syscall_exit_to_user_mode (61 samples, 0.20%)</title><rect x="2.9892%" y="645" width="0.2013%" height="15" fill="rgb(226,81,46)" fg:x="906" fg:w="61"/><text x="3.2392%" y="655.50"></text></g><g><title>exit_to_user_mode_prepare (56 samples, 0.18%)</title><rect x="3.0057%" y="629" width="0.1848%" height="15" fill="rgb(247,70,30)" fg:x="911" fg:w="56"/><text x="3.2557%" y="639.50"></text></g><g><title>switch_fpu_return (5 samples, 0.02%)</title><rect x="3.1740%" y="613" width="0.0165%" height="15" fill="rgb(212,68,19)" fg:x="962" fg:w="5"/><text x="3.4240%" y="623.50"></text></g><g><title>std::sys::pal::unix::locks::futex_condvar::Condvar::wait (448 samples, 1.48%)</title><rect x="1.7520%" y="709" width="1.4781%" height="15" fill="rgb(240,187,13)" fg:x="531" fg:w="448"/><text x="2.0020%" y="719.50"></text></g><g><title>syscall (407 samples, 1.34%)</title><rect x="1.8872%" y="693" width="1.3428%" height="15" fill="rgb(223,113,26)" fg:x="572" fg:w="407"/><text x="2.1372%" y="703.50"></text></g><g><title>syscall_return_via_sysret (12 samples, 0.04%)</title><rect x="3.1905%" y="677" width="0.0396%" height="15" fill="rgb(206,192,2)" fg:x="967" fg:w="12"/><text x="3.4405%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;[core::option::Option&lt;core::task::wake::Waker&gt;: 32]&gt; (38 samples, 0.13%)</title><rect x="3.3059%" y="693" width="0.1254%" height="15" fill="rgb(241,108,4)" fg:x="1002" fg:w="38"/><text x="3.5559%" y="703.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (8 samples, 0.03%)</title><rect x="3.4379%" y="693" width="0.0264%" height="15" fill="rgb(247,173,49)" fg:x="1042" fg:w="8"/><text x="3.6879%" y="703.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (6 samples, 0.02%)</title><rect x="3.4643%" y="693" width="0.0198%" height="15" fill="rgb(224,114,35)" fg:x="1050" fg:w="6"/><text x="3.7143%" y="703.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_expiration (5 samples, 0.02%)</title><rect x="3.4676%" y="677" width="0.0165%" height="15" fill="rgb(245,159,27)" fg:x="1051" fg:w="5"/><text x="3.7176%" y="687.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time (117 samples, 0.39%)</title><rect x="3.2301%" y="709" width="0.3860%" height="15" fill="rgb(245,172,44)" fg:x="979" fg:w="117"/><text x="3.4801%" y="719.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::poll (40 samples, 0.13%)</title><rect x="3.4841%" y="693" width="0.1320%" height="15" fill="rgb(236,23,11)" fg:x="1056" fg:w="40"/><text x="3.7341%" y="703.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (29 samples, 0.10%)</title><rect x="3.5204%" y="677" width="0.0957%" height="15" fill="rgb(205,117,38)" fg:x="1067" fg:w="29"/><text x="3.7704%" y="687.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_expiration (22 samples, 0.07%)</title><rect x="3.5435%" y="661" width="0.0726%" height="15" fill="rgb(237,72,25)" fg:x="1074" fg:w="22"/><text x="3.7935%" y="671.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (68 samples, 0.22%)</title><rect x="3.6887%" y="693" width="0.2244%" height="15" fill="rgb(244,70,9)" fg:x="1118" fg:w="68"/><text x="3.9387%" y="703.50"></text></g><g><title>clock_gettime (64 samples, 0.21%)</title><rect x="3.7019%" y="677" width="0.2112%" height="15" fill="rgb(217,125,39)" fg:x="1122" fg:w="64"/><text x="3.9519%" y="687.50"></text></g><g><title>__vdso_clock_gettime (31 samples, 0.10%)</title><rect x="3.8107%" y="661" width="0.1023%" height="15" fill="rgb(235,36,10)" fg:x="1155" fg:w="31"/><text x="4.0607%" y="671.50"></text></g><g><title>std::time::Instant::checked_duration_since (6 samples, 0.02%)</title><rect x="3.9130%" y="693" width="0.0198%" height="15" fill="rgb(251,123,47)" fg:x="1186" fg:w="6"/><text x="4.1630%" y="703.50"></text></g><g><title>std::time::Instant::now (15 samples, 0.05%)</title><rect x="3.9328%" y="693" width="0.0495%" height="15" fill="rgb(221,13,13)" fg:x="1192" fg:w="15"/><text x="4.1828%" y="703.50"></text></g><g><title>&lt;mio::event::events::Iter as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.04%)</title><rect x="4.0384%" y="677" width="0.0429%" height="15" fill="rgb(238,131,9)" fg:x="1224" fg:w="13"/><text x="4.2884%" y="687.50"></text></g><g><title>mio::poll::Poll::poll (8 samples, 0.03%)</title><rect x="4.0813%" y="677" width="0.0264%" height="15" fill="rgb(211,50,8)" fg:x="1237" fg:w="8"/><text x="4.3313%" y="687.50"></text></g><g><title>[libc.so.6] (14 samples, 0.05%)</title><rect x="4.2694%" y="645" width="0.0462%" height="15" fill="rgb(245,182,24)" fg:x="1294" fg:w="14"/><text x="4.5194%" y="655.50"></text></g><g><title>entry_SYSCALL_64 (4 samples, 0.01%)</title><rect x="4.3155%" y="645" width="0.0132%" height="15" fill="rgb(242,14,37)" fg:x="1308" fg:w="4"/><text x="4.5655%" y="655.50"></text></g><g><title>__fdget (5 samples, 0.02%)</title><rect x="4.5564%" y="581" width="0.0165%" height="15" fill="rgb(246,228,12)" fg:x="1381" fg:w="5"/><text x="4.8064%" y="591.50"></text></g><g><title>__fget_light (19 samples, 0.06%)</title><rect x="4.5729%" y="581" width="0.0627%" height="15" fill="rgb(213,55,15)" fg:x="1386" fg:w="19"/><text x="4.8229%" y="591.50"></text></g><g><title>__fget_files (9 samples, 0.03%)</title><rect x="4.6059%" y="565" width="0.0297%" height="15" fill="rgb(209,9,3)" fg:x="1396" fg:w="9"/><text x="4.8559%" y="575.50"></text></g><g><title>__put_user_nocheck_4 (17 samples, 0.06%)</title><rect x="4.6389%" y="581" width="0.0561%" height="15" fill="rgb(230,59,30)" fg:x="1406" fg:w="17"/><text x="4.8889%" y="591.50"></text></g><g><title>_raw_write_lock_irq (4 samples, 0.01%)</title><rect x="4.7016%" y="581" width="0.0132%" height="15" fill="rgb(209,121,21)" fg:x="1425" fg:w="4"/><text x="4.9516%" y="591.50"></text></g><g><title>ep_done_scan (6 samples, 0.02%)</title><rect x="4.7148%" y="581" width="0.0198%" height="15" fill="rgb(220,109,13)" fg:x="1429" fg:w="6"/><text x="4.9648%" y="591.50"></text></g><g><title>eventfd_poll (10 samples, 0.03%)</title><rect x="4.8006%" y="565" width="0.0330%" height="15" fill="rgb(232,18,1)" fg:x="1455" fg:w="10"/><text x="5.0506%" y="575.50"></text></g><g><title>ep_item_poll.isra.0 (38 samples, 0.13%)</title><rect x="4.7346%" y="581" width="0.1254%" height="15" fill="rgb(215,41,42)" fg:x="1435" fg:w="38"/><text x="4.9846%" y="591.50"></text></g><g><title>tun_chr_poll (8 samples, 0.03%)</title><rect x="4.8335%" y="565" width="0.0264%" height="15" fill="rgb(224,123,36)" fg:x="1465" fg:w="8"/><text x="5.0835%" y="575.50"></text></g><g><title>tun_get (4 samples, 0.01%)</title><rect x="4.8467%" y="549" width="0.0132%" height="15" fill="rgb(240,125,3)" fg:x="1469" fg:w="4"/><text x="5.0967%" y="559.50"></text></g><g><title>fput_many (8 samples, 0.03%)</title><rect x="4.8665%" y="581" width="0.0264%" height="15" fill="rgb(205,98,50)" fg:x="1475" fg:w="8"/><text x="5.1165%" y="591.50"></text></g><g><title>mutex_lock (11 samples, 0.04%)</title><rect x="4.8929%" y="581" width="0.0363%" height="15" fill="rgb(205,185,37)" fg:x="1483" fg:w="11"/><text x="5.1429%" y="591.50"></text></g><g><title>hrtimer_init_sleeper (9 samples, 0.03%)</title><rect x="4.9787%" y="565" width="0.0297%" height="15" fill="rgb(238,207,15)" fg:x="1509" fg:w="9"/><text x="5.2287%" y="575.50"></text></g><g><title>__hrtimer_init (7 samples, 0.02%)</title><rect x="4.9853%" y="549" width="0.0231%" height="15" fill="rgb(213,199,42)" fg:x="1511" fg:w="7"/><text x="5.2353%" y="559.50"></text></g><g><title>hrtimer_start_range_ns (10 samples, 0.03%)</title><rect x="5.0084%" y="565" width="0.0330%" height="15" fill="rgb(235,201,11)" fg:x="1518" fg:w="10"/><text x="5.2584%" y="575.50"></text></g><g><title>enqueue_hrtimer (5 samples, 0.02%)</title><rect x="5.0249%" y="549" width="0.0165%" height="15" fill="rgb(207,46,11)" fg:x="1523" fg:w="5"/><text x="5.2749%" y="559.50"></text></g><g><title>timerqueue_add (4 samples, 0.01%)</title><rect x="5.0282%" y="533" width="0.0132%" height="15" fill="rgb(241,35,35)" fg:x="1524" fg:w="4"/><text x="5.2782%" y="543.50"></text></g><g><title>hrtimer_try_to_cancel.part.0 (9 samples, 0.03%)</title><rect x="5.0414%" y="565" width="0.0297%" height="15" fill="rgb(243,32,47)" fg:x="1528" fg:w="9"/><text x="5.2914%" y="575.50"></text></g><g><title>intel_pmu_disable_all (19 samples, 0.06%)</title><rect x="5.2097%" y="517" width="0.0627%" height="15" fill="rgb(247,202,23)" fg:x="1579" fg:w="19"/><text x="5.4597%" y="527.50"></text></g><g><title>__perf_event_task_sched_out (30 samples, 0.10%)</title><rect x="5.1899%" y="533" width="0.0990%" height="15" fill="rgb(219,102,11)" fg:x="1573" fg:w="30"/><text x="5.4399%" y="543.50"></text></g><g><title>x86_pmu_disable (5 samples, 0.02%)</title><rect x="5.2724%" y="517" width="0.0165%" height="15" fill="rgb(243,110,44)" fg:x="1598" fg:w="5"/><text x="5.5224%" y="527.50"></text></g><g><title>cpuacct_charge (22 samples, 0.07%)</title><rect x="5.4109%" y="485" width="0.0726%" height="15" fill="rgb(222,74,54)" fg:x="1640" fg:w="22"/><text x="5.6609%" y="495.50"></text></g><g><title>update_curr (43 samples, 0.14%)</title><rect x="5.3515%" y="501" width="0.1419%" height="15" fill="rgb(216,99,12)" fg:x="1622" fg:w="43"/><text x="5.6015%" y="511.50"></text></g><g><title>dequeue_entity (48 samples, 0.16%)</title><rect x="5.3383%" y="517" width="0.1584%" height="15" fill="rgb(226,22,26)" fg:x="1618" fg:w="48"/><text x="5.5883%" y="527.50"></text></g><g><title>dequeue_task_fair (62 samples, 0.20%)</title><rect x="5.2955%" y="533" width="0.2046%" height="15" fill="rgb(217,163,10)" fg:x="1605" fg:w="62"/><text x="5.5455%" y="543.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (266 samples, 0.88%)</title><rect x="5.5660%" y="501" width="0.8776%" height="15" fill="rgb(213,25,53)" fg:x="1687" fg:w="266"/><text x="5.8160%" y="511.50"></text></g><g><title>__perf_event_task_sched_in (284 samples, 0.94%)</title><rect x="5.5330%" y="517" width="0.9370%" height="15" fill="rgb(252,105,26)" fg:x="1677" fg:w="284"/><text x="5.7830%" y="527.50"></text></g><g><title>__raw_callee_save___pv_queued_spin_unlock (8 samples, 0.03%)</title><rect x="6.4436%" y="501" width="0.0264%" height="15" fill="rgb(220,39,43)" fg:x="1953" fg:w="8"/><text x="6.6936%" y="511.50"></text></g><g><title>finish_task_switch.isra.0 (296 samples, 0.98%)</title><rect x="5.5000%" y="533" width="0.9766%" height="15" fill="rgb(229,68,48)" fg:x="1667" fg:w="296"/><text x="5.7500%" y="543.50"></text></g><g><title>pick_next_task_fair (20 samples, 0.07%)</title><rect x="6.4766%" y="533" width="0.0660%" height="15" fill="rgb(252,8,32)" fg:x="1963" fg:w="20"/><text x="6.7266%" y="543.50"></text></g><g><title>newidle_balance (18 samples, 0.06%)</title><rect x="6.4832%" y="517" width="0.0594%" height="15" fill="rgb(223,20,43)" fg:x="1965" fg:w="18"/><text x="6.7332%" y="527.50"></text></g><g><title>pick_next_task_idle (15 samples, 0.05%)</title><rect x="6.5426%" y="533" width="0.0495%" height="15" fill="rgb(229,81,49)" fg:x="1983" fg:w="15"/><text x="6.7926%" y="543.50"></text></g><g><title>__update_idle_core (14 samples, 0.05%)</title><rect x="6.5459%" y="517" width="0.0462%" height="15" fill="rgb(236,28,36)" fg:x="1984" fg:w="14"/><text x="6.7959%" y="527.50"></text></g><g><title>put_prev_task_fair (6 samples, 0.02%)</title><rect x="6.5921%" y="533" width="0.0198%" height="15" fill="rgb(249,185,26)" fg:x="1998" fg:w="6"/><text x="6.8421%" y="543.50"></text></g><g><title>schedule_hrtimeout_range_clock (515 samples, 1.70%)</title><rect x="4.9391%" y="581" width="1.6992%" height="15" fill="rgb(249,174,33)" fg:x="1497" fg:w="515"/><text x="5.1891%" y="591.50"></text></g><g><title>schedule (475 samples, 1.57%)</title><rect x="5.0711%" y="565" width="1.5672%" height="15" fill="rgb(233,201,37)" fg:x="1537" fg:w="475"/><text x="5.3211%" y="575.50"></text></g><g><title>__schedule (469 samples, 1.55%)</title><rect x="5.0909%" y="549" width="1.5474%" height="15" fill="rgb(221,78,26)" fg:x="1543" fg:w="469"/><text x="5.3409%" y="559.50"></text></g><g><title>update_rq_clock (7 samples, 0.02%)</title><rect x="6.6152%" y="533" width="0.0231%" height="15" fill="rgb(250,127,30)" fg:x="2005" fg:w="7"/><text x="6.8652%" y="543.50"></text></g><g><title>sched_clock_cpu (6 samples, 0.02%)</title><rect x="6.6185%" y="517" width="0.0198%" height="15" fill="rgb(230,49,44)" fg:x="2006" fg:w="6"/><text x="6.8685%" y="527.50"></text></g><g><title>read_hv_sched_clock_tsc (5 samples, 0.02%)</title><rect x="6.6218%" y="501" width="0.0165%" height="15" fill="rgb(229,67,23)" fg:x="2007" fg:w="5"/><text x="6.8718%" y="511.50"></text></g><g><title>do_epoll_wait (680 samples, 2.24%)</title><rect x="4.4343%" y="597" width="2.2436%" height="15" fill="rgb(249,83,47)" fg:x="1344" fg:w="680"/><text x="4.6843%" y="607.50">d..</text></g><g><title>select_estimate_accuracy (12 samples, 0.04%)</title><rect x="6.6383%" y="581" width="0.0396%" height="15" fill="rgb(215,43,3)" fg:x="2012" fg:w="12"/><text x="6.8883%" y="591.50"></text></g><g><title>ktime_get_ts64 (7 samples, 0.02%)</title><rect x="6.6779%" y="597" width="0.0231%" height="15" fill="rgb(238,154,13)" fg:x="2024" fg:w="7"/><text x="6.9279%" y="607.50"></text></g><g><title>__x64_sys_epoll_wait (699 samples, 2.31%)</title><rect x="4.4013%" y="613" width="2.3062%" height="15" fill="rgb(219,56,2)" fg:x="1334" fg:w="699"/><text x="4.6513%" y="623.50">_..</text></g><g><title>__get_user_8 (21 samples, 0.07%)</title><rect x="6.8165%" y="565" width="0.0693%" height="15" fill="rgb(233,0,4)" fg:x="2066" fg:w="21"/><text x="7.0665%" y="575.50"></text></g><g><title>__rseq_handle_notify_resume (30 samples, 0.10%)</title><rect x="6.7967%" y="581" width="0.0990%" height="15" fill="rgb(235,30,7)" fg:x="2060" fg:w="30"/><text x="7.0467%" y="591.50"></text></g><g><title>blkcg_maybe_throttle_current (9 samples, 0.03%)</title><rect x="6.8956%" y="581" width="0.0297%" height="15" fill="rgb(250,79,13)" fg:x="2090" fg:w="9"/><text x="7.1456%" y="591.50"></text></g><g><title>mem_cgroup_handle_over_high (9 samples, 0.03%)</title><rect x="6.9253%" y="581" width="0.0297%" height="15" fill="rgb(211,146,34)" fg:x="2099" fg:w="9"/><text x="7.1753%" y="591.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (800 samples, 2.64%)</title><rect x="4.3287%" y="645" width="2.6395%" height="15" fill="rgb(228,22,38)" fg:x="1312" fg:w="800"/><text x="4.5787%" y="655.50">en..</text></g><g><title>do_syscall_64 (792 samples, 2.61%)</title><rect x="4.3551%" y="629" width="2.6131%" height="15" fill="rgb(235,168,5)" fg:x="1320" fg:w="792"/><text x="4.6051%" y="639.50">do..</text></g><g><title>syscall_exit_to_user_mode (78 samples, 0.26%)</title><rect x="6.7109%" y="613" width="0.2573%" height="15" fill="rgb(221,155,16)" fg:x="2034" fg:w="78"/><text x="6.9609%" y="623.50"></text></g><g><title>exit_to_user_mode_prepare (76 samples, 0.25%)</title><rect x="6.7175%" y="597" width="0.2508%" height="15" fill="rgb(215,215,53)" fg:x="2036" fg:w="76"/><text x="6.9675%" y="607.50"></text></g><g><title>switch_fpu_return (4 samples, 0.01%)</title><rect x="6.9550%" y="581" width="0.0132%" height="15" fill="rgb(223,4,10)" fg:x="2108" fg:w="4"/><text x="7.2050%" y="591.50"></text></g><g><title>mio::sys::unix::selector::epoll::Selector::select (879 samples, 2.90%)</title><rect x="4.1077%" y="677" width="2.9001%" height="15" fill="rgb(234,103,6)" fg:x="1245" fg:w="879"/><text x="4.3577%" y="687.50">mi..</text></g><g><title>epoll_wait (854 samples, 2.82%)</title><rect x="4.1902%" y="661" width="2.8176%" height="15" fill="rgb(227,97,0)" fg:x="1270" fg:w="854"/><text x="4.4402%" y="671.50">ep..</text></g><g><title>syscall_return_via_sysret (12 samples, 0.04%)</title><rect x="6.9682%" y="645" width="0.0396%" height="15" fill="rgb(234,150,53)" fg:x="2112" fg:w="12"/><text x="7.2182%" y="655.50"></text></g><g><title>tokio::runtime::io::driver::Driver::turn (926 samples, 3.06%)</title><rect x="3.9823%" y="693" width="3.0552%" height="15" fill="rgb(228,201,54)" fg:x="1207" fg:w="926"/><text x="4.2323%" y="703.50">tok..</text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::wake (9 samples, 0.03%)</title><rect x="7.0078%" y="677" width="0.0297%" height="15" fill="rgb(222,22,37)" fg:x="2124" fg:w="9"/><text x="7.2578%" y="687.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (5 samples, 0.02%)</title><rect x="7.0210%" y="661" width="0.0165%" height="15" fill="rgb(237,53,32)" fg:x="2128" fg:w="5"/><text x="7.2710%" y="671.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::schedule (4 samples, 0.01%)</title><rect x="7.0243%" y="645" width="0.0132%" height="15" fill="rgb(233,25,53)" fg:x="2129" fg:w="4"/><text x="7.2743%" y="655.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Parker::park (1,656 samples, 5.46%)</title><rect x="1.5936%" y="725" width="5.4637%" height="15" fill="rgb(210,40,34)" fg:x="483" fg:w="1656"/><text x="1.8436%" y="735.50">tokio::..</text></g><g><title>tokio::runtime::time::Driver::park_internal (1,043 samples, 3.44%)</title><rect x="3.6161%" y="709" width="3.4412%" height="15" fill="rgb(241,220,44)" fg:x="1096" fg:w="1043"/><text x="3.8661%" y="719.50">tok..</text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (6 samples, 0.02%)</title><rect x="7.0375%" y="693" width="0.0198%" height="15" fill="rgb(235,28,35)" fg:x="2133" fg:w="6"/><text x="7.2875%" y="703.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park_timeout (1,689 samples, 5.57%)</title><rect x="1.4880%" y="741" width="5.5726%" height="15" fill="rgb(210,56,17)" fg:x="451" fg:w="1689"/><text x="1.7380%" y="751.50">tokio::..</text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.02%)</title><rect x="7.3345%" y="709" width="0.0198%" height="15" fill="rgb(224,130,29)" fg:x="2223" fg:w="6"/><text x="7.5845%" y="719.50"></text></g><g><title>mark_wake_futex (9 samples, 0.03%)</title><rect x="7.5060%" y="629" width="0.0297%" height="15" fill="rgb(235,212,8)" fg:x="2275" fg:w="9"/><text x="7.7560%" y="639.50"></text></g><g><title>available_idle_cpu (7 samples, 0.02%)</title><rect x="7.6215%" y="581" width="0.0231%" height="15" fill="rgb(223,33,50)" fg:x="2310" fg:w="7"/><text x="7.8715%" y="591.50"></text></g><g><title>select_task_rq_fair (16 samples, 0.05%)</title><rect x="7.5951%" y="597" width="0.0528%" height="15" fill="rgb(219,149,13)" fg:x="2302" fg:w="16"/><text x="7.8451%" y="607.50"></text></g><g><title>hv_send_ipi (9 samples, 0.03%)</title><rect x="7.6710%" y="581" width="0.0297%" height="15" fill="rgb(250,156,29)" fg:x="2325" fg:w="9"/><text x="7.9210%" y="591.50"></text></g><g><title>__send_ipi_one (7 samples, 0.02%)</title><rect x="7.6776%" y="565" width="0.0231%" height="15" fill="rgb(216,193,19)" fg:x="2327" fg:w="7"/><text x="7.9276%" y="575.50"></text></g><g><title>__x64_sys_futex (97 samples, 0.32%)</title><rect x="7.3905%" y="677" width="0.3200%" height="15" fill="rgb(216,135,14)" fg:x="2240" fg:w="97"/><text x="7.6405%" y="687.50"></text></g><g><title>do_futex (96 samples, 0.32%)</title><rect x="7.3938%" y="661" width="0.3167%" height="15" fill="rgb(241,47,5)" fg:x="2241" fg:w="96"/><text x="7.6438%" y="671.50"></text></g><g><title>futex_wake (87 samples, 0.29%)</title><rect x="7.4235%" y="645" width="0.2870%" height="15" fill="rgb(233,42,35)" fg:x="2250" fg:w="87"/><text x="7.6735%" y="655.50"></text></g><g><title>wake_up_q (52 samples, 0.17%)</title><rect x="7.5390%" y="629" width="0.1716%" height="15" fill="rgb(231,13,6)" fg:x="2285" fg:w="52"/><text x="7.7890%" y="639.50"></text></g><g><title>try_to_wake_up (51 samples, 0.17%)</title><rect x="7.5423%" y="613" width="0.1683%" height="15" fill="rgb(207,181,40)" fg:x="2286" fg:w="51"/><text x="7.7923%" y="623.50"></text></g><g><title>ttwu_queue_wakelist (19 samples, 0.06%)</title><rect x="7.6479%" y="597" width="0.0627%" height="15" fill="rgb(254,173,49)" fg:x="2318" fg:w="19"/><text x="7.8979%" y="607.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (112 samples, 0.37%)</title><rect x="7.3576%" y="709" width="0.3695%" height="15" fill="rgb(221,1,38)" fg:x="2230" fg:w="112"/><text x="7.6076%" y="719.50"></text></g><g><title>do_syscall_64 (105 samples, 0.35%)</title><rect x="7.3806%" y="693" width="0.3464%" height="15" fill="rgb(206,124,46)" fg:x="2237" fg:w="105"/><text x="7.6306%" y="703.50"></text></g><g><title>syscall_exit_to_user_mode (4 samples, 0.01%)</title><rect x="7.7139%" y="677" width="0.0132%" height="15" fill="rgb(249,21,11)" fg:x="2338" fg:w="4"/><text x="7.9639%" y="687.50"></text></g><g><title>syscall (126 samples, 0.42%)</title><rect x="7.3180%" y="725" width="0.4157%" height="15" fill="rgb(222,201,40)" fg:x="2218" fg:w="126"/><text x="7.5680%" y="735.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::worker_to_notify (10 samples, 0.03%)</title><rect x="7.7337%" y="725" width="0.0330%" height="15" fill="rgb(235,61,29)" fg:x="2344" fg:w="10"/><text x="7.9837%" y="735.50"></text></g><g><title>__fdget_pos (7 samples, 0.02%)</title><rect x="7.8854%" y="613" width="0.0231%" height="15" fill="rgb(219,207,3)" fg:x="2390" fg:w="7"/><text x="8.1354%" y="623.50"></text></g><g><title>__fget_light (5 samples, 0.02%)</title><rect x="7.8920%" y="597" width="0.0165%" height="15" fill="rgb(222,56,46)" fg:x="2392" fg:w="5"/><text x="8.1420%" y="607.50"></text></g><g><title>select_task_rq_fair (11 samples, 0.04%)</title><rect x="8.0075%" y="485" width="0.0363%" height="15" fill="rgb(239,76,54)" fg:x="2427" fg:w="11"/><text x="8.2575%" y="495.50"></text></g><g><title>available_idle_cpu (4 samples, 0.01%)</title><rect x="8.0306%" y="469" width="0.0132%" height="15" fill="rgb(231,124,27)" fg:x="2434" fg:w="4"/><text x="8.2806%" y="479.50"></text></g><g><title>hv_send_ipi (10 samples, 0.03%)</title><rect x="8.0570%" y="469" width="0.0330%" height="15" fill="rgb(249,195,6)" fg:x="2442" fg:w="10"/><text x="8.3070%" y="479.50"></text></g><g><title>__send_ipi_one (8 samples, 0.03%)</title><rect x="8.0636%" y="453" width="0.0264%" height="15" fill="rgb(237,174,47)" fg:x="2444" fg:w="8"/><text x="8.3136%" y="463.50"></text></g><g><title>__wake_up_common (37 samples, 0.12%)</title><rect x="7.9745%" y="533" width="0.1221%" height="15" fill="rgb(206,201,31)" fg:x="2417" fg:w="37"/><text x="8.2245%" y="543.50"></text></g><g><title>ep_autoremove_wake_function (35 samples, 0.12%)</title><rect x="7.9811%" y="517" width="0.1155%" height="15" fill="rgb(231,57,52)" fg:x="2419" fg:w="35"/><text x="8.2311%" y="527.50"></text></g><g><title>try_to_wake_up (33 samples, 0.11%)</title><rect x="7.9877%" y="501" width="0.1089%" height="15" fill="rgb(248,177,22)" fg:x="2421" fg:w="33"/><text x="8.2377%" y="511.50"></text></g><g><title>ttwu_queue_wakelist (16 samples, 0.05%)</title><rect x="8.0438%" y="485" width="0.0528%" height="15" fill="rgb(215,211,37)" fg:x="2438" fg:w="16"/><text x="8.2938%" y="495.50"></text></g><g><title>__wake_up_common_lock (40 samples, 0.13%)</title><rect x="7.9745%" y="549" width="0.1320%" height="15" fill="rgb(241,128,51)" fg:x="2417" fg:w="40"/><text x="8.2245%" y="559.50"></text></g><g><title>_raw_read_lock_irqsave (5 samples, 0.02%)</title><rect x="8.1065%" y="549" width="0.0165%" height="15" fill="rgb(227,165,31)" fg:x="2457" fg:w="5"/><text x="8.3565%" y="559.50"></text></g><g><title>__wake_up_common (59 samples, 0.19%)</title><rect x="7.9415%" y="581" width="0.1947%" height="15" fill="rgb(228,167,24)" fg:x="2407" fg:w="59"/><text x="8.1915%" y="591.50"></text></g><g><title>ep_poll_callback (54 samples, 0.18%)</title><rect x="7.9580%" y="565" width="0.1782%" height="15" fill="rgb(228,143,12)" fg:x="2412" fg:w="54"/><text x="8.2080%" y="575.50"></text></g><g><title>_raw_read_unlock_irqrestore (4 samples, 0.01%)</title><rect x="8.1230%" y="549" width="0.0132%" height="15" fill="rgb(249,149,8)" fg:x="2462" fg:w="4"/><text x="8.3730%" y="559.50"></text></g><g><title>eventfd_write (69 samples, 0.23%)</title><rect x="7.9382%" y="597" width="0.2277%" height="15" fill="rgb(243,35,44)" fg:x="2406" fg:w="69"/><text x="8.1882%" y="607.50"></text></g><g><title>_raw_spin_lock_irq (5 samples, 0.02%)</title><rect x="8.1494%" y="581" width="0.0165%" height="15" fill="rgb(246,89,9)" fg:x="2470" fg:w="5"/><text x="8.3994%" y="591.50"></text></g><g><title>__pv_queued_spin_lock_slowpath (5 samples, 0.02%)</title><rect x="8.1494%" y="565" width="0.0165%" height="15" fill="rgb(233,213,13)" fg:x="2470" fg:w="5"/><text x="8.3994%" y="575.50"></text></g><g><title>ksys_write (93 samples, 0.31%)</title><rect x="7.8755%" y="629" width="0.3068%" height="15" fill="rgb(233,141,41)" fg:x="2387" fg:w="93"/><text x="8.1255%" y="639.50"></text></g><g><title>vfs_write (82 samples, 0.27%)</title><rect x="7.9118%" y="613" width="0.2705%" height="15" fill="rgb(239,167,4)" fg:x="2398" fg:w="82"/><text x="8.1618%" y="623.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Unparker::unpark (128 samples, 0.42%)</title><rect x="7.7667%" y="725" width="0.4223%" height="15" fill="rgb(209,217,16)" fg:x="2354" fg:w="128"/><text x="8.0167%" y="735.50"></text></g><g><title>mio::sys::unix::waker::eventfd::WakerInternal::wake (119 samples, 0.39%)</title><rect x="7.7964%" y="709" width="0.3926%" height="15" fill="rgb(219,88,35)" fg:x="2363" fg:w="119"/><text x="8.0464%" y="719.50"></text></g><g><title>&lt;&amp;std::process::ChildStdin as std::io::Write&gt;::write (118 samples, 0.39%)</title><rect x="7.7997%" y="693" width="0.3893%" height="15" fill="rgb(220,193,23)" fg:x="2364" fg:w="118"/><text x="8.0497%" y="703.50"></text></g><g><title>__write (116 samples, 0.38%)</title><rect x="7.8063%" y="677" width="0.3827%" height="15" fill="rgb(230,90,52)" fg:x="2366" fg:w="116"/><text x="8.0563%" y="687.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (102 samples, 0.34%)</title><rect x="7.8525%" y="661" width="0.3365%" height="15" fill="rgb(252,106,19)" fg:x="2380" fg:w="102"/><text x="8.1025%" y="671.50"></text></g><g><title>do_syscall_64 (99 samples, 0.33%)</title><rect x="7.8624%" y="645" width="0.3266%" height="15" fill="rgb(206,74,20)" fg:x="2383" fg:w="99"/><text x="8.1124%" y="655.50"></text></g><g><title>&lt;tokio::runtime::task::core::TaskIdGuard as core::ops::drop::Drop&gt;::drop (9 samples, 0.03%)</title><rect x="8.3968%" y="693" width="0.0297%" height="15" fill="rgb(230,138,44)" fg:x="2545" fg:w="9"/><text x="8.6468%" y="703.50"></text></g><g><title>&lt;smoltcp::wire::ip::Protocol as core::convert::From&lt;u8&gt;&gt;::from (13 samples, 0.04%)</title><rect x="9.2481%" y="661" width="0.0429%" height="15" fill="rgb(235,182,43)" fg:x="2803" fg:w="13"/><text x="9.4981%" y="671.50"></text></g><g><title>&lt;tokio::runtime::time::entry::TimerEntry as core::ops::drop::Drop&gt;::drop (10 samples, 0.03%)</title><rect x="9.2976%" y="661" width="0.0330%" height="15" fill="rgb(242,16,51)" fg:x="2818" fg:w="10"/><text x="9.5476%" y="671.50"></text></g><g><title>&lt;tokio::sync::notify::Notified as core::ops::drop::Drop&gt;::drop (6 samples, 0.02%)</title><rect x="9.3306%" y="661" width="0.0198%" height="15" fill="rgb(248,9,4)" fg:x="2828" fg:w="6"/><text x="9.5806%" y="671.50"></text></g><g><title>&lt;tokio::sync::notify::Notified as core::future::future::Future&gt;::poll (11 samples, 0.04%)</title><rect x="9.3801%" y="645" width="0.0363%" height="15" fill="rgb(210,31,22)" fg:x="2843" fg:w="11"/><text x="9.6301%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.02%)</title><rect x="9.5747%" y="565" width="0.0165%" height="15" fill="rgb(239,54,39)" fg:x="2902" fg:w="5"/><text x="9.8247%" y="575.50"></text></g><g><title>[libc.so.6] (5 samples, 0.02%)</title><rect x="9.5912%" y="565" width="0.0165%" height="15" fill="rgb(230,99,41)" fg:x="2907" fg:w="5"/><text x="9.8412%" y="575.50"></text></g><g><title>__fdget_pos (10 samples, 0.03%)</title><rect x="9.6638%" y="517" width="0.0330%" height="15" fill="rgb(253,106,12)" fg:x="2929" fg:w="10"/><text x="9.9138%" y="527.50"></text></g><g><title>__fget_light (10 samples, 0.03%)</title><rect x="9.6638%" y="501" width="0.0330%" height="15" fill="rgb(213,46,41)" fg:x="2929" fg:w="10"/><text x="9.9138%" y="511.50"></text></g><g><title>__fget_files (6 samples, 0.02%)</title><rect x="9.6770%" y="485" width="0.0198%" height="15" fill="rgb(215,133,35)" fg:x="2933" fg:w="6"/><text x="9.9270%" y="495.50"></text></g><g><title>default_wake_function (4 samples, 0.01%)</title><rect x="9.8783%" y="405" width="0.0132%" height="15" fill="rgb(213,28,5)" fg:x="2994" fg:w="4"/><text x="10.1283%" y="415.50"></text></g><g><title>available_idle_cpu (8 samples, 0.03%)</title><rect x="9.9739%" y="373" width="0.0264%" height="15" fill="rgb(215,77,49)" fg:x="3023" fg:w="8"/><text x="10.2239%" y="383.50"></text></g><g><title>select_task_rq_fair (13 samples, 0.04%)</title><rect x="9.9607%" y="389" width="0.0429%" height="15" fill="rgb(248,100,22)" fg:x="3019" fg:w="13"/><text x="10.2107%" y="399.50"></text></g><g><title>__wake_up_common (59 samples, 0.19%)</title><rect x="9.8387%" y="437" width="0.1947%" height="15" fill="rgb(208,67,9)" fg:x="2982" fg:w="59"/><text x="10.0887%" y="447.50"></text></g><g><title>ep_autoremove_wake_function (54 samples, 0.18%)</title><rect x="9.8552%" y="421" width="0.1782%" height="15" fill="rgb(219,133,21)" fg:x="2987" fg:w="54"/><text x="10.1052%" y="431.50"></text></g><g><title>try_to_wake_up (43 samples, 0.14%)</title><rect x="9.8915%" y="405" width="0.1419%" height="15" fill="rgb(246,46,29)" fg:x="2998" fg:w="43"/><text x="10.1415%" y="415.50"></text></g><g><title>ttwu_queue_wakelist (9 samples, 0.03%)</title><rect x="10.0036%" y="389" width="0.0297%" height="15" fill="rgb(246,185,52)" fg:x="3032" fg:w="9"/><text x="10.2536%" y="399.50"></text></g><g><title>_raw_spin_lock_irqsave (11 samples, 0.04%)</title><rect x="10.0333%" y="437" width="0.0363%" height="15" fill="rgb(252,136,11)" fg:x="3041" fg:w="11"/><text x="10.2833%" y="447.50"></text></g><g><title>__pv_queued_spin_lock_slowpath (10 samples, 0.03%)</title><rect x="10.0366%" y="421" width="0.0330%" height="15" fill="rgb(219,138,53)" fg:x="3042" fg:w="10"/><text x="10.2866%" y="431.50"></text></g><g><title>__wake_up_common_lock (73 samples, 0.24%)</title><rect x="9.8321%" y="453" width="0.2409%" height="15" fill="rgb(211,51,23)" fg:x="2980" fg:w="73"/><text x="10.0821%" y="463.50"></text></g><g><title>_raw_read_lock_irqsave (8 samples, 0.03%)</title><rect x="10.0729%" y="453" width="0.0264%" height="15" fill="rgb(247,221,28)" fg:x="3053" fg:w="8"/><text x="10.3229%" y="463.50"></text></g><g><title>__wake_up_common (101 samples, 0.33%)</title><rect x="9.7694%" y="485" width="0.3332%" height="15" fill="rgb(251,222,45)" fg:x="2961" fg:w="101"/><text x="10.0194%" y="495.50"></text></g><g><title>ep_poll_callback (94 samples, 0.31%)</title><rect x="9.7925%" y="469" width="0.3101%" height="15" fill="rgb(217,162,53)" fg:x="2968" fg:w="94"/><text x="10.0425%" y="479.50"></text></g><g><title>_copy_from_user (8 samples, 0.03%)</title><rect x="10.1026%" y="485" width="0.0264%" height="15" fill="rgb(229,93,14)" fg:x="3062" fg:w="8"/><text x="10.3526%" y="495.50"></text></g><g><title>_raw_spin_lock_irq (16 samples, 0.05%)</title><rect x="10.1290%" y="485" width="0.0528%" height="15" fill="rgb(209,67,49)" fg:x="3070" fg:w="16"/><text x="10.3790%" y="495.50"></text></g><g><title>__pv_queued_spin_lock_slowpath (8 samples, 0.03%)</title><rect x="10.1554%" y="469" width="0.0264%" height="15" fill="rgb(213,87,29)" fg:x="3078" fg:w="8"/><text x="10.4054%" y="479.50"></text></g><g><title>eventfd_write (132 samples, 0.44%)</title><rect x="9.7496%" y="501" width="0.4355%" height="15" fill="rgb(205,151,52)" fg:x="2955" fg:w="132"/><text x="9.9996%" y="511.50"></text></g><g><title>ksys_write (167 samples, 0.55%)</title><rect x="9.6506%" y="533" width="0.5510%" height="15" fill="rgb(253,215,39)" fg:x="2925" fg:w="167"/><text x="9.9006%" y="543.50"></text></g><g><title>vfs_write (151 samples, 0.50%)</title><rect x="9.7034%" y="517" width="0.4982%" height="15" fill="rgb(221,220,41)" fg:x="2941" fg:w="151"/><text x="9.9534%" y="527.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (181 samples, 0.60%)</title><rect x="9.6077%" y="565" width="0.5972%" height="15" fill="rgb(218,133,21)" fg:x="2912" fg:w="181"/><text x="9.8577%" y="575.50"></text></g><g><title>do_syscall_64 (177 samples, 0.58%)</title><rect x="9.6209%" y="549" width="0.5840%" height="15" fill="rgb(221,193,43)" fg:x="2916" fg:w="177"/><text x="9.8709%" y="559.50"></text></g><g><title>mio::sys::unix::waker::eventfd::WakerInternal::wake (208 samples, 0.69%)</title><rect x="9.5285%" y="613" width="0.6863%" height="15" fill="rgb(240,128,52)" fg:x="2888" fg:w="208"/><text x="9.7785%" y="623.50"></text></g><g><title>&lt;&amp;std::process::ChildStdin as std::io::Write&gt;::write (205 samples, 0.68%)</title><rect x="9.5384%" y="597" width="0.6764%" height="15" fill="rgb(253,114,12)" fg:x="2891" fg:w="205"/><text x="9.7884%" y="607.50"></text></g><g><title>__write (199 samples, 0.66%)</title><rect x="9.5582%" y="581" width="0.6566%" height="15" fill="rgb(215,223,47)" fg:x="2897" fg:w="199"/><text x="9.8082%" y="591.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::reregister (238 samples, 0.79%)</title><rect x="9.4955%" y="629" width="0.7852%" height="15" fill="rgb(248,225,23)" fg:x="2878" fg:w="238"/><text x="9.7455%" y="639.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::insert (16 samples, 0.05%)</title><rect x="10.2280%" y="613" width="0.0528%" height="15" fill="rgb(250,108,0)" fg:x="3100" fg:w="16"/><text x="10.4780%" y="623.50"></text></g><g><title>&lt;tokio::time::sleep::Sleep as core::future::future::Future&gt;::poll (286 samples, 0.94%)</title><rect x="9.4163%" y="645" width="0.9436%" height="15" fill="rgb(228,208,7)" fg:x="2854" fg:w="286"/><text x="9.6663%" y="655.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::register_by_ref (24 samples, 0.08%)</title><rect x="10.2808%" y="629" width="0.0792%" height="15" fill="rgb(244,45,10)" fg:x="3116" fg:w="24"/><text x="10.5308%" y="639.50"></text></g><g><title>tokio::runtime::coop::Budget::has_remaining (7 samples, 0.02%)</title><rect x="10.3600%" y="645" width="0.0231%" height="15" fill="rgb(207,125,25)" fg:x="3140" fg:w="7"/><text x="10.6100%" y="655.50"></text></g><g><title>&lt;tokio::time::timeout::Timeout&lt;T&gt; as core::future::future::Future&gt;::poll (369 samples, 1.22%)</title><rect x="9.3504%" y="661" width="1.2175%" height="15" fill="rgb(210,195,18)" fg:x="2834" fg:w="369"/><text x="9.6004%" y="671.50"></text></g><g><title>tokio::sync::notify::Notified::poll_notified (56 samples, 0.18%)</title><rect x="10.3831%" y="645" width="0.1848%" height="15" fill="rgb(249,80,12)" fg:x="3147" fg:w="56"/><text x="10.6331%" y="655.50"></text></g><g><title>tokio::runtime::task::waker::clone_waker (9 samples, 0.03%)</title><rect x="10.5381%" y="629" width="0.0297%" height="15" fill="rgb(221,65,9)" fg:x="3194" fg:w="9"/><text x="10.7881%" y="639.50"></text></g><g><title>[libc.so.6] (20 samples, 0.07%)</title><rect x="10.5678%" y="661" width="0.0660%" height="15" fill="rgb(235,49,36)" fg:x="3203" fg:w="20"/><text x="10.8178%" y="671.50"></text></g><g><title>netstack_smoltcp::packet::IpPacket&lt;&amp;T&gt;::payload (8 samples, 0.03%)</title><rect x="10.6371%" y="661" width="0.0264%" height="15" fill="rgb(225,32,20)" fg:x="3224" fg:w="8"/><text x="10.8871%" y="671.50"></text></g><g><title>&lt;tokio::sync::mpsc::bounded::Semaphore as tokio::sync::mpsc::chan::Semaphore&gt;::add_permit (49 samples, 0.16%)</title><rect x="10.8516%" y="629" width="0.1617%" height="15" fill="rgb(215,141,46)" fg:x="3289" fg:w="49"/><text x="11.1016%" y="639.50"></text></g><g><title>&lt;tokio::sync::mpsc::bounded::Semaphore as tokio::sync::mpsc::chan::Semaphore&gt;::is_closed (5 samples, 0.02%)</title><rect x="11.0132%" y="629" width="0.0165%" height="15" fill="rgb(250,160,47)" fg:x="3338" fg:w="5"/><text x="11.2632%" y="639.50"></text></g><g><title>[libc.so.6] (20 samples, 0.07%)</title><rect x="11.4388%" y="597" width="0.0660%" height="15" fill="rgb(216,222,40)" fg:x="3467" fg:w="20"/><text x="11.6888%" y="607.50"></text></g><g><title>dequeue_task_fair (5 samples, 0.02%)</title><rect x="11.5642%" y="453" width="0.0165%" height="15" fill="rgb(234,217,39)" fg:x="3505" fg:w="5"/><text x="11.8142%" y="463.50"></text></g><g><title>dequeue_entity (5 samples, 0.02%)</title><rect x="11.5642%" y="437" width="0.0165%" height="15" fill="rgb(207,178,40)" fg:x="3505" fg:w="5"/><text x="11.8142%" y="447.50"></text></g><g><title>update_curr (5 samples, 0.02%)</title><rect x="11.5642%" y="421" width="0.0165%" height="15" fill="rgb(221,136,13)" fg:x="3505" fg:w="5"/><text x="11.8142%" y="431.50"></text></g><g><title>futex_wait_queue_me (12 samples, 0.04%)</title><rect x="11.5477%" y="501" width="0.0396%" height="15" fill="rgb(249,199,10)" fg:x="3500" fg:w="12"/><text x="11.7977%" y="511.50"></text></g><g><title>schedule (12 samples, 0.04%)</title><rect x="11.5477%" y="485" width="0.0396%" height="15" fill="rgb(249,222,13)" fg:x="3500" fg:w="12"/><text x="11.7977%" y="495.50"></text></g><g><title>__schedule (12 samples, 0.04%)</title><rect x="11.5477%" y="469" width="0.0396%" height="15" fill="rgb(244,185,38)" fg:x="3500" fg:w="12"/><text x="11.7977%" y="479.50"></text></g><g><title>__x64_sys_futex (26 samples, 0.09%)</title><rect x="11.5279%" y="549" width="0.0858%" height="15" fill="rgb(236,202,9)" fg:x="3494" fg:w="26"/><text x="11.7779%" y="559.50"></text></g><g><title>do_futex (26 samples, 0.09%)</title><rect x="11.5279%" y="533" width="0.0858%" height="15" fill="rgb(250,229,37)" fg:x="3494" fg:w="26"/><text x="11.7779%" y="543.50"></text></g><g><title>futex_wait (23 samples, 0.08%)</title><rect x="11.5378%" y="517" width="0.0759%" height="15" fill="rgb(206,174,23)" fg:x="3497" fg:w="23"/><text x="11.7878%" y="527.50"></text></g><g><title>futex_wait_setup (8 samples, 0.03%)</title><rect x="11.5873%" y="501" width="0.0264%" height="15" fill="rgb(211,33,43)" fg:x="3512" fg:w="8"/><text x="11.8373%" y="511.50"></text></g><g><title>__lll_lock_wait_private (40 samples, 0.13%)</title><rect x="11.5048%" y="597" width="0.1320%" height="15" fill="rgb(245,58,50)" fg:x="3487" fg:w="40"/><text x="11.7548%" y="607.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (33 samples, 0.11%)</title><rect x="11.5279%" y="581" width="0.1089%" height="15" fill="rgb(244,68,36)" fg:x="3494" fg:w="33"/><text x="11.7779%" y="591.50"></text></g><g><title>do_syscall_64 (33 samples, 0.11%)</title><rect x="11.5279%" y="565" width="0.1089%" height="15" fill="rgb(232,229,15)" fg:x="3494" fg:w="33"/><text x="11.7779%" y="575.50"></text></g><g><title>syscall_exit_to_user_mode (5 samples, 0.02%)</title><rect x="11.6203%" y="549" width="0.0165%" height="15" fill="rgb(254,30,23)" fg:x="3522" fg:w="5"/><text x="11.8703%" y="559.50"></text></g><g><title>exit_to_user_mode_prepare (5 samples, 0.02%)</title><rect x="11.6203%" y="533" width="0.0165%" height="15" fill="rgb(235,160,14)" fg:x="3522" fg:w="5"/><text x="11.8703%" y="543.50"></text></g><g><title>tlb_finish_mmu (5 samples, 0.02%)</title><rect x="11.6467%" y="501" width="0.0165%" height="15" fill="rgb(212,155,44)" fg:x="3530" fg:w="5"/><text x="11.8967%" y="511.50"></text></g><g><title>__madvise (14 samples, 0.05%)</title><rect x="11.6368%" y="597" width="0.0462%" height="15" fill="rgb(226,2,50)" fg:x="3527" fg:w="14"/><text x="11.8868%" y="607.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (13 samples, 0.04%)</title><rect x="11.6401%" y="581" width="0.0429%" height="15" fill="rgb(234,177,6)" fg:x="3528" fg:w="13"/><text x="11.8901%" y="591.50"></text></g><g><title>do_syscall_64 (13 samples, 0.04%)</title><rect x="11.6401%" y="565" width="0.0429%" height="15" fill="rgb(217,24,9)" fg:x="3528" fg:w="13"/><text x="11.8901%" y="575.50"></text></g><g><title>__x64_sys_madvise (13 samples, 0.04%)</title><rect x="11.6401%" y="549" width="0.0429%" height="15" fill="rgb(220,13,46)" fg:x="3528" fg:w="13"/><text x="11.8901%" y="559.50"></text></g><g><title>do_madvise.part.0 (13 samples, 0.04%)</title><rect x="11.6401%" y="533" width="0.0429%" height="15" fill="rgb(239,221,27)" fg:x="3528" fg:w="13"/><text x="11.8901%" y="543.50"></text></g><g><title>zap_page_range (12 samples, 0.04%)</title><rect x="11.6434%" y="517" width="0.0396%" height="15" fill="rgb(222,198,25)" fg:x="3529" fg:w="12"/><text x="11.8934%" y="527.50"></text></g><g><title>unmap_page_range (6 samples, 0.02%)</title><rect x="11.6632%" y="501" width="0.0198%" height="15" fill="rgb(211,99,13)" fg:x="3535" fg:w="6"/><text x="11.9132%" y="511.50"></text></g><g><title>[libc.so.6] (176 samples, 0.58%)</title><rect x="11.1056%" y="613" width="0.5807%" height="15" fill="rgb(232,111,31)" fg:x="3366" fg:w="176"/><text x="11.3556%" y="623.50"></text></g><g><title>__x64_sys_futex (12 samples, 0.04%)</title><rect x="11.6995%" y="565" width="0.0396%" height="15" fill="rgb(245,82,37)" fg:x="3546" fg:w="12"/><text x="11.9495%" y="575.50"></text></g><g><title>do_futex (9 samples, 0.03%)</title><rect x="11.7094%" y="549" width="0.0297%" height="15" fill="rgb(227,149,46)" fg:x="3549" fg:w="9"/><text x="11.9594%" y="559.50"></text></g><g><title>futex_wake (6 samples, 0.02%)</title><rect x="11.7193%" y="533" width="0.0198%" height="15" fill="rgb(218,36,50)" fg:x="3552" fg:w="6"/><text x="11.9693%" y="543.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (15 samples, 0.05%)</title><rect x="11.6962%" y="597" width="0.0495%" height="15" fill="rgb(226,80,48)" fg:x="3545" fg:w="15"/><text x="11.9462%" y="607.50"></text></g><g><title>do_syscall_64 (14 samples, 0.05%)</title><rect x="11.6995%" y="581" width="0.0462%" height="15" fill="rgb(238,224,15)" fg:x="3546" fg:w="14"/><text x="11.9495%" y="591.50"></text></g><g><title>__libc_free (219 samples, 0.72%)</title><rect x="11.0297%" y="629" width="0.7226%" height="15" fill="rgb(241,136,10)" fg:x="3343" fg:w="219"/><text x="11.2797%" y="639.50"></text></g><g><title>__lll_lock_wake_private (20 samples, 0.07%)</title><rect x="11.6863%" y="613" width="0.0660%" height="15" fill="rgb(208,32,45)" fg:x="3542" fg:w="20"/><text x="11.9363%" y="623.50"></text></g><g><title>__rdl_dealloc (6 samples, 0.02%)</title><rect x="11.7523%" y="629" width="0.0198%" height="15" fill="rgb(207,135,9)" fg:x="3562" fg:w="6"/><text x="12.0023%" y="639.50"></text></g><g><title>__rust_dealloc (6 samples, 0.02%)</title><rect x="11.7721%" y="629" width="0.0198%" height="15" fill="rgb(206,86,44)" fg:x="3568" fg:w="6"/><text x="12.0221%" y="639.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or (10 samples, 0.03%)</title><rect x="12.0393%" y="613" width="0.0330%" height="15" fill="rgb(245,177,15)" fg:x="3649" fg:w="10"/><text x="12.2893%" y="623.50"></text></g><g><title>smoltcp::socket::tcp::Socket::accepts (11 samples, 0.04%)</title><rect x="12.2241%" y="597" width="0.0363%" height="15" fill="rgb(206,64,50)" fg:x="3705" fg:w="11"/><text x="12.4741%" y="607.50"></text></g><g><title>&lt;smoltcp::wire::tcp::SeqNumber as core::ops::arith::Add&lt;usize&gt;&gt;::add (5 samples, 0.02%)</title><rect x="12.6629%" y="581" width="0.0165%" height="15" fill="rgb(234,36,40)" fg:x="3838" fg:w="5"/><text x="12.9129%" y="591.50"></text></g><g><title>smoltcp::storage::assembler::Assembler::add (13 samples, 0.04%)</title><rect x="12.6794%" y="581" width="0.0429%" height="15" fill="rgb(213,64,8)" fg:x="3843" fg:w="13"/><text x="12.9294%" y="591.50"></text></g><g><title>[libc.so.6] (103 samples, 0.34%)</title><rect x="12.8675%" y="565" width="0.3398%" height="15" fill="rgb(210,75,36)" fg:x="3900" fg:w="103"/><text x="13.1175%" y="575.50"></text></g><g><title>smoltcp::socket::tcp::Socket::process (288 samples, 0.95%)</title><rect x="12.2604%" y="597" width="0.9502%" height="15" fill="rgb(229,88,21)" fg:x="3716" fg:w="288"/><text x="12.5104%" y="607.50"></text></g><g><title>smoltcp::storage::ring_buffer::RingBuffer&lt;T&gt;::write_unallocated (148 samples, 0.49%)</title><rect x="12.7223%" y="581" width="0.4883%" height="15" fill="rgb(252,204,47)" fg:x="3856" fg:w="148"/><text x="12.9723%" y="591.50"></text></g><g><title>smoltcp::wire::ip::checksum::data (373 samples, 1.23%)</title><rect x="13.3228%" y="581" width="1.2307%" height="15" fill="rgb(208,77,27)" fg:x="4038" fg:w="373"/><text x="13.5728%" y="591.50"></text></g><g><title>smoltcp::iface::interface::InterfaceInner::process_tcp (773 samples, 2.55%)</title><rect x="12.0723%" y="613" width="2.5504%" height="15" fill="rgb(221,76,26)" fg:x="3659" fg:w="773"/><text x="12.3223%" y="623.50">sm..</text></g><g><title>smoltcp::wire::tcp::Repr::parse (428 samples, 1.41%)</title><rect x="13.2106%" y="597" width="1.4121%" height="15" fill="rgb(225,139,18)" fg:x="4004" fg:w="428"/><text x="13.4606%" y="607.50"></text></g><g><title>smoltcp::wire::ip::checksum::pseudo_header (21 samples, 0.07%)</title><rect x="14.5534%" y="581" width="0.0693%" height="15" fill="rgb(230,137,11)" fg:x="4411" fg:w="21"/><text x="14.8034%" y="591.50"></text></g><g><title>smoltcp::iface::route::Routes::lookup (37 samples, 0.12%)</title><rect x="14.6227%" y="613" width="0.1221%" height="15" fill="rgb(212,28,1)" fg:x="4432" fg:w="37"/><text x="14.8727%" y="623.50"></text></g><g><title>smoltcp::wire::ip::Cidr::contains_addr (11 samples, 0.04%)</title><rect x="14.7085%" y="597" width="0.0363%" height="15" fill="rgb(248,164,17)" fg:x="4458" fg:w="11"/><text x="14.9585%" y="607.50"></text></g><g><title>&lt;smoltcp::wire::ip::Protocol as core::convert::From&lt;u8&gt;&gt;::from (11 samples, 0.04%)</title><rect x="14.7745%" y="597" width="0.0363%" height="15" fill="rgb(222,171,42)" fg:x="4478" fg:w="11"/><text x="15.0245%" y="607.50"></text></g><g><title>smoltcp::iface::interface::InterfaceInner::process_ip (935 samples, 3.08%)</title><rect x="11.7919%" y="629" width="3.0849%" height="15" fill="rgb(243,84,45)" fg:x="3574" fg:w="935"/><text x="12.0419%" y="639.50">smo..</text></g><g><title>smoltcp::wire::ipv4::Repr::parse (40 samples, 0.13%)</title><rect x="14.7448%" y="613" width="0.1320%" height="15" fill="rgb(252,49,23)" fg:x="4469" fg:w="40"/><text x="14.9948%" y="623.50"></text></g><g><title>smoltcp::wire::ip::checksum::data (20 samples, 0.07%)</title><rect x="14.8108%" y="597" width="0.0660%" height="15" fill="rgb(215,19,7)" fg:x="4489" fg:w="20"/><text x="15.0608%" y="607.50"></text></g><g><title>&lt;netstack_smoltcp::device::VirtualRxToken as smoltcp::phy::RxToken&gt;::consume (1,275 samples, 4.21%)</title><rect x="10.8186%" y="645" width="4.2067%" height="15" fill="rgb(238,81,41)" fg:x="3279" fg:w="1275"/><text x="11.0686%" y="655.50">&lt;nets..</text></g><g><title>tokio::sync::batch_semaphore::Semaphore::add_permits_locked (45 samples, 0.15%)</title><rect x="14.8768%" y="629" width="0.1485%" height="15" fill="rgb(210,199,37)" fg:x="4509" fg:w="45"/><text x="15.1268%" y="639.50"></text></g><g><title>smoltcp::iface::socket_meta::Meta::egress_permitted (9 samples, 0.03%)</title><rect x="15.0252%" y="645" width="0.0297%" height="15" fill="rgb(244,192,49)" fg:x="4554" fg:w="9"/><text x="15.2752%" y="655.50"></text></g><g><title>smoltcp::iface::socket_set::SocketSet::items (8 samples, 0.03%)</title><rect x="15.0549%" y="645" width="0.0264%" height="15" fill="rgb(226,211,11)" fg:x="4563" fg:w="8"/><text x="15.3049%" y="655.50"></text></g><g><title>&lt;smoltcp::wire::tcp::SeqNumber as core::ops::arith::Sub&gt;::sub (6 samples, 0.02%)</title><rect x="15.4377%" y="629" width="0.0198%" height="15" fill="rgb(236,162,54)" fg:x="4679" fg:w="6"/><text x="15.6877%" y="639.50"></text></g><g><title>__libc_calloc (67 samples, 0.22%)</title><rect x="15.5168%" y="597" width="0.2211%" height="15" fill="rgb(220,229,9)" fg:x="4703" fg:w="67"/><text x="15.7668%" y="607.50"></text></g><g><title>[libc.so.6] (37 samples, 0.12%)</title><rect x="15.6158%" y="581" width="0.1221%" height="15" fill="rgb(250,87,22)" fg:x="4733" fg:w="37"/><text x="15.8658%" y="591.50"></text></g><g><title>[libc.so.6] (5 samples, 0.02%)</title><rect x="15.7214%" y="565" width="0.0165%" height="15" fill="rgb(239,43,17)" fg:x="4765" fg:w="5"/><text x="15.9714%" y="575.50"></text></g><g><title>__rust_alloc_zeroed (4 samples, 0.01%)</title><rect x="15.7412%" y="597" width="0.0132%" height="15" fill="rgb(231,177,25)" fg:x="4771" fg:w="4"/><text x="15.9912%" y="607.50"></text></g><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="15.9161%" y="565" width="0.0132%" height="15" fill="rgb(219,179,1)" fg:x="4824" fg:w="4"/><text x="16.1661%" y="575.50"></text></g><g><title>smoltcp::wire::ip::checksum::data (7 samples, 0.02%)</title><rect x="15.9293%" y="565" width="0.0231%" height="15" fill="rgb(238,219,53)" fg:x="4828" fg:w="7"/><text x="16.1793%" y="575.50"></text></g><g><title>smoltcp::iface::packet::Packet::emit_payload (76 samples, 0.25%)</title><rect x="15.7544%" y="597" width="0.2508%" height="15" fill="rgb(232,167,36)" fg:x="4775" fg:w="76"/><text x="16.0044%" y="607.50"></text></g><g><title>smoltcp::wire::tcp::Repr::emit (55 samples, 0.18%)</title><rect x="15.8237%" y="581" width="0.1815%" height="15" fill="rgb(244,19,51)" fg:x="4796" fg:w="55"/><text x="16.0737%" y="591.50"></text></g><g><title>smoltcp::wire::ip::checksum::pseudo_header (16 samples, 0.05%)</title><rect x="15.9524%" y="565" width="0.0528%" height="15" fill="rgb(224,6,22)" fg:x="4835" fg:w="16"/><text x="16.2024%" y="575.50"></text></g><g><title>smoltcp::wire::ipv4::Repr::emit (13 samples, 0.04%)</title><rect x="16.0051%" y="597" width="0.0429%" height="15" fill="rgb(224,145,5)" fg:x="4851" fg:w="13"/><text x="16.2551%" y="607.50"></text></g><g><title>smoltcp::wire::ip::checksum::data (5 samples, 0.02%)</title><rect x="16.0315%" y="581" width="0.0165%" height="15" fill="rgb(234,130,49)" fg:x="4859" fg:w="5"/><text x="16.2815%" y="591.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (4 samples, 0.01%)</title><rect x="16.0480%" y="597" width="0.0132%" height="15" fill="rgb(254,6,2)" fg:x="4864" fg:w="4"/><text x="16.2980%" y="607.50"></text></g><g><title>tokio::sync::mpsc::list::Tx&lt;T&gt;::push (24 samples, 0.08%)</title><rect x="16.0612%" y="597" width="0.0792%" height="15" fill="rgb(208,96,46)" fg:x="4868" fg:w="24"/><text x="16.3112%" y="607.50"></text></g><g><title>&lt;netstack_smoltcp::device::VirtualTxToken as smoltcp::phy::TxToken&gt;::consume (208 samples, 0.69%)</title><rect x="15.4871%" y="613" width="0.6863%" height="15" fill="rgb(239,3,39)" fg:x="4694" fg:w="208"/><text x="15.7371%" y="623.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::wake (10 samples, 0.03%)</title><rect x="16.1404%" y="597" width="0.0330%" height="15" fill="rgb(233,210,1)" fg:x="4892" fg:w="10"/><text x="16.3904%" y="607.50"></text></g><g><title>smoltcp::iface::interface::InterfaceInner::dispatch_ip (223 samples, 0.74%)</title><rect x="15.4575%" y="629" width="0.7358%" height="15" fill="rgb(244,137,37)" fg:x="4685" fg:w="223"/><text x="15.7075%" y="639.50"></text></g><g><title>smoltcp::wire::ip::Address::is_unspecified (6 samples, 0.02%)</title><rect x="16.1734%" y="613" width="0.0198%" height="15" fill="rgb(240,136,2)" fg:x="4902" fg:w="6"/><text x="16.4234%" y="623.50"></text></g><g><title>smoltcp::socket::tcp::Socket::ack_to_transmit (18 samples, 0.06%)</title><rect x="16.1932%" y="629" width="0.0594%" height="15" fill="rgb(239,18,37)" fg:x="4908" fg:w="18"/><text x="16.4432%" y="639.50"></text></g><g><title>smoltcp::socket::tcp::Socket::seq_to_transmit (47 samples, 0.16%)</title><rect x="16.2526%" y="629" width="0.1551%" height="15" fill="rgb(218,185,22)" fg:x="4926" fg:w="47"/><text x="16.5026%" y="639.50"></text></g><g><title>smoltcp::socket::tcp::Socket::window_to_update (16 samples, 0.05%)</title><rect x="16.4077%" y="629" width="0.0528%" height="15" fill="rgb(225,218,4)" fg:x="4973" fg:w="16"/><text x="16.6577%" y="639.50"></text></g><g><title>smoltcp::wire::ip::Repr::new (4 samples, 0.01%)</title><rect x="16.4605%" y="629" width="0.0132%" height="15" fill="rgb(230,182,32)" fg:x="4989" fg:w="4"/><text x="16.7105%" y="639.50"></text></g><g><title>smoltcp::wire::tcp::Repr::buffer_len (4 samples, 0.01%)</title><rect x="16.4737%" y="629" width="0.0132%" height="15" fill="rgb(242,56,43)" fg:x="4993" fg:w="4"/><text x="16.7237%" y="639.50"></text></g><g><title>smoltcp::socket::tcp::Socket::dispatch (431 samples, 1.42%)</title><rect x="15.0813%" y="645" width="1.4220%" height="15" fill="rgb(233,99,24)" fg:x="4571" fg:w="431"/><text x="15.3313%" y="655.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::try_acquire (5 samples, 0.02%)</title><rect x="16.4869%" y="629" width="0.0165%" height="15" fill="rgb(234,209,42)" fg:x="4997" fg:w="5"/><text x="16.7369%" y="639.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::try_acquire (17 samples, 0.06%)</title><rect x="16.5033%" y="645" width="0.0561%" height="15" fill="rgb(227,7,12)" fg:x="5002" fg:w="17"/><text x="16.7533%" y="655.50"></text></g><g><title>&lt;tokio::sync::mpsc::unbounded::Semaphore as tokio::sync::mpsc::chan::Semaphore&gt;::add_permit (14 samples, 0.05%)</title><rect x="16.6353%" y="629" width="0.0462%" height="15" fill="rgb(245,203,43)" fg:x="5042" fg:w="14"/><text x="16.8853%" y="639.50"></text></g><g><title>smoltcp::iface::interface::Interface::poll (1,854 samples, 6.12%)</title><rect x="10.6635%" y="661" width="6.1170%" height="15" fill="rgb(238,205,33)" fg:x="3232" fg:w="1854"/><text x="10.9135%" y="671.50">smoltcp:..</text></g><g><title>tokio::sync::mpsc::chan::Rx&lt;T,S&gt;::try_recv (67 samples, 0.22%)</title><rect x="16.5594%" y="645" width="0.2211%" height="15" fill="rgb(231,56,7)" fg:x="5019" fg:w="67"/><text x="16.8094%" y="655.50"></text></g><g><title>tokio::sync::mpsc::list::Rx&lt;T&gt;::pop (30 samples, 0.10%)</title><rect x="16.6815%" y="629" width="0.0990%" height="15" fill="rgb(244,186,29)" fg:x="5056" fg:w="30"/><text x="16.9315%" y="639.50"></text></g><g><title>smoltcp::iface::interface::Interface::poll_delay (75 samples, 0.25%)</title><rect x="16.7805%" y="661" width="0.2475%" height="15" fill="rgb(234,111,31)" fg:x="5086" fg:w="75"/><text x="17.0305%" y="671.50"></text></g><g><title>smoltcp::iface::interface::Interface::poll_at (67 samples, 0.22%)</title><rect x="16.8069%" y="645" width="0.2211%" height="15" fill="rgb(241,149,10)" fg:x="5094" fg:w="67"/><text x="17.0569%" y="655.50"></text></g><g><title>smoltcp::socket::tcp::Socket::poll_at (46 samples, 0.15%)</title><rect x="16.8762%" y="629" width="0.1518%" height="15" fill="rgb(249,206,44)" fg:x="5115" fg:w="46"/><text x="17.1262%" y="639.50"></text></g><g><title>smoltcp::socket::tcp::Socket::seq_to_transmit (16 samples, 0.05%)</title><rect x="16.9752%" y="613" width="0.0528%" height="15" fill="rgb(251,153,30)" fg:x="5145" fg:w="16"/><text x="17.2252%" y="623.50"></text></g><g><title>smoltcp::storage::ring_buffer::RingBuffer&lt;T&gt;::enqueue_slice (187 samples, 0.62%)</title><rect x="17.0279%" y="661" width="0.6170%" height="15" fill="rgb(239,152,38)" fg:x="5161" fg:w="187"/><text x="17.2779%" y="671.50"></text></g><g><title>[libc.so.6] (178 samples, 0.59%)</title><rect x="17.0576%" y="645" width="0.5873%" height="15" fill="rgb(249,139,47)" fg:x="5170" fg:w="178"/><text x="17.3076%" y="655.50"></text></g><g><title>smoltcp::time::&lt;impl core::convert::From&lt;smoltcp::time::Duration&gt; for core::time::Duration&gt;::from (4 samples, 0.01%)</title><rect x="17.6449%" y="661" width="0.0132%" height="15" fill="rgb(244,64,35)" fg:x="5348" fg:w="4"/><text x="17.8949%" y="671.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (52 samples, 0.17%)</title><rect x="17.7043%" y="645" width="0.1716%" height="15" fill="rgb(216,46,15)" fg:x="5366" fg:w="52"/><text x="17.9543%" y="655.50"></text></g><g><title>clock_gettime (46 samples, 0.15%)</title><rect x="17.7241%" y="629" width="0.1518%" height="15" fill="rgb(250,74,19)" fg:x="5372" fg:w="46"/><text x="17.9741%" y="639.50"></text></g><g><title>__vdso_clock_gettime (33 samples, 0.11%)</title><rect x="17.7670%" y="613" width="0.1089%" height="15" fill="rgb(249,42,33)" fg:x="5385" fg:w="33"/><text x="18.0170%" y="623.50"></text></g><g><title>std::time::SystemTime::duration_since (13 samples, 0.04%)</title><rect x="17.8759%" y="645" width="0.0429%" height="15" fill="rgb(242,149,17)" fg:x="5418" fg:w="13"/><text x="18.1259%" y="655.50"></text></g><g><title>smoltcp::time::Instant::now (89 samples, 0.29%)</title><rect x="17.6581%" y="661" width="0.2936%" height="15" fill="rgb(244,29,21)" fg:x="5352" fg:w="89"/><text x="17.9081%" y="671.50"></text></g><g><title>std::time::SystemTime::now (10 samples, 0.03%)</title><rect x="17.9188%" y="645" width="0.0330%" height="15" fill="rgb(220,130,37)" fg:x="5431" fg:w="10"/><text x="18.1688%" y="655.50"></text></g><g><title>smoltcp::wire::ip::Version::of_packet (42 samples, 0.14%)</title><rect x="17.9518%" y="661" width="0.1386%" height="15" fill="rgb(211,67,2)" fg:x="5441" fg:w="42"/><text x="18.2018%" y="671.50"></text></g><g><title>smoltcp::wire::ipv4::Address::from_bytes (5 samples, 0.02%)</title><rect x="18.0903%" y="661" width="0.0165%" height="15" fill="rgb(235,68,52)" fg:x="5483" fg:w="5"/><text x="18.3403%" y="671.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (42 samples, 0.14%)</title><rect x="18.1068%" y="661" width="0.1386%" height="15" fill="rgb(246,142,3)" fg:x="5488" fg:w="42"/><text x="18.3568%" y="671.50"></text></g><g><title>clock_gettime (39 samples, 0.13%)</title><rect x="18.1167%" y="645" width="0.1287%" height="15" fill="rgb(241,25,7)" fg:x="5491" fg:w="39"/><text x="18.3667%" y="655.50"></text></g><g><title>__vdso_clock_gettime (27 samples, 0.09%)</title><rect x="18.1563%" y="629" width="0.0891%" height="15" fill="rgb(242,119,39)" fg:x="5503" fg:w="27"/><text x="18.4063%" y="639.50"></text></g><g><title>tokio::macros::support::thread_rng_n (12 samples, 0.04%)</title><rect x="18.2520%" y="661" width="0.0396%" height="15" fill="rgb(241,98,45)" fg:x="5532" fg:w="12"/><text x="18.5020%" y="671.50"></text></g><g><title>__wake_up_common (8 samples, 0.03%)</title><rect x="18.4038%" y="469" width="0.0264%" height="15" fill="rgb(254,28,30)" fg:x="5578" fg:w="8"/><text x="18.6538%" y="479.50"></text></g><g><title>ep_poll_callback (7 samples, 0.02%)</title><rect x="18.4071%" y="453" width="0.0231%" height="15" fill="rgb(241,142,54)" fg:x="5579" fg:w="7"/><text x="18.6571%" y="463.50"></text></g><g><title>__wake_up_common_lock (6 samples, 0.02%)</title><rect x="18.4104%" y="437" width="0.0198%" height="15" fill="rgb(222,85,15)" fg:x="5580" fg:w="6"/><text x="18.6604%" y="447.50"></text></g><g><title>__wake_up_common (6 samples, 0.02%)</title><rect x="18.4104%" y="421" width="0.0198%" height="15" fill="rgb(210,85,47)" fg:x="5580" fg:w="6"/><text x="18.6604%" y="431.50"></text></g><g><title>ep_autoremove_wake_function (6 samples, 0.02%)</title><rect x="18.4104%" y="405" width="0.0198%" height="15" fill="rgb(224,206,25)" fg:x="5580" fg:w="6"/><text x="18.6604%" y="415.50"></text></g><g><title>try_to_wake_up (6 samples, 0.02%)</title><rect x="18.4104%" y="389" width="0.0198%" height="15" fill="rgb(243,201,19)" fg:x="5580" fg:w="6"/><text x="18.6604%" y="399.50"></text></g><g><title>ksys_write (11 samples, 0.04%)</title><rect x="18.4005%" y="517" width="0.0363%" height="15" fill="rgb(236,59,4)" fg:x="5577" fg:w="11"/><text x="18.6505%" y="527.50"></text></g><g><title>vfs_write (11 samples, 0.04%)</title><rect x="18.4005%" y="501" width="0.0363%" height="15" fill="rgb(254,179,45)" fg:x="5577" fg:w="11"/><text x="18.6505%" y="511.50"></text></g><g><title>eventfd_write (10 samples, 0.03%)</title><rect x="18.4038%" y="485" width="0.0330%" height="15" fill="rgb(226,14,10)" fg:x="5578" fg:w="10"/><text x="18.6538%" y="495.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (12 samples, 0.04%)</title><rect x="18.4005%" y="549" width="0.0396%" height="15" fill="rgb(244,27,41)" fg:x="5577" fg:w="12"/><text x="18.6505%" y="559.50"></text></g><g><title>do_syscall_64 (12 samples, 0.04%)</title><rect x="18.4005%" y="533" width="0.0396%" height="15" fill="rgb(235,35,32)" fg:x="5577" fg:w="12"/><text x="18.6505%" y="543.50"></text></g><g><title>mio::sys::unix::waker::eventfd::WakerInternal::wake (15 samples, 0.05%)</title><rect x="18.3939%" y="597" width="0.0495%" height="15" fill="rgb(218,68,31)" fg:x="5575" fg:w="15"/><text x="18.6439%" y="607.50"></text></g><g><title>&lt;&amp;std::process::ChildStdin as std::io::Write&gt;::write (15 samples, 0.05%)</title><rect x="18.3939%" y="581" width="0.0495%" height="15" fill="rgb(207,120,37)" fg:x="5575" fg:w="15"/><text x="18.6439%" y="591.50"></text></g><g><title>__write (15 samples, 0.05%)</title><rect x="18.3939%" y="565" width="0.0495%" height="15" fill="rgb(227,98,0)" fg:x="5575" fg:w="15"/><text x="18.6439%" y="575.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Unparker::unpark (19 samples, 0.06%)</title><rect x="18.3840%" y="613" width="0.0627%" height="15" fill="rgb(207,7,3)" fg:x="5572" fg:w="19"/><text x="18.6340%" y="623.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::schedule (42 samples, 0.14%)</title><rect x="18.3246%" y="645" width="0.1386%" height="15" fill="rgb(206,98,19)" fg:x="5554" fg:w="42"/><text x="18.5746%" y="655.50"></text></g><g><title>tokio::runtime::context::with_scheduler (37 samples, 0.12%)</title><rect x="18.3411%" y="629" width="0.1221%" height="15" fill="rgb(217,5,26)" fg:x="5559" fg:w="37"/><text x="18.5911%" y="639.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_local (5 samples, 0.02%)</title><rect x="18.4467%" y="613" width="0.0165%" height="15" fill="rgb(235,190,38)" fg:x="5591" fg:w="5"/><text x="18.6967%" y="623.50"></text></g><g><title>tokio::runtime::task::raw::schedule (13 samples, 0.04%)</title><rect x="18.4632%" y="645" width="0.0429%" height="15" fill="rgb(247,86,24)" fg:x="5596" fg:w="13"/><text x="18.7132%" y="655.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (70 samples, 0.23%)</title><rect x="18.2916%" y="661" width="0.2310%" height="15" fill="rgb(205,101,16)" fg:x="5544" fg:w="70"/><text x="18.5416%" y="671.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_notified_by_val (5 samples, 0.02%)</title><rect x="18.5061%" y="645" width="0.0165%" height="15" fill="rgb(246,168,33)" fg:x="5609" fg:w="5"/><text x="18.7561%" y="655.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::clear_entry (38 samples, 0.13%)</title><rect x="18.5226%" y="661" width="0.1254%" height="15" fill="rgb(231,114,1)" fg:x="5614" fg:w="38"/><text x="18.7726%" y="671.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::remove (15 samples, 0.05%)</title><rect x="18.5984%" y="645" width="0.0495%" height="15" fill="rgb(207,184,53)" fg:x="5637" fg:w="15"/><text x="18.8484%" y="655.50"></text></g><g><title>&lt;tokio::runtime::coop::RestoreOnPending as core::ops::drop::Drop&gt;::drop (13 samples, 0.04%)</title><rect x="18.7238%" y="645" width="0.0429%" height="15" fill="rgb(224,95,51)" fg:x="5675" fg:w="13"/><text x="18.9738%" y="655.50"></text></g><g><title>&lt;tokio::sync::mpsc::bounded::Semaphore as tokio::sync::mpsc::chan::Semaphore&gt;::add_permit (20 samples, 0.07%)</title><rect x="18.7667%" y="645" width="0.0660%" height="15" fill="rgb(212,188,45)" fg:x="5688" fg:w="20"/><text x="19.0167%" y="655.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::add_permits_locked (39 samples, 0.13%)</title><rect x="18.8327%" y="645" width="0.1287%" height="15" fill="rgb(223,154,38)" fg:x="5708" fg:w="39"/><text x="19.0827%" y="655.50"></text></g><g><title>tokio::sync::mpsc::list::Rx&lt;T&gt;::pop (53 samples, 0.17%)</title><rect x="18.9614%" y="645" width="0.1749%" height="15" fill="rgb(251,22,52)" fg:x="5747" fg:w="53"/><text x="19.2114%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (4 samples, 0.01%)</title><rect x="19.1230%" y="629" width="0.0132%" height="15" fill="rgb(229,209,22)" fg:x="5796" fg:w="4"/><text x="19.3730%" y="639.50"></text></g><g><title>tokio::sync::mpsc::chan::Rx&lt;T,S&gt;::recv (160 samples, 0.53%)</title><rect x="18.6479%" y="661" width="0.5279%" height="15" fill="rgb(234,138,34)" fg:x="5652" fg:w="160"/><text x="18.8979%" y="671.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::register_by_ref (12 samples, 0.04%)</title><rect x="19.1362%" y="645" width="0.0396%" height="15" fill="rgb(212,95,11)" fg:x="5800" fg:w="12"/><text x="19.3862%" y="655.50"></text></g><g><title>tokio::sync::mpsc::chan::Rx&lt;T,S&gt;::try_recv (63 samples, 0.21%)</title><rect x="19.1758%" y="661" width="0.2079%" height="15" fill="rgb(240,179,47)" fg:x="5812" fg:w="63"/><text x="19.4258%" y="671.50"></text></g><g><title>tokio::sync::mpsc::list::Rx&lt;T&gt;::pop (44 samples, 0.15%)</title><rect x="19.2385%" y="645" width="0.1452%" height="15" fill="rgb(240,163,11)" fg:x="5831" fg:w="44"/><text x="19.4885%" y="655.50"></text></g><g><title>[libc.so.6] (21 samples, 0.07%)</title><rect x="19.3144%" y="629" width="0.0693%" height="15" fill="rgb(236,37,12)" fg:x="5854" fg:w="21"/><text x="19.5644%" y="639.50"></text></g><g><title>tokio::sync::mpsc::list::Tx&lt;T&gt;::push (56 samples, 0.18%)</title><rect x="19.3837%" y="661" width="0.1848%" height="15" fill="rgb(232,164,16)" fg:x="5875" fg:w="56"/><text x="19.6337%" y="671.50"></text></g><g><title>tokio::sync::notify::Notify::notified (11 samples, 0.04%)</title><rect x="19.5684%" y="661" width="0.0363%" height="15" fill="rgb(244,205,15)" fg:x="5931" fg:w="11"/><text x="19.8184%" y="671.50"></text></g><g><title>tokio::sync::notify::Notify::notify_one (33 samples, 0.11%)</title><rect x="19.6047%" y="661" width="0.1089%" height="15" fill="rgb(223,117,47)" fg:x="5942" fg:w="33"/><text x="19.8547%" y="671.50"></text></g><g><title>tokio::sync::notify::notify_locked (4 samples, 0.01%)</title><rect x="19.7004%" y="645" width="0.0132%" height="15" fill="rgb(244,107,35)" fg:x="5971" fg:w="4"/><text x="19.9504%" y="655.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::wake (23 samples, 0.08%)</title><rect x="19.7136%" y="661" width="0.0759%" height="15" fill="rgb(205,140,8)" fg:x="5975" fg:w="23"/><text x="19.9636%" y="671.50"></text></g><g><title>tokio::time::instant::Instant::now (6 samples, 0.02%)</title><rect x="19.7928%" y="661" width="0.0198%" height="15" fill="rgb(228,84,46)" fg:x="5999" fg:w="6"/><text x="20.0428%" y="671.50"></text></g><g><title>tokio::time::sleep::Sleep::new_timeout (28 samples, 0.09%)</title><rect x="19.8126%" y="661" width="0.0924%" height="15" fill="rgb(254,188,9)" fg:x="6005" fg:w="28"/><text x="20.0626%" y="671.50"></text></g><g><title>tracing::__macro_support::__is_enabled (7 samples, 0.02%)</title><rect x="19.9050%" y="661" width="0.0231%" height="15" fill="rgb(206,112,54)" fg:x="6033" fg:w="7"/><text x="20.1550%" y="671.50"></text></g><g><title>[libc.so.6] (21 samples, 0.07%)</title><rect x="20.3603%" y="549" width="0.0693%" height="15" fill="rgb(216,84,49)" fg:x="6171" fg:w="21"/><text x="20.6103%" y="559.50"></text></g><g><title>entry_SYSCALL_64 (5 samples, 0.02%)</title><rect x="20.4296%" y="549" width="0.0165%" height="15" fill="rgb(214,194,35)" fg:x="6192" fg:w="5"/><text x="20.6796%" y="559.50"></text></g><g><title>__x64_sys_write (8 samples, 0.03%)</title><rect x="20.4527%" y="517" width="0.0264%" height="15" fill="rgb(249,28,3)" fg:x="6199" fg:w="8"/><text x="20.7027%" y="527.50"></text></g><g><title>__fget_light (39 samples, 0.13%)</title><rect x="20.5055%" y="485" width="0.1287%" height="15" fill="rgb(222,56,52)" fg:x="6215" fg:w="39"/><text x="20.7555%" y="495.50"></text></g><g><title>__fget_files (27 samples, 0.09%)</title><rect x="20.5451%" y="469" width="0.0891%" height="15" fill="rgb(245,217,50)" fg:x="6227" fg:w="27"/><text x="20.7951%" y="479.50"></text></g><g><title>__fdget_pos (45 samples, 0.15%)</title><rect x="20.4923%" y="501" width="0.1485%" height="15" fill="rgb(213,201,24)" fg:x="6211" fg:w="45"/><text x="20.7423%" y="511.50"></text></g><g><title>__fsnotify_parent (12 samples, 0.04%)</title><rect x="20.7463%" y="485" width="0.0396%" height="15" fill="rgb(248,116,28)" fg:x="6288" fg:w="12"/><text x="20.9963%" y="495.50"></text></g><g><title>down_write (15 samples, 0.05%)</title><rect x="20.8321%" y="453" width="0.0495%" height="15" fill="rgb(219,72,43)" fg:x="6314" fg:w="15"/><text x="21.0821%" y="463.50"></text></g><g><title>ext4_generic_write_checks (16 samples, 0.05%)</title><rect x="20.8816%" y="453" width="0.0528%" height="15" fill="rgb(209,138,14)" fg:x="6329" fg:w="16"/><text x="21.1316%" y="463.50"></text></g><g><title>generic_write_checks (10 samples, 0.03%)</title><rect x="20.9014%" y="437" width="0.0330%" height="15" fill="rgb(222,18,33)" fg:x="6335" fg:w="10"/><text x="21.1514%" y="447.50"></text></g><g><title>generic_write_check_limits (6 samples, 0.02%)</title><rect x="20.9146%" y="421" width="0.0198%" height="15" fill="rgb(213,199,7)" fg:x="6339" fg:w="6"/><text x="21.1646%" y="431.50"></text></g><g><title>file_modified (12 samples, 0.04%)</title><rect x="20.9344%" y="453" width="0.0396%" height="15" fill="rgb(250,110,10)" fg:x="6345" fg:w="12"/><text x="21.1844%" y="463.50"></text></g><g><title>file_remove_privs (10 samples, 0.03%)</title><rect x="20.9410%" y="437" width="0.0330%" height="15" fill="rgb(248,123,6)" fg:x="6347" fg:w="10"/><text x="21.1910%" y="447.50"></text></g><g><title>current_time (19 samples, 0.06%)</title><rect x="20.9905%" y="437" width="0.0627%" height="15" fill="rgb(206,91,31)" fg:x="6362" fg:w="19"/><text x="21.2405%" y="447.50"></text></g><g><title>ktime_get_coarse_real_ts64 (12 samples, 0.04%)</title><rect x="21.0136%" y="421" width="0.0396%" height="15" fill="rgb(211,154,13)" fg:x="6369" fg:w="12"/><text x="21.2636%" y="431.50"></text></g><g><title>file_update_time (29 samples, 0.10%)</title><rect x="20.9740%" y="453" width="0.0957%" height="15" fill="rgb(225,148,7)" fg:x="6357" fg:w="29"/><text x="21.2240%" y="463.50"></text></g><g><title>generic_update_time (5 samples, 0.02%)</title><rect x="21.0532%" y="437" width="0.0165%" height="15" fill="rgb(220,160,43)" fg:x="6381" fg:w="5"/><text x="21.3032%" y="447.50"></text></g><g><title>__mark_inode_dirty (5 samples, 0.02%)</title><rect x="21.0532%" y="421" width="0.0165%" height="15" fill="rgb(213,52,39)" fg:x="6381" fg:w="5"/><text x="21.3032%" y="431.50"></text></g><g><title>ext4_dirty_inode (5 samples, 0.02%)</title><rect x="21.0532%" y="405" width="0.0165%" height="15" fill="rgb(243,137,7)" fg:x="6381" fg:w="5"/><text x="21.3032%" y="415.50"></text></g><g><title>__ext4_mark_inode_dirty (4 samples, 0.01%)</title><rect x="21.0565%" y="389" width="0.0132%" height="15" fill="rgb(230,79,13)" fg:x="6382" fg:w="4"/><text x="21.3065%" y="399.50"></text></g><g><title>__cond_resched (9 samples, 0.03%)</title><rect x="21.1059%" y="437" width="0.0297%" height="15" fill="rgb(247,105,23)" fg:x="6397" fg:w="9"/><text x="21.3559%" y="447.50"></text></g><g><title>rcu_all_qs (5 samples, 0.02%)</title><rect x="21.1191%" y="421" width="0.0165%" height="15" fill="rgb(223,179,41)" fg:x="6401" fg:w="5"/><text x="21.3691%" y="431.50"></text></g><g><title>balance_dirty_pages_ratelimited (21 samples, 0.07%)</title><rect x="21.1356%" y="437" width="0.0693%" height="15" fill="rgb(218,9,34)" fg:x="6406" fg:w="21"/><text x="21.3856%" y="447.50"></text></g><g><title>copy_user_enhanced_fast_string (12 samples, 0.04%)</title><rect x="21.2511%" y="421" width="0.0396%" height="15" fill="rgb(222,106,8)" fg:x="6441" fg:w="12"/><text x="21.5011%" y="431.50"></text></g><g><title>copy_page_from_iter_atomic (27 samples, 0.09%)</title><rect x="21.2049%" y="437" width="0.0891%" height="15" fill="rgb(211,220,0)" fg:x="6427" fg:w="27"/><text x="21.4549%" y="447.50"></text></g><g><title>create_page_buffers (10 samples, 0.03%)</title><rect x="21.3831%" y="405" width="0.0330%" height="15" fill="rgb(229,52,16)" fg:x="6481" fg:w="10"/><text x="21.6331%" y="415.50"></text></g><g><title>create_empty_buffers (6 samples, 0.02%)</title><rect x="21.3963%" y="389" width="0.0198%" height="15" fill="rgb(212,155,18)" fg:x="6485" fg:w="6"/><text x="21.6463%" y="399.50"></text></g><g><title>alloc_page_buffers (6 samples, 0.02%)</title><rect x="21.3963%" y="373" width="0.0198%" height="15" fill="rgb(242,21,14)" fg:x="6485" fg:w="6"/><text x="21.6463%" y="383.50"></text></g><g><title>alloc_buffer_head (4 samples, 0.01%)</title><rect x="21.4029%" y="357" width="0.0132%" height="15" fill="rgb(222,19,48)" fg:x="6487" fg:w="4"/><text x="21.6529%" y="367.50"></text></g><g><title>kmem_cache_alloc (4 samples, 0.01%)</title><rect x="21.4029%" y="341" width="0.0132%" height="15" fill="rgb(232,45,27)" fg:x="6487" fg:w="4"/><text x="21.6529%" y="351.50"></text></g><g><title>ext4_da_reserve_space (6 samples, 0.02%)</title><rect x="21.4161%" y="389" width="0.0198%" height="15" fill="rgb(249,103,42)" fg:x="6491" fg:w="6"/><text x="21.6661%" y="399.50"></text></g><g><title>__dquot_alloc_space (4 samples, 0.01%)</title><rect x="21.4227%" y="373" width="0.0132%" height="15" fill="rgb(246,81,33)" fg:x="6493" fg:w="4"/><text x="21.6727%" y="383.50"></text></g><g><title>ext4_da_get_block_prep (10 samples, 0.03%)</title><rect x="21.4161%" y="405" width="0.0330%" height="15" fill="rgb(252,33,42)" fg:x="6491" fg:w="10"/><text x="21.6661%" y="415.50"></text></g><g><title>__block_write_begin_int (37 samples, 0.12%)</title><rect x="21.3402%" y="421" width="0.1221%" height="15" fill="rgb(209,212,41)" fg:x="6468" fg:w="37"/><text x="21.5902%" y="431.50"></text></g><g><title>zero_user_segments (4 samples, 0.01%)</title><rect x="21.4491%" y="405" width="0.0132%" height="15" fill="rgb(207,154,6)" fg:x="6501" fg:w="4"/><text x="21.6991%" y="415.50"></text></g><g><title>memset_erms (4 samples, 0.01%)</title><rect x="21.4491%" y="389" width="0.0132%" height="15" fill="rgb(223,64,47)" fg:x="6501" fg:w="4"/><text x="21.6991%" y="399.50"></text></g><g><title>ext4_nonda_switch (11 samples, 0.04%)</title><rect x="21.4623%" y="421" width="0.0363%" height="15" fill="rgb(211,161,38)" fg:x="6505" fg:w="11"/><text x="21.7123%" y="431.50"></text></g><g><title>__alloc_pages (8 samples, 0.03%)</title><rect x="21.6536%" y="389" width="0.0264%" height="15" fill="rgb(219,138,40)" fg:x="6563" fg:w="8"/><text x="21.9036%" y="399.50"></text></g><g><title>get_page_from_freelist (8 samples, 0.03%)</title><rect x="21.6536%" y="373" width="0.0264%" height="15" fill="rgb(241,228,46)" fg:x="6563" fg:w="8"/><text x="21.9036%" y="383.50"></text></g><g><title>__add_to_page_cache_locked (9 samples, 0.03%)</title><rect x="21.6800%" y="373" width="0.0297%" height="15" fill="rgb(223,209,38)" fg:x="6571" fg:w="9"/><text x="21.9300%" y="383.50"></text></g><g><title>add_to_page_cache_lru (10 samples, 0.03%)</title><rect x="21.6800%" y="389" width="0.0330%" height="15" fill="rgb(236,164,45)" fg:x="6571" fg:w="10"/><text x="21.9300%" y="399.50"></text></g><g><title>pagecache_get_page (121 samples, 0.40%)</title><rect x="21.5085%" y="405" width="0.3992%" height="15" fill="rgb(231,15,5)" fg:x="6519" fg:w="121"/><text x="21.7585%" y="415.50"></text></g><g><title>xas_load (59 samples, 0.19%)</title><rect x="21.7130%" y="389" width="0.1947%" height="15" fill="rgb(252,35,15)" fg:x="6581" fg:w="59"/><text x="21.9630%" y="399.50"></text></g><g><title>xas_start (19 samples, 0.06%)</title><rect x="21.8450%" y="373" width="0.0627%" height="15" fill="rgb(248,181,18)" fg:x="6621" fg:w="19"/><text x="22.0950%" y="383.50"></text></g><g><title>grab_cache_page_write_begin (127 samples, 0.42%)</title><rect x="21.4986%" y="421" width="0.4190%" height="15" fill="rgb(233,39,42)" fg:x="6516" fg:w="127"/><text x="21.7486%" y="431.50"></text></g><g><title>ext4_da_write_begin (190 samples, 0.63%)</title><rect x="21.2940%" y="437" width="0.6269%" height="15" fill="rgb(238,110,33)" fg:x="6454" fg:w="190"/><text x="21.5440%" y="447.50"></text></g><g><title>ext4_da_write_end (17 samples, 0.06%)</title><rect x="21.9209%" y="437" width="0.0561%" height="15" fill="rgb(233,195,10)" fg:x="6644" fg:w="17"/><text x="22.1709%" y="447.50"></text></g><g><title>fault_in_iov_iter_readable (24 samples, 0.08%)</title><rect x="21.9770%" y="437" width="0.0792%" height="15" fill="rgb(254,105,3)" fg:x="6661" fg:w="24"/><text x="22.2270%" y="447.50"></text></g><g><title>fault_in_readable (21 samples, 0.07%)</title><rect x="21.9869%" y="421" width="0.0693%" height="15" fill="rgb(221,225,9)" fg:x="6664" fg:w="21"/><text x="22.2369%" y="431.50"></text></g><g><title>__get_user_nocheck_1 (11 samples, 0.04%)</title><rect x="22.0199%" y="405" width="0.0363%" height="15" fill="rgb(224,227,45)" fg:x="6674" fg:w="11"/><text x="22.2699%" y="415.50"></text></g><g><title>__block_commit_write.constprop.0.isra.0 (26 samples, 0.09%)</title><rect x="22.1089%" y="421" width="0.0858%" height="15" fill="rgb(229,198,43)" fg:x="6701" fg:w="26"/><text x="22.3589%" y="431.50"></text></g><g><title>mark_buffer_dirty (9 samples, 0.03%)</title><rect x="22.1650%" y="405" width="0.0297%" height="15" fill="rgb(206,209,35)" fg:x="6718" fg:w="9"/><text x="22.4150%" y="415.50"></text></g><g><title>kmem_cache_free.part.0 (14 samples, 0.05%)</title><rect x="22.2673%" y="373" width="0.0462%" height="15" fill="rgb(245,195,53)" fg:x="6749" fg:w="14"/><text x="22.5173%" y="383.50"></text></g><g><title>_raw_spin_lock_irqsave (17 samples, 0.06%)</title><rect x="22.3663%" y="341" width="0.0561%" height="15" fill="rgb(240,92,26)" fg:x="6779" fg:w="17"/><text x="22.6163%" y="351.50"></text></g><g><title>__ext4_journal_stop (63 samples, 0.21%)</title><rect x="22.2343%" y="405" width="0.2079%" height="15" fill="rgb(207,40,23)" fg:x="6739" fg:w="63"/><text x="22.4843%" y="415.50"></text></g><g><title>jbd2_journal_stop (61 samples, 0.20%)</title><rect x="22.2409%" y="389" width="0.2013%" height="15" fill="rgb(223,111,35)" fg:x="6741" fg:w="61"/><text x="22.4909%" y="399.50"></text></g><g><title>stop_this_handle (39 samples, 0.13%)</title><rect x="22.3135%" y="373" width="0.1287%" height="15" fill="rgb(229,147,28)" fg:x="6763" fg:w="39"/><text x="22.5635%" y="383.50"></text></g><g><title>__wake_up_common_lock (31 samples, 0.10%)</title><rect x="22.3399%" y="357" width="0.1023%" height="15" fill="rgb(211,29,28)" fg:x="6771" fg:w="31"/><text x="22.5899%" y="367.50"></text></g><g><title>_raw_spin_unlock_irqrestore (6 samples, 0.02%)</title><rect x="22.4224%" y="341" width="0.0198%" height="15" fill="rgb(228,72,33)" fg:x="6796" fg:w="6"/><text x="22.6724%" y="351.50"></text></g><g><title>__raw_callee_save___pv_queued_spin_unlock (6 samples, 0.02%)</title><rect x="22.4224%" y="325" width="0.0198%" height="15" fill="rgb(205,214,31)" fg:x="6796" fg:w="6"/><text x="22.6724%" y="335.50"></text></g><g><title>ext4_journal_check_start (9 samples, 0.03%)</title><rect x="22.4818%" y="373" width="0.0297%" height="15" fill="rgb(224,111,15)" fg:x="6814" fg:w="9"/><text x="22.7318%" y="383.50"></text></g><g><title>kmem_cache_alloc (21 samples, 0.07%)</title><rect x="22.5445%" y="357" width="0.0693%" height="15" fill="rgb(253,21,26)" fg:x="6833" fg:w="21"/><text x="22.7945%" y="367.50"></text></g><g><title>_raw_read_lock (10 samples, 0.03%)</title><rect x="22.6731%" y="341" width="0.0330%" height="15" fill="rgb(245,139,43)" fg:x="6872" fg:w="10"/><text x="22.9231%" y="351.50"></text></g><g><title>add_transaction_credits (11 samples, 0.04%)</title><rect x="22.7061%" y="341" width="0.0363%" height="15" fill="rgb(252,170,7)" fg:x="6882" fg:w="11"/><text x="22.9561%" y="351.50"></text></g><g><title>__ext4_journal_start_sb (90 samples, 0.30%)</title><rect x="22.4488%" y="389" width="0.2969%" height="15" fill="rgb(231,118,14)" fg:x="6804" fg:w="90"/><text x="22.6988%" y="399.50"></text></g><g><title>jbd2__journal_start (71 samples, 0.23%)</title><rect x="22.5115%" y="373" width="0.2343%" height="15" fill="rgb(238,83,0)" fg:x="6823" fg:w="71"/><text x="22.7615%" y="383.50"></text></g><g><title>start_this_handle (40 samples, 0.13%)</title><rect x="22.6137%" y="357" width="0.1320%" height="15" fill="rgb(221,39,39)" fg:x="6854" fg:w="40"/><text x="22.8637%" y="367.50"></text></g><g><title>__ext4_handle_dirty_metadata (4 samples, 0.01%)</title><rect x="22.9503%" y="357" width="0.0132%" height="15" fill="rgb(222,119,46)" fg:x="6956" fg:w="4"/><text x="23.2003%" y="367.50"></text></g><g><title>_raw_spin_lock (12 samples, 0.04%)</title><rect x="22.9701%" y="357" width="0.0396%" height="15" fill="rgb(222,165,49)" fg:x="6962" fg:w="12"/><text x="23.2201%" y="367.50"></text></g><g><title>ext4_fc_track_template (11 samples, 0.04%)</title><rect x="23.0163%" y="341" width="0.0363%" height="15" fill="rgb(219,113,52)" fg:x="6976" fg:w="11"/><text x="23.2663%" y="351.50"></text></g><g><title>ext4_fc_track_inode (17 samples, 0.06%)</title><rect x="23.0097%" y="357" width="0.0561%" height="15" fill="rgb(214,7,15)" fg:x="6974" fg:w="17"/><text x="23.2597%" y="367.50"></text></g><g><title>ext4_inode_journal_mode (4 samples, 0.01%)</title><rect x="23.0526%" y="341" width="0.0132%" height="15" fill="rgb(235,32,4)" fg:x="6987" fg:w="4"/><text x="23.3026%" y="351.50"></text></g><g><title>chksum_update (161 samples, 0.53%)</title><rect x="23.1284%" y="325" width="0.5312%" height="15" fill="rgb(238,90,54)" fg:x="7010" fg:w="161"/><text x="23.3784%" y="335.50"></text></g><g><title>crc32_body (148 samples, 0.49%)</title><rect x="23.1713%" y="309" width="0.4883%" height="15" fill="rgb(213,208,19)" fg:x="7023" fg:w="148"/><text x="23.4213%" y="319.50"></text></g><g><title>ext4_inode_csum_set (189 samples, 0.62%)</title><rect x="23.0658%" y="357" width="0.6236%" height="15" fill="rgb(233,156,4)" fg:x="6991" fg:w="189"/><text x="23.3158%" y="367.50"></text></g><g><title>ext4_inode_csum (185 samples, 0.61%)</title><rect x="23.0790%" y="341" width="0.6104%" height="15" fill="rgb(207,194,5)" fg:x="6995" fg:w="185"/><text x="23.3290%" y="351.50"></text></g><g><title>crypto_shash_update (9 samples, 0.03%)</title><rect x="23.6596%" y="325" width="0.0297%" height="15" fill="rgb(206,111,30)" fg:x="7171" fg:w="9"/><text x="23.9096%" y="335.50"></text></g><g><title>ext4_mark_iloc_dirty (300 samples, 0.99%)</title><rect x="22.7622%" y="373" width="0.9898%" height="15" fill="rgb(243,70,54)" fg:x="6899" fg:w="300"/><text x="23.0122%" y="383.50"></text></g><g><title>map_id_up (15 samples, 0.05%)</title><rect x="23.7025%" y="357" width="0.0495%" height="15" fill="rgb(242,28,8)" fg:x="7184" fg:w="15"/><text x="23.9525%" y="367.50"></text></g><g><title>__ext4_journal_get_write_access (28 samples, 0.09%)</title><rect x="23.7520%" y="357" width="0.0924%" height="15" fill="rgb(219,106,18)" fg:x="7199" fg:w="28"/><text x="24.0020%" y="367.50"></text></g><g><title>jbd2_journal_get_write_access (12 samples, 0.04%)</title><rect x="23.8048%" y="341" width="0.0396%" height="15" fill="rgb(244,222,10)" fg:x="7215" fg:w="12"/><text x="24.0548%" y="351.50"></text></g><g><title>jbd2_write_access_granted.part.0 (9 samples, 0.03%)</title><rect x="23.8147%" y="325" width="0.0297%" height="15" fill="rgb(236,179,52)" fg:x="7218" fg:w="9"/><text x="24.0647%" y="335.50"></text></g><g><title>__getblk_gfp (34 samples, 0.11%)</title><rect x="23.9137%" y="325" width="0.1122%" height="15" fill="rgb(213,23,39)" fg:x="7248" fg:w="34"/><text x="24.1637%" y="335.50"></text></g><g><title>__find_get_block (31 samples, 0.10%)</title><rect x="23.9236%" y="309" width="0.1023%" height="15" fill="rgb(238,48,10)" fg:x="7251" fg:w="31"/><text x="24.1736%" y="319.50"></text></g><g><title>ext4_get_group_desc (14 samples, 0.05%)</title><rect x="24.0259%" y="325" width="0.0462%" height="15" fill="rgb(251,196,23)" fg:x="7282" fg:w="14"/><text x="24.2759%" y="335.50"></text></g><g><title>__mark_inode_dirty (573 samples, 1.89%)</title><rect x="22.1947%" y="421" width="1.8905%" height="15" fill="rgb(250,152,24)" fg:x="6727" fg:w="573"/><text x="22.4447%" y="431.50">_..</text></g><g><title>ext4_dirty_inode (498 samples, 1.64%)</title><rect x="22.4422%" y="405" width="1.6431%" height="15" fill="rgb(209,150,17)" fg:x="6802" fg:w="498"/><text x="22.6922%" y="415.50"></text></g><g><title>__ext4_mark_inode_dirty (406 samples, 1.34%)</title><rect x="22.7457%" y="389" width="1.3395%" height="15" fill="rgb(234,202,34)" fg:x="6894" fg:w="406"/><text x="22.9957%" y="399.50"></text></g><g><title>ext4_reserve_inode_write (101 samples, 0.33%)</title><rect x="23.7520%" y="373" width="0.3332%" height="15" fill="rgb(253,148,53)" fg:x="7199" fg:w="101"/><text x="24.0020%" y="383.50"></text></g><g><title>ext4_get_inode_loc (73 samples, 0.24%)</title><rect x="23.8444%" y="357" width="0.2409%" height="15" fill="rgb(218,129,16)" fg:x="7227" fg:w="73"/><text x="24.0944%" y="367.50"></text></g><g><title>__ext4_get_inode_loc (70 samples, 0.23%)</title><rect x="23.8543%" y="341" width="0.2310%" height="15" fill="rgb(216,85,19)" fg:x="7230" fg:w="70"/><text x="24.1043%" y="351.50"></text></g><g><title>ext4_inode_table (4 samples, 0.01%)</title><rect x="24.0721%" y="325" width="0.0132%" height="15" fill="rgb(235,228,7)" fg:x="7296" fg:w="4"/><text x="24.3221%" y="335.50"></text></g><g><title>generic_perform_write (919 samples, 3.03%)</title><rect x="21.0696%" y="453" width="3.0321%" height="15" fill="rgb(245,175,0)" fg:x="6386" fg:w="919"/><text x="21.3196%" y="463.50">gen..</text></g><g><title>generic_write_end (620 samples, 2.05%)</title><rect x="22.0562%" y="437" width="2.0456%" height="15" fill="rgb(208,168,36)" fg:x="6685" fg:w="620"/><text x="22.3062%" y="447.50">g..</text></g><g><title>unlock_page (5 samples, 0.02%)</title><rect x="24.0853%" y="421" width="0.0165%" height="15" fill="rgb(246,171,24)" fg:x="7300" fg:w="5"/><text x="24.3353%" y="431.50"></text></g><g><title>ext4_buffered_write_iter (1,002 samples, 3.31%)</title><rect x="20.8090%" y="469" width="3.3059%" height="15" fill="rgb(215,142,24)" fg:x="6307" fg:w="1002"/><text x="21.0590%" y="479.50">ext..</text></g><g><title>up_write (4 samples, 0.01%)</title><rect x="24.1018%" y="453" width="0.0132%" height="15" fill="rgb(250,187,7)" fg:x="7305" fg:w="4"/><text x="24.3518%" y="463.50"></text></g><g><title>ext4_file_write_iter (12 samples, 0.04%)</title><rect x="24.1149%" y="469" width="0.0396%" height="15" fill="rgb(228,66,33)" fg:x="7309" fg:w="12"/><text x="24.3649%" y="479.50"></text></g><g><title>new_sync_write (1,022 samples, 3.37%)</title><rect x="20.7859%" y="485" width="3.3719%" height="15" fill="rgb(234,215,21)" fg:x="6300" fg:w="1022"/><text x="21.0359%" y="495.50">new..</text></g><g><title>ksys_write (1,119 samples, 3.69%)</title><rect x="20.4791%" y="517" width="3.6920%" height="15" fill="rgb(222,191,20)" fg:x="6207" fg:w="1119"/><text x="20.7291%" y="527.50">ksys..</text></g><g><title>vfs_write (1,066 samples, 3.52%)</title><rect x="20.6539%" y="501" width="3.5171%" height="15" fill="rgb(245,79,54)" fg:x="6260" fg:w="1066"/><text x="20.9039%" y="511.50">vfs..</text></g><g><title>entry_SYSCALL_64_after_hwframe (1,132 samples, 3.73%)</title><rect x="20.4461%" y="549" width="3.7349%" height="15" fill="rgb(240,10,37)" fg:x="6197" fg:w="1132"/><text x="20.6961%" y="559.50">entr..</text></g><g><title>do_syscall_64 (1,130 samples, 3.73%)</title><rect x="20.4527%" y="533" width="3.7283%" height="15" fill="rgb(214,192,32)" fg:x="6199" fg:w="1130"/><text x="20.7027%" y="543.50">do_s..</text></g><g><title>&lt;std::io::stdio::StdoutRaw as std::io::Write&gt;::write_all (1,189 samples, 3.92%)</title><rect x="20.2679%" y="581" width="3.9229%" height="15" fill="rgb(209,36,54)" fg:x="6143" fg:w="1189"/><text x="20.5179%" y="591.50">&lt;std..</text></g><g><title>__write (1,176 samples, 3.88%)</title><rect x="20.3108%" y="565" width="3.8800%" height="15" fill="rgb(220,10,11)" fg:x="6156" fg:w="1176"/><text x="20.5608%" y="575.50">__wr..</text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (1,233 samples, 4.07%)</title><rect x="20.1986%" y="597" width="4.0681%" height="15" fill="rgb(221,106,17)" fg:x="6122" fg:w="1233"/><text x="20.4486%" y="607.50">&lt;std..</text></g><g><title>[libc.so.6] (23 samples, 0.08%)</title><rect x="24.1908%" y="581" width="0.0759%" height="15" fill="rgb(251,142,44)" fg:x="7332" fg:w="23"/><text x="24.4408%" y="591.50"></text></g><g><title>__perf_event_task_sched_out (8 samples, 0.03%)</title><rect x="24.5901%" y="437" width="0.0264%" height="15" fill="rgb(238,13,15)" fg:x="7453" fg:w="8"/><text x="24.8401%" y="447.50"></text></g><g><title>intel_pmu_disable_all (5 samples, 0.02%)</title><rect x="24.6000%" y="421" width="0.0165%" height="15" fill="rgb(208,107,27)" fg:x="7456" fg:w="5"/><text x="24.8500%" y="431.50"></text></g><g><title>update_curr (9 samples, 0.03%)</title><rect x="24.6362%" y="405" width="0.0297%" height="15" fill="rgb(205,136,37)" fg:x="7467" fg:w="9"/><text x="24.8862%" y="415.50"></text></g><g><title>cpuacct_charge (4 samples, 0.01%)</title><rect x="24.6527%" y="389" width="0.0132%" height="15" fill="rgb(250,205,27)" fg:x="7472" fg:w="4"/><text x="24.9027%" y="399.50"></text></g><g><title>dequeue_entity (15 samples, 0.05%)</title><rect x="24.6296%" y="421" width="0.0495%" height="15" fill="rgb(210,80,43)" fg:x="7465" fg:w="15"/><text x="24.8796%" y="431.50"></text></g><g><title>update_load_avg (4 samples, 0.01%)</title><rect x="24.6659%" y="405" width="0.0132%" height="15" fill="rgb(247,160,36)" fg:x="7476" fg:w="4"/><text x="24.9159%" y="415.50"></text></g><g><title>dequeue_task_fair (21 samples, 0.07%)</title><rect x="24.6165%" y="437" width="0.0693%" height="15" fill="rgb(234,13,49)" fg:x="7461" fg:w="21"/><text x="24.8665%" y="447.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (13 samples, 0.04%)</title><rect x="24.6890%" y="405" width="0.0429%" height="15" fill="rgb(234,122,0)" fg:x="7483" fg:w="13"/><text x="24.9390%" y="415.50"></text></g><g><title>finish_task_switch.isra.0 (17 samples, 0.06%)</title><rect x="24.6857%" y="437" width="0.0561%" height="15" fill="rgb(207,146,38)" fg:x="7482" fg:w="17"/><text x="24.9357%" y="447.50"></text></g><g><title>__perf_event_task_sched_in (16 samples, 0.05%)</title><rect x="24.6890%" y="421" width="0.0528%" height="15" fill="rgb(207,177,25)" fg:x="7483" fg:w="16"/><text x="24.9390%" y="431.50"></text></g><g><title>pick_next_task_idle (5 samples, 0.02%)</title><rect x="24.7550%" y="437" width="0.0165%" height="15" fill="rgb(211,178,42)" fg:x="7503" fg:w="5"/><text x="25.0050%" y="447.50"></text></g><g><title>__update_idle_core (4 samples, 0.01%)</title><rect x="24.7583%" y="421" width="0.0132%" height="15" fill="rgb(230,69,54)" fg:x="7504" fg:w="4"/><text x="25.0083%" y="431.50"></text></g><g><title>put_prev_task_fair (5 samples, 0.02%)</title><rect x="24.7715%" y="437" width="0.0165%" height="15" fill="rgb(214,135,41)" fg:x="7508" fg:w="5"/><text x="25.0215%" y="447.50"></text></g><g><title>futex_wait_queue_me (82 samples, 0.27%)</title><rect x="24.5340%" y="485" width="0.2705%" height="15" fill="rgb(237,67,25)" fg:x="7436" fg:w="82"/><text x="24.7840%" y="495.50"></text></g><g><title>schedule (78 samples, 0.26%)</title><rect x="24.5472%" y="469" width="0.2573%" height="15" fill="rgb(222,189,50)" fg:x="7440" fg:w="78"/><text x="24.7972%" y="479.50"></text></g><g><title>__schedule (77 samples, 0.25%)</title><rect x="24.5505%" y="453" width="0.2540%" height="15" fill="rgb(245,148,34)" fg:x="7441" fg:w="77"/><text x="24.8005%" y="463.50"></text></g><g><title>update_rq_clock (5 samples, 0.02%)</title><rect x="24.7880%" y="437" width="0.0165%" height="15" fill="rgb(222,29,6)" fg:x="7513" fg:w="5"/><text x="25.0380%" y="447.50"></text></g><g><title>sched_clock_cpu (4 samples, 0.01%)</title><rect x="24.7913%" y="421" width="0.0132%" height="15" fill="rgb(221,189,43)" fg:x="7514" fg:w="4"/><text x="25.0413%" y="431.50"></text></g><g><title>__x64_sys_futex (107 samples, 0.35%)</title><rect x="24.4878%" y="533" width="0.3530%" height="15" fill="rgb(207,36,27)" fg:x="7422" fg:w="107"/><text x="24.7378%" y="543.50"></text></g><g><title>do_futex (105 samples, 0.35%)</title><rect x="24.4944%" y="517" width="0.3464%" height="15" fill="rgb(217,90,24)" fg:x="7424" fg:w="105"/><text x="24.7444%" y="527.50"></text></g><g><title>futex_wait (99 samples, 0.33%)</title><rect x="24.5142%" y="501" width="0.3266%" height="15" fill="rgb(224,66,35)" fg:x="7430" fg:w="99"/><text x="24.7642%" y="511.50"></text></g><g><title>futex_wait_setup (11 samples, 0.04%)</title><rect x="24.8045%" y="485" width="0.0363%" height="15" fill="rgb(221,13,50)" fg:x="7518" fg:w="11"/><text x="25.0545%" y="495.50"></text></g><g><title>__rseq_handle_notify_resume (6 samples, 0.02%)</title><rect x="24.8705%" y="501" width="0.0198%" height="15" fill="rgb(236,68,49)" fg:x="7538" fg:w="6"/><text x="25.1205%" y="511.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (132 samples, 0.44%)</title><rect x="24.4713%" y="565" width="0.4355%" height="15" fill="rgb(229,146,28)" fg:x="7417" fg:w="132"/><text x="24.7213%" y="575.50"></text></g><g><title>do_syscall_64 (131 samples, 0.43%)</title><rect x="24.4746%" y="549" width="0.4322%" height="15" fill="rgb(225,31,38)" fg:x="7418" fg:w="131"/><text x="24.7246%" y="559.50"></text></g><g><title>syscall_exit_to_user_mode (19 samples, 0.06%)</title><rect x="24.8441%" y="533" width="0.0627%" height="15" fill="rgb(250,208,3)" fg:x="7530" fg:w="19"/><text x="25.0941%" y="543.50"></text></g><g><title>exit_to_user_mode_prepare (18 samples, 0.06%)</title><rect x="24.8474%" y="517" width="0.0594%" height="15" fill="rgb(246,54,23)" fg:x="7531" fg:w="18"/><text x="25.0974%" y="527.50"></text></g><g><title>std::sys::pal::unix::locks::futex_mutex::Mutex::lock_contended (197 samples, 0.65%)</title><rect x="24.2667%" y="597" width="0.6500%" height="15" fill="rgb(243,76,11)" fg:x="7355" fg:w="197"/><text x="24.5167%" y="607.50"></text></g><g><title>syscall (139 samples, 0.46%)</title><rect x="24.4581%" y="581" width="0.4586%" height="15" fill="rgb(245,21,50)" fg:x="7413" fg:w="139"/><text x="24.7081%" y="591.50"></text></g><g><title>[[kernel.kallsyms]] (33 samples, 0.11%)</title><rect x="24.9332%" y="581" width="0.1089%" height="15" fill="rgb(228,9,43)" fg:x="7557" fg:w="33"/><text x="25.1832%" y="591.50"></text></g><g><title>entry_SYSCALL_64 (6 samples, 0.02%)</title><rect x="25.0421%" y="581" width="0.0198%" height="15" fill="rgb(208,100,47)" fg:x="7590" fg:w="6"/><text x="25.2921%" y="591.50"></text></g><g><title>_raw_spin_lock (8 samples, 0.03%)</title><rect x="25.2202%" y="501" width="0.0264%" height="15" fill="rgb(232,26,8)" fg:x="7644" fg:w="8"/><text x="25.4702%" y="511.50"></text></g><g><title>hash_futex (5 samples, 0.02%)</title><rect x="25.2532%" y="501" width="0.0165%" height="15" fill="rgb(216,166,38)" fg:x="7654" fg:w="5"/><text x="25.5032%" y="511.50"></text></g><g><title>mark_wake_futex (14 samples, 0.05%)</title><rect x="25.2697%" y="501" width="0.0462%" height="15" fill="rgb(251,202,51)" fg:x="7659" fg:w="14"/><text x="25.5197%" y="511.50"></text></g><g><title>__unqueue_futex (11 samples, 0.04%)</title><rect x="25.2796%" y="485" width="0.0363%" height="15" fill="rgb(254,216,34)" fg:x="7662" fg:w="11"/><text x="25.5296%" y="495.50"></text></g><g><title>_raw_spin_unlock_irqrestore (8 samples, 0.03%)</title><rect x="25.3720%" y="469" width="0.0264%" height="15" fill="rgb(251,32,27)" fg:x="7690" fg:w="8"/><text x="25.6220%" y="479.50"></text></g><g><title>__raw_callee_save___pv_queued_spin_unlock (7 samples, 0.02%)</title><rect x="25.3753%" y="453" width="0.0231%" height="15" fill="rgb(208,127,28)" fg:x="7691" fg:w="7"/><text x="25.6253%" y="463.50"></text></g><g><title>is_cpu_allowed (4 samples, 0.01%)</title><rect x="25.4017%" y="469" width="0.0132%" height="15" fill="rgb(224,137,22)" fg:x="7699" fg:w="4"/><text x="25.6517%" y="479.50"></text></g><g><title>select_task_rq_fair (7 samples, 0.02%)</title><rect x="25.4149%" y="469" width="0.0231%" height="15" fill="rgb(254,70,32)" fg:x="7703" fg:w="7"/><text x="25.6649%" y="479.50"></text></g><g><title>__smp_call_single_queue (14 samples, 0.05%)</title><rect x="25.5007%" y="453" width="0.0462%" height="15" fill="rgb(229,75,37)" fg:x="7729" fg:w="14"/><text x="25.7507%" y="463.50"></text></g><g><title>llist_add_batch (14 samples, 0.05%)</title><rect x="25.5007%" y="437" width="0.0462%" height="15" fill="rgb(252,64,23)" fg:x="7729" fg:w="14"/><text x="25.7507%" y="447.50"></text></g><g><title>hv_send_ipi (8 samples, 0.03%)</title><rect x="25.5469%" y="453" width="0.0264%" height="15" fill="rgb(232,162,48)" fg:x="7743" fg:w="8"/><text x="25.7969%" y="463.50"></text></g><g><title>__send_ipi_one (7 samples, 0.02%)</title><rect x="25.5502%" y="437" width="0.0231%" height="15" fill="rgb(246,160,12)" fg:x="7744" fg:w="7"/><text x="25.8002%" y="447.50"></text></g><g><title>read_hv_sched_clock_tsc (14 samples, 0.05%)</title><rect x="25.5898%" y="437" width="0.0462%" height="15" fill="rgb(247,166,0)" fg:x="7756" fg:w="14"/><text x="25.8398%" y="447.50"></text></g><g><title>read_hv_clock_tsc (9 samples, 0.03%)</title><rect x="25.6063%" y="421" width="0.0297%" height="15" fill="rgb(249,219,21)" fg:x="7761" fg:w="9"/><text x="25.8563%" y="431.50"></text></g><g><title>sched_clock_cpu (20 samples, 0.07%)</title><rect x="25.5733%" y="453" width="0.0660%" height="15" fill="rgb(205,209,3)" fg:x="7751" fg:w="20"/><text x="25.8233%" y="463.50"></text></g><g><title>__x64_sys_futex (180 samples, 0.59%)</title><rect x="25.0685%" y="549" width="0.5939%" height="15" fill="rgb(243,44,1)" fg:x="7598" fg:w="180"/><text x="25.3185%" y="559.50"></text></g><g><title>do_futex (172 samples, 0.57%)</title><rect x="25.0949%" y="533" width="0.5675%" height="15" fill="rgb(206,159,16)" fg:x="7606" fg:w="172"/><text x="25.3449%" y="543.50"></text></g><g><title>futex_wake (161 samples, 0.53%)</title><rect x="25.1311%" y="517" width="0.5312%" height="15" fill="rgb(244,77,30)" fg:x="7617" fg:w="161"/><text x="25.3811%" y="527.50"></text></g><g><title>wake_up_q (105 samples, 0.35%)</title><rect x="25.3159%" y="501" width="0.3464%" height="15" fill="rgb(218,69,12)" fg:x="7673" fg:w="105"/><text x="25.5659%" y="511.50"></text></g><g><title>try_to_wake_up (102 samples, 0.34%)</title><rect x="25.3258%" y="485" width="0.3365%" height="15" fill="rgb(212,87,7)" fg:x="7676" fg:w="102"/><text x="25.5758%" y="495.50"></text></g><g><title>ttwu_queue_wakelist (68 samples, 0.22%)</title><rect x="25.4380%" y="469" width="0.2244%" height="15" fill="rgb(245,114,25)" fg:x="7710" fg:w="68"/><text x="25.6880%" y="479.50"></text></g><g><title>send_call_function_single_ipi (7 samples, 0.02%)</title><rect x="25.6392%" y="453" width="0.0231%" height="15" fill="rgb(210,61,42)" fg:x="7771" fg:w="7"/><text x="25.8892%" y="463.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (189 samples, 0.62%)</title><rect x="25.0619%" y="581" width="0.6236%" height="15" fill="rgb(211,52,33)" fg:x="7596" fg:w="189"/><text x="25.3119%" y="591.50"></text></g><g><title>do_syscall_64 (189 samples, 0.62%)</title><rect x="25.0619%" y="565" width="0.6236%" height="15" fill="rgb(234,58,33)" fg:x="7596" fg:w="189"/><text x="25.3119%" y="575.50"></text></g><g><title>syscall_exit_to_user_mode (6 samples, 0.02%)</title><rect x="25.6656%" y="549" width="0.0198%" height="15" fill="rgb(220,115,36)" fg:x="7779" fg:w="6"/><text x="25.9156%" y="559.50"></text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write_all (1,707 samples, 5.63%)</title><rect x="20.0699%" y="629" width="5.6320%" height="15" fill="rgb(243,153,54)" fg:x="6083" fg:w="1707"/><text x="20.3199%" y="639.50">&lt;std::i..</text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_all (1,705 samples, 5.63%)</title><rect x="20.0765%" y="613" width="5.6254%" height="15" fill="rgb(251,47,18)" fg:x="6085" fg:w="1705"/><text x="20.3265%" y="623.50">&lt;&amp;std::..</text></g><g><title>syscall (238 samples, 0.79%)</title><rect x="24.9167%" y="597" width="0.7852%" height="15" fill="rgb(242,102,42)" fg:x="7552" fg:w="238"/><text x="25.1667%" y="607.50"></text></g><g><title>syscall_return_via_sysret (5 samples, 0.02%)</title><rect x="25.6854%" y="581" width="0.0165%" height="15" fill="rgb(234,31,38)" fg:x="7785" fg:w="5"/><text x="25.9354%" y="591.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_fmt (13 samples, 0.04%)</title><rect x="25.8306%" y="613" width="0.0429%" height="15" fill="rgb(221,117,51)" fg:x="7829" fg:w="13"/><text x="26.0806%" y="623.50"></text></g><g><title>&lt;tracing_core::event::Event as tracing_log::NormalizeEvent&gt;::normalized_metadata (27 samples, 0.09%)</title><rect x="25.8735%" y="613" width="0.0891%" height="15" fill="rgb(212,20,18)" fg:x="7842" fg:w="27"/><text x="26.1235%" y="623.50"></text></g><g><title>tracing_log::level_to_cs (15 samples, 0.05%)</title><rect x="25.9131%" y="597" width="0.0495%" height="15" fill="rgb(245,133,36)" fg:x="7854" fg:w="15"/><text x="26.1631%" y="607.50"></text></g><g><title>&lt;tracing_core::event::Event as tracing_subscriber::field::RecordFields&gt;::record (4 samples, 0.01%)</title><rect x="25.9626%" y="613" width="0.0132%" height="15" fill="rgb(212,6,19)" fg:x="7869" fg:w="4"/><text x="26.2126%" y="623.50"></text></g><g><title>&lt;tracing_subscriber::fmt::time::datetime::DateTime as core::convert::From&lt;std::time::SystemTime&gt;&gt;::from (25 samples, 0.08%)</title><rect x="25.9989%" y="597" width="0.0825%" height="15" fill="rgb(218,1,36)" fg:x="7880" fg:w="25"/><text x="26.2489%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (26 samples, 0.09%)</title><rect x="26.2397%" y="549" width="0.0858%" height="15" fill="rgb(246,84,54)" fg:x="7953" fg:w="26"/><text x="26.4897%" y="559.50"></text></g><g><title>[libc.so.6] (20 samples, 0.07%)</title><rect x="26.2595%" y="533" width="0.0660%" height="15" fill="rgb(242,110,6)" fg:x="7959" fg:w="20"/><text x="26.5095%" y="543.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for isize&gt;::fmt (28 samples, 0.09%)</title><rect x="26.3255%" y="549" width="0.0924%" height="15" fill="rgb(214,47,5)" fg:x="7979" fg:w="28"/><text x="26.5755%" y="559.50"></text></g><g><title>core::fmt::Formatter::pad_integral (13 samples, 0.04%)</title><rect x="26.3750%" y="533" width="0.0429%" height="15" fill="rgb(218,159,25)" fg:x="7994" fg:w="13"/><text x="26.6250%" y="543.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (6 samples, 0.02%)</title><rect x="26.3981%" y="517" width="0.0198%" height="15" fill="rgb(215,211,28)" fg:x="8001" fg:w="6"/><text x="26.6481%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (5 samples, 0.02%)</title><rect x="26.4707%" y="533" width="0.0165%" height="15" fill="rgb(238,59,32)" fg:x="8023" fg:w="5"/><text x="26.7207%" y="543.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (25 samples, 0.08%)</title><rect x="26.4179%" y="549" width="0.0825%" height="15" fill="rgb(226,82,3)" fg:x="8007" fg:w="25"/><text x="26.6679%" y="559.50"></text></g><g><title>core::fmt::Formatter::pad_integral (4 samples, 0.01%)</title><rect x="26.4872%" y="533" width="0.0132%" height="15" fill="rgb(240,164,32)" fg:x="8028" fg:w="4"/><text x="26.7372%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (7 samples, 0.02%)</title><rect x="26.5730%" y="533" width="0.0231%" height="15" fill="rgb(232,46,7)" fg:x="8054" fg:w="7"/><text x="26.8230%" y="543.50"></text></g><g><title>[libc.so.6] (5 samples, 0.02%)</title><rect x="26.5796%" y="517" width="0.0165%" height="15" fill="rgb(229,129,53)" fg:x="8056" fg:w="5"/><text x="26.8296%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_char (6 samples, 0.02%)</title><rect x="26.6851%" y="517" width="0.0198%" height="15" fill="rgb(234,188,29)" fg:x="8088" fg:w="6"/><text x="26.9351%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (9 samples, 0.03%)</title><rect x="26.7049%" y="517" width="0.0297%" height="15" fill="rgb(246,141,4)" fg:x="8094" fg:w="9"/><text x="26.9549%" y="527.50"></text></g><g><title>[libc.so.6] (5 samples, 0.02%)</title><rect x="26.7181%" y="501" width="0.0165%" height="15" fill="rgb(229,23,39)" fg:x="8098" fg:w="5"/><text x="26.9681%" y="511.50"></text></g><g><title>core::fmt::write (202 samples, 0.67%)</title><rect x="26.0814%" y="597" width="0.6665%" height="15" fill="rgb(206,12,3)" fg:x="7905" fg:w="202"/><text x="26.3314%" y="607.50"></text></g><g><title>&lt;tracing_subscriber::fmt::time::datetime::DateTime as core::fmt::Display&gt;::fmt (197 samples, 0.65%)</title><rect x="26.0979%" y="581" width="0.6500%" height="15" fill="rgb(252,226,20)" fg:x="7910" fg:w="197"/><text x="26.3479%" y="591.50"></text></g><g><title>core::fmt::write (180 samples, 0.59%)</title><rect x="26.1539%" y="565" width="0.5939%" height="15" fill="rgb(216,123,35)" fg:x="7927" fg:w="180"/><text x="26.4039%" y="575.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u8&gt;::fmt (75 samples, 0.25%)</title><rect x="26.5004%" y="549" width="0.2475%" height="15" fill="rgb(212,68,40)" fg:x="8032" fg:w="75"/><text x="26.7504%" y="559.50"></text></g><g><title>core::fmt::Formatter::pad_integral (46 samples, 0.15%)</title><rect x="26.5961%" y="533" width="0.1518%" height="15" fill="rgb(254,125,32)" fg:x="8061" fg:w="46"/><text x="26.8461%" y="543.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (4 samples, 0.01%)</title><rect x="26.7346%" y="517" width="0.0132%" height="15" fill="rgb(253,97,22)" fg:x="8103" fg:w="4"/><text x="26.9846%" y="527.50"></text></g><g><title>&lt;tracing_subscriber::fmt::time::SystemTime as tracing_subscriber::fmt::time::FormatTime&gt;::format_time (246 samples, 0.81%)</title><rect x="25.9758%" y="613" width="0.8116%" height="15" fill="rgb(241,101,14)" fg:x="7873" fg:w="246"/><text x="26.2258%" y="623.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (12 samples, 0.04%)</title><rect x="26.7478%" y="597" width="0.0396%" height="15" fill="rgb(238,103,29)" fg:x="8107" fg:w="12"/><text x="26.9978%" y="607.50"></text></g><g><title>clock_gettime (12 samples, 0.04%)</title><rect x="26.7478%" y="581" width="0.0396%" height="15" fill="rgb(233,195,47)" fg:x="8107" fg:w="12"/><text x="26.9978%" y="591.50"></text></g><g><title>__vdso_clock_gettime (10 samples, 0.03%)</title><rect x="26.7544%" y="565" width="0.0330%" height="15" fill="rgb(246,218,30)" fg:x="8109" fg:w="10"/><text x="27.0044%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (21 samples, 0.07%)</title><rect x="26.8864%" y="597" width="0.0693%" height="15" fill="rgb(219,145,47)" fg:x="8149" fg:w="21"/><text x="27.1364%" y="607.50"></text></g><g><title>[libc.so.6] (18 samples, 0.06%)</title><rect x="26.8963%" y="581" width="0.0594%" height="15" fill="rgb(243,12,26)" fg:x="8152" fg:w="18"/><text x="27.1463%" y="591.50"></text></g><g><title>&lt;nu_ansi_term::ansi::Prefix as core::fmt::Display&gt;::fmt (6 samples, 0.02%)</title><rect x="26.9557%" y="597" width="0.0198%" height="15" fill="rgb(214,87,16)" fg:x="8170" fg:w="6"/><text x="27.2057%" y="607.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (5 samples, 0.02%)</title><rect x="26.9887%" y="565" width="0.0165%" height="15" fill="rgb(208,99,42)" fg:x="8180" fg:w="5"/><text x="27.2387%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (13 samples, 0.04%)</title><rect x="27.0052%" y="565" width="0.0429%" height="15" fill="rgb(253,99,2)" fg:x="8185" fg:w="13"/><text x="27.2552%" y="575.50"></text></g><g><title>[libc.so.6] (9 samples, 0.03%)</title><rect x="27.0184%" y="549" width="0.0297%" height="15" fill="rgb(220,168,23)" fg:x="8189" fg:w="9"/><text x="27.2684%" y="559.50"></text></g><g><title>&lt;nu_ansi_term::ansi::Suffix as core::fmt::Display&gt;::fmt (34 samples, 0.11%)</title><rect x="26.9755%" y="597" width="0.1122%" height="15" fill="rgb(242,38,24)" fg:x="8176" fg:w="34"/><text x="27.2255%" y="607.50"></text></g><g><title>core::fmt::write (32 samples, 0.11%)</title><rect x="26.9821%" y="581" width="0.1056%" height="15" fill="rgb(225,182,9)" fg:x="8178" fg:w="32"/><text x="27.2321%" y="591.50"></text></g><g><title>core::fmt::Formatter::pad (9 samples, 0.03%)</title><rect x="27.0580%" y="565" width="0.0297%" height="15" fill="rgb(243,178,37)" fg:x="8201" fg:w="9"/><text x="27.3080%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (6 samples, 0.02%)</title><rect x="27.1042%" y="581" width="0.0198%" height="15" fill="rgb(232,139,19)" fg:x="8215" fg:w="6"/><text x="27.3542%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (6 samples, 0.02%)</title><rect x="27.1965%" y="533" width="0.0198%" height="15" fill="rgb(225,201,24)" fg:x="8243" fg:w="6"/><text x="27.4465%" y="543.50"></text></g><g><title>&lt;nu_ansi_term::ansi::Suffix as core::fmt::Display&gt;::fmt (14 samples, 0.05%)</title><rect x="27.1734%" y="565" width="0.0462%" height="15" fill="rgb(221,47,46)" fg:x="8236" fg:w="14"/><text x="27.4234%" y="575.50"></text></g><g><title>core::fmt::write (13 samples, 0.04%)</title><rect x="27.1767%" y="549" width="0.0429%" height="15" fill="rgb(249,23,13)" fg:x="8237" fg:w="13"/><text x="27.4267%" y="559.50"></text></g><g><title>&lt;nu_ansi_term::display::AnsiGenericString&lt;str&gt; as core::fmt::Display&gt;::fmt (79 samples, 0.26%)</title><rect x="27.0877%" y="597" width="0.2606%" height="15" fill="rgb(219,9,5)" fg:x="8210" fg:w="79"/><text x="27.3377%" y="607.50"></text></g><g><title>core::fmt::write (66 samples, 0.22%)</title><rect x="27.1306%" y="581" width="0.2178%" height="15" fill="rgb(254,171,16)" fg:x="8223" fg:w="66"/><text x="27.3806%" y="591.50"></text></g><g><title>nu_ansi_term::ansi::&lt;impl nu_ansi_term::style::Style&gt;::write_prefix (39 samples, 0.13%)</title><rect x="27.2196%" y="565" width="0.1287%" height="15" fill="rgb(230,171,20)" fg:x="8250" fg:w="39"/><text x="27.4696%" y="575.50"></text></g><g><title>core::fmt::write (34 samples, 0.11%)</title><rect x="27.2361%" y="549" width="0.1122%" height="15" fill="rgb(210,71,41)" fg:x="8255" fg:w="34"/><text x="27.4861%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (11 samples, 0.04%)</title><rect x="27.3120%" y="533" width="0.0363%" height="15" fill="rgb(206,173,20)" fg:x="8278" fg:w="11"/><text x="27.5620%" y="543.50"></text></g><g><title>[libc.so.6] (5 samples, 0.02%)</title><rect x="27.3318%" y="517" width="0.0165%" height="15" fill="rgb(233,88,34)" fg:x="8284" fg:w="5"/><text x="27.5818%" y="527.50"></text></g><g><title>&lt;core::fmt::Formatter as core::fmt::Write&gt;::write_str (4 samples, 0.01%)</title><rect x="27.4440%" y="549" width="0.0132%" height="15" fill="rgb(223,209,46)" fg:x="8318" fg:w="4"/><text x="27.6940%" y="559.50"></text></g><g><title>core::fmt::Formatter::write_fmt (5 samples, 0.02%)</title><rect x="27.4572%" y="549" width="0.0165%" height="15" fill="rgb(250,43,18)" fg:x="8322" fg:w="5"/><text x="27.7072%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4 samples, 0.01%)</title><rect x="27.5232%" y="501" width="0.0132%" height="15" fill="rgb(208,13,10)" fg:x="8342" fg:w="4"/><text x="27.7732%" y="511.50"></text></g><g><title>&lt;nu_ansi_term::ansi::Suffix as core::fmt::Display&gt;::fmt (15 samples, 0.05%)</title><rect x="27.4935%" y="533" width="0.0495%" height="15" fill="rgb(212,200,36)" fg:x="8333" fg:w="15"/><text x="27.7435%" y="543.50"></text></g><g><title>core::fmt::write (12 samples, 0.04%)</title><rect x="27.5034%" y="517" width="0.0396%" height="15" fill="rgb(225,90,30)" fg:x="8336" fg:w="12"/><text x="27.7534%" y="527.50"></text></g><g><title>core::fmt::write (10 samples, 0.03%)</title><rect x="27.5760%" y="517" width="0.0330%" height="15" fill="rgb(236,182,39)" fg:x="8358" fg:w="10"/><text x="27.8260%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (8 samples, 0.03%)</title><rect x="27.5826%" y="501" width="0.0264%" height="15" fill="rgb(212,144,35)" fg:x="8360" fg:w="8"/><text x="27.8326%" y="511.50"></text></g><g><title>[libc.so.6] (6 samples, 0.02%)</title><rect x="27.5892%" y="485" width="0.0198%" height="15" fill="rgb(228,63,44)" fg:x="8362" fg:w="6"/><text x="27.8392%" y="495.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::FmtLevel as core::fmt::Display&gt;::fmt (99 samples, 0.33%)</title><rect x="27.3483%" y="597" width="0.3266%" height="15" fill="rgb(228,109,6)" fg:x="8289" fg:w="99"/><text x="27.5983%" y="607.50"></text></g><g><title>core::fmt::write (84 samples, 0.28%)</title><rect x="27.3978%" y="581" width="0.2771%" height="15" fill="rgb(238,117,24)" fg:x="8304" fg:w="84"/><text x="27.6478%" y="591.50"></text></g><g><title>&lt;nu_ansi_term::display::AnsiGenericString&lt;str&gt; as core::fmt::Display&gt;::fmt (80 samples, 0.26%)</title><rect x="27.4110%" y="565" width="0.2639%" height="15" fill="rgb(242,26,26)" fg:x="8308" fg:w="80"/><text x="27.6610%" y="575.50"></text></g><g><title>core::fmt::write (61 samples, 0.20%)</title><rect x="27.4737%" y="549" width="0.2013%" height="15" fill="rgb(221,92,48)" fg:x="8327" fg:w="61"/><text x="27.7237%" y="559.50"></text></g><g><title>nu_ansi_term::ansi::&lt;impl nu_ansi_term::style::Style&gt;::write_prefix (40 samples, 0.13%)</title><rect x="27.5430%" y="533" width="0.1320%" height="15" fill="rgb(209,209,32)" fg:x="8348" fg:w="40"/><text x="27.7930%" y="543.50"></text></g><g><title>nu_ansi_term::ansi::&lt;impl nu_ansi_term::style::Color&gt;::write_foreground_code (20 samples, 0.07%)</title><rect x="27.6090%" y="517" width="0.0660%" height="15" fill="rgb(221,70,22)" fg:x="8368" fg:w="20"/><text x="27.8590%" y="527.50"></text></g><g><title>core::fmt::write (15 samples, 0.05%)</title><rect x="27.6255%" y="501" width="0.0495%" height="15" fill="rgb(248,145,5)" fg:x="8373" fg:w="15"/><text x="27.8755%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (5 samples, 0.02%)</title><rect x="27.6585%" y="485" width="0.0165%" height="15" fill="rgb(226,116,26)" fg:x="8383" fg:w="5"/><text x="27.9085%" y="495.50"></text></g><g><title>[libc.so.6] (5 samples, 0.02%)</title><rect x="27.6585%" y="469" width="0.0165%" height="15" fill="rgb(244,5,17)" fg:x="8383" fg:w="5"/><text x="27.9085%" y="479.50"></text></g><g><title>core::fmt::Formatter::write_fmt (4 samples, 0.01%)</title><rect x="27.7574%" y="581" width="0.0132%" height="15" fill="rgb(252,159,33)" fg:x="8413" fg:w="4"/><text x="28.0074%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (10 samples, 0.03%)</title><rect x="27.8432%" y="565" width="0.0330%" height="15" fill="rgb(206,71,0)" fg:x="8439" fg:w="10"/><text x="28.0932%" y="575.50"></text></g><g><title>[libc.so.6] (5 samples, 0.02%)</title><rect x="27.8597%" y="549" width="0.0165%" height="15" fill="rgb(233,118,54)" fg:x="8444" fg:w="5"/><text x="28.1097%" y="559.50"></text></g><g><title>core::fmt::write (334 samples, 1.10%)</title><rect x="26.7874%" y="613" width="1.1020%" height="15" fill="rgb(234,83,48)" fg:x="8119" fg:w="334"/><text x="27.0374%" y="623.50"></text></g><g><title>nu_ansi_term::ansi::&lt;impl nu_ansi_term::style::Style&gt;::write_prefix (65 samples, 0.21%)</title><rect x="27.6749%" y="597" width="0.2145%" height="15" fill="rgb(228,3,54)" fg:x="8388" fg:w="65"/><text x="27.9249%" y="607.50"></text></g><g><title>core::fmt::write (36 samples, 0.12%)</title><rect x="27.7706%" y="581" width="0.1188%" height="15" fill="rgb(226,155,13)" fg:x="8417" fg:w="36"/><text x="28.0206%" y="591.50"></text></g><g><title>&lt;char as core::fmt::Display&gt;::fmt (4 samples, 0.01%)</title><rect x="27.8762%" y="565" width="0.0132%" height="15" fill="rgb(241,28,37)" fg:x="8449" fg:w="4"/><text x="28.1262%" y="575.50"></text></g><g><title>&lt;core::fmt::Arguments as tracing_core::field::Value&gt;::record (5 samples, 0.02%)</title><rect x="27.9422%" y="597" width="0.0165%" height="15" fill="rgb(233,93,10)" fg:x="8469" fg:w="5"/><text x="28.1922%" y="607.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (14 samples, 0.05%)</title><rect x="28.0181%" y="565" width="0.0462%" height="15" fill="rgb(225,113,19)" fg:x="8492" fg:w="14"/><text x="28.2681%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (8 samples, 0.03%)</title><rect x="28.0907%" y="549" width="0.0264%" height="15" fill="rgb(241,2,18)" fg:x="8514" fg:w="8"/><text x="28.3407%" y="559.50"></text></g><g><title>[libc.so.6] (7 samples, 0.02%)</title><rect x="28.0940%" y="533" width="0.0231%" height="15" fill="rgb(228,207,21)" fg:x="8515" fg:w="7"/><text x="28.3440%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (8 samples, 0.03%)</title><rect x="28.1731%" y="517" width="0.0264%" height="15" fill="rgb(213,211,35)" fg:x="8539" fg:w="8"/><text x="28.4231%" y="527.50"></text></g><g><title>[libc.so.6] (7 samples, 0.02%)</title><rect x="28.1764%" y="501" width="0.0231%" height="15" fill="rgb(209,83,10)" fg:x="8540" fg:w="7"/><text x="28.4264%" y="511.50"></text></g><g><title>core::fmt::write (79 samples, 0.26%)</title><rect x="28.0082%" y="581" width="0.2606%" height="15" fill="rgb(209,164,1)" fg:x="8489" fg:w="79"/><text x="28.2582%" y="591.50"></text></g><g><title>core::fmt::write (59 samples, 0.19%)</title><rect x="28.0742%" y="565" width="0.1947%" height="15" fill="rgb(213,184,43)" fg:x="8509" fg:w="59"/><text x="28.3242%" y="575.50"></text></g><g><title>&lt;smoltcp::time::Duration as core::fmt::Display&gt;::fmt (46 samples, 0.15%)</title><rect x="28.1171%" y="549" width="0.1518%" height="15" fill="rgb(231,61,34)" fg:x="8522" fg:w="46"/><text x="28.3671%" y="559.50"></text></g><g><title>core::fmt::write (42 samples, 0.14%)</title><rect x="28.1303%" y="533" width="0.1386%" height="15" fill="rgb(235,75,3)" fg:x="8526" fg:w="42"/><text x="28.3803%" y="543.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (21 samples, 0.07%)</title><rect x="28.1995%" y="517" width="0.0693%" height="15" fill="rgb(220,106,47)" fg:x="8547" fg:w="21"/><text x="28.4495%" y="527.50"></text></g><g><title>core::fmt::Formatter::pad_integral (15 samples, 0.05%)</title><rect x="28.2193%" y="501" width="0.0495%" height="15" fill="rgb(210,196,33)" fg:x="8553" fg:w="15"/><text x="28.4693%" y="511.50"></text></g><g><title>tracing_core::field::Field::name (5 samples, 0.02%)</title><rect x="28.2688%" y="581" width="0.0165%" height="15" fill="rgb(229,154,42)" fg:x="8568" fg:w="5"/><text x="28.5188%" y="591.50"></text></g><g><title>tracing_core::field::ValueSet::record (121 samples, 0.40%)</title><rect x="27.8894%" y="613" width="0.3992%" height="15" fill="rgb(228,114,26)" fg:x="8453" fg:w="121"/><text x="28.1394%" y="623.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::DefaultVisitor as tracing_core::field::Visit&gt;::record_debug (100 samples, 0.33%)</title><rect x="27.9587%" y="597" width="0.3299%" height="15" fill="rgb(208,144,1)" fg:x="8474" fg:w="100"/><text x="28.2087%" y="607.50"></text></g><g><title>tracing_subscriber::fmt::format::Writer::write_fmt (15 samples, 0.05%)</title><rect x="28.2886%" y="613" width="0.0495%" height="15" fill="rgb(239,112,37)" fg:x="8574" fg:w="15"/><text x="28.5386%" y="623.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::Format&lt;tracing_subscriber::fmt::format::Full,T&gt; as tracing_subscriber::fmt::format::FormatEvent&lt;S,N&gt;&gt;::format_event (828 samples, 2.73%)</title><rect x="25.7019%" y="629" width="2.7319%" height="15" fill="rgb(210,96,50)" fg:x="7790" fg:w="828"/><text x="25.9519%" y="639.50">&lt;t..</text></g><g><title>tracing_subscriber::layer::context::Context&lt;S&gt;::event_scope (29 samples, 0.10%)</title><rect x="28.3381%" y="613" width="0.0957%" height="15" fill="rgb(222,178,2)" fg:x="8589" fg:w="29"/><text x="28.5881%" y="623.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::current_span (21 samples, 0.07%)</title><rect x="28.3645%" y="597" width="0.0693%" height="15" fill="rgb(226,74,18)" fg:x="8597" fg:w="21"/><text x="28.6145%" y="607.50"></text></g><g><title>&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_event (2,590 samples, 8.55%)</title><rect x="19.9512%" y="645" width="8.5453%" height="15" fill="rgb(225,67,54)" fg:x="6047" fg:w="2590"/><text x="20.2012%" y="655.50">&lt;tracing_sub..</text></g><g><title>std::io::stdio::stdout (19 samples, 0.06%)</title><rect x="28.4338%" y="629" width="0.0627%" height="15" fill="rgb(251,92,32)" fg:x="8618" fg:w="19"/><text x="28.6838%" y="639.50"></text></g><g><title>&lt;tracing_subscriber::fmt::Subscriber&lt;N,E,F,W&gt; as tracing_core::subscriber::Subscriber&gt;::event_enabled (13 samples, 0.04%)</title><rect x="28.5460%" y="629" width="0.0429%" height="15" fill="rgb(228,149,22)" fg:x="8652" fg:w="13"/><text x="28.7960%" y="639.50"></text></g><g><title>netstack_smoltcp::tcp::TcpListenerRunner::create::{{closure}} (6,125 samples, 20.21%)</title><rect x="8.4265%" y="693" width="20.2085%" height="15" fill="rgb(243,54,13)" fg:x="2554" fg:w="6125"/><text x="8.6765%" y="703.50">netstack_smoltcp::tcp::TcpListen..</text></g><g><title>netstack_smoltcp::tcp::TcpListenerRunner::create::{{closure}}::{{closure}} (6,103 samples, 20.14%)</title><rect x="8.4991%" y="677" width="20.1359%" height="15" fill="rgb(243,180,28)" fg:x="2576" fg:w="6103"/><text x="8.7491%" y="687.50">netstack_smoltcp::tcp::TcpListen..</text></g><g><title>tracing_core::event::Event::dispatch (2,639 samples, 8.71%)</title><rect x="19.9281%" y="661" width="8.7070%" height="15" fill="rgb(208,167,24)" fg:x="6040" fg:w="2639"/><text x="20.1781%" y="671.50">tracing_core..</text></g><g><title>tracing_core::dispatcher::get_default (42 samples, 0.14%)</title><rect x="28.4965%" y="645" width="0.1386%" height="15" fill="rgb(245,73,45)" fg:x="8637" fg:w="42"/><text x="28.7465%" y="655.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::event_enabled (14 samples, 0.05%)</title><rect x="28.5889%" y="629" width="0.0462%" height="15" fill="rgb(237,203,48)" fg:x="8665" fg:w="14"/><text x="28.8389%" y="639.50"></text></g><g><title>std::panicking::try (6,151 samples, 20.29%)</title><rect x="8.3639%" y="709" width="20.2943%" height="15" fill="rgb(211,197,16)" fg:x="2535" fg:w="6151"/><text x="8.6139%" y="719.50">std::panicking::try</text></g><g><title>tokio::runtime::task::core::TaskIdGuard::enter (7 samples, 0.02%)</title><rect x="28.6351%" y="693" width="0.0231%" height="15" fill="rgb(243,99,51)" fg:x="8679" fg:w="7"/><text x="28.8851%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.01%)</title><rect x="28.7208%" y="661" width="0.0132%" height="15" fill="rgb(215,123,29)" fg:x="8705" fg:w="4"/><text x="28.9708%" y="671.50"></text></g><g><title>available_idle_cpu (7 samples, 0.02%)</title><rect x="28.9551%" y="533" width="0.0231%" height="15" fill="rgb(239,186,37)" fg:x="8776" fg:w="7"/><text x="29.2051%" y="543.50"></text></g><g><title>select_task_rq_fair (18 samples, 0.06%)</title><rect x="28.9221%" y="549" width="0.0594%" height="15" fill="rgb(252,136,39)" fg:x="8766" fg:w="18"/><text x="29.1721%" y="559.50"></text></g><g><title>__x64_sys_futex (81 samples, 0.27%)</title><rect x="28.7703%" y="629" width="0.2672%" height="15" fill="rgb(223,213,32)" fg:x="8720" fg:w="81"/><text x="29.0203%" y="639.50"></text></g><g><title>do_futex (75 samples, 0.25%)</title><rect x="28.7901%" y="613" width="0.2475%" height="15" fill="rgb(233,115,5)" fg:x="8726" fg:w="75"/><text x="29.0401%" y="623.50"></text></g><g><title>futex_wake (69 samples, 0.23%)</title><rect x="28.8099%" y="597" width="0.2277%" height="15" fill="rgb(207,226,44)" fg:x="8732" fg:w="69"/><text x="29.0599%" y="607.50"></text></g><g><title>wake_up_q (47 samples, 0.16%)</title><rect x="28.8825%" y="581" width="0.1551%" height="15" fill="rgb(208,126,0)" fg:x="8754" fg:w="47"/><text x="29.1325%" y="591.50"></text></g><g><title>try_to_wake_up (46 samples, 0.15%)</title><rect x="28.8858%" y="565" width="0.1518%" height="15" fill="rgb(244,66,21)" fg:x="8755" fg:w="46"/><text x="29.1358%" y="575.50"></text></g><g><title>ttwu_queue_wakelist (17 samples, 0.06%)</title><rect x="28.9815%" y="549" width="0.0561%" height="15" fill="rgb(222,97,12)" fg:x="8784" fg:w="17"/><text x="29.2315%" y="559.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (94 samples, 0.31%)</title><rect x="28.7406%" y="661" width="0.3101%" height="15" fill="rgb(219,213,19)" fg:x="8711" fg:w="94"/><text x="28.9906%" y="671.50"></text></g><g><title>do_syscall_64 (89 samples, 0.29%)</title><rect x="28.7571%" y="645" width="0.2936%" height="15" fill="rgb(252,169,30)" fg:x="8716" fg:w="89"/><text x="29.0071%" y="655.50"></text></g><g><title>syscall_exit_to_user_mode (4 samples, 0.01%)</title><rect x="29.0376%" y="629" width="0.0132%" height="15" fill="rgb(206,32,51)" fg:x="8801" fg:w="4"/><text x="29.2876%" y="639.50"></text></g><g><title>syscall (104 samples, 0.34%)</title><rect x="28.7142%" y="677" width="0.3431%" height="15" fill="rgb(250,172,42)" fg:x="8703" fg:w="104"/><text x="28.9642%" y="687.50"></text></g><g><title>__fdget_pos (4 samples, 0.01%)</title><rect x="29.1069%" y="565" width="0.0132%" height="15" fill="rgb(209,34,43)" fg:x="8822" fg:w="4"/><text x="29.3569%" y="575.50"></text></g><g><title>__fget_light (4 samples, 0.01%)</title><rect x="29.1069%" y="549" width="0.0132%" height="15" fill="rgb(223,11,35)" fg:x="8822" fg:w="4"/><text x="29.3569%" y="559.50"></text></g><g><title>__wake_up_common_lock (4 samples, 0.01%)</title><rect x="29.1366%" y="501" width="0.0132%" height="15" fill="rgb(251,219,26)" fg:x="8831" fg:w="4"/><text x="29.3866%" y="511.50"></text></g><g><title>__wake_up_common (10 samples, 0.03%)</title><rect x="29.1234%" y="533" width="0.0330%" height="15" fill="rgb(231,119,3)" fg:x="8827" fg:w="10"/><text x="29.3734%" y="543.50"></text></g><g><title>ep_poll_callback (7 samples, 0.02%)</title><rect x="29.1333%" y="517" width="0.0231%" height="15" fill="rgb(216,97,11)" fg:x="8830" fg:w="7"/><text x="29.3833%" y="527.50"></text></g><g><title>ksys_write (23 samples, 0.08%)</title><rect x="29.0970%" y="581" width="0.0759%" height="15" fill="rgb(223,59,9)" fg:x="8819" fg:w="23"/><text x="29.3470%" y="591.50"></text></g><g><title>vfs_write (16 samples, 0.05%)</title><rect x="29.1201%" y="565" width="0.0528%" height="15" fill="rgb(233,93,31)" fg:x="8826" fg:w="16"/><text x="29.3701%" y="575.50"></text></g><g><title>eventfd_write (16 samples, 0.05%)</title><rect x="29.1201%" y="549" width="0.0528%" height="15" fill="rgb(239,81,33)" fg:x="8826" fg:w="16"/><text x="29.3701%" y="559.50"></text></g><g><title>__write (27 samples, 0.09%)</title><rect x="29.0871%" y="629" width="0.0891%" height="15" fill="rgb(213,120,34)" fg:x="8816" fg:w="27"/><text x="29.3371%" y="639.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (25 samples, 0.08%)</title><rect x="29.0937%" y="613" width="0.0825%" height="15" fill="rgb(243,49,53)" fg:x="8818" fg:w="25"/><text x="29.3437%" y="623.50"></text></g><g><title>do_syscall_64 (25 samples, 0.08%)</title><rect x="29.0937%" y="597" width="0.0825%" height="15" fill="rgb(247,216,33)" fg:x="8818" fg:w="25"/><text x="29.3437%" y="607.50"></text></g><g><title>mio::sys::unix::waker::eventfd::WakerInternal::wake (28 samples, 0.09%)</title><rect x="29.0871%" y="661" width="0.0924%" height="15" fill="rgb(226,26,14)" fg:x="8816" fg:w="28"/><text x="29.3371%" y="671.50"></text></g><g><title>&lt;&amp;std::process::ChildStdin as std::io::Write&gt;::write (28 samples, 0.09%)</title><rect x="29.0871%" y="645" width="0.0924%" height="15" fill="rgb(215,49,53)" fg:x="8816" fg:w="28"/><text x="29.3371%" y="655.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Unparker::unpark (38 samples, 0.13%)</title><rect x="29.0574%" y="677" width="0.1254%" height="15" fill="rgb(245,162,40)" fg:x="8807" fg:w="38"/><text x="29.3074%" y="687.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::yield_now (201 samples, 0.66%)</title><rect x="28.6582%" y="709" width="0.6632%" height="15" fill="rgb(229,68,17)" fg:x="8686" fg:w="201"/><text x="28.9082%" y="719.50"></text></g><g><title>tokio::runtime::context::with_scheduler (196 samples, 0.65%)</title><rect x="28.6747%" y="693" width="0.6467%" height="15" fill="rgb(213,182,10)" fg:x="8691" fg:w="196"/><text x="28.9247%" y="703.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_local (42 samples, 0.14%)</title><rect x="29.1828%" y="677" width="0.1386%" height="15" fill="rgb(245,125,30)" fg:x="8845" fg:w="42"/><text x="29.4328%" y="687.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::worker_to_notify (29 samples, 0.10%)</title><rect x="29.2256%" y="661" width="0.0957%" height="15" fill="rgb(232,202,2)" fg:x="8858" fg:w="29"/><text x="29.4756%" y="671.50"></text></g><g><title>&lt;tokio::runtime::task::core::TaskIdGuard as core::ops::drop::Drop&gt;::drop (7 samples, 0.02%)</title><rect x="29.3708%" y="693" width="0.0231%" height="15" fill="rgb(237,140,51)" fg:x="8902" fg:w="7"/><text x="29.6208%" y="703.50"></text></g><g><title>smoltcp::storage::ring_buffer::RingBuffer&lt;T&gt;::dequeue_slice (141 samples, 0.47%)</title><rect x="29.6711%" y="629" width="0.4652%" height="15" fill="rgb(236,157,25)" fg:x="8993" fg:w="141"/><text x="29.9211%" y="639.50"></text></g><g><title>[libc.so.6] (132 samples, 0.44%)</title><rect x="29.7007%" y="613" width="0.4355%" height="15" fill="rgb(219,209,0)" fg:x="9002" fg:w="132"/><text x="29.9507%" y="623.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (10 samples, 0.03%)</title><rect x="30.1429%" y="629" width="0.0330%" height="15" fill="rgb(240,116,54)" fg:x="9136" fg:w="10"/><text x="30.3929%" y="639.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_notified_by_val (5 samples, 0.02%)</title><rect x="30.1594%" y="613" width="0.0165%" height="15" fill="rgb(216,10,36)" fg:x="9141" fg:w="5"/><text x="30.4094%" y="623.50"></text></g><g><title>&lt;netstack_smoltcp::tcp::TcpStream as tokio::io::async_read::AsyncRead&gt;::poll_read (189 samples, 0.62%)</title><rect x="29.5919%" y="645" width="0.6236%" height="15" fill="rgb(222,72,44)" fg:x="8969" fg:w="189"/><text x="29.8419%" y="655.50"></text></g><g><title>tokio::sync::notify::Notify::notify_one (12 samples, 0.04%)</title><rect x="30.1759%" y="629" width="0.0396%" height="15" fill="rgb(232,159,9)" fg:x="9146" fg:w="12"/><text x="30.4259%" y="639.50"></text></g><g><title>[libc.so.6] (11 samples, 0.04%)</title><rect x="30.3936%" y="565" width="0.0363%" height="15" fill="rgb(210,39,32)" fg:x="9212" fg:w="11"/><text x="30.6436%" y="575.50"></text></g><g><title>entry_SYSCALL_64 (7 samples, 0.02%)</title><rect x="30.4299%" y="565" width="0.0231%" height="15" fill="rgb(216,194,45)" fg:x="9223" fg:w="7"/><text x="30.6799%" y="575.50"></text></g><g><title>fput_many (6 samples, 0.02%)</title><rect x="30.5025%" y="501" width="0.0198%" height="15" fill="rgb(218,18,35)" fg:x="9245" fg:w="6"/><text x="30.7525%" y="511.50"></text></g><g><title>import_single_range (5 samples, 0.02%)</title><rect x="30.5223%" y="501" width="0.0165%" height="15" fill="rgb(207,83,51)" fg:x="9251" fg:w="5"/><text x="30.7723%" y="511.50"></text></g><g><title>inet_sendmsg (9 samples, 0.03%)</title><rect x="30.5388%" y="501" width="0.0297%" height="15" fill="rgb(225,63,43)" fg:x="9256" fg:w="9"/><text x="30.7888%" y="511.50"></text></g><g><title>sockfd_lookup_light (23 samples, 0.08%)</title><rect x="30.5685%" y="501" width="0.0759%" height="15" fill="rgb(207,57,36)" fg:x="9265" fg:w="23"/><text x="30.8185%" y="511.50"></text></g><g><title>__fget_light (15 samples, 0.05%)</title><rect x="30.5949%" y="485" width="0.0495%" height="15" fill="rgb(216,99,33)" fg:x="9273" fg:w="15"/><text x="30.8449%" y="495.50"></text></g><g><title>__fget_files (6 samples, 0.02%)</title><rect x="30.6246%" y="469" width="0.0198%" height="15" fill="rgb(225,42,16)" fg:x="9282" fg:w="6"/><text x="30.8746%" y="479.50"></text></g><g><title>_raw_spin_unlock_bh (8 samples, 0.03%)</title><rect x="30.6576%" y="485" width="0.0264%" height="15" fill="rgb(220,201,45)" fg:x="9292" fg:w="8"/><text x="30.9076%" y="495.50"></text></g><g><title>__raw_callee_save___pv_queued_spin_unlock (8 samples, 0.03%)</title><rect x="30.6576%" y="469" width="0.0264%" height="15" fill="rgb(225,33,4)" fg:x="9292" fg:w="8"/><text x="30.9076%" y="479.50"></text></g><g><title>lock_sock_nested (31 samples, 0.10%)</title><rect x="30.6840%" y="485" width="0.1023%" height="15" fill="rgb(224,33,50)" fg:x="9300" fg:w="31"/><text x="30.9340%" y="495.50"></text></g><g><title>_raw_spin_lock_bh (27 samples, 0.09%)</title><rect x="30.6972%" y="469" width="0.0891%" height="15" fill="rgb(246,198,51)" fg:x="9304" fg:w="27"/><text x="30.9472%" y="479.50"></text></g><g><title>__pv_queued_spin_lock_slowpath (22 samples, 0.07%)</title><rect x="30.7136%" y="453" width="0.0726%" height="15" fill="rgb(205,22,4)" fg:x="9309" fg:w="22"/><text x="30.9636%" y="463.50"></text></g><g><title>__tcp_transmit_skb (4 samples, 0.01%)</title><rect x="30.8060%" y="389" width="0.0132%" height="15" fill="rgb(206,3,8)" fg:x="9337" fg:w="4"/><text x="31.0560%" y="399.50"></text></g><g><title>__tcp_push_pending_frames (5 samples, 0.02%)</title><rect x="30.8060%" y="421" width="0.0165%" height="15" fill="rgb(251,23,15)" fg:x="9337" fg:w="5"/><text x="31.0560%" y="431.50"></text></g><g><title>tcp_write_xmit (5 samples, 0.02%)</title><rect x="30.8060%" y="405" width="0.0165%" height="15" fill="rgb(252,88,28)" fg:x="9337" fg:w="5"/><text x="31.0560%" y="415.50"></text></g><g><title>tcp_ack (8 samples, 0.03%)</title><rect x="30.8225%" y="421" width="0.0264%" height="15" fill="rgb(212,127,14)" fg:x="9342" fg:w="8"/><text x="31.0725%" y="431.50"></text></g><g><title>tcp_trim_head (4 samples, 0.01%)</title><rect x="30.8357%" y="405" width="0.0132%" height="15" fill="rgb(247,145,37)" fg:x="9346" fg:w="4"/><text x="31.0857%" y="415.50"></text></g><g><title>__release_sock (17 samples, 0.06%)</title><rect x="30.7961%" y="469" width="0.0561%" height="15" fill="rgb(209,117,53)" fg:x="9334" fg:w="17"/><text x="31.0461%" y="479.50"></text></g><g><title>tcp_v4_do_rcv (15 samples, 0.05%)</title><rect x="30.8027%" y="453" width="0.0495%" height="15" fill="rgb(212,90,42)" fg:x="9336" fg:w="15"/><text x="31.0527%" y="463.50"></text></g><g><title>tcp_rcv_established (14 samples, 0.05%)</title><rect x="30.8060%" y="437" width="0.0462%" height="15" fill="rgb(218,164,37)" fg:x="9337" fg:w="14"/><text x="31.0560%" y="447.50"></text></g><g><title>_raw_spin_lock_bh (13 samples, 0.04%)</title><rect x="30.8522%" y="469" width="0.0429%" height="15" fill="rgb(246,65,34)" fg:x="9351" fg:w="13"/><text x="31.1022%" y="479.50"></text></g><g><title>release_sock (38 samples, 0.13%)</title><rect x="30.7862%" y="485" width="0.1254%" height="15" fill="rgb(231,100,33)" fg:x="9331" fg:w="38"/><text x="31.0362%" y="495.50"></text></g><g><title>tcp_release_cb (5 samples, 0.02%)</title><rect x="30.8951%" y="469" width="0.0165%" height="15" fill="rgb(228,126,14)" fg:x="9364" fg:w="5"/><text x="31.1451%" y="479.50"></text></g><g><title>__virt_addr_valid (5 samples, 0.02%)</title><rect x="31.0997%" y="453" width="0.0165%" height="15" fill="rgb(215,173,21)" fg:x="9426" fg:w="5"/><text x="31.3497%" y="463.50"></text></g><g><title>__check_object_size (18 samples, 0.06%)</title><rect x="31.0700%" y="469" width="0.0594%" height="15" fill="rgb(210,6,40)" fg:x="9417" fg:w="18"/><text x="31.3200%" y="479.50"></text></g><g><title>check_stack_object (4 samples, 0.01%)</title><rect x="31.1162%" y="453" width="0.0132%" height="15" fill="rgb(212,48,18)" fg:x="9431" fg:w="4"/><text x="31.3662%" y="463.50"></text></g><g><title>__tcp_transmit_skb (4 samples, 0.01%)</title><rect x="31.2613%" y="437" width="0.0132%" height="15" fill="rgb(230,214,11)" fg:x="9475" fg:w="4"/><text x="31.5113%" y="447.50"></text></g><g><title>__ip_queue_xmit (4 samples, 0.01%)</title><rect x="31.2613%" y="421" width="0.0132%" height="15" fill="rgb(254,105,39)" fg:x="9475" fg:w="4"/><text x="31.5113%" y="431.50"></text></g><g><title>ip_finish_output2 (4 samples, 0.01%)</title><rect x="31.2613%" y="405" width="0.0132%" height="15" fill="rgb(245,158,5)" fg:x="9475" fg:w="4"/><text x="31.5113%" y="415.50"></text></g><g><title>__dev_queue_xmit (4 samples, 0.01%)</title><rect x="31.2613%" y="389" width="0.0132%" height="15" fill="rgb(249,208,11)" fg:x="9475" fg:w="4"/><text x="31.5113%" y="399.50"></text></g><g><title>read_hv_clock_tsc (15 samples, 0.05%)</title><rect x="31.3009%" y="421" width="0.0495%" height="15" fill="rgb(210,39,28)" fg:x="9487" fg:w="15"/><text x="31.5509%" y="431.50"></text></g><g><title>ktime_get (27 samples, 0.09%)</title><rect x="31.2745%" y="437" width="0.0891%" height="15" fill="rgb(211,56,53)" fg:x="9479" fg:w="27"/><text x="31.5245%" y="447.50"></text></g><g><title>read_hv_clock_tsc_cs (4 samples, 0.01%)</title><rect x="31.3504%" y="421" width="0.0132%" height="15" fill="rgb(226,201,30)" fg:x="9502" fg:w="4"/><text x="31.6004%" y="431.50"></text></g><g><title>rb_first (6 samples, 0.02%)</title><rect x="31.3636%" y="437" width="0.0198%" height="15" fill="rgb(239,101,34)" fg:x="9506" fg:w="6"/><text x="31.6136%" y="447.50"></text></g><g><title>__tcp_push_pending_frames (80 samples, 0.26%)</title><rect x="31.1294%" y="469" width="0.2639%" height="15" fill="rgb(226,209,5)" fg:x="9435" fg:w="80"/><text x="31.3794%" y="479.50"></text></g><g><title>tcp_write_xmit (78 samples, 0.26%)</title><rect x="31.1360%" y="453" width="0.2573%" height="15" fill="rgb(250,105,47)" fg:x="9437" fg:w="78"/><text x="31.3860%" y="463.50"></text></g><g><title>_copy_from_iter (163 samples, 0.54%)</title><rect x="31.3933%" y="469" width="0.5378%" height="15" fill="rgb(230,72,3)" fg:x="9515" fg:w="163"/><text x="31.6433%" y="479.50"></text></g><g><title>copy_user_enhanced_fast_string (154 samples, 0.51%)</title><rect x="31.4230%" y="453" width="0.5081%" height="15" fill="rgb(232,218,39)" fg:x="9524" fg:w="154"/><text x="31.6730%" y="463.50"></text></g><g><title>__list_del_entry_valid (10 samples, 0.03%)</title><rect x="32.0235%" y="405" width="0.0330%" height="15" fill="rgb(248,166,6)" fg:x="9706" fg:w="10"/><text x="32.2735%" y="415.50"></text></g><g><title>sk_page_frag_refill (40 samples, 0.13%)</title><rect x="31.9311%" y="469" width="0.1320%" height="15" fill="rgb(247,89,20)" fg:x="9678" fg:w="40"/><text x="32.1811%" y="479.50"></text></g><g><title>skb_page_frag_refill (40 samples, 0.13%)</title><rect x="31.9311%" y="453" width="0.1320%" height="15" fill="rgb(248,130,54)" fg:x="9678" fg:w="40"/><text x="32.1811%" y="463.50"></text></g><g><title>__alloc_pages (23 samples, 0.08%)</title><rect x="31.9872%" y="437" width="0.0759%" height="15" fill="rgb(234,196,4)" fg:x="9695" fg:w="23"/><text x="32.2372%" y="447.50"></text></g><g><title>get_page_from_freelist (15 samples, 0.05%)</title><rect x="32.0136%" y="421" width="0.0495%" height="15" fill="rgb(250,143,31)" fg:x="9703" fg:w="15"/><text x="32.2636%" y="431.50"></text></g><g><title>__kmalloc_track_caller (4 samples, 0.01%)</title><rect x="32.0829%" y="437" width="0.0132%" height="15" fill="rgb(211,110,34)" fg:x="9724" fg:w="4"/><text x="32.3329%" y="447.50"></text></g><g><title>sk_stream_alloc_skb (18 samples, 0.06%)</title><rect x="32.0631%" y="469" width="0.0594%" height="15" fill="rgb(215,124,48)" fg:x="9718" fg:w="18"/><text x="32.3131%" y="479.50"></text></g><g><title>__alloc_skb (17 samples, 0.06%)</title><rect x="32.0664%" y="453" width="0.0561%" height="15" fill="rgb(216,46,13)" fg:x="9719" fg:w="17"/><text x="32.3164%" y="463.50"></text></g><g><title>kmem_cache_alloc (7 samples, 0.02%)</title><rect x="32.0994%" y="437" width="0.0231%" height="15" fill="rgb(205,184,25)" fg:x="9729" fg:w="7"/><text x="32.3494%" y="447.50"></text></g><g><title>tcp_push (5 samples, 0.02%)</title><rect x="32.1225%" y="469" width="0.0165%" height="15" fill="rgb(228,1,10)" fg:x="9736" fg:w="5"/><text x="32.3725%" y="479.50"></text></g><g><title>tcp_rate_check_app_limited (6 samples, 0.02%)</title><rect x="32.1390%" y="469" width="0.0198%" height="15" fill="rgb(213,116,27)" fg:x="9741" fg:w="6"/><text x="32.3890%" y="479.50"></text></g><g><title>tcp_send_mss (29 samples, 0.10%)</title><rect x="32.1588%" y="469" width="0.0957%" height="15" fill="rgb(241,95,50)" fg:x="9747" fg:w="29"/><text x="32.4088%" y="479.50"></text></g><g><title>tcp_current_mss (24 samples, 0.08%)</title><rect x="32.1753%" y="453" width="0.0792%" height="15" fill="rgb(238,48,32)" fg:x="9752" fg:w="24"/><text x="32.4253%" y="463.50"></text></g><g><title>ipv4_mtu (11 samples, 0.04%)</title><rect x="32.2182%" y="437" width="0.0363%" height="15" fill="rgb(235,113,49)" fg:x="9765" fg:w="11"/><text x="32.4682%" y="447.50"></text></g><g><title>__x64_sys_sendto (547 samples, 1.80%)</title><rect x="30.4596%" y="533" width="1.8047%" height="15" fill="rgb(205,127,43)" fg:x="9232" fg:w="547"/><text x="30.7096%" y="543.50">_..</text></g><g><title>__sys_sendto (546 samples, 1.80%)</title><rect x="30.4629%" y="517" width="1.8014%" height="15" fill="rgb(250,162,2)" fg:x="9233" fg:w="546"/><text x="30.7129%" y="527.50">_..</text></g><g><title>tcp_sendmsg (491 samples, 1.62%)</title><rect x="30.6444%" y="501" width="1.6200%" height="15" fill="rgb(220,13,41)" fg:x="9288" fg:w="491"/><text x="30.8944%" y="511.50"></text></g><g><title>tcp_sendmsg_locked (410 samples, 1.35%)</title><rect x="30.9116%" y="485" width="1.3527%" height="15" fill="rgb(249,221,25)" fg:x="9369" fg:w="410"/><text x="31.1616%" y="495.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (553 samples, 1.82%)</title><rect x="30.4530%" y="565" width="1.8245%" height="15" fill="rgb(215,208,19)" fg:x="9230" fg:w="553"/><text x="30.7030%" y="575.50">e..</text></g><g><title>do_syscall_64 (552 samples, 1.82%)</title><rect x="30.4563%" y="549" width="1.8212%" height="15" fill="rgb(236,175,2)" fg:x="9231" fg:w="552"/><text x="30.7063%" y="559.50">d..</text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write (614 samples, 2.03%)</title><rect x="30.2682%" y="613" width="2.0258%" height="15" fill="rgb(241,52,2)" fg:x="9174" fg:w="614"/><text x="30.5182%" y="623.50">&lt;..</text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (606 samples, 2.00%)</title><rect x="30.2946%" y="597" width="1.9994%" height="15" fill="rgb(248,140,14)" fg:x="9182" fg:w="606"/><text x="30.5446%" y="607.50">&lt;..</text></g><g><title>send (597 samples, 1.97%)</title><rect x="30.3243%" y="581" width="1.9697%" height="15" fill="rgb(253,22,42)" fg:x="9191" fg:w="597"/><text x="30.5743%" y="591.50">s..</text></g><g><title>syscall_return_via_sysret (5 samples, 0.02%)</title><rect x="32.2775%" y="565" width="0.0165%" height="15" fill="rgb(234,61,47)" fg:x="9783" fg:w="5"/><text x="32.5275%" y="575.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness (8 samples, 0.03%)</title><rect x="32.3105%" y="597" width="0.0264%" height="15" fill="rgb(208,226,15)" fg:x="9793" fg:w="8"/><text x="32.5605%" y="607.50"></text></g><g><title>&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_write::AsyncWrite&gt;::poll_write (642 samples, 2.12%)</title><rect x="30.2220%" y="645" width="2.1182%" height="15" fill="rgb(217,221,4)" fg:x="9160" fg:w="642"/><text x="30.4720%" y="655.50">&lt;..</text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_write_priv (638 samples, 2.10%)</title><rect x="30.2352%" y="629" width="2.1050%" height="15" fill="rgb(212,174,34)" fg:x="9164" fg:w="638"/><text x="30.4852%" y="639.50">t..</text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (14 samples, 0.05%)</title><rect x="32.2940%" y="613" width="0.0462%" height="15" fill="rgb(253,83,4)" fg:x="9788" fg:w="14"/><text x="32.5440%" y="623.50"></text></g><g><title>&lt;tokio::runtime::coop::RestoreOnPending as core::ops::drop::Drop&gt;::drop (15 samples, 0.05%)</title><rect x="32.3402%" y="645" width="0.0495%" height="15" fill="rgb(250,195,49)" fg:x="9802" fg:w="15"/><text x="32.5902%" y="655.50"></text></g><g><title>proxy::handle_inbound_stream::{{closure}}::{{closure}} (919 samples, 3.03%)</title><rect x="29.3939%" y="693" width="3.0321%" height="15" fill="rgb(241,192,25)" fg:x="8909" fg:w="919"/><text x="29.6439%" y="703.50">pro..</text></g><g><title>tokio::io::util::copy_bidirectional::transfer_one_direction (904 samples, 2.98%)</title><rect x="29.4434%" y="677" width="2.9826%" height="15" fill="rgb(208,124,10)" fg:x="8924" fg:w="904"/><text x="29.6934%" y="687.50">tok..</text></g><g><title>tokio::io::util::copy::CopyBuffer::poll_copy (886 samples, 2.92%)</title><rect x="29.5028%" y="661" width="2.9232%" height="15" fill="rgb(222,33,0)" fg:x="8942" fg:w="886"/><text x="29.7528%" y="671.50">to..</text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_read_priv (11 samples, 0.04%)</title><rect x="32.3897%" y="645" width="0.0363%" height="15" fill="rgb(234,209,28)" fg:x="9817" fg:w="11"/><text x="32.6397%" y="655.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (7 samples, 0.02%)</title><rect x="32.4029%" y="629" width="0.0231%" height="15" fill="rgb(224,11,23)" fg:x="9821" fg:w="7"/><text x="32.6529%" y="639.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness (5 samples, 0.02%)</title><rect x="32.4095%" y="613" width="0.0165%" height="15" fill="rgb(232,99,1)" fg:x="9823" fg:w="5"/><text x="32.6595%" y="623.50"></text></g><g><title>&lt;smoltcp::wire::ip::Protocol as core::convert::From&lt;u8&gt;&gt;::from (22 samples, 0.07%)</title><rect x="32.9803%" y="645" width="0.0726%" height="15" fill="rgb(237,95,45)" fg:x="9996" fg:w="22"/><text x="33.2303%" y="655.50"></text></g><g><title>smoltcp::wire::ip::Version::of_packet (17 samples, 0.06%)</title><rect x="33.0529%" y="645" width="0.0561%" height="15" fill="rgb(208,109,11)" fg:x="10018" fg:w="17"/><text x="33.3029%" y="655.50"></text></g><g><title>smoltcp::wire::ipv4::Address::from_bytes (7 samples, 0.02%)</title><rect x="33.1090%" y="645" width="0.0231%" height="15" fill="rgb(216,190,48)" fg:x="10035" fg:w="7"/><text x="33.3590%" y="655.50"></text></g><g><title>__x64_sys_futex (16 samples, 0.05%)</title><rect x="33.1519%" y="549" width="0.0528%" height="15" fill="rgb(251,171,36)" fg:x="10048" fg:w="16"/><text x="33.4019%" y="559.50"></text></g><g><title>do_futex (15 samples, 0.05%)</title><rect x="33.1552%" y="533" width="0.0495%" height="15" fill="rgb(230,62,22)" fg:x="10049" fg:w="15"/><text x="33.4052%" y="543.50"></text></g><g><title>futex_wake (14 samples, 0.05%)</title><rect x="33.1585%" y="517" width="0.0462%" height="15" fill="rgb(225,114,35)" fg:x="10050" fg:w="14"/><text x="33.4085%" y="527.50"></text></g><g><title>wake_up_q (10 samples, 0.03%)</title><rect x="33.1717%" y="501" width="0.0330%" height="15" fill="rgb(215,118,42)" fg:x="10054" fg:w="10"/><text x="33.4217%" y="511.50"></text></g><g><title>try_to_wake_up (10 samples, 0.03%)</title><rect x="33.1717%" y="485" width="0.0330%" height="15" fill="rgb(243,119,21)" fg:x="10054" fg:w="10"/><text x="33.4217%" y="495.50"></text></g><g><title>ttwu_queue_wakelist (4 samples, 0.01%)</title><rect x="33.1915%" y="469" width="0.0132%" height="15" fill="rgb(252,177,53)" fg:x="10060" fg:w="4"/><text x="33.4415%" y="479.50"></text></g><g><title>syscall (19 samples, 0.06%)</title><rect x="33.1453%" y="597" width="0.0627%" height="15" fill="rgb(237,209,29)" fg:x="10046" fg:w="19"/><text x="33.3953%" y="607.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (18 samples, 0.06%)</title><rect x="33.1486%" y="581" width="0.0594%" height="15" fill="rgb(212,65,23)" fg:x="10047" fg:w="18"/><text x="33.3986%" y="591.50"></text></g><g><title>do_syscall_64 (17 samples, 0.06%)</title><rect x="33.1519%" y="565" width="0.0561%" height="15" fill="rgb(230,222,46)" fg:x="10048" fg:w="17"/><text x="33.4019%" y="575.50"></text></g><g><title>__wake_up_common (4 samples, 0.01%)</title><rect x="33.2146%" y="405" width="0.0132%" height="15" fill="rgb(215,135,32)" fg:x="10067" fg:w="4"/><text x="33.4646%" y="415.50"></text></g><g><title>ep_autoremove_wake_function (4 samples, 0.01%)</title><rect x="33.2146%" y="389" width="0.0132%" height="15" fill="rgb(246,101,22)" fg:x="10067" fg:w="4"/><text x="33.4646%" y="399.50"></text></g><g><title>try_to_wake_up (4 samples, 0.01%)</title><rect x="33.2146%" y="373" width="0.0132%" height="15" fill="rgb(206,107,13)" fg:x="10067" fg:w="4"/><text x="33.4646%" y="383.50"></text></g><g><title>__wake_up_common (5 samples, 0.02%)</title><rect x="33.2146%" y="453" width="0.0165%" height="15" fill="rgb(250,100,44)" fg:x="10067" fg:w="5"/><text x="33.4646%" y="463.50"></text></g><g><title>ep_poll_callback (5 samples, 0.02%)</title><rect x="33.2146%" y="437" width="0.0165%" height="15" fill="rgb(231,147,38)" fg:x="10067" fg:w="5"/><text x="33.4646%" y="447.50"></text></g><g><title>__wake_up_common_lock (5 samples, 0.02%)</title><rect x="33.2146%" y="421" width="0.0165%" height="15" fill="rgb(229,8,40)" fg:x="10067" fg:w="5"/><text x="33.4646%" y="431.50"></text></g><g><title>ksys_write (8 samples, 0.03%)</title><rect x="33.2113%" y="501" width="0.0264%" height="15" fill="rgb(221,135,30)" fg:x="10066" fg:w="8"/><text x="33.4613%" y="511.50"></text></g><g><title>vfs_write (7 samples, 0.02%)</title><rect x="33.2146%" y="485" width="0.0231%" height="15" fill="rgb(249,193,18)" fg:x="10067" fg:w="7"/><text x="33.4646%" y="495.50"></text></g><g><title>eventfd_write (7 samples, 0.02%)</title><rect x="33.2146%" y="469" width="0.0231%" height="15" fill="rgb(209,133,39)" fg:x="10067" fg:w="7"/><text x="33.4646%" y="479.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Unparker::unpark (10 samples, 0.03%)</title><rect x="33.2080%" y="597" width="0.0330%" height="15" fill="rgb(232,100,14)" fg:x="10065" fg:w="10"/><text x="33.4580%" y="607.50"></text></g><g><title>mio::sys::unix::waker::eventfd::WakerInternal::wake (10 samples, 0.03%)</title><rect x="33.2080%" y="581" width="0.0330%" height="15" fill="rgb(224,185,1)" fg:x="10065" fg:w="10"/><text x="33.4580%" y="591.50"></text></g><g><title>&lt;&amp;std::process::ChildStdin as std::io::Write&gt;::write (10 samples, 0.03%)</title><rect x="33.2080%" y="565" width="0.0330%" height="15" fill="rgb(223,139,8)" fg:x="10065" fg:w="10"/><text x="33.4580%" y="575.50"></text></g><g><title>__write (9 samples, 0.03%)</title><rect x="33.2113%" y="549" width="0.0297%" height="15" fill="rgb(232,213,38)" fg:x="10066" fg:w="9"/><text x="33.4613%" y="559.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (9 samples, 0.03%)</title><rect x="33.2113%" y="533" width="0.0297%" height="15" fill="rgb(207,94,22)" fg:x="10066" fg:w="9"/><text x="33.4613%" y="543.50"></text></g><g><title>do_syscall_64 (9 samples, 0.03%)</title><rect x="33.2113%" y="517" width="0.0297%" height="15" fill="rgb(219,183,54)" fg:x="10066" fg:w="9"/><text x="33.4613%" y="527.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::schedule (35 samples, 0.12%)</title><rect x="33.1387%" y="629" width="0.1155%" height="15" fill="rgb(216,185,54)" fg:x="10044" fg:w="35"/><text x="33.3887%" y="639.50"></text></g><g><title>tokio::runtime::context::with_scheduler (35 samples, 0.12%)</title><rect x="33.1387%" y="613" width="0.1155%" height="15" fill="rgb(254,217,39)" fg:x="10044" fg:w="35"/><text x="33.3887%" y="623.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_local (4 samples, 0.01%)</title><rect x="33.2410%" y="597" width="0.0132%" height="15" fill="rgb(240,178,23)" fg:x="10075" fg:w="4"/><text x="33.4910%" y="607.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (47 samples, 0.16%)</title><rect x="33.1321%" y="645" width="0.1551%" height="15" fill="rgb(218,11,47)" fg:x="10042" fg:w="47"/><text x="33.3821%" y="655.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_notified_by_val (8 samples, 0.03%)</title><rect x="33.2607%" y="629" width="0.0264%" height="15" fill="rgb(218,51,51)" fg:x="10081" fg:w="8"/><text x="33.5107%" y="639.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::try_acquire (32 samples, 0.11%)</title><rect x="33.2871%" y="645" width="0.1056%" height="15" fill="rgb(238,126,27)" fg:x="10089" fg:w="32"/><text x="33.5371%" y="655.50"></text></g><g><title>tokio::sync::mpsc::list::Tx&lt;T&gt;::push (61 samples, 0.20%)</title><rect x="33.3927%" y="645" width="0.2013%" height="15" fill="rgb(249,202,22)" fg:x="10121" fg:w="61"/><text x="33.6427%" y="655.50"></text></g><g><title>&lt;netstack_smoltcp::stack::Stack as futures_sink::Sink&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;::poll_flush (237 samples, 0.78%)</title><rect x="32.9011%" y="661" width="0.7819%" height="15" fill="rgb(254,195,49)" fg:x="9972" fg:w="237"/><text x="33.1511%" y="671.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::wake (27 samples, 0.09%)</title><rect x="33.5940%" y="645" width="0.0891%" height="15" fill="rgb(208,123,14)" fg:x="10182" fg:w="27"/><text x="33.8440%" y="655.50"></text></g><g><title>&lt;netstack_smoltcp::stack::Stack as futures_sink::Sink&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;::poll_ready (18 samples, 0.06%)</title><rect x="33.6831%" y="661" width="0.0594%" height="15" fill="rgb(224,200,8)" fg:x="10209" fg:w="18"/><text x="33.9331%" y="671.50"></text></g><g><title>&lt;netstack_smoltcp::stack::Stack as futures_sink::Sink&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;::start_send (8 samples, 0.03%)</title><rect x="33.7425%" y="661" width="0.0264%" height="15" fill="rgb(217,61,36)" fg:x="10227" fg:w="8"/><text x="33.9925%" y="671.50"></text></g><g><title>&lt;tun::async::device::AsyncDevice as tokio::io::async_write::AsyncWrite&gt;::poll_flush (12 samples, 0.04%)</title><rect x="33.8843%" y="645" width="0.0396%" height="15" fill="rgb(206,35,45)" fg:x="10270" fg:w="12"/><text x="34.1343%" y="655.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_write_ready (10 samples, 0.03%)</title><rect x="33.8909%" y="629" width="0.0330%" height="15" fill="rgb(217,65,33)" fg:x="10272" fg:w="10"/><text x="34.1409%" y="639.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (10 samples, 0.03%)</title><rect x="33.8909%" y="613" width="0.0330%" height="15" fill="rgb(222,158,48)" fg:x="10272" fg:w="10"/><text x="34.1409%" y="623.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.02%)</title><rect x="34.0757%" y="581" width="0.0165%" height="15" fill="rgb(254,2,54)" fg:x="10328" fg:w="5"/><text x="34.3257%" y="591.50"></text></g><g><title>[libc.so.6] (14 samples, 0.05%)</title><rect x="34.0922%" y="581" width="0.0462%" height="15" fill="rgb(250,143,38)" fg:x="10333" fg:w="14"/><text x="34.3422%" y="591.50"></text></g><g><title>__x64_sys_writev (8 samples, 0.03%)</title><rect x="34.1780%" y="549" width="0.0264%" height="15" fill="rgb(248,25,0)" fg:x="10359" fg:w="8"/><text x="34.4280%" y="559.50"></text></g><g><title>__fdget_pos (9 samples, 0.03%)</title><rect x="34.2308%" y="533" width="0.0297%" height="15" fill="rgb(206,152,27)" fg:x="10375" fg:w="9"/><text x="34.4808%" y="543.50"></text></g><g><title>__fget_light (8 samples, 0.03%)</title><rect x="34.2341%" y="517" width="0.0264%" height="15" fill="rgb(240,77,30)" fg:x="10376" fg:w="8"/><text x="34.4841%" y="527.50"></text></g><g><title>__fget_files (5 samples, 0.02%)</title><rect x="34.2440%" y="501" width="0.0165%" height="15" fill="rgb(231,5,3)" fg:x="10379" fg:w="5"/><text x="34.4940%" y="511.50"></text></g><g><title>fput_many (4 samples, 0.01%)</title><rect x="34.2703%" y="533" width="0.0132%" height="15" fill="rgb(207,226,32)" fg:x="10387" fg:w="4"/><text x="34.5203%" y="543.50"></text></g><g><title>tun_get (14 samples, 0.05%)</title><rect x="34.3726%" y="469" width="0.0462%" height="15" fill="rgb(222,207,47)" fg:x="10418" fg:w="14"/><text x="34.6226%" y="479.50"></text></g><g><title>__local_bh_enable_ip (5 samples, 0.02%)</title><rect x="34.5244%" y="453" width="0.0165%" height="15" fill="rgb(229,115,45)" fg:x="10464" fg:w="5"/><text x="34.7744%" y="463.50"></text></g><g><title>do_softirq (4 samples, 0.01%)</title><rect x="34.5277%" y="437" width="0.0132%" height="15" fill="rgb(224,191,6)" fg:x="10465" fg:w="4"/><text x="34.7777%" y="447.50"></text></g><g><title>__softirqentry_text_start (4 samples, 0.01%)</title><rect x="34.5277%" y="421" width="0.0132%" height="15" fill="rgb(230,227,24)" fg:x="10465" fg:w="4"/><text x="34.7777%" y="431.50"></text></g><g><title>__skb_flow_dissect (21 samples, 0.07%)</title><rect x="34.5409%" y="453" width="0.0693%" height="15" fill="rgb(228,80,19)" fg:x="10469" fg:w="21"/><text x="34.7909%" y="463.50"></text></g><g><title>__netif_receive_skb_core.constprop.0 (21 samples, 0.07%)</title><rect x="34.6300%" y="421" width="0.0693%" height="15" fill="rgb(247,229,0)" fg:x="10496" fg:w="21"/><text x="34.8800%" y="431.50"></text></g><g><title>raw_local_deliver (4 samples, 0.01%)</title><rect x="34.7455%" y="389" width="0.0132%" height="15" fill="rgb(237,194,15)" fg:x="10531" fg:w="4"/><text x="34.9955%" y="399.50"></text></g><g><title>__raw_callee_save___pv_queued_spin_unlock (4 samples, 0.01%)</title><rect x="34.8378%" y="373" width="0.0132%" height="15" fill="rgb(219,203,20)" fg:x="10559" fg:w="4"/><text x="35.0878%" y="383.50"></text></g><g><title>__skb_checksum_complete (9 samples, 0.03%)</title><rect x="34.8510%" y="373" width="0.0297%" height="15" fill="rgb(234,128,8)" fg:x="10563" fg:w="9"/><text x="35.1010%" y="383.50"></text></g><g><title>__skb_checksum (9 samples, 0.03%)</title><rect x="34.8510%" y="357" width="0.0297%" height="15" fill="rgb(248,202,8)" fg:x="10563" fg:w="9"/><text x="35.1010%" y="367.50"></text></g><g><title>csum_partial (6 samples, 0.02%)</title><rect x="34.8609%" y="341" width="0.0198%" height="15" fill="rgb(206,104,37)" fg:x="10566" fg:w="6"/><text x="35.1109%" y="351.50"></text></g><g><title>do_csum (5 samples, 0.02%)</title><rect x="34.8642%" y="325" width="0.0165%" height="15" fill="rgb(223,8,27)" fg:x="10567" fg:w="5"/><text x="35.1142%" y="335.50"></text></g><g><title>sk_filter_trim_cap (5 samples, 0.02%)</title><rect x="34.8906%" y="373" width="0.0165%" height="15" fill="rgb(216,217,28)" fg:x="10575" fg:w="5"/><text x="35.1406%" y="383.50"></text></g><g><title>tcp_filter (5 samples, 0.02%)</title><rect x="34.9236%" y="373" width="0.0165%" height="15" fill="rgb(249,199,1)" fg:x="10585" fg:w="5"/><text x="35.1736%" y="383.50"></text></g><g><title>skb_release_data (16 samples, 0.05%)</title><rect x="34.9896%" y="325" width="0.0528%" height="15" fill="rgb(240,85,17)" fg:x="10605" fg:w="16"/><text x="35.2396%" y="335.50"></text></g><g><title>kfree (11 samples, 0.04%)</title><rect x="35.0061%" y="309" width="0.0363%" height="15" fill="rgb(206,108,45)" fg:x="10610" fg:w="11"/><text x="35.2561%" y="319.50"></text></g><g><title>__kfree_skb (19 samples, 0.06%)</title><rect x="34.9863%" y="341" width="0.0627%" height="15" fill="rgb(245,210,41)" fg:x="10604" fg:w="19"/><text x="35.2363%" y="351.50"></text></g><g><title>__qdisc_run (6 samples, 0.02%)</title><rect x="35.2635%" y="245" width="0.0198%" height="15" fill="rgb(206,13,37)" fg:x="10688" fg:w="6"/><text x="35.5135%" y="255.50"></text></g><g><title>__raw_callee_save___pv_queued_spin_unlock (10 samples, 0.03%)</title><rect x="35.4515%" y="197" width="0.0330%" height="15" fill="rgb(250,61,18)" fg:x="10745" fg:w="10"/><text x="35.7015%" y="207.50"></text></g><g><title>_raw_spin_lock (14 samples, 0.05%)</title><rect x="35.4845%" y="197" width="0.0462%" height="15" fill="rgb(235,172,48)" fg:x="10755" fg:w="14"/><text x="35.7345%" y="207.50"></text></g><g><title>sk_free (10 samples, 0.03%)</title><rect x="35.5340%" y="197" width="0.0330%" height="15" fill="rgb(249,201,17)" fg:x="10770" fg:w="10"/><text x="35.7840%" y="207.50"></text></g><g><title>select_task_rq_fair (4 samples, 0.01%)</title><rect x="35.7386%" y="69" width="0.0132%" height="15" fill="rgb(219,208,6)" fg:x="10832" fg:w="4"/><text x="35.9886%" y="79.50"></text></g><g><title>hv_send_ipi (5 samples, 0.02%)</title><rect x="35.7617%" y="53" width="0.0165%" height="15" fill="rgb(248,31,23)" fg:x="10839" fg:w="5"/><text x="36.0117%" y="63.50"></text></g><g><title>__send_ipi_one (4 samples, 0.01%)</title><rect x="35.7650%" y="37" width="0.0132%" height="15" fill="rgb(245,15,42)" fg:x="10840" fg:w="4"/><text x="36.0150%" y="47.50"></text></g><g><title>__wake_up_common (31 samples, 0.10%)</title><rect x="35.6924%" y="117" width="0.1023%" height="15" fill="rgb(222,217,39)" fg:x="10818" fg:w="31"/><text x="35.9424%" y="127.50"></text></g><g><title>ep_autoremove_wake_function (29 samples, 0.10%)</title><rect x="35.6990%" y="101" width="0.0957%" height="15" fill="rgb(210,219,27)" fg:x="10820" fg:w="29"/><text x="35.9490%" y="111.50"></text></g><g><title>try_to_wake_up (23 samples, 0.08%)</title><rect x="35.7188%" y="85" width="0.0759%" height="15" fill="rgb(252,166,36)" fg:x="10826" fg:w="23"/><text x="35.9688%" y="95.50"></text></g><g><title>ttwu_queue_wakelist (13 samples, 0.04%)</title><rect x="35.7518%" y="69" width="0.0429%" height="15" fill="rgb(245,132,34)" fg:x="10836" fg:w="13"/><text x="36.0018%" y="79.50"></text></g><g><title>__wake_up_common_lock (43 samples, 0.14%)</title><rect x="35.6891%" y="133" width="0.1419%" height="15" fill="rgb(236,54,3)" fg:x="10817" fg:w="43"/><text x="35.9391%" y="143.50"></text></g><g><title>_raw_spin_lock_irqsave (11 samples, 0.04%)</title><rect x="35.7946%" y="117" width="0.0363%" height="15" fill="rgb(241,173,43)" fg:x="10849" fg:w="11"/><text x="36.0446%" y="127.50"></text></g><g><title>__pv_queued_spin_lock_slowpath (10 samples, 0.03%)</title><rect x="35.7979%" y="101" width="0.0330%" height="15" fill="rgb(215,190,9)" fg:x="10850" fg:w="10"/><text x="36.0479%" y="111.50"></text></g><g><title>_raw_read_lock_irqsave (22 samples, 0.07%)</title><rect x="35.8309%" y="133" width="0.0726%" height="15" fill="rgb(242,101,16)" fg:x="10860" fg:w="22"/><text x="36.0809%" y="143.50"></text></g><g><title>__wake_up_common (99 samples, 0.33%)</title><rect x="35.6198%" y="165" width="0.3266%" height="15" fill="rgb(223,190,21)" fg:x="10796" fg:w="99"/><text x="35.8698%" y="175.50"></text></g><g><title>ep_poll_callback (93 samples, 0.31%)</title><rect x="35.6396%" y="149" width="0.3068%" height="15" fill="rgb(215,228,25)" fg:x="10802" fg:w="93"/><text x="35.8896%" y="159.50"></text></g><g><title>_raw_read_unlock_irqrestore (13 samples, 0.04%)</title><rect x="35.9035%" y="133" width="0.0429%" height="15" fill="rgb(225,36,22)" fg:x="10882" fg:w="13"/><text x="36.1535%" y="143.50"></text></g><g><title>_raw_spin_lock_irqsave (17 samples, 0.06%)</title><rect x="35.9464%" y="165" width="0.0561%" height="15" fill="rgb(251,106,46)" fg:x="10895" fg:w="17"/><text x="36.1964%" y="175.50"></text></g><g><title>__wake_up_common_lock (138 samples, 0.46%)</title><rect x="35.5967%" y="181" width="0.4553%" height="15" fill="rgb(208,90,1)" fg:x="10789" fg:w="138"/><text x="35.8467%" y="191.50"></text></g><g><title>_raw_spin_unlock_irqrestore (15 samples, 0.05%)</title><rect x="36.0025%" y="165" width="0.0495%" height="15" fill="rgb(243,10,4)" fg:x="10912" fg:w="15"/><text x="36.2525%" y="175.50"></text></g><g><title>__raw_callee_save___pv_queued_spin_unlock (15 samples, 0.05%)</title><rect x="36.0025%" y="149" width="0.0495%" height="15" fill="rgb(212,137,27)" fg:x="10912" fg:w="15"/><text x="36.2525%" y="159.50"></text></g><g><title>sock_def_readable (148 samples, 0.49%)</title><rect x="35.5670%" y="197" width="0.4883%" height="15" fill="rgb(231,220,49)" fg:x="10780" fg:w="148"/><text x="35.8170%" y="207.50"></text></g><g><title>dev_hard_start_xmit (252 samples, 0.83%)</title><rect x="35.3129%" y="229" width="0.8314%" height="15" fill="rgb(237,96,20)" fg:x="10703" fg:w="252"/><text x="35.5629%" y="239.50"></text></g><g><title>tun_net_xmit (241 samples, 0.80%)</title><rect x="35.3492%" y="213" width="0.7951%" height="15" fill="rgb(239,229,30)" fg:x="10714" fg:w="241"/><text x="35.5992%" y="223.50"></text></g><g><title>tcp_wfree (27 samples, 0.09%)</title><rect x="36.0553%" y="197" width="0.0891%" height="15" fill="rgb(219,65,33)" fg:x="10928" fg:w="27"/><text x="36.3053%" y="207.50"></text></g><g><title>ip_send_check (8 samples, 0.03%)</title><rect x="36.1906%" y="149" width="0.0264%" height="15" fill="rgb(243,134,7)" fg:x="10969" fg:w="8"/><text x="36.4406%" y="159.50"></text></g><g><title>csum_partial (6 samples, 0.02%)</title><rect x="36.2599%" y="133" width="0.0198%" height="15" fill="rgb(216,177,54)" fg:x="10990" fg:w="6"/><text x="36.5099%" y="143.50"></text></g><g><title>do_csum (6 samples, 0.02%)</title><rect x="36.2599%" y="117" width="0.0198%" height="15" fill="rgb(211,160,20)" fg:x="10990" fg:w="6"/><text x="36.5099%" y="127.50"></text></g><g><title>__build_skb_around (10 samples, 0.03%)</title><rect x="36.6492%" y="101" width="0.0330%" height="15" fill="rgb(239,85,39)" fg:x="11108" fg:w="10"/><text x="36.8992%" y="111.50"></text></g><g><title>__ksize (5 samples, 0.02%)</title><rect x="36.6657%" y="85" width="0.0165%" height="15" fill="rgb(232,125,22)" fg:x="11113" fg:w="5"/><text x="36.9157%" y="95.50"></text></g><g><title>___slab_alloc.constprop.0 (18 samples, 0.06%)</title><rect x="36.7680%" y="85" width="0.0594%" height="15" fill="rgb(244,57,34)" fg:x="11144" fg:w="18"/><text x="37.0180%" y="95.50"></text></g><g><title>__kmalloc_track_caller (47 samples, 0.16%)</title><rect x="36.6822%" y="101" width="0.1551%" height="15" fill="rgb(214,203,32)" fg:x="11118" fg:w="47"/><text x="36.9322%" y="111.50"></text></g><g><title>__ksize (13 samples, 0.04%)</title><rect x="36.8372%" y="101" width="0.0429%" height="15" fill="rgb(207,58,43)" fg:x="11165" fg:w="13"/><text x="37.0872%" y="111.50"></text></g><g><title>__alloc_skb (127 samples, 0.42%)</title><rect x="36.5502%" y="117" width="0.4190%" height="15" fill="rgb(215,193,15)" fg:x="11078" fg:w="127"/><text x="36.8002%" y="127.50"></text></g><g><title>kmem_cache_alloc (27 samples, 0.09%)</title><rect x="36.8801%" y="101" width="0.0891%" height="15" fill="rgb(232,15,44)" fg:x="11178" fg:w="27"/><text x="37.1301%" y="111.50"></text></g><g><title>___slab_alloc.constprop.0 (15 samples, 0.05%)</title><rect x="36.9197%" y="85" width="0.0495%" height="15" fill="rgb(212,3,48)" fg:x="11190" fg:w="15"/><text x="37.1697%" y="95.50"></text></g><g><title>allocate_slab (5 samples, 0.02%)</title><rect x="36.9527%" y="69" width="0.0165%" height="15" fill="rgb(218,128,7)" fg:x="11200" fg:w="5"/><text x="37.2027%" y="79.50"></text></g><g><title>__alloc_pages (4 samples, 0.01%)</title><rect x="36.9560%" y="53" width="0.0132%" height="15" fill="rgb(226,216,39)" fg:x="11201" fg:w="4"/><text x="37.2060%" y="63.50"></text></g><g><title>__copy_skb_header (6 samples, 0.02%)</title><rect x="36.9692%" y="117" width="0.0198%" height="15" fill="rgb(243,47,51)" fg:x="11205" fg:w="6"/><text x="37.2192%" y="127.50"></text></g><g><title>__skb_checksum (220 samples, 0.73%)</title><rect x="36.9890%" y="117" width="0.7259%" height="15" fill="rgb(241,183,40)" fg:x="11211" fg:w="220"/><text x="37.2390%" y="127.50"></text></g><g><title>csum_partial (204 samples, 0.67%)</title><rect x="37.0418%" y="101" width="0.6731%" height="15" fill="rgb(231,217,32)" fg:x="11227" fg:w="204"/><text x="37.2918%" y="111.50"></text></g><g><title>do_csum (203 samples, 0.67%)</title><rect x="37.0451%" y="85" width="0.6698%" height="15" fill="rgb(229,61,38)" fg:x="11228" fg:w="203"/><text x="37.2951%" y="95.50"></text></g><g><title>memcpy (4 samples, 0.01%)</title><rect x="37.7182%" y="117" width="0.0132%" height="15" fill="rgb(225,210,5)" fg:x="11432" fg:w="4"/><text x="37.9682%" y="127.50"></text></g><g><title>memcpy_erms (31 samples, 0.10%)</title><rect x="37.7314%" y="117" width="0.1023%" height="15" fill="rgb(231,79,45)" fg:x="11436" fg:w="31"/><text x="37.9814%" y="127.50"></text></g><g><title>skb_headers_offset_update (5 samples, 0.02%)</title><rect x="37.8336%" y="117" width="0.0165%" height="15" fill="rgb(224,100,7)" fg:x="11467" fg:w="5"/><text x="38.0836%" y="127.50"></text></g><g><title>inet_gso_segment (514 samples, 1.70%)</title><rect x="36.1675%" y="165" width="1.6959%" height="15" fill="rgb(241,198,18)" fg:x="10962" fg:w="514"/><text x="36.4175%" y="175.50"></text></g><g><title>tcp_gso_segment (498 samples, 1.64%)</title><rect x="36.2203%" y="149" width="1.6431%" height="15" fill="rgb(252,97,53)" fg:x="10978" fg:w="498"/><text x="36.4703%" y="159.50"></text></g><g><title>skb_segment (480 samples, 1.58%)</title><rect x="36.2797%" y="133" width="1.5837%" height="15" fill="rgb(220,88,7)" fg:x="10996" fg:w="480"/><text x="36.5297%" y="143.50"></text></g><g><title>skb_zerocopy_clone (4 samples, 0.01%)</title><rect x="37.8501%" y="117" width="0.0132%" height="15" fill="rgb(213,176,14)" fg:x="11472" fg:w="4"/><text x="38.1001%" y="127.50"></text></g><g><title>__skb_gso_segment (520 samples, 1.72%)</title><rect x="36.1510%" y="197" width="1.7157%" height="15" fill="rgb(246,73,7)" fg:x="10957" fg:w="520"/><text x="36.4010%" y="207.50"></text></g><g><title>skb_mac_gso_segment (519 samples, 1.71%)</title><rect x="36.1543%" y="181" width="1.7124%" height="15" fill="rgb(245,64,36)" fg:x="10958" fg:w="519"/><text x="36.4043%" y="191.50"></text></g><g><title>__dev_queue_xmit (800 samples, 2.64%)</title><rect x="35.2437%" y="261" width="2.6395%" height="15" fill="rgb(245,80,10)" fg:x="10682" fg:w="800"/><text x="35.4937%" y="271.50">__..</text></g><g><title>sch_direct_xmit (783 samples, 2.58%)</title><rect x="35.2997%" y="245" width="2.5834%" height="15" fill="rgb(232,107,50)" fg:x="10699" fg:w="783"/><text x="35.5497%" y="255.50">sc..</text></g><g><title>validate_xmit_skb_list (527 samples, 1.74%)</title><rect x="36.1444%" y="229" width="1.7388%" height="15" fill="rgb(253,3,0)" fg:x="10955" fg:w="527"/><text x="36.3944%" y="239.50"></text></g><g><title>validate_xmit_skb.constprop.0 (527 samples, 1.74%)</title><rect x="36.1444%" y="213" width="1.7388%" height="15" fill="rgb(212,99,53)" fg:x="10955" fg:w="527"/><text x="36.3944%" y="223.50"></text></g><g><title>ip_finish_output2 (809 samples, 2.67%)</title><rect x="35.2272%" y="277" width="2.6692%" height="15" fill="rgb(249,111,54)" fg:x="10677" fg:w="809"/><text x="35.4772%" y="287.50">ip..</text></g><g><title>ip_local_out (4 samples, 0.01%)</title><rect x="37.8963%" y="277" width="0.0132%" height="15" fill="rgb(249,55,30)" fg:x="11486" fg:w="4"/><text x="38.1463%" y="287.50"></text></g><g><title>__ip_local_out (4 samples, 0.01%)</title><rect x="37.8963%" y="261" width="0.0132%" height="15" fill="rgb(237,47,42)" fg:x="11486" fg:w="4"/><text x="38.1463%" y="271.50"></text></g><g><title>__ip_queue_xmit (829 samples, 2.74%)</title><rect x="35.1876%" y="293" width="2.7352%" height="15" fill="rgb(211,20,18)" fg:x="10665" fg:w="829"/><text x="35.4376%" y="303.50">__..</text></g><g><title>skb_clone (7 samples, 0.02%)</title><rect x="37.9260%" y="293" width="0.0231%" height="15" fill="rgb(231,203,46)" fg:x="11495" fg:w="7"/><text x="38.1760%" y="303.50"></text></g><g><title>__tcp_transmit_skb (857 samples, 2.83%)</title><rect x="35.1447%" y="309" width="2.8275%" height="15" fill="rgb(237,142,3)" fg:x="10652" fg:w="857"/><text x="35.3947%" y="319.50">__..</text></g><g><title>tcp_update_skb_after_send (5 samples, 0.02%)</title><rect x="37.9557%" y="293" width="0.0165%" height="15" fill="rgb(241,107,1)" fg:x="11504" fg:w="5"/><text x="38.2057%" y="303.50"></text></g><g><title>ktime_get (5 samples, 0.02%)</title><rect x="37.9722%" y="309" width="0.0165%" height="15" fill="rgb(229,83,13)" fg:x="11509" fg:w="5"/><text x="38.2222%" y="319.50"></text></g><g><title>sk_stream_alloc_skb (4 samples, 0.01%)</title><rect x="37.9920%" y="309" width="0.0132%" height="15" fill="rgb(241,91,40)" fg:x="11515" fg:w="4"/><text x="38.2420%" y="319.50"></text></g><g><title>rb_insert_color (5 samples, 0.02%)</title><rect x="38.0184%" y="293" width="0.0165%" height="15" fill="rgb(225,3,45)" fg:x="11523" fg:w="5"/><text x="38.2684%" y="303.50"></text></g><g><title>sk_reset_timer (10 samples, 0.03%)</title><rect x="38.0349%" y="293" width="0.0330%" height="15" fill="rgb(244,223,14)" fg:x="11528" fg:w="10"/><text x="38.2849%" y="303.50"></text></g><g><title>__mod_timer (10 samples, 0.03%)</title><rect x="38.0349%" y="277" width="0.0330%" height="15" fill="rgb(224,124,37)" fg:x="11528" fg:w="10"/><text x="38.2849%" y="287.50"></text></g><g><title>tcp_event_new_data_sent (22 samples, 0.07%)</title><rect x="38.0151%" y="309" width="0.0726%" height="15" fill="rgb(251,171,30)" fg:x="11522" fg:w="22"/><text x="38.2651%" y="319.50"></text></g><g><title>__tcp_push_pending_frames (930 samples, 3.07%)</title><rect x="35.0490%" y="341" width="3.0684%" height="15" fill="rgb(236,46,54)" fg:x="10623" fg:w="930"/><text x="35.2990%" y="351.50">__t..</text></g><g><title>tcp_write_xmit (925 samples, 3.05%)</title><rect x="35.0655%" y="325" width="3.0519%" height="15" fill="rgb(245,213,5)" fg:x="10628" fg:w="925"/><text x="35.3155%" y="335.50">tcp..</text></g><g><title>tcp_schedule_loss_probe.part.0 (9 samples, 0.03%)</title><rect x="38.0877%" y="309" width="0.0297%" height="15" fill="rgb(230,144,27)" fg:x="11544" fg:w="9"/><text x="38.3377%" y="319.50"></text></g><g><title>kmem_cache_free.part.0 (4 samples, 0.01%)</title><rect x="38.1174%" y="341" width="0.0132%" height="15" fill="rgb(220,86,6)" fg:x="11553" fg:w="4"/><text x="38.3674%" y="351.50"></text></g><g><title>free_unref_page (7 samples, 0.02%)</title><rect x="38.3022%" y="293" width="0.0231%" height="15" fill="rgb(240,20,13)" fg:x="11609" fg:w="7"/><text x="38.5522%" y="303.50"></text></g><g><title>skb_release_data (22 samples, 0.07%)</title><rect x="38.2725%" y="309" width="0.0726%" height="15" fill="rgb(217,89,34)" fg:x="11600" fg:w="22"/><text x="38.5225%" y="319.50"></text></g><g><title>kfree (6 samples, 0.02%)</title><rect x="38.3252%" y="293" width="0.0198%" height="15" fill="rgb(229,13,5)" fg:x="11616" fg:w="6"/><text x="38.5752%" y="303.50"></text></g><g><title>__kfree_skb (23 samples, 0.08%)</title><rect x="38.2725%" y="325" width="0.0759%" height="15" fill="rgb(244,67,35)" fg:x="11600" fg:w="23"/><text x="38.5225%" y="335.50"></text></g><g><title>cubictcp_acked (5 samples, 0.02%)</title><rect x="38.3516%" y="325" width="0.0165%" height="15" fill="rgb(221,40,2)" fg:x="11624" fg:w="5"/><text x="38.6016%" y="335.50"></text></g><g><title>kmem_cache_free.part.0 (4 samples, 0.01%)</title><rect x="38.3714%" y="325" width="0.0132%" height="15" fill="rgb(237,157,21)" fg:x="11630" fg:w="4"/><text x="38.6214%" y="335.50"></text></g><g><title>rb_first (4 samples, 0.01%)</title><rect x="38.3879%" y="325" width="0.0132%" height="15" fill="rgb(222,94,11)" fg:x="11635" fg:w="4"/><text x="38.6379%" y="335.50"></text></g><g><title>tcp_ack_update_rtt (15 samples, 0.05%)</title><rect x="38.4110%" y="325" width="0.0495%" height="15" fill="rgb(249,113,6)" fg:x="11642" fg:w="15"/><text x="38.6610%" y="335.50"></text></g><g><title>tcp_newly_delivered (8 samples, 0.03%)</title><rect x="38.4605%" y="325" width="0.0264%" height="15" fill="rgb(238,137,36)" fg:x="11657" fg:w="8"/><text x="38.7105%" y="335.50"></text></g><g><title>tcp_schedule_loss_probe.part.0 (5 samples, 0.02%)</title><rect x="38.5133%" y="325" width="0.0165%" height="15" fill="rgb(210,102,26)" fg:x="11673" fg:w="5"/><text x="38.7633%" y="335.50"></text></g><g><title>__put_page (4 samples, 0.01%)</title><rect x="38.5661%" y="293" width="0.0132%" height="15" fill="rgb(218,30,30)" fg:x="11689" fg:w="4"/><text x="38.8161%" y="303.50"></text></g><g><title>tcp_trim_head (26 samples, 0.09%)</title><rect x="38.5298%" y="325" width="0.0858%" height="15" fill="rgb(214,67,26)" fg:x="11678" fg:w="26"/><text x="38.7798%" y="335.50"></text></g><g><title>__pskb_trim_head (22 samples, 0.07%)</title><rect x="38.5430%" y="309" width="0.0726%" height="15" fill="rgb(251,9,53)" fg:x="11682" fg:w="22"/><text x="38.7930%" y="319.50"></text></g><g><title>free_unref_page (9 samples, 0.03%)</title><rect x="38.5859%" y="293" width="0.0297%" height="15" fill="rgb(228,204,25)" fg:x="11695" fg:w="9"/><text x="38.8359%" y="303.50"></text></g><g><title>tcp_ack (152 samples, 0.50%)</title><rect x="38.1306%" y="341" width="0.5015%" height="15" fill="rgb(207,153,8)" fg:x="11557" fg:w="152"/><text x="38.3806%" y="351.50"></text></g><g><title>tcp_update_pacing_rate (5 samples, 0.02%)</title><rect x="38.6156%" y="325" width="0.0165%" height="15" fill="rgb(242,9,16)" fg:x="11704" fg:w="5"/><text x="38.8656%" y="335.50"></text></g><g><title>sk_stream_write_space (6 samples, 0.02%)</title><rect x="38.6453%" y="325" width="0.0198%" height="15" fill="rgb(217,211,10)" fg:x="11713" fg:w="6"/><text x="38.8953%" y="335.50"></text></g><g><title>__wake_up_common_lock (6 samples, 0.02%)</title><rect x="38.6453%" y="309" width="0.0198%" height="15" fill="rgb(219,228,52)" fg:x="11713" fg:w="6"/><text x="38.8953%" y="319.50"></text></g><g><title>__wake_up_common (6 samples, 0.02%)</title><rect x="38.6453%" y="293" width="0.0198%" height="15" fill="rgb(231,92,29)" fg:x="11713" fg:w="6"/><text x="38.8953%" y="303.50"></text></g><g><title>pollwake (5 samples, 0.02%)</title><rect x="38.6486%" y="277" width="0.0165%" height="15" fill="rgb(232,8,23)" fg:x="11714" fg:w="5"/><text x="38.8986%" y="287.50"></text></g><g><title>try_to_wake_up (4 samples, 0.01%)</title><rect x="38.6519%" y="261" width="0.0132%" height="15" fill="rgb(216,211,34)" fg:x="11715" fg:w="4"/><text x="38.9019%" y="271.50"></text></g><g><title>tcp_check_space (11 samples, 0.04%)</title><rect x="38.6321%" y="341" width="0.0363%" height="15" fill="rgb(236,151,0)" fg:x="11709" fg:w="11"/><text x="38.8821%" y="351.50"></text></g><g><title>tcp_current_mss (6 samples, 0.02%)</title><rect x="38.6684%" y="341" width="0.0198%" height="15" fill="rgb(209,168,3)" fg:x="11720" fg:w="6"/><text x="38.9184%" y="351.50"></text></g><g><title>ipv4_mtu (4 samples, 0.01%)</title><rect x="38.6750%" y="325" width="0.0132%" height="15" fill="rgb(208,129,28)" fg:x="11722" fg:w="4"/><text x="38.9250%" y="335.50"></text></g><g><title>read_hv_clock_tsc (14 samples, 0.05%)</title><rect x="38.7179%" y="309" width="0.0462%" height="15" fill="rgb(229,78,22)" fg:x="11735" fg:w="14"/><text x="38.9679%" y="319.50"></text></g><g><title>tcp_mstamp_refresh (21 samples, 0.07%)</title><rect x="38.6981%" y="341" width="0.0693%" height="15" fill="rgb(228,187,13)" fg:x="11729" fg:w="21"/><text x="38.9481%" y="351.50"></text></g><g><title>ktime_get (20 samples, 0.07%)</title><rect x="38.7014%" y="325" width="0.0660%" height="15" fill="rgb(240,119,24)" fg:x="11730" fg:w="20"/><text x="38.9514%" y="335.50"></text></g><g><title>tcp_urg (4 samples, 0.01%)</title><rect x="38.7674%" y="341" width="0.0132%" height="15" fill="rgb(209,194,42)" fg:x="11750" fg:w="4"/><text x="39.0174%" y="351.50"></text></g><g><title>tcp_v4_do_rcv (1,172 samples, 3.87%)</title><rect x="34.9401%" y="373" width="3.8668%" height="15" fill="rgb(247,200,46)" fg:x="10590" fg:w="1172"/><text x="35.1901%" y="383.50">tcp_..</text></g><g><title>tcp_rcv_established (1,167 samples, 3.85%)</title><rect x="34.9566%" y="357" width="3.8503%" height="15" fill="rgb(218,76,16)" fg:x="10595" fg:w="1167"/><text x="35.2066%" y="367.50">tcp_..</text></g><g><title>tcp_validate_incoming (8 samples, 0.03%)</title><rect x="38.7806%" y="341" width="0.0264%" height="15" fill="rgb(225,21,48)" fg:x="11754" fg:w="8"/><text x="39.0306%" y="351.50"></text></g><g><title>ip_local_deliver_finish (1,245 samples, 4.11%)</title><rect x="34.7026%" y="421" width="4.1077%" height="15" fill="rgb(239,223,50)" fg:x="10518" fg:w="1245"/><text x="34.9526%" y="431.50">ip_l..</text></g><g><title>ip_protocol_deliver_rcu (1,242 samples, 4.10%)</title><rect x="34.7125%" y="405" width="4.0978%" height="15" fill="rgb(244,45,21)" fg:x="10521" fg:w="1242"/><text x="34.9625%" y="415.50">ip_p..</text></g><g><title>tcp_v4_rcv (1,228 samples, 4.05%)</title><rect x="34.7587%" y="389" width="4.0516%" height="15" fill="rgb(232,33,43)" fg:x="10535" fg:w="1228"/><text x="35.0087%" y="399.50">tcp_..</text></g><g><title>ip_rcv_core (31 samples, 0.10%)</title><rect x="38.8235%" y="405" width="0.1023%" height="15" fill="rgb(209,8,3)" fg:x="11767" fg:w="31"/><text x="39.0735%" y="415.50"></text></g><g><title>sock_wfree (17 samples, 0.06%)</title><rect x="38.8696%" y="389" width="0.0561%" height="15" fill="rgb(214,25,53)" fg:x="11781" fg:w="17"/><text x="39.1196%" y="399.50"></text></g><g><title>tun_sock_write_space (8 samples, 0.03%)</title><rect x="38.8993%" y="373" width="0.0264%" height="15" fill="rgb(254,186,54)" fg:x="11790" fg:w="8"/><text x="39.1493%" y="383.50"></text></g><g><title>__inet_lookup_established (23 samples, 0.08%)</title><rect x="38.9851%" y="373" width="0.0759%" height="15" fill="rgb(208,174,49)" fg:x="11816" fg:w="23"/><text x="39.2351%" y="383.50"></text></g><g><title>__netif_receive_skb_one_core (1,355 samples, 4.47%)</title><rect x="34.6201%" y="437" width="4.4706%" height="15" fill="rgb(233,191,51)" fg:x="10493" fg:w="1355"/><text x="34.8701%" y="447.50">__net..</text></g><g><title>ip_rcv (85 samples, 0.28%)</title><rect x="38.8103%" y="421" width="0.2804%" height="15" fill="rgb(222,134,10)" fg:x="11763" fg:w="85"/><text x="39.0603%" y="431.50"></text></g><g><title>ip_rcv_finish_core.constprop.0 (50 samples, 0.16%)</title><rect x="38.9257%" y="405" width="0.1650%" height="15" fill="rgb(230,226,20)" fg:x="11798" fg:w="50"/><text x="39.1757%" y="415.50"></text></g><g><title>tcp_v4_early_demux (36 samples, 0.12%)</title><rect x="38.9719%" y="389" width="0.1188%" height="15" fill="rgb(251,111,25)" fg:x="11812" fg:w="36"/><text x="39.2219%" y="399.50"></text></g><g><title>ipv4_dst_check (9 samples, 0.03%)</title><rect x="39.0610%" y="373" width="0.0297%" height="15" fill="rgb(224,40,46)" fg:x="11839" fg:w="9"/><text x="39.3110%" y="383.50"></text></g><g><title>netif_receive_skb (1,360 samples, 4.49%)</title><rect x="34.6102%" y="453" width="4.4871%" height="15" fill="rgb(236,108,47)" fg:x="10490" fg:w="1360"/><text x="34.8602%" y="463.50">netif..</text></g><g><title>__check_heap_object (5 samples, 0.02%)</title><rect x="39.1072%" y="421" width="0.0165%" height="15" fill="rgb(234,93,0)" fg:x="11853" fg:w="5"/><text x="39.3572%" y="431.50"></text></g><g><title>__check_object_size (15 samples, 0.05%)</title><rect x="39.1039%" y="437" width="0.0495%" height="15" fill="rgb(224,213,32)" fg:x="11852" fg:w="15"/><text x="39.3539%" y="447.50"></text></g><g><title>__virt_addr_valid (9 samples, 0.03%)</title><rect x="39.1237%" y="421" width="0.0297%" height="15" fill="rgb(251,11,48)" fg:x="11858" fg:w="9"/><text x="39.3737%" y="431.50"></text></g><g><title>skb_copy_datagram_from_iter (28 samples, 0.09%)</title><rect x="39.1006%" y="453" width="0.0924%" height="15" fill="rgb(236,173,5)" fg:x="11851" fg:w="28"/><text x="39.3506%" y="463.50"></text></g><g><title>_copy_from_iter (12 samples, 0.04%)</title><rect x="39.1534%" y="437" width="0.0396%" height="15" fill="rgb(230,95,12)" fg:x="11867" fg:w="12"/><text x="39.4034%" y="447.50"></text></g><g><title>copy_user_generic_unrolled (5 samples, 0.02%)</title><rect x="39.1765%" y="421" width="0.0165%" height="15" fill="rgb(232,209,1)" fg:x="11874" fg:w="5"/><text x="39.4265%" y="431.50"></text></g><g><title>__kmalloc_track_caller (12 samples, 0.04%)</title><rect x="39.2656%" y="405" width="0.0396%" height="15" fill="rgb(232,6,1)" fg:x="11901" fg:w="12"/><text x="39.5156%" y="415.50"></text></g><g><title>__ksize (6 samples, 0.02%)</title><rect x="39.3052%" y="405" width="0.0198%" height="15" fill="rgb(210,224,50)" fg:x="11913" fg:w="6"/><text x="39.5552%" y="415.50"></text></g><g><title>kmem_cache_alloc (12 samples, 0.04%)</title><rect x="39.3250%" y="405" width="0.0396%" height="15" fill="rgb(228,127,35)" fg:x="11919" fg:w="12"/><text x="39.5750%" y="415.50"></text></g><g><title>alloc_skb_with_frags (47 samples, 0.16%)</title><rect x="39.2128%" y="437" width="0.1551%" height="15" fill="rgb(245,102,45)" fg:x="11885" fg:w="47"/><text x="39.4628%" y="447.50"></text></g><g><title>__alloc_skb (43 samples, 0.14%)</title><rect x="39.2260%" y="421" width="0.1419%" height="15" fill="rgb(214,1,49)" fg:x="11889" fg:w="43"/><text x="39.4760%" y="431.50"></text></g><g><title>sock_alloc_send_pskb (59 samples, 0.19%)</title><rect x="39.1930%" y="453" width="0.1947%" height="15" fill="rgb(226,163,40)" fg:x="11879" fg:w="59"/><text x="39.4430%" y="463.50"></text></g><g><title>skb_set_owner_w (6 samples, 0.02%)</title><rect x="39.3678%" y="437" width="0.0198%" height="15" fill="rgb(239,212,28)" fg:x="11932" fg:w="6"/><text x="39.6178%" y="447.50"></text></g><g><title>do_iter_readv_writev (1,533 samples, 5.06%)</title><rect x="34.3363%" y="501" width="5.0579%" height="15" fill="rgb(220,20,13)" fg:x="10407" fg:w="1533"/><text x="34.5863%" y="511.50">do_ite..</text></g><g><title>tun_chr_write_iter (1,525 samples, 5.03%)</title><rect x="34.3627%" y="485" width="5.0315%" height="15" fill="rgb(210,164,35)" fg:x="10415" fg:w="1525"/><text x="34.6127%" y="495.50">tun_ch..</text></g><g><title>tun_get_user (1,508 samples, 4.98%)</title><rect x="34.4188%" y="469" width="4.9754%" height="15" fill="rgb(248,109,41)" fg:x="10432" fg:w="1508"/><text x="34.6688%" y="479.50">tun_ge..</text></g><g><title>do_iter_write (1,544 samples, 5.09%)</title><rect x="34.3099%" y="517" width="5.0942%" height="15" fill="rgb(238,23,50)" fg:x="10399" fg:w="1544"/><text x="34.5599%" y="527.50">do_ite..</text></g><g><title>__check_object_size (6 samples, 0.02%)</title><rect x="39.4404%" y="469" width="0.0198%" height="15" fill="rgb(211,48,49)" fg:x="11954" fg:w="6"/><text x="39.6904%" y="479.50"></text></g><g><title>import_iovec (21 samples, 0.07%)</title><rect x="39.4041%" y="517" width="0.0693%" height="15" fill="rgb(223,36,21)" fg:x="11943" fg:w="21"/><text x="39.6541%" y="527.50"></text></g><g><title>__import_iovec (21 samples, 0.07%)</title><rect x="39.4041%" y="501" width="0.0693%" height="15" fill="rgb(207,123,46)" fg:x="11943" fg:w="21"/><text x="39.6541%" y="511.50"></text></g><g><title>iovec_from_user.part.0 (10 samples, 0.03%)</title><rect x="39.4404%" y="485" width="0.0330%" height="15" fill="rgb(240,218,32)" fg:x="11954" fg:w="10"/><text x="39.6904%" y="495.50"></text></g><g><title>_copy_from_user (4 samples, 0.01%)</title><rect x="39.4602%" y="469" width="0.0132%" height="15" fill="rgb(252,5,43)" fg:x="11960" fg:w="4"/><text x="39.7102%" y="479.50"></text></g><g><title>do_writev (1,600 samples, 5.28%)</title><rect x="34.2044%" y="549" width="5.2790%" height="15" fill="rgb(252,84,19)" fg:x="10367" fg:w="1600"/><text x="34.4544%" y="559.50">do_wri..</text></g><g><title>vfs_writev (1,576 samples, 5.20%)</title><rect x="34.2835%" y="533" width="5.1998%" height="15" fill="rgb(243,152,39)" fg:x="10391" fg:w="1576"/><text x="34.5335%" y="543.50">vfs_wr..</text></g><g><title>entry_SYSCALL_64_after_hwframe (1,625 samples, 5.36%)</title><rect x="34.1384%" y="581" width="5.3614%" height="15" fill="rgb(234,160,15)" fg:x="10347" fg:w="1625"/><text x="34.3884%" y="591.50">entry_S..</text></g><g><title>do_syscall_64 (1,614 samples, 5.33%)</title><rect x="34.1747%" y="565" width="5.3252%" height="15" fill="rgb(237,34,20)" fg:x="10358" fg:w="1614"/><text x="34.4247%" y="575.50">do_sysc..</text></g><g><title>syscall_exit_to_user_mode (5 samples, 0.02%)</title><rect x="39.4833%" y="549" width="0.0165%" height="15" fill="rgb(229,97,13)" fg:x="11967" fg:w="5"/><text x="39.7333%" y="559.50"></text></g><g><title>tokio::io::async_fd::AsyncFdReadyMutGuard&lt;Inner&gt;::try_io (1,667 samples, 5.50%)</title><rect x="34.0229%" y="613" width="5.5000%" height="15" fill="rgb(234,71,50)" fg:x="10312" fg:w="1667"/><text x="34.2729%" y="623.50">tokio::..</text></g><g><title>writev (1,660 samples, 5.48%)</title><rect x="34.0460%" y="597" width="5.4769%" height="15" fill="rgb(253,155,4)" fg:x="10319" fg:w="1660"/><text x="34.2960%" y="607.50">writev</text></g><g><title>syscall_return_via_sysret (7 samples, 0.02%)</title><rect x="39.4998%" y="581" width="0.0231%" height="15" fill="rgb(222,185,37)" fg:x="11972" fg:w="7"/><text x="39.7498%" y="591.50"></text></g><g><title>&lt;tun::async::device::AsyncDevice as tokio::io::async_write::AsyncWrite&gt;::poll_write_vectored (1,688 samples, 5.57%)</title><rect x="33.9899%" y="629" width="5.5693%" height="15" fill="rgb(251,177,13)" fg:x="10302" fg:w="1688"/><text x="34.2399%" y="639.50">&lt;tun::a..</text></g><g><title>tokio::runtime::io::registration::Registration::poll_write_ready (11 samples, 0.04%)</title><rect x="39.5229%" y="613" width="0.0363%" height="15" fill="rgb(250,179,40)" fg:x="11979" fg:w="11"/><text x="39.7729%" y="623.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (8 samples, 0.03%)</title><rect x="39.5328%" y="597" width="0.0264%" height="15" fill="rgb(242,44,2)" fg:x="11982" fg:w="8"/><text x="39.7828%" y="607.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness (4 samples, 0.01%)</title><rect x="39.5460%" y="581" width="0.0132%" height="15" fill="rgb(216,177,13)" fg:x="11986" fg:w="4"/><text x="39.7960%" y="591.50"></text></g><g><title>tokio_util::util::poll_buf::poll_write_buf (1,713 samples, 5.65%)</title><rect x="33.9239%" y="645" width="5.6518%" height="15" fill="rgb(216,106,43)" fg:x="10282" fg:w="1713"/><text x="34.1739%" y="655.50">tokio_u..</text></g><g><title>bytes::bytes_mut::BytesMut::advance_unchecked (5 samples, 0.02%)</title><rect x="39.5592%" y="629" width="0.0165%" height="15" fill="rgb(216,183,2)" fg:x="11990" fg:w="5"/><text x="39.8092%" y="639.50"></text></g><g><title>tracing::__macro_support::__is_enabled (7 samples, 0.02%)</title><rect x="39.5757%" y="645" width="0.0231%" height="15" fill="rgb(249,75,3)" fg:x="11995" fg:w="7"/><text x="39.8257%" y="655.50"></text></g><g><title>[libc.so.6] (25 samples, 0.08%)</title><rect x="40.1069%" y="533" width="0.0825%" height="15" fill="rgb(219,67,39)" fg:x="12156" fg:w="25"/><text x="40.3569%" y="543.50"></text></g><g><title>entry_SYSCALL_64 (27 samples, 0.09%)</title><rect x="40.1894%" y="533" width="0.0891%" height="15" fill="rgb(253,228,2)" fg:x="12181" fg:w="27"/><text x="40.4394%" y="543.50"></text></g><g><title>__x64_sys_write (9 samples, 0.03%)</title><rect x="40.2917%" y="501" width="0.0297%" height="15" fill="rgb(235,138,27)" fg:x="12212" fg:w="9"/><text x="40.5417%" y="511.50"></text></g><g><title>__fget_light (35 samples, 0.12%)</title><rect x="40.3741%" y="469" width="0.1155%" height="15" fill="rgb(236,97,51)" fg:x="12237" fg:w="35"/><text x="40.6241%" y="479.50"></text></g><g><title>__fget_files (21 samples, 0.07%)</title><rect x="40.4203%" y="453" width="0.0693%" height="15" fill="rgb(240,80,30)" fg:x="12251" fg:w="21"/><text x="40.6703%" y="463.50"></text></g><g><title>__fdget_pos (51 samples, 0.17%)</title><rect x="40.3544%" y="485" width="0.1683%" height="15" fill="rgb(230,178,19)" fg:x="12231" fg:w="51"/><text x="40.6044%" y="495.50"></text></g><g><title>mutex_lock (10 samples, 0.03%)</title><rect x="40.4896%" y="469" width="0.0330%" height="15" fill="rgb(210,190,27)" fg:x="12272" fg:w="10"/><text x="40.7396%" y="479.50"></text></g><g><title>fput_many (10 samples, 0.03%)</title><rect x="40.5259%" y="485" width="0.0330%" height="15" fill="rgb(222,107,31)" fg:x="12283" fg:w="10"/><text x="40.7759%" y="495.50"></text></g><g><title>mutex_unlock (6 samples, 0.02%)</title><rect x="40.5589%" y="485" width="0.0198%" height="15" fill="rgb(216,127,34)" fg:x="12293" fg:w="6"/><text x="40.8089%" y="495.50"></text></g><g><title>__fsnotify_parent (9 samples, 0.03%)</title><rect x="40.6348%" y="469" width="0.0297%" height="15" fill="rgb(234,116,52)" fg:x="12316" fg:w="9"/><text x="40.8848%" y="479.50"></text></g><g><title>down_write (7 samples, 0.02%)</title><rect x="40.7074%" y="437" width="0.0231%" height="15" fill="rgb(222,124,15)" fg:x="12338" fg:w="7"/><text x="40.9574%" y="447.50"></text></g><g><title>ext4_generic_write_checks (17 samples, 0.06%)</title><rect x="40.7305%" y="437" width="0.0561%" height="15" fill="rgb(231,179,28)" fg:x="12345" fg:w="17"/><text x="40.9805%" y="447.50"></text></g><g><title>generic_write_checks (16 samples, 0.05%)</title><rect x="40.7338%" y="421" width="0.0528%" height="15" fill="rgb(226,93,45)" fg:x="12346" fg:w="16"/><text x="40.9838%" y="431.50"></text></g><g><title>generic_write_check_limits (8 samples, 0.03%)</title><rect x="40.7602%" y="405" width="0.0264%" height="15" fill="rgb(215,8,51)" fg:x="12354" fg:w="8"/><text x="41.0102%" y="415.50"></text></g><g><title>file_modified (10 samples, 0.03%)</title><rect x="40.7866%" y="437" width="0.0330%" height="15" fill="rgb(223,106,5)" fg:x="12362" fg:w="10"/><text x="41.0366%" y="447.50"></text></g><g><title>file_remove_privs (7 samples, 0.02%)</title><rect x="40.7965%" y="421" width="0.0231%" height="15" fill="rgb(250,191,5)" fg:x="12365" fg:w="7"/><text x="41.0465%" y="431.50"></text></g><g><title>current_time (8 samples, 0.03%)</title><rect x="40.8295%" y="421" width="0.0264%" height="15" fill="rgb(242,132,44)" fg:x="12375" fg:w="8"/><text x="41.0795%" y="431.50"></text></g><g><title>file_update_time (12 samples, 0.04%)</title><rect x="40.8196%" y="437" width="0.0396%" height="15" fill="rgb(251,152,29)" fg:x="12372" fg:w="12"/><text x="41.0696%" y="447.50"></text></g><g><title>__cond_resched (5 samples, 0.02%)</title><rect x="40.9119%" y="421" width="0.0165%" height="15" fill="rgb(218,179,5)" fg:x="12400" fg:w="5"/><text x="41.1619%" y="431.50"></text></g><g><title>balance_dirty_pages_ratelimited (9 samples, 0.03%)</title><rect x="40.9284%" y="421" width="0.0297%" height="15" fill="rgb(227,67,19)" fg:x="12405" fg:w="9"/><text x="41.1784%" y="431.50"></text></g><g><title>copy_page_from_iter_atomic (41 samples, 0.14%)</title><rect x="40.9581%" y="421" width="0.1353%" height="15" fill="rgb(233,119,31)" fg:x="12414" fg:w="41"/><text x="41.2081%" y="431.50"></text></g><g><title>copy_user_enhanced_fast_string (15 samples, 0.05%)</title><rect x="41.0439%" y="405" width="0.0495%" height="15" fill="rgb(241,120,22)" fg:x="12440" fg:w="15"/><text x="41.2939%" y="415.50"></text></g><g><title>clean_bdev_aliases (4 samples, 0.01%)</title><rect x="41.1990%" y="389" width="0.0132%" height="15" fill="rgb(224,102,30)" fg:x="12487" fg:w="4"/><text x="41.4490%" y="399.50"></text></g><g><title>create_page_buffers (10 samples, 0.03%)</title><rect x="41.2122%" y="389" width="0.0330%" height="15" fill="rgb(210,164,37)" fg:x="12491" fg:w="10"/><text x="41.4622%" y="399.50"></text></g><g><title>create_empty_buffers (5 samples, 0.02%)</title><rect x="41.2287%" y="373" width="0.0165%" height="15" fill="rgb(226,191,16)" fg:x="12496" fg:w="5"/><text x="41.4787%" y="383.50"></text></g><g><title>alloc_page_buffers (5 samples, 0.02%)</title><rect x="41.2287%" y="357" width="0.0165%" height="15" fill="rgb(214,40,45)" fg:x="12496" fg:w="5"/><text x="41.4787%" y="367.50"></text></g><g><title>ext4_da_reserve_space (8 samples, 0.03%)</title><rect x="41.2518%" y="373" width="0.0264%" height="15" fill="rgb(244,29,26)" fg:x="12503" fg:w="8"/><text x="41.5018%" y="383.50"></text></g><g><title>ext4_claim_free_clusters (6 samples, 0.02%)</title><rect x="41.2584%" y="357" width="0.0198%" height="15" fill="rgb(216,16,5)" fg:x="12505" fg:w="6"/><text x="41.5084%" y="367.50"></text></g><g><title>ext4_es_insert_delayed_block (8 samples, 0.03%)</title><rect x="41.2782%" y="373" width="0.0264%" height="15" fill="rgb(249,76,35)" fg:x="12511" fg:w="8"/><text x="41.5282%" y="383.50"></text></g><g><title>__es_remove_extent (4 samples, 0.01%)</title><rect x="41.2914%" y="357" width="0.0132%" height="15" fill="rgb(207,11,44)" fg:x="12515" fg:w="4"/><text x="41.5414%" y="367.50"></text></g><g><title>ext4_da_get_block_prep (21 samples, 0.07%)</title><rect x="41.2452%" y="389" width="0.0693%" height="15" fill="rgb(228,190,49)" fg:x="12501" fg:w="21"/><text x="41.4952%" y="399.50"></text></g><g><title>__block_write_begin_int (50 samples, 0.16%)</title><rect x="41.1759%" y="405" width="0.1650%" height="15" fill="rgb(214,173,12)" fg:x="12480" fg:w="50"/><text x="41.4259%" y="415.50"></text></g><g><title>zero_user_segments (8 samples, 0.03%)</title><rect x="41.3145%" y="389" width="0.0264%" height="15" fill="rgb(218,26,35)" fg:x="12522" fg:w="8"/><text x="41.5645%" y="399.50"></text></g><g><title>memset_erms (7 samples, 0.02%)</title><rect x="41.3178%" y="373" width="0.0231%" height="15" fill="rgb(220,200,19)" fg:x="12523" fg:w="7"/><text x="41.5678%" y="383.50"></text></g><g><title>ext4_nonda_switch (6 samples, 0.02%)</title><rect x="41.3409%" y="405" width="0.0198%" height="15" fill="rgb(239,95,49)" fg:x="12530" fg:w="6"/><text x="41.5909%" y="415.50"></text></g><g><title>PageHuge (11 samples, 0.04%)</title><rect x="41.4596%" y="373" width="0.0363%" height="15" fill="rgb(235,85,53)" fg:x="12566" fg:w="11"/><text x="41.7096%" y="383.50"></text></g><g><title>get_page_from_freelist (9 samples, 0.03%)</title><rect x="41.5124%" y="357" width="0.0297%" height="15" fill="rgb(233,133,31)" fg:x="12582" fg:w="9"/><text x="41.7624%" y="367.50"></text></g><g><title>__alloc_pages (15 samples, 0.05%)</title><rect x="41.4959%" y="373" width="0.0495%" height="15" fill="rgb(218,25,20)" fg:x="12577" fg:w="15"/><text x="41.7459%" y="383.50"></text></g><g><title>mem_cgroup_charge_statistics.constprop.0 (4 samples, 0.01%)</title><rect x="41.5520%" y="309" width="0.0132%" height="15" fill="rgb(252,210,38)" fg:x="12594" fg:w="4"/><text x="41.8020%" y="319.50"></text></g><g><title>charge_memcg (6 samples, 0.02%)</title><rect x="41.5487%" y="325" width="0.0198%" height="15" fill="rgb(242,134,21)" fg:x="12593" fg:w="6"/><text x="41.7987%" y="335.50"></text></g><g><title>__mem_cgroup_charge (10 samples, 0.03%)</title><rect x="41.5487%" y="341" width="0.0330%" height="15" fill="rgb(213,28,48)" fg:x="12593" fg:w="10"/><text x="41.7987%" y="351.50"></text></g><g><title>get_mem_cgroup_from_mm (4 samples, 0.01%)</title><rect x="41.5685%" y="325" width="0.0132%" height="15" fill="rgb(250,196,2)" fg:x="12599" fg:w="4"/><text x="41.8185%" y="335.50"></text></g><g><title>__mod_lruvec_page_state (4 samples, 0.01%)</title><rect x="41.5817%" y="341" width="0.0132%" height="15" fill="rgb(227,5,17)" fg:x="12603" fg:w="4"/><text x="41.8317%" y="351.50"></text></g><g><title>xa_get_order (4 samples, 0.01%)</title><rect x="41.5982%" y="341" width="0.0132%" height="15" fill="rgb(221,226,24)" fg:x="12608" fg:w="4"/><text x="41.8482%" y="351.50"></text></g><g><title>__add_to_page_cache_locked (23 samples, 0.08%)</title><rect x="41.5454%" y="357" width="0.0759%" height="15" fill="rgb(211,5,48)" fg:x="12592" fg:w="23"/><text x="41.7954%" y="367.50"></text></g><g><title>add_to_page_cache_lru (25 samples, 0.08%)</title><rect x="41.5454%" y="373" width="0.0825%" height="15" fill="rgb(219,150,6)" fg:x="12592" fg:w="25"/><text x="41.7954%" y="383.50"></text></g><g><title>grab_cache_page_write_begin (118 samples, 0.39%)</title><rect x="41.3607%" y="405" width="0.3893%" height="15" fill="rgb(251,46,16)" fg:x="12536" fg:w="118"/><text x="41.6107%" y="415.50"></text></g><g><title>pagecache_get_page (117 samples, 0.39%)</title><rect x="41.3640%" y="389" width="0.3860%" height="15" fill="rgb(220,204,40)" fg:x="12537" fg:w="117"/><text x="41.6140%" y="399.50"></text></g><g><title>xas_load (37 samples, 0.12%)</title><rect x="41.6279%" y="373" width="0.1221%" height="15" fill="rgb(211,85,2)" fg:x="12617" fg:w="37"/><text x="41.8779%" y="383.50"></text></g><g><title>xas_start (9 samples, 0.03%)</title><rect x="41.7203%" y="357" width="0.0297%" height="15" fill="rgb(229,17,7)" fg:x="12645" fg:w="9"/><text x="41.9703%" y="367.50"></text></g><g><title>ext4_da_write_begin (201 samples, 0.66%)</title><rect x="41.0934%" y="421" width="0.6632%" height="15" fill="rgb(239,72,28)" fg:x="12455" fg:w="201"/><text x="41.3434%" y="431.50"></text></g><g><title>ext4_da_write_end (13 samples, 0.04%)</title><rect x="41.7566%" y="421" width="0.0429%" height="15" fill="rgb(230,47,54)" fg:x="12656" fg:w="13"/><text x="42.0066%" y="431.50"></text></g><g><title>fault_in_iov_iter_readable (24 samples, 0.08%)</title><rect x="41.7995%" y="421" width="0.0792%" height="15" fill="rgb(214,50,8)" fg:x="12669" fg:w="24"/><text x="42.0495%" y="431.50"></text></g><g><title>fault_in_readable (20 samples, 0.07%)</title><rect x="41.8127%" y="405" width="0.0660%" height="15" fill="rgb(216,198,43)" fg:x="12673" fg:w="20"/><text x="42.0627%" y="415.50"></text></g><g><title>__get_user_nocheck_1 (13 samples, 0.04%)</title><rect x="41.8358%" y="389" width="0.0429%" height="15" fill="rgb(234,20,35)" fg:x="12680" fg:w="13"/><text x="42.0858%" y="399.50"></text></g><g><title>__set_page_dirty (4 samples, 0.01%)</title><rect x="42.0304%" y="373" width="0.0132%" height="15" fill="rgb(254,45,19)" fg:x="12739" fg:w="4"/><text x="42.2804%" y="383.50"></text></g><g><title>__block_commit_write.constprop.0.isra.0 (34 samples, 0.11%)</title><rect x="41.9380%" y="405" width="0.1122%" height="15" fill="rgb(219,14,44)" fg:x="12711" fg:w="34"/><text x="42.1880%" y="415.50"></text></g><g><title>mark_buffer_dirty (13 samples, 0.04%)</title><rect x="42.0073%" y="389" width="0.0429%" height="15" fill="rgb(217,220,26)" fg:x="12732" fg:w="13"/><text x="42.2573%" y="399.50"></text></g><g><title>kmem_cache_free.part.0 (9 samples, 0.03%)</title><rect x="42.1162%" y="357" width="0.0297%" height="15" fill="rgb(213,158,28)" fg:x="12765" fg:w="9"/><text x="42.3662%" y="367.50"></text></g><g><title>_raw_spin_lock_irqsave (10 samples, 0.03%)</title><rect x="42.1855%" y="325" width="0.0330%" height="15" fill="rgb(252,51,52)" fg:x="12786" fg:w="10"/><text x="42.4355%" y="335.50"></text></g><g><title>__ext4_journal_stop (48 samples, 0.16%)</title><rect x="42.0799%" y="389" width="0.1584%" height="15" fill="rgb(246,89,16)" fg:x="12754" fg:w="48"/><text x="42.3299%" y="399.50"></text></g><g><title>jbd2_journal_stop (44 samples, 0.15%)</title><rect x="42.0931%" y="373" width="0.1452%" height="15" fill="rgb(216,158,49)" fg:x="12758" fg:w="44"/><text x="42.3431%" y="383.50"></text></g><g><title>stop_this_handle (28 samples, 0.09%)</title><rect x="42.1459%" y="357" width="0.0924%" height="15" fill="rgb(236,107,19)" fg:x="12774" fg:w="28"/><text x="42.3959%" y="367.50"></text></g><g><title>__wake_up_common_lock (21 samples, 0.07%)</title><rect x="42.1690%" y="341" width="0.0693%" height="15" fill="rgb(228,185,30)" fg:x="12781" fg:w="21"/><text x="42.4190%" y="351.50"></text></g><g><title>_raw_spin_unlock_irqrestore (6 samples, 0.02%)</title><rect x="42.2185%" y="325" width="0.0198%" height="15" fill="rgb(246,134,8)" fg:x="12796" fg:w="6"/><text x="42.4685%" y="335.50"></text></g><g><title>__raw_callee_save___pv_queued_spin_unlock (6 samples, 0.02%)</title><rect x="42.2185%" y="309" width="0.0198%" height="15" fill="rgb(214,143,50)" fg:x="12796" fg:w="6"/><text x="42.4685%" y="319.50"></text></g><g><title>ext4_journal_check_start (4 samples, 0.01%)</title><rect x="42.2581%" y="357" width="0.0132%" height="15" fill="rgb(228,75,8)" fg:x="12808" fg:w="4"/><text x="42.5081%" y="367.50"></text></g><g><title>kmem_cache_alloc (19 samples, 0.06%)</title><rect x="42.3274%" y="341" width="0.0627%" height="15" fill="rgb(207,175,4)" fg:x="12829" fg:w="19"/><text x="42.5774%" y="351.50"></text></g><g><title>memset_erms (6 samples, 0.02%)</title><rect x="42.3703%" y="325" width="0.0198%" height="15" fill="rgb(205,108,24)" fg:x="12842" fg:w="6"/><text x="42.6203%" y="335.50"></text></g><g><title>_raw_read_lock (9 samples, 0.03%)</title><rect x="42.4560%" y="325" width="0.0297%" height="15" fill="rgb(244,120,49)" fg:x="12868" fg:w="9"/><text x="42.7060%" y="335.50"></text></g><g><title>__ext4_journal_start_sb (80 samples, 0.26%)</title><rect x="42.2482%" y="373" width="0.2639%" height="15" fill="rgb(223,47,38)" fg:x="12805" fg:w="80"/><text x="42.4982%" y="383.50"></text></g><g><title>jbd2__journal_start (73 samples, 0.24%)</title><rect x="42.2713%" y="357" width="0.2409%" height="15" fill="rgb(229,179,11)" fg:x="12812" fg:w="73"/><text x="42.5213%" y="367.50"></text></g><g><title>start_this_handle (37 samples, 0.12%)</title><rect x="42.3900%" y="341" width="0.1221%" height="15" fill="rgb(231,122,1)" fg:x="12848" fg:w="37"/><text x="42.6400%" y="351.50"></text></g><g><title>add_transaction_credits (8 samples, 0.03%)</title><rect x="42.4857%" y="325" width="0.0264%" height="15" fill="rgb(245,119,9)" fg:x="12877" fg:w="8"/><text x="42.7357%" y="335.50"></text></g><g><title>__brelse (13 samples, 0.04%)</title><rect x="42.7860%" y="341" width="0.0429%" height="15" fill="rgb(241,163,25)" fg:x="12968" fg:w="13"/><text x="43.0360%" y="351.50"></text></g><g><title>__ext4_handle_dirty_metadata (7 samples, 0.02%)</title><rect x="42.8289%" y="341" width="0.0231%" height="15" fill="rgb(217,214,3)" fg:x="12981" fg:w="7"/><text x="43.0789%" y="351.50"></text></g><g><title>jbd2_journal_dirty_metadata (4 samples, 0.01%)</title><rect x="42.8388%" y="325" width="0.0132%" height="15" fill="rgb(240,86,28)" fg:x="12984" fg:w="4"/><text x="43.0888%" y="335.50"></text></g><g><title>__raw_callee_save___pv_queued_spin_unlock (6 samples, 0.02%)</title><rect x="42.8520%" y="341" width="0.0198%" height="15" fill="rgb(215,47,9)" fg:x="12988" fg:w="6"/><text x="43.1020%" y="351.50"></text></g><g><title>_raw_spin_lock (10 samples, 0.03%)</title><rect x="42.8718%" y="341" width="0.0330%" height="15" fill="rgb(252,25,45)" fg:x="12994" fg:w="10"/><text x="43.1218%" y="351.50"></text></g><g><title>ext4_fc_track_template (9 samples, 0.03%)</title><rect x="42.9212%" y="325" width="0.0297%" height="15" fill="rgb(251,164,9)" fg:x="13009" fg:w="9"/><text x="43.1712%" y="335.50"></text></g><g><title>ext4_fc_track_inode (17 samples, 0.06%)</title><rect x="42.9047%" y="341" width="0.0561%" height="15" fill="rgb(233,194,0)" fg:x="13004" fg:w="17"/><text x="43.1547%" y="351.50"></text></g><g><title>chksum_update (244 samples, 0.81%)</title><rect x="43.0466%" y="309" width="0.8050%" height="15" fill="rgb(249,111,24)" fg:x="13047" fg:w="244"/><text x="43.2966%" y="319.50"></text></g><g><title>crc32_body (232 samples, 0.77%)</title><rect x="43.0862%" y="293" width="0.7654%" height="15" fill="rgb(250,223,3)" fg:x="13059" fg:w="232"/><text x="43.3362%" y="303.50"></text></g><g><title>ext4_inode_csum_set (283 samples, 0.93%)</title><rect x="42.9608%" y="341" width="0.9337%" height="15" fill="rgb(236,178,37)" fg:x="13021" fg:w="283"/><text x="43.2108%" y="351.50"></text></g><g><title>ext4_inode_csum (278 samples, 0.92%)</title><rect x="42.9773%" y="325" width="0.9172%" height="15" fill="rgb(241,158,50)" fg:x="13026" fg:w="278"/><text x="43.2273%" y="335.50"></text></g><g><title>crypto_shash_update (13 samples, 0.04%)</title><rect x="43.8517%" y="309" width="0.0429%" height="15" fill="rgb(213,121,41)" fg:x="13291" fg:w="13"/><text x="44.1017%" y="319.50"></text></g><g><title>ext4_mark_iloc_dirty (422 samples, 1.39%)</title><rect x="42.5319%" y="357" width="1.3923%" height="15" fill="rgb(240,92,3)" fg:x="12891" fg:w="422"/><text x="42.7819%" y="367.50"></text></g><g><title>map_id_up (7 samples, 0.02%)</title><rect x="43.9012%" y="341" width="0.0231%" height="15" fill="rgb(205,123,3)" fg:x="13306" fg:w="7"/><text x="44.1512%" y="351.50"></text></g><g><title>errseq_check (5 samples, 0.02%)</title><rect x="43.9506%" y="325" width="0.0165%" height="15" fill="rgb(205,97,47)" fg:x="13321" fg:w="5"/><text x="44.2006%" y="335.50"></text></g><g><title>__ext4_journal_get_write_access (20 samples, 0.07%)</title><rect x="43.9308%" y="341" width="0.0660%" height="15" fill="rgb(247,152,14)" fg:x="13315" fg:w="20"/><text x="44.1808%" y="351.50"></text></g><g><title>jbd2_journal_get_write_access (9 samples, 0.03%)</title><rect x="43.9671%" y="325" width="0.0297%" height="15" fill="rgb(248,195,53)" fg:x="13326" fg:w="9"/><text x="44.2171%" y="335.50"></text></g><g><title>jbd2_write_access_granted.part.0 (7 samples, 0.02%)</title><rect x="43.9737%" y="309" width="0.0231%" height="15" fill="rgb(226,201,16)" fg:x="13328" fg:w="7"/><text x="44.2237%" y="319.50"></text></g><g><title>__getblk_gfp (28 samples, 0.09%)</title><rect x="44.0826%" y="309" width="0.0924%" height="15" fill="rgb(205,98,0)" fg:x="13361" fg:w="28"/><text x="44.3326%" y="319.50"></text></g><g><title>__find_get_block (21 samples, 0.07%)</title><rect x="44.1057%" y="293" width="0.0693%" height="15" fill="rgb(214,191,48)" fg:x="13368" fg:w="21"/><text x="44.3557%" y="303.50"></text></g><g><title>mark_page_accessed (6 samples, 0.02%)</title><rect x="44.1552%" y="277" width="0.0198%" height="15" fill="rgb(237,112,39)" fg:x="13383" fg:w="6"/><text x="44.4052%" y="287.50"></text></g><g><title>ext4_get_group_desc (10 samples, 0.03%)</title><rect x="44.1750%" y="309" width="0.0330%" height="15" fill="rgb(247,203,27)" fg:x="13389" fg:w="10"/><text x="44.4250%" y="319.50"></text></g><g><title>__mark_inode_dirty (657 samples, 2.17%)</title><rect x="42.0502%" y="405" width="2.1677%" height="15" fill="rgb(235,124,28)" fg:x="12745" fg:w="657"/><text x="42.3002%" y="415.50">_..</text></g><g><title>ext4_dirty_inode (600 samples, 1.98%)</title><rect x="42.2383%" y="389" width="1.9796%" height="15" fill="rgb(208,207,46)" fg:x="12802" fg:w="600"/><text x="42.4883%" y="399.50">e..</text></g><g><title>__ext4_mark_inode_dirty (517 samples, 1.71%)</title><rect x="42.5121%" y="373" width="1.7058%" height="15" fill="rgb(234,176,4)" fg:x="12885" fg:w="517"/><text x="42.7621%" y="383.50"></text></g><g><title>ext4_reserve_inode_write (89 samples, 0.29%)</title><rect x="43.9242%" y="357" width="0.2936%" height="15" fill="rgb(230,133,28)" fg:x="13313" fg:w="89"/><text x="44.1742%" y="367.50"></text></g><g><title>ext4_get_inode_loc (67 samples, 0.22%)</title><rect x="43.9968%" y="341" width="0.2211%" height="15" fill="rgb(211,137,40)" fg:x="13335" fg:w="67"/><text x="44.2468%" y="351.50"></text></g><g><title>__ext4_get_inode_loc (67 samples, 0.22%)</title><rect x="43.9968%" y="325" width="0.2211%" height="15" fill="rgb(254,35,13)" fg:x="13335" fg:w="67"/><text x="44.2468%" y="335.50"></text></g><g><title>generic_perform_write (1,026 samples, 3.39%)</title><rect x="40.8592%" y="437" width="3.3851%" height="15" fill="rgb(225,49,51)" fg:x="12384" fg:w="1026"/><text x="41.1092%" y="447.50">gen..</text></g><g><title>generic_write_end (717 samples, 2.37%)</title><rect x="41.8786%" y="421" width="2.3656%" height="15" fill="rgb(251,10,15)" fg:x="12693" fg:w="717"/><text x="42.1286%" y="431.50">ge..</text></g><g><title>unlock_page (8 samples, 0.03%)</title><rect x="44.2179%" y="405" width="0.0264%" height="15" fill="rgb(228,207,15)" fg:x="13402" fg:w="8"/><text x="44.4679%" y="415.50"></text></g><g><title>ext4_buffered_write_iter (1,082 samples, 3.57%)</title><rect x="40.6975%" y="453" width="3.5699%" height="15" fill="rgb(241,99,19)" fg:x="12335" fg:w="1082"/><text x="40.9475%" y="463.50">ext4..</text></g><g><title>up_write (7 samples, 0.02%)</title><rect x="44.2443%" y="437" width="0.0231%" height="15" fill="rgb(207,104,49)" fg:x="13410" fg:w="7"/><text x="44.4943%" y="447.50"></text></g><g><title>ext4_file_write_iter (6 samples, 0.02%)</title><rect x="44.2674%" y="453" width="0.0198%" height="15" fill="rgb(234,99,18)" fg:x="13417" fg:w="6"/><text x="44.5174%" y="463.50"></text></g><g><title>new_sync_write (1,101 samples, 3.63%)</title><rect x="40.6645%" y="469" width="3.6326%" height="15" fill="rgb(213,191,49)" fg:x="12325" fg:w="1101"/><text x="40.9145%" y="479.50">new_..</text></g><g><title>ksys_write (1,209 samples, 3.99%)</title><rect x="40.3214%" y="501" width="3.9889%" height="15" fill="rgb(210,226,19)" fg:x="12221" fg:w="1209"/><text x="40.5714%" y="511.50">ksys..</text></g><g><title>vfs_write (1,131 samples, 3.73%)</title><rect x="40.5787%" y="485" width="3.7316%" height="15" fill="rgb(229,97,18)" fg:x="12299" fg:w="1131"/><text x="40.8287%" y="495.50">vfs_..</text></g><g><title>syscall_enter_from_user_mode (5 samples, 0.02%)</title><rect x="44.3103%" y="501" width="0.0165%" height="15" fill="rgb(211,167,15)" fg:x="13430" fg:w="5"/><text x="44.5603%" y="511.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1,240 samples, 4.09%)</title><rect x="40.2785%" y="533" width="4.0912%" height="15" fill="rgb(210,169,34)" fg:x="12208" fg:w="1240"/><text x="40.5285%" y="543.50">entr..</text></g><g><title>do_syscall_64 (1,240 samples, 4.09%)</title><rect x="40.2785%" y="517" width="4.0912%" height="15" fill="rgb(241,121,31)" fg:x="12208" fg:w="1240"/><text x="40.5285%" y="527.50">do_s..</text></g><g><title>syscall_exit_to_user_mode (13 samples, 0.04%)</title><rect x="44.3268%" y="501" width="0.0429%" height="15" fill="rgb(232,40,11)" fg:x="13435" fg:w="13"/><text x="44.5768%" y="511.50"></text></g><g><title>exit_to_user_mode_prepare (12 samples, 0.04%)</title><rect x="44.3301%" y="485" width="0.0396%" height="15" fill="rgb(205,86,26)" fg:x="13436" fg:w="12"/><text x="44.5801%" y="495.50"></text></g><g><title>&lt;std::io::stdio::StdoutRaw as std::io::Write&gt;::write_all (1,333 samples, 4.40%)</title><rect x="39.9947%" y="565" width="4.3980%" height="15" fill="rgb(231,126,28)" fg:x="12122" fg:w="1333"/><text x="40.2447%" y="575.50">&lt;std:..</text></g><g><title>__write (1,315 samples, 4.34%)</title><rect x="40.0541%" y="549" width="4.3386%" height="15" fill="rgb(219,221,18)" fg:x="12140" fg:w="1315"/><text x="40.3041%" y="559.50">__wri..</text></g><g><title>syscall_return_via_sysret (7 samples, 0.02%)</title><rect x="44.3697%" y="533" width="0.0231%" height="15" fill="rgb(211,40,0)" fg:x="13448" fg:w="7"/><text x="44.6197%" y="543.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (1,408 samples, 4.65%)</title><rect x="39.9122%" y="581" width="4.6455%" height="15" fill="rgb(239,85,43)" fg:x="12097" fg:w="1408"/><text x="40.1622%" y="591.50">&lt;std:..</text></g><g><title>[libc.so.6] (50 samples, 0.16%)</title><rect x="44.3928%" y="565" width="0.1650%" height="15" fill="rgb(231,55,21)" fg:x="13455" fg:w="50"/><text x="44.6428%" y="575.50"></text></g><g><title>__x64_sys_futex (5 samples, 0.02%)</title><rect x="44.5709%" y="517" width="0.0165%" height="15" fill="rgb(225,184,43)" fg:x="13509" fg:w="5"/><text x="44.8209%" y="527.50"></text></g><g><title>do_futex (5 samples, 0.02%)</title><rect x="44.5709%" y="501" width="0.0165%" height="15" fill="rgb(251,158,41)" fg:x="13509" fg:w="5"/><text x="44.8209%" y="511.50"></text></g><g><title>futex_wait (5 samples, 0.02%)</title><rect x="44.5709%" y="485" width="0.0165%" height="15" fill="rgb(234,159,37)" fg:x="13509" fg:w="5"/><text x="44.8209%" y="495.50"></text></g><g><title>futex_wait_queue_me (5 samples, 0.02%)</title><rect x="44.5709%" y="469" width="0.0165%" height="15" fill="rgb(216,204,22)" fg:x="13509" fg:w="5"/><text x="44.8209%" y="479.50"></text></g><g><title>schedule (5 samples, 0.02%)</title><rect x="44.5709%" y="453" width="0.0165%" height="15" fill="rgb(214,17,3)" fg:x="13509" fg:w="5"/><text x="44.8209%" y="463.50"></text></g><g><title>__schedule (5 samples, 0.02%)</title><rect x="44.5709%" y="437" width="0.0165%" height="15" fill="rgb(212,111,17)" fg:x="13509" fg:w="5"/><text x="44.8209%" y="447.50"></text></g><g><title>std::sys::pal::unix::locks::futex_mutex::Mutex::lock_contended (11 samples, 0.04%)</title><rect x="44.5577%" y="581" width="0.0363%" height="15" fill="rgb(221,157,24)" fg:x="13505" fg:w="11"/><text x="44.8077%" y="591.50"></text></g><g><title>syscall (8 samples, 0.03%)</title><rect x="44.5676%" y="565" width="0.0264%" height="15" fill="rgb(252,16,13)" fg:x="13508" fg:w="8"/><text x="44.8176%" y="575.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (8 samples, 0.03%)</title><rect x="44.5676%" y="549" width="0.0264%" height="15" fill="rgb(221,62,2)" fg:x="13508" fg:w="8"/><text x="44.8176%" y="559.50"></text></g><g><title>do_syscall_64 (7 samples, 0.02%)</title><rect x="44.5709%" y="533" width="0.0231%" height="15" fill="rgb(247,87,22)" fg:x="13509" fg:w="7"/><text x="44.8209%" y="543.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (6 samples, 0.02%)</title><rect x="44.5940%" y="565" width="0.0198%" height="15" fill="rgb(215,73,9)" fg:x="13516" fg:w="6"/><text x="44.8440%" y="575.50"></text></g><g><title>do_syscall_64 (6 samples, 0.02%)</title><rect x="44.5940%" y="549" width="0.0198%" height="15" fill="rgb(207,175,33)" fg:x="13516" fg:w="6"/><text x="44.8440%" y="559.50"></text></g><g><title>__x64_sys_futex (6 samples, 0.02%)</title><rect x="44.5940%" y="533" width="0.0198%" height="15" fill="rgb(243,129,54)" fg:x="13516" fg:w="6"/><text x="44.8440%" y="543.50"></text></g><g><title>do_futex (6 samples, 0.02%)</title><rect x="44.5940%" y="517" width="0.0198%" height="15" fill="rgb(227,119,45)" fg:x="13516" fg:w="6"/><text x="44.8440%" y="527.50"></text></g><g><title>futex_wake (6 samples, 0.02%)</title><rect x="44.5940%" y="501" width="0.0198%" height="15" fill="rgb(205,109,36)" fg:x="13516" fg:w="6"/><text x="44.8440%" y="511.50"></text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write_all (1,473 samples, 4.86%)</title><rect x="39.7572%" y="613" width="4.8599%" height="15" fill="rgb(205,6,39)" fg:x="12050" fg:w="1473"/><text x="40.0072%" y="623.50">&lt;std::..</text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_all (1,466 samples, 4.84%)</title><rect x="39.7803%" y="597" width="4.8368%" height="15" fill="rgb(221,32,16)" fg:x="12057" fg:w="1466"/><text x="40.0303%" y="607.50">&lt;&amp;std:..</text></g><g><title>syscall (7 samples, 0.02%)</title><rect x="44.5940%" y="581" width="0.0231%" height="15" fill="rgb(228,144,50)" fg:x="13516" fg:w="7"/><text x="44.8440%" y="591.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_fmt (5 samples, 0.02%)</title><rect x="44.7689%" y="597" width="0.0165%" height="15" fill="rgb(229,201,53)" fg:x="13569" fg:w="5"/><text x="45.0189%" y="607.50"></text></g><g><title>&lt;tracing_core::event::Event as tracing_log::NormalizeEvent&gt;::normalized_metadata (20 samples, 0.07%)</title><rect x="44.7854%" y="597" width="0.0660%" height="15" fill="rgb(249,153,27)" fg:x="13574" fg:w="20"/><text x="45.0354%" y="607.50"></text></g><g><title>tracing_log::level_to_cs (13 samples, 0.04%)</title><rect x="44.8085%" y="581" width="0.0429%" height="15" fill="rgb(227,106,25)" fg:x="13581" fg:w="13"/><text x="45.0585%" y="591.50"></text></g><g><title>&lt;tracing_core::event::Event as tracing_subscriber::field::RecordFields&gt;::record (5 samples, 0.02%)</title><rect x="44.8514%" y="597" width="0.0165%" height="15" fill="rgb(230,65,29)" fg:x="13594" fg:w="5"/><text x="45.1014%" y="607.50"></text></g><g><title>&lt;tracing_subscriber::fmt::time::datetime::DateTime as core::convert::From&lt;std::time::SystemTime&gt;&gt;::from (31 samples, 0.10%)</title><rect x="44.8943%" y="581" width="0.1023%" height="15" fill="rgb(221,57,46)" fg:x="13607" fg:w="31"/><text x="45.1443%" y="591.50"></text></g><g><title>std::time::SystemTime::duration_since (6 samples, 0.02%)</title><rect x="44.9767%" y="565" width="0.0198%" height="15" fill="rgb(229,161,17)" fg:x="13632" fg:w="6"/><text x="45.2267%" y="575.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::sub_timespec (4 samples, 0.01%)</title><rect x="44.9833%" y="549" width="0.0132%" height="15" fill="rgb(222,213,11)" fg:x="13634" fg:w="4"/><text x="45.2333%" y="559.50"></text></g><g><title>core::fmt::Formatter::write_fmt (5 samples, 0.02%)</title><rect x="45.0988%" y="549" width="0.0165%" height="15" fill="rgb(235,35,13)" fg:x="13669" fg:w="5"/><text x="45.3488%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (40 samples, 0.13%)</title><rect x="45.2506%" y="533" width="0.1320%" height="15" fill="rgb(233,158,34)" fg:x="13715" fg:w="40"/><text x="45.5006%" y="543.50"></text></g><g><title>[libc.so.6] (18 samples, 0.06%)</title><rect x="45.3232%" y="517" width="0.0594%" height="15" fill="rgb(215,151,48)" fg:x="13737" fg:w="18"/><text x="45.5732%" y="527.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for isize&gt;::fmt (28 samples, 0.09%)</title><rect x="45.3826%" y="533" width="0.0924%" height="15" fill="rgb(229,84,14)" fg:x="13755" fg:w="28"/><text x="45.6326%" y="543.50"></text></g><g><title>core::fmt::Formatter::pad_integral (8 samples, 0.03%)</title><rect x="45.4485%" y="517" width="0.0264%" height="15" fill="rgb(229,68,14)" fg:x="13775" fg:w="8"/><text x="45.6985%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (5 samples, 0.02%)</title><rect x="45.5475%" y="517" width="0.0165%" height="15" fill="rgb(243,106,26)" fg:x="13805" fg:w="5"/><text x="45.7975%" y="527.50"></text></g><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="45.5508%" y="501" width="0.0132%" height="15" fill="rgb(206,45,38)" fg:x="13806" fg:w="4"/><text x="45.8008%" y="511.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (36 samples, 0.12%)</title><rect x="45.4749%" y="533" width="0.1188%" height="15" fill="rgb(226,6,15)" fg:x="13783" fg:w="36"/><text x="45.7249%" y="543.50"></text></g><g><title>core::fmt::Formatter::pad_integral (9 samples, 0.03%)</title><rect x="45.5640%" y="517" width="0.0297%" height="15" fill="rgb(232,22,54)" fg:x="13810" fg:w="9"/><text x="45.8140%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (9 samples, 0.03%)</title><rect x="45.6630%" y="517" width="0.0297%" height="15" fill="rgb(229,222,32)" fg:x="13840" fg:w="9"/><text x="45.9130%" y="527.50"></text></g><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="45.6795%" y="501" width="0.0132%" height="15" fill="rgb(228,62,29)" fg:x="13845" fg:w="4"/><text x="45.9295%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_char (7 samples, 0.02%)</title><rect x="45.8181%" y="501" width="0.0231%" height="15" fill="rgb(251,103,34)" fg:x="13887" fg:w="7"/><text x="46.0681%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (16 samples, 0.05%)</title><rect x="45.8412%" y="501" width="0.0528%" height="15" fill="rgb(233,12,30)" fg:x="13894" fg:w="16"/><text x="46.0912%" y="511.50"></text></g><g><title>core::fmt::write (279 samples, 0.92%)</title><rect x="44.9965%" y="581" width="0.9205%" height="15" fill="rgb(238,52,0)" fg:x="13638" fg:w="279"/><text x="45.2465%" y="591.50"></text></g><g><title>&lt;tracing_subscriber::fmt::time::datetime::DateTime as core::fmt::Display&gt;::fmt (272 samples, 0.90%)</title><rect x="45.0196%" y="565" width="0.8974%" height="15" fill="rgb(223,98,5)" fg:x="13645" fg:w="272"/><text x="45.2696%" y="575.50"></text></g><g><title>core::fmt::write (243 samples, 0.80%)</title><rect x="45.1153%" y="549" width="0.8017%" height="15" fill="rgb(228,75,37)" fg:x="13674" fg:w="243"/><text x="45.3653%" y="559.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u8&gt;::fmt (98 samples, 0.32%)</title><rect x="45.5937%" y="533" width="0.3233%" height="15" fill="rgb(205,115,49)" fg:x="13819" fg:w="98"/><text x="45.8437%" y="543.50"></text></g><g><title>core::fmt::Formatter::pad_integral (68 samples, 0.22%)</title><rect x="45.6927%" y="517" width="0.2244%" height="15" fill="rgb(250,154,43)" fg:x="13849" fg:w="68"/><text x="45.9427%" y="527.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (7 samples, 0.02%)</title><rect x="45.8940%" y="501" width="0.0231%" height="15" fill="rgb(226,43,29)" fg:x="13910" fg:w="7"/><text x="46.1440%" y="511.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (60 samples, 0.20%)</title><rect x="45.9171%" y="581" width="0.1980%" height="15" fill="rgb(249,228,39)" fg:x="13917" fg:w="60"/><text x="46.1671%" y="591.50"></text></g><g><title>clock_gettime (57 samples, 0.19%)</title><rect x="45.9270%" y="565" width="0.1881%" height="15" fill="rgb(216,79,43)" fg:x="13920" fg:w="57"/><text x="46.1770%" y="575.50"></text></g><g><title>__vdso_clock_gettime (51 samples, 0.17%)</title><rect x="45.9467%" y="549" width="0.1683%" height="15" fill="rgb(228,95,12)" fg:x="13926" fg:w="51"/><text x="46.1967%" y="559.50"></text></g><g><title>&lt;tracing_subscriber::fmt::time::SystemTime as tracing_subscriber::fmt::time::FormatTime&gt;::format_time (384 samples, 1.27%)</title><rect x="44.8679%" y="597" width="1.2670%" height="15" fill="rgb(249,221,15)" fg:x="13599" fg:w="384"/><text x="45.1179%" y="607.50"></text></g><g><title>std::time::SystemTime::now (6 samples, 0.02%)</title><rect x="46.1150%" y="581" width="0.0198%" height="15" fill="rgb(233,34,13)" fg:x="13977" fg:w="6"/><text x="46.3650%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (23 samples, 0.08%)</title><rect x="46.2404%" y="581" width="0.0759%" height="15" fill="rgb(214,103,39)" fg:x="14015" fg:w="23"/><text x="46.4904%" y="591.50"></text></g><g><title>[libc.so.6] (11 samples, 0.04%)</title><rect x="46.2800%" y="565" width="0.0363%" height="15" fill="rgb(251,126,39)" fg:x="14027" fg:w="11"/><text x="46.5300%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4 samples, 0.01%)</title><rect x="46.3427%" y="549" width="0.0132%" height="15" fill="rgb(214,216,36)" fg:x="14046" fg:w="4"/><text x="46.5927%" y="559.50"></text></g><g><title>&lt;nu_ansi_term::ansi::Suffix as core::fmt::Display&gt;::fmt (19 samples, 0.06%)</title><rect x="46.3229%" y="581" width="0.0627%" height="15" fill="rgb(220,221,8)" fg:x="14040" fg:w="19"/><text x="46.5729%" y="591.50"></text></g><g><title>core::fmt::write (16 samples, 0.05%)</title><rect x="46.3328%" y="565" width="0.0528%" height="15" fill="rgb(240,216,3)" fg:x="14043" fg:w="16"/><text x="46.5828%" y="575.50"></text></g><g><title>core::fmt::Formatter::pad (9 samples, 0.03%)</title><rect x="46.3559%" y="549" width="0.0297%" height="15" fill="rgb(232,218,17)" fg:x="14050" fg:w="9"/><text x="46.6059%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (8 samples, 0.03%)</title><rect x="46.4318%" y="565" width="0.0264%" height="15" fill="rgb(229,163,45)" fg:x="14073" fg:w="8"/><text x="46.6818%" y="575.50"></text></g><g><title>[libc.so.6] (6 samples, 0.02%)</title><rect x="46.4384%" y="549" width="0.0198%" height="15" fill="rgb(231,110,42)" fg:x="14075" fg:w="6"/><text x="46.6884%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (6 samples, 0.02%)</title><rect x="46.6066%" y="517" width="0.0198%" height="15" fill="rgb(208,170,48)" fg:x="14126" fg:w="6"/><text x="46.8566%" y="527.50"></text></g><g><title>&lt;nu_ansi_term::ansi::Suffix as core::fmt::Display&gt;::fmt (37 samples, 0.12%)</title><rect x="46.5274%" y="549" width="0.1221%" height="15" fill="rgb(239,116,25)" fg:x="14102" fg:w="37"/><text x="46.7774%" y="559.50"></text></g><g><title>core::fmt::write (27 samples, 0.09%)</title><rect x="46.5604%" y="533" width="0.0891%" height="15" fill="rgb(219,200,50)" fg:x="14112" fg:w="27"/><text x="46.8104%" y="543.50"></text></g><g><title>core::fmt::Formatter::pad (5 samples, 0.02%)</title><rect x="46.6330%" y="517" width="0.0165%" height="15" fill="rgb(245,200,0)" fg:x="14134" fg:w="5"/><text x="46.8830%" y="527.50"></text></g><g><title>core::fmt::Formatter::write_fmt (6 samples, 0.02%)</title><rect x="46.7023%" y="533" width="0.0198%" height="15" fill="rgb(245,119,33)" fg:x="14155" fg:w="6"/><text x="46.9523%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_char (4 samples, 0.01%)</title><rect x="46.8244%" y="517" width="0.0132%" height="15" fill="rgb(231,125,12)" fg:x="14192" fg:w="4"/><text x="47.0744%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (11 samples, 0.04%)</title><rect x="46.8376%" y="517" width="0.0363%" height="15" fill="rgb(216,96,41)" fg:x="14196" fg:w="11"/><text x="47.0876%" y="527.50"></text></g><g><title>[libc.so.6] (6 samples, 0.02%)</title><rect x="46.8541%" y="501" width="0.0198%" height="15" fill="rgb(248,43,45)" fg:x="14201" fg:w="6"/><text x="47.1041%" y="511.50"></text></g><g><title>&lt;nu_ansi_term::display::AnsiGenericString&lt;str&gt; as core::fmt::Display&gt;::fmt (151 samples, 0.50%)</title><rect x="46.3856%" y="581" width="0.4982%" height="15" fill="rgb(217,222,7)" fg:x="14059" fg:w="151"/><text x="46.6356%" y="591.50"></text></g><g><title>core::fmt::write (128 samples, 0.42%)</title><rect x="46.4614%" y="565" width="0.4223%" height="15" fill="rgb(233,28,6)" fg:x="14082" fg:w="128"/><text x="46.7114%" y="575.50"></text></g><g><title>nu_ansi_term::ansi::&lt;impl nu_ansi_term::style::Style&gt;::write_prefix (71 samples, 0.23%)</title><rect x="46.6495%" y="549" width="0.2343%" height="15" fill="rgb(231,218,15)" fg:x="14139" fg:w="71"/><text x="46.8995%" y="559.50"></text></g><g><title>core::fmt::write (49 samples, 0.16%)</title><rect x="46.7221%" y="533" width="0.1617%" height="15" fill="rgb(226,171,48)" fg:x="14161" fg:w="49"/><text x="46.9721%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (9 samples, 0.03%)</title><rect x="46.9761%" y="533" width="0.0297%" height="15" fill="rgb(235,201,9)" fg:x="14238" fg:w="9"/><text x="47.2261%" y="543.50"></text></g><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="46.9926%" y="517" width="0.0132%" height="15" fill="rgb(217,80,15)" fg:x="14243" fg:w="4"/><text x="47.2426%" y="527.50"></text></g><g><title>core::fmt::Formatter::write_fmt (5 samples, 0.02%)</title><rect x="47.0058%" y="533" width="0.0165%" height="15" fill="rgb(219,152,8)" fg:x="14247" fg:w="5"/><text x="47.2558%" y="543.50"></text></g><g><title>&lt;str as core::fmt::Display&gt;::fmt (4 samples, 0.01%)</title><rect x="47.1345%" y="485" width="0.0132%" height="15" fill="rgb(243,107,38)" fg:x="14286" fg:w="4"/><text x="47.3845%" y="495.50"></text></g><g><title>&lt;nu_ansi_term::ansi::Suffix as core::fmt::Display&gt;::fmt (21 samples, 0.07%)</title><rect x="47.0850%" y="517" width="0.0693%" height="15" fill="rgb(231,17,5)" fg:x="14271" fg:w="21"/><text x="47.3350%" y="527.50"></text></g><g><title>core::fmt::write (16 samples, 0.05%)</title><rect x="47.1015%" y="501" width="0.0528%" height="15" fill="rgb(209,25,54)" fg:x="14276" fg:w="16"/><text x="47.3515%" y="511.50"></text></g><g><title>core::fmt::write (20 samples, 0.07%)</title><rect x="47.1873%" y="501" width="0.0660%" height="15" fill="rgb(219,0,2)" fg:x="14302" fg:w="20"/><text x="47.4373%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (10 samples, 0.03%)</title><rect x="47.2203%" y="485" width="0.0330%" height="15" fill="rgb(246,9,5)" fg:x="14312" fg:w="10"/><text x="47.4703%" y="495.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::FmtLevel as core::fmt::Display&gt;::fmt (128 samples, 0.42%)</title><rect x="46.8838%" y="581" width="0.4223%" height="15" fill="rgb(226,159,4)" fg:x="14210" fg:w="128"/><text x="47.1338%" y="591.50"></text></g><g><title>core::fmt::write (112 samples, 0.37%)</title><rect x="46.9366%" y="565" width="0.3695%" height="15" fill="rgb(219,175,34)" fg:x="14226" fg:w="112"/><text x="47.1866%" y="575.50"></text></g><g><title>&lt;nu_ansi_term::display::AnsiGenericString&lt;str&gt; as core::fmt::Display&gt;::fmt (108 samples, 0.36%)</title><rect x="46.9498%" y="549" width="0.3563%" height="15" fill="rgb(236,10,46)" fg:x="14230" fg:w="108"/><text x="47.1998%" y="559.50"></text></g><g><title>core::fmt::write (86 samples, 0.28%)</title><rect x="47.0223%" y="533" width="0.2837%" height="15" fill="rgb(240,211,16)" fg:x="14252" fg:w="86"/><text x="47.2723%" y="543.50"></text></g><g><title>nu_ansi_term::ansi::&lt;impl nu_ansi_term::style::Style&gt;::write_prefix (46 samples, 0.15%)</title><rect x="47.1543%" y="517" width="0.1518%" height="15" fill="rgb(205,3,43)" fg:x="14292" fg:w="46"/><text x="47.4043%" y="527.50"></text></g><g><title>nu_ansi_term::ansi::&lt;impl nu_ansi_term::style::Color&gt;::write_foreground_code (16 samples, 0.05%)</title><rect x="47.2533%" y="501" width="0.0528%" height="15" fill="rgb(245,7,22)" fg:x="14322" fg:w="16"/><text x="47.5033%" y="511.50"></text></g><g><title>core::fmt::write (12 samples, 0.04%)</title><rect x="47.2665%" y="485" width="0.0396%" height="15" fill="rgb(239,132,32)" fg:x="14326" fg:w="12"/><text x="47.5165%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4 samples, 0.01%)</title><rect x="47.2929%" y="469" width="0.0132%" height="15" fill="rgb(228,202,34)" fg:x="14334" fg:w="4"/><text x="47.5429%" y="479.50"></text></g><g><title>core::fmt::Formatter::write_fmt (5 samples, 0.02%)</title><rect x="47.3688%" y="565" width="0.0165%" height="15" fill="rgb(254,200,22)" fg:x="14357" fg:w="5"/><text x="47.6188%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_char (7 samples, 0.02%)</title><rect x="47.4612%" y="549" width="0.0231%" height="15" fill="rgb(219,10,39)" fg:x="14385" fg:w="7"/><text x="47.7112%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (18 samples, 0.06%)</title><rect x="47.4842%" y="549" width="0.0594%" height="15" fill="rgb(226,210,39)" fg:x="14392" fg:w="18"/><text x="47.7342%" y="559.50"></text></g><g><title>[libc.so.6] (10 samples, 0.03%)</title><rect x="47.5106%" y="533" width="0.0330%" height="15" fill="rgb(208,219,16)" fg:x="14400" fg:w="10"/><text x="47.7606%" y="543.50"></text></g><g><title>core::fmt::write (428 samples, 1.41%)</title><rect x="46.1348%" y="597" width="1.4121%" height="15" fill="rgb(216,158,51)" fg:x="13983" fg:w="428"/><text x="46.3848%" y="607.50"></text></g><g><title>nu_ansi_term::ansi::&lt;impl nu_ansi_term::style::Style&gt;::write_prefix (73 samples, 0.24%)</title><rect x="47.3061%" y="581" width="0.2409%" height="15" fill="rgb(233,14,44)" fg:x="14338" fg:w="73"/><text x="47.5561%" y="591.50"></text></g><g><title>core::fmt::write (49 samples, 0.16%)</title><rect x="47.3853%" y="565" width="0.1617%" height="15" fill="rgb(237,97,39)" fg:x="14362" fg:w="49"/><text x="47.6353%" y="575.50"></text></g><g><title>core::fmt::write (28 samples, 0.09%)</title><rect x="47.6459%" y="565" width="0.0924%" height="15" fill="rgb(218,198,43)" fg:x="14441" fg:w="28"/><text x="47.8959%" y="575.50"></text></g><g><title>core::fmt::write (18 samples, 0.06%)</title><rect x="47.6789%" y="549" width="0.0594%" height="15" fill="rgb(231,104,20)" fg:x="14451" fg:w="18"/><text x="47.9289%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (14 samples, 0.05%)</title><rect x="47.6921%" y="533" width="0.0462%" height="15" fill="rgb(254,36,13)" fg:x="14455" fg:w="14"/><text x="47.9421%" y="543.50"></text></g><g><title>[libc.so.6] (12 samples, 0.04%)</title><rect x="47.6987%" y="517" width="0.0396%" height="15" fill="rgb(248,14,50)" fg:x="14457" fg:w="12"/><text x="47.9487%" y="527.50"></text></g><g><title>tracing_core::field::Field::name (4 samples, 0.01%)</title><rect x="47.7383%" y="565" width="0.0132%" height="15" fill="rgb(217,107,29)" fg:x="14469" fg:w="4"/><text x="47.9883%" y="575.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::DefaultVisitor as tracing_core::field::Visit&gt;::record_debug (45 samples, 0.15%)</title><rect x="47.6063%" y="581" width="0.1485%" height="15" fill="rgb(251,169,33)" fg:x="14429" fg:w="45"/><text x="47.8563%" y="591.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (4 samples, 0.01%)</title><rect x="47.8208%" y="533" width="0.0132%" height="15" fill="rgb(217,108,32)" fg:x="14494" fg:w="4"/><text x="48.0708%" y="543.50"></text></g><g><title>&lt;nu_ansi_term::ansi::Suffix as core::fmt::Display&gt;::fmt (10 samples, 0.03%)</title><rect x="47.8571%" y="501" width="0.0330%" height="15" fill="rgb(219,66,42)" fg:x="14505" fg:w="10"/><text x="48.1071%" y="511.50"></text></g><g><title>core::fmt::write (7 samples, 0.02%)</title><rect x="47.8670%" y="485" width="0.0231%" height="15" fill="rgb(206,180,7)" fg:x="14508" fg:w="7"/><text x="48.1170%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (7 samples, 0.02%)</title><rect x="47.9890%" y="469" width="0.0231%" height="15" fill="rgb(208,226,31)" fg:x="14545" fg:w="7"/><text x="48.2390%" y="479.50"></text></g><g><title>&lt;nu_ansi_term::display::AnsiGenericString&lt;str&gt; as core::fmt::Display&gt;::fmt (53 samples, 0.17%)</title><rect x="47.8439%" y="533" width="0.1749%" height="15" fill="rgb(218,26,49)" fg:x="14501" fg:w="53"/><text x="48.0939%" y="543.50"></text></g><g><title>core::fmt::write (52 samples, 0.17%)</title><rect x="47.8472%" y="517" width="0.1716%" height="15" fill="rgb(233,197,48)" fg:x="14502" fg:w="52"/><text x="48.0972%" y="527.50"></text></g><g><title>nu_ansi_term::ansi::&lt;impl nu_ansi_term::style::Style&gt;::write_prefix (39 samples, 0.13%)</title><rect x="47.8901%" y="501" width="0.1287%" height="15" fill="rgb(252,181,51)" fg:x="14515" fg:w="39"/><text x="48.1401%" y="511.50"></text></g><g><title>core::fmt::write (28 samples, 0.09%)</title><rect x="47.9264%" y="485" width="0.0924%" height="15" fill="rgb(253,90,19)" fg:x="14526" fg:w="28"/><text x="48.1764%" y="495.50"></text></g><g><title>core::fmt::write (85 samples, 0.28%)</title><rect x="47.7878%" y="549" width="0.2804%" height="15" fill="rgb(215,171,30)" fg:x="14484" fg:w="85"/><text x="48.0378%" y="559.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (14 samples, 0.05%)</title><rect x="48.0220%" y="533" width="0.0462%" height="15" fill="rgb(214,222,9)" fg:x="14555" fg:w="14"/><text x="48.2720%" y="543.50"></text></g><g><title>core::fmt::Formatter::pad_integral (9 samples, 0.03%)</title><rect x="48.0385%" y="517" width="0.0297%" height="15" fill="rgb(223,3,22)" fg:x="14560" fg:w="9"/><text x="48.2885%" y="527.50"></text></g><g><title>tracing_core::field::ValueSet::record (161 samples, 0.53%)</title><rect x="47.5469%" y="597" width="0.5312%" height="15" fill="rgb(225,196,46)" fg:x="14411" fg:w="161"/><text x="47.7969%" y="607.50"></text></g><g><title>tracing_core::field::Visit::record_u64 (98 samples, 0.32%)</title><rect x="47.7548%" y="581" width="0.3233%" height="15" fill="rgb(209,110,37)" fg:x="14474" fg:w="98"/><text x="48.0048%" y="591.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::DefaultVisitor as tracing_core::field::Visit&gt;::record_debug (98 samples, 0.32%)</title><rect x="47.7548%" y="565" width="0.3233%" height="15" fill="rgb(249,89,12)" fg:x="14474" fg:w="98"/><text x="48.0048%" y="575.50"></text></g><g><title>tracing_subscriber::fmt::format::Writer::write_fmt (13 samples, 0.04%)</title><rect x="48.0781%" y="597" width="0.0429%" height="15" fill="rgb(226,27,33)" fg:x="14572" fg:w="13"/><text x="48.3281%" y="607.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::Format&lt;tracing_subscriber::fmt::format::Full,T&gt; as tracing_subscriber::fmt::format::FormatEvent&lt;S,N&gt;&gt;::format_event (1,089 samples, 3.59%)</title><rect x="44.6171%" y="613" width="3.5930%" height="15" fill="rgb(213,82,22)" fg:x="13523" fg:w="1089"/><text x="44.8671%" y="623.50">&lt;tra..</text></g><g><title>tracing_subscriber::layer::context::Context&lt;S&gt;::event_scope (27 samples, 0.09%)</title><rect x="48.1210%" y="597" width="0.0891%" height="15" fill="rgb(248,140,0)" fg:x="14585" fg:w="27"/><text x="48.3710%" y="607.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::current_span (22 samples, 0.07%)</title><rect x="48.1375%" y="581" width="0.0726%" height="15" fill="rgb(228,106,3)" fg:x="14590" fg:w="22"/><text x="48.3875%" y="591.50"></text></g><g><title>&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_event (2,602 samples, 8.58%)</title><rect x="39.6450%" y="629" width="8.5849%" height="15" fill="rgb(209,23,37)" fg:x="12016" fg:w="2602"/><text x="39.8950%" y="639.50">&lt;tracing_sub..</text></g><g><title>std::io::stdio::stdout (6 samples, 0.02%)</title><rect x="48.2101%" y="613" width="0.0198%" height="15" fill="rgb(241,93,50)" fg:x="14612" fg:w="6"/><text x="48.4601%" y="623.50"></text></g><g><title>&lt;tokio_util::codec::framed_impl::FramedImpl&lt;T,U,W&gt; as futures_sink::Sink&lt;I&gt;&gt;::poll_flush (4,401 samples, 14.52%)</title><rect x="33.7688%" y="661" width="14.5204%" height="15" fill="rgb(253,46,43)" fg:x="10235" fg:w="4401"/><text x="34.0188%" y="671.50">&lt;tokio_util::codec::fr..</text></g><g><title>tracing_core::event::Event::dispatch (2,634 samples, 8.69%)</title><rect x="39.5988%" y="645" width="8.6905%" height="15" fill="rgb(226,206,43)" fg:x="12002" fg:w="2634"/><text x="39.8488%" y="655.50">tracing_core..</text></g><g><title>tracing_core::dispatcher::get_default (18 samples, 0.06%)</title><rect x="48.2299%" y="629" width="0.0594%" height="15" fill="rgb(217,54,7)" fg:x="14618" fg:w="18"/><text x="48.4799%" y="639.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::event_enabled (4 samples, 0.01%)</title><rect x="48.2761%" y="613" width="0.0132%" height="15" fill="rgb(223,5,52)" fg:x="14632" fg:w="4"/><text x="48.5261%" y="623.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::put (13 samples, 0.04%)</title><rect x="48.2992%" y="645" width="0.0429%" height="15" fill="rgb(206,52,46)" fg:x="14639" fg:w="13"/><text x="48.5492%" y="655.50"></text></g><g><title>[libc.so.6] (10 samples, 0.03%)</title><rect x="48.3091%" y="629" width="0.0330%" height="15" fill="rgb(253,136,11)" fg:x="14642" fg:w="10"/><text x="48.5591%" y="639.50"></text></g><g><title>__libc_free (30 samples, 0.10%)</title><rect x="48.3421%" y="645" width="0.0990%" height="15" fill="rgb(208,106,33)" fg:x="14652" fg:w="30"/><text x="48.5921%" y="655.50"></text></g><g><title>[libc.so.6] (10 samples, 0.03%)</title><rect x="48.4081%" y="629" width="0.0330%" height="15" fill="rgb(206,54,4)" fg:x="14672" fg:w="10"/><text x="48.6581%" y="639.50"></text></g><g><title>&lt;tun::async::codec::TunPacketCodec as tokio_util::codec::encoder::Encoder&lt;tun::async::codec::TunPacket&gt;&gt;::encode (50 samples, 0.16%)</title><rect x="48.2893%" y="661" width="0.1650%" height="15" fill="rgb(213,3,15)" fg:x="14636" fg:w="50"/><text x="48.5393%" y="671.50"></text></g><g><title>__libc_free (7 samples, 0.02%)</title><rect x="48.4543%" y="661" width="0.0231%" height="15" fill="rgb(252,211,39)" fg:x="14686" fg:w="7"/><text x="48.7043%" y="671.50"></text></g><g><title>__rdl_alloc (5 samples, 0.02%)</title><rect x="48.5895%" y="645" width="0.0165%" height="15" fill="rgb(223,6,36)" fg:x="14727" fg:w="5"/><text x="48.8395%" y="655.50"></text></g><g><title>malloc (15 samples, 0.05%)</title><rect x="48.6093%" y="645" width="0.0495%" height="15" fill="rgb(252,169,45)" fg:x="14733" fg:w="15"/><text x="48.8593%" y="655.50"></text></g><g><title>futures_util::lock::bilock::BiLock&lt;T&gt;::poll_lock (56 samples, 0.18%)</title><rect x="48.4773%" y="661" width="0.1848%" height="15" fill="rgb(212,48,26)" fg:x="14693" fg:w="56"/><text x="48.7273%" y="671.50"></text></g><g><title>&lt;futures_util::stream::stream::split::SplitSink&lt;S,Item&gt; as futures_sink::Sink&lt;Item&gt;&gt;::poll_flush (4,818 samples, 15.90%)</title><rect x="32.7790%" y="677" width="15.8963%" height="15" fill="rgb(251,102,48)" fg:x="9935" fg:w="4818"/><text x="33.0290%" y="687.50">&lt;futures_util::stream::s..</text></g><g><title>tokio::runtime::task::waker::wake_by_val (4 samples, 0.01%)</title><rect x="48.6621%" y="661" width="0.0132%" height="15" fill="rgb(243,208,16)" fg:x="14749" fg:w="4"/><text x="48.9121%" y="671.50"></text></g><g><title>[libc.so.6] (77 samples, 0.25%)</title><rect x="49.1306%" y="645" width="0.2540%" height="15" fill="rgb(219,96,24)" fg:x="14891" fg:w="77"/><text x="49.3806%" y="655.50"></text></g><g><title>__libc_free (23 samples, 0.08%)</title><rect x="49.3847%" y="645" width="0.0759%" height="15" fill="rgb(219,33,29)" fg:x="14968" fg:w="23"/><text x="49.6347%" y="655.50"></text></g><g><title>[libc.so.6] (5 samples, 0.02%)</title><rect x="49.4441%" y="629" width="0.0165%" height="15" fill="rgb(223,176,5)" fg:x="14986" fg:w="5"/><text x="49.6941%" y="639.50"></text></g><g><title>asm_exc_page_fault (8 samples, 0.03%)</title><rect x="50.2722%" y="597" width="0.0264%" height="15" fill="rgb(228,140,14)" fg:x="15237" fg:w="8"/><text x="50.5222%" y="607.50"></text></g><g><title>exc_page_fault (8 samples, 0.03%)</title><rect x="50.2722%" y="581" width="0.0264%" height="15" fill="rgb(217,179,31)" fg:x="15237" fg:w="8"/><text x="50.5222%" y="591.50"></text></g><g><title>do_user_addr_fault (8 samples, 0.03%)</title><rect x="50.2722%" y="565" width="0.0264%" height="15" fill="rgb(230,9,30)" fg:x="15237" fg:w="8"/><text x="50.5222%" y="575.50"></text></g><g><title>handle_mm_fault (7 samples, 0.02%)</title><rect x="50.2755%" y="549" width="0.0231%" height="15" fill="rgb(230,136,20)" fg:x="15238" fg:w="7"/><text x="50.5255%" y="559.50"></text></g><g><title>__handle_mm_fault (6 samples, 0.02%)</title><rect x="50.2788%" y="533" width="0.0198%" height="15" fill="rgb(215,210,22)" fg:x="15239" fg:w="6"/><text x="50.5288%" y="543.50"></text></g><g><title>__alloc_pages (5 samples, 0.02%)</title><rect x="50.2821%" y="517" width="0.0165%" height="15" fill="rgb(218,43,5)" fg:x="15240" fg:w="5"/><text x="50.5321%" y="527.50"></text></g><g><title>get_page_from_freelist (5 samples, 0.02%)</title><rect x="50.2821%" y="501" width="0.0165%" height="15" fill="rgb(216,11,5)" fg:x="15240" fg:w="5"/><text x="50.5321%" y="511.50"></text></g><g><title>[libc.so.6] (149 samples, 0.49%)</title><rect x="49.8136%" y="629" width="0.4916%" height="15" fill="rgb(209,82,29)" fg:x="15098" fg:w="149"/><text x="50.0636%" y="639.50"></text></g><g><title>[libc.so.6] (35 samples, 0.12%)</title><rect x="50.1897%" y="613" width="0.1155%" height="15" fill="rgb(244,115,12)" fg:x="15212" fg:w="35"/><text x="50.4397%" y="623.50"></text></g><g><title>__lll_lock_wait_private (5 samples, 0.02%)</title><rect x="50.3052%" y="629" width="0.0165%" height="15" fill="rgb(222,82,18)" fg:x="15247" fg:w="5"/><text x="50.5552%" y="639.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (4 samples, 0.01%)</title><rect x="50.3085%" y="613" width="0.0132%" height="15" fill="rgb(249,227,8)" fg:x="15248" fg:w="4"/><text x="50.5585%" y="623.50"></text></g><g><title>do_syscall_64 (4 samples, 0.01%)</title><rect x="50.3085%" y="597" width="0.0132%" height="15" fill="rgb(253,141,45)" fg:x="15248" fg:w="4"/><text x="50.5585%" y="607.50"></text></g><g><title>__task_rq_lock (22 samples, 0.07%)</title><rect x="50.4669%" y="501" width="0.0726%" height="15" fill="rgb(234,184,4)" fg:x="15296" fg:w="22"/><text x="50.7169%" y="511.50"></text></g><g><title>_raw_spin_lock (21 samples, 0.07%)</title><rect x="50.4702%" y="485" width="0.0693%" height="15" fill="rgb(218,194,23)" fg:x="15297" fg:w="21"/><text x="50.7202%" y="495.50"></text></g><g><title>__pv_queued_spin_lock_slowpath (21 samples, 0.07%)</title><rect x="50.4702%" y="469" width="0.0693%" height="15" fill="rgb(235,66,41)" fg:x="15297" fg:w="21"/><text x="50.7202%" y="479.50"></text></g><g><title>select_task_rq_fair (4 samples, 0.01%)</title><rect x="50.5394%" y="501" width="0.0132%" height="15" fill="rgb(245,217,1)" fg:x="15318" fg:w="4"/><text x="50.7894%" y="511.50"></text></g><g><title>__x64_sys_futex (73 samples, 0.24%)</title><rect x="50.3349%" y="581" width="0.2409%" height="15" fill="rgb(229,91,1)" fg:x="15256" fg:w="73"/><text x="50.5849%" y="591.50"></text></g><g><title>do_futex (71 samples, 0.23%)</title><rect x="50.3415%" y="565" width="0.2343%" height="15" fill="rgb(207,101,30)" fg:x="15258" fg:w="71"/><text x="50.5915%" y="575.50"></text></g><g><title>futex_wake (68 samples, 0.22%)</title><rect x="50.3514%" y="549" width="0.2244%" height="15" fill="rgb(223,82,49)" fg:x="15261" fg:w="68"/><text x="50.6014%" y="559.50"></text></g><g><title>wake_up_q (58 samples, 0.19%)</title><rect x="50.3844%" y="533" width="0.1914%" height="15" fill="rgb(218,167,17)" fg:x="15271" fg:w="58"/><text x="50.6344%" y="543.50"></text></g><g><title>try_to_wake_up (58 samples, 0.19%)</title><rect x="50.3844%" y="517" width="0.1914%" height="15" fill="rgb(208,103,14)" fg:x="15271" fg:w="58"/><text x="50.6344%" y="527.50"></text></g><g><title>ttwu_queue_wakelist (7 samples, 0.02%)</title><rect x="50.5526%" y="501" width="0.0231%" height="15" fill="rgb(238,20,8)" fg:x="15322" fg:w="7"/><text x="50.8026%" y="511.50"></text></g><g><title>__lll_lock_wake_private (78 samples, 0.26%)</title><rect x="50.3217%" y="629" width="0.2573%" height="15" fill="rgb(218,80,54)" fg:x="15252" fg:w="78"/><text x="50.5717%" y="639.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (75 samples, 0.25%)</title><rect x="50.3316%" y="613" width="0.2475%" height="15" fill="rgb(240,144,17)" fg:x="15255" fg:w="75"/><text x="50.5816%" y="623.50"></text></g><g><title>do_syscall_64 (75 samples, 0.25%)</title><rect x="50.3316%" y="597" width="0.2475%" height="15" fill="rgb(245,27,50)" fg:x="15255" fg:w="75"/><text x="50.5816%" y="607.50"></text></g><g><title>bytes::bytes::&lt;impl core::convert::From&lt;bytes::bytes::Bytes&gt; for alloc::vec::Vec&lt;u8&gt;&gt;::from (575 samples, 1.90%)</title><rect x="48.6852%" y="677" width="1.8971%" height="15" fill="rgb(251,51,7)" fg:x="14756" fg:w="575"/><text x="48.9352%" y="687.50">b..</text></g><g><title>bytes::bytes_mut::shared_v_to_vec (562 samples, 1.85%)</title><rect x="48.7281%" y="661" width="1.8542%" height="15" fill="rgb(245,217,29)" fg:x="14769" fg:w="562"/><text x="48.9781%" y="671.50">b..</text></g><g><title>malloc (336 samples, 1.11%)</title><rect x="49.4738%" y="645" width="1.1086%" height="15" fill="rgb(221,176,29)" fg:x="14995" fg:w="336"/><text x="49.7238%" y="655.50"></text></g><g><title>&lt;tokio::runtime::coop::RestoreOnPending as core::ops::drop::Drop&gt;::drop (6 samples, 0.02%)</title><rect x="50.8628%" y="629" width="0.0198%" height="15" fill="rgb(212,180,24)" fg:x="15416" fg:w="6"/><text x="51.1128%" y="639.50"></text></g><g><title>&lt;tokio::sync::mpsc::bounded::Semaphore as tokio::sync::mpsc::chan::Semaphore&gt;::add_permit (7 samples, 0.02%)</title><rect x="50.8826%" y="629" width="0.0231%" height="15" fill="rgb(254,24,2)" fg:x="15422" fg:w="7"/><text x="51.1326%" y="639.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::add_permits_locked (4 samples, 0.01%)</title><rect x="50.9057%" y="629" width="0.0132%" height="15" fill="rgb(230,100,2)" fg:x="15429" fg:w="4"/><text x="51.1557%" y="639.50"></text></g><g><title>tokio::sync::mpsc::list::Rx&lt;T&gt;::pop (18 samples, 0.06%)</title><rect x="50.9189%" y="629" width="0.0594%" height="15" fill="rgb(219,142,25)" fg:x="15433" fg:w="18"/><text x="51.1689%" y="639.50"></text></g><g><title>&lt;netstack_smoltcp::stack::Stack as futures_core::stream::Stream&gt;::poll_next (48 samples, 0.16%)</title><rect x="50.8232%" y="661" width="0.1584%" height="15" fill="rgb(240,73,43)" fg:x="15404" fg:w="48"/><text x="51.0732%" y="671.50"></text></g><g><title>tokio::sync::mpsc::chan::Rx&lt;T,S&gt;::recv (43 samples, 0.14%)</title><rect x="50.8397%" y="645" width="0.1419%" height="15" fill="rgb(214,114,15)" fg:x="15409" fg:w="43"/><text x="51.0897%" y="655.50"></text></g><g><title>exc_page_fault (6 samples, 0.02%)</title><rect x="52.1825%" y="549" width="0.0198%" height="15" fill="rgb(207,130,4)" fg:x="15816" fg:w="6"/><text x="52.4325%" y="559.50"></text></g><g><title>do_user_addr_fault (6 samples, 0.02%)</title><rect x="52.1825%" y="533" width="0.0198%" height="15" fill="rgb(221,25,40)" fg:x="15816" fg:w="6"/><text x="52.4325%" y="543.50"></text></g><g><title>handle_mm_fault (6 samples, 0.02%)</title><rect x="52.1825%" y="517" width="0.0198%" height="15" fill="rgb(241,184,7)" fg:x="15816" fg:w="6"/><text x="52.4325%" y="527.50"></text></g><g><title>__handle_mm_fault (5 samples, 0.02%)</title><rect x="52.1858%" y="501" width="0.0165%" height="15" fill="rgb(235,159,4)" fg:x="15817" fg:w="5"/><text x="52.4358%" y="511.50"></text></g><g><title>asm_exc_page_fault (7 samples, 0.02%)</title><rect x="52.1825%" y="565" width="0.0231%" height="15" fill="rgb(214,87,48)" fg:x="15816" fg:w="7"/><text x="52.4325%" y="575.50"></text></g><g><title>[libc.so.6] (57 samples, 0.19%)</title><rect x="52.0209%" y="597" width="0.1881%" height="15" fill="rgb(246,198,24)" fg:x="15767" fg:w="57"/><text x="52.2709%" y="607.50"></text></g><g><title>[libc.so.6] (22 samples, 0.07%)</title><rect x="52.1363%" y="581" width="0.0726%" height="15" fill="rgb(209,66,40)" fg:x="15802" fg:w="22"/><text x="52.3863%" y="591.50"></text></g><g><title>__task_rq_lock (7 samples, 0.02%)</title><rect x="52.2353%" y="469" width="0.0231%" height="15" fill="rgb(233,147,39)" fg:x="15832" fg:w="7"/><text x="52.4853%" y="479.50"></text></g><g><title>_raw_spin_lock (7 samples, 0.02%)</title><rect x="52.2353%" y="453" width="0.0231%" height="15" fill="rgb(231,145,52)" fg:x="15832" fg:w="7"/><text x="52.4853%" y="463.50"></text></g><g><title>__pv_queued_spin_lock_slowpath (7 samples, 0.02%)</title><rect x="52.2353%" y="437" width="0.0231%" height="15" fill="rgb(206,20,26)" fg:x="15832" fg:w="7"/><text x="52.4853%" y="447.50"></text></g><g><title>bytes::bytes_mut::BytesMut::reserve_inner (123 samples, 0.41%)</title><rect x="51.8559%" y="629" width="0.4058%" height="15" fill="rgb(238,220,4)" fg:x="15717" fg:w="123"/><text x="52.1059%" y="639.50"></text></g><g><title>malloc (102 samples, 0.34%)</title><rect x="51.9252%" y="613" width="0.3365%" height="15" fill="rgb(252,195,42)" fg:x="15738" fg:w="102"/><text x="52.1752%" y="623.50"></text></g><g><title>__lll_lock_wake_private (16 samples, 0.05%)</title><rect x="52.2089%" y="597" width="0.0528%" height="15" fill="rgb(209,10,6)" fg:x="15824" fg:w="16"/><text x="52.4589%" y="607.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (16 samples, 0.05%)</title><rect x="52.2089%" y="581" width="0.0528%" height="15" fill="rgb(229,3,52)" fg:x="15824" fg:w="16"/><text x="52.4589%" y="591.50"></text></g><g><title>do_syscall_64 (16 samples, 0.05%)</title><rect x="52.2089%" y="565" width="0.0528%" height="15" fill="rgb(253,49,37)" fg:x="15824" fg:w="16"/><text x="52.4589%" y="575.50"></text></g><g><title>__x64_sys_futex (16 samples, 0.05%)</title><rect x="52.2089%" y="549" width="0.0528%" height="15" fill="rgb(240,103,49)" fg:x="15824" fg:w="16"/><text x="52.4589%" y="559.50"></text></g><g><title>do_futex (16 samples, 0.05%)</title><rect x="52.2089%" y="533" width="0.0528%" height="15" fill="rgb(250,182,30)" fg:x="15824" fg:w="16"/><text x="52.4589%" y="543.50"></text></g><g><title>futex_wake (15 samples, 0.05%)</title><rect x="52.2122%" y="517" width="0.0495%" height="15" fill="rgb(248,8,30)" fg:x="15825" fg:w="15"/><text x="52.4622%" y="527.50"></text></g><g><title>wake_up_q (13 samples, 0.04%)</title><rect x="52.2188%" y="501" width="0.0429%" height="15" fill="rgb(237,120,30)" fg:x="15827" fg:w="13"/><text x="52.4688%" y="511.50"></text></g><g><title>try_to_wake_up (13 samples, 0.04%)</title><rect x="52.2188%" y="485" width="0.0429%" height="15" fill="rgb(221,146,34)" fg:x="15827" fg:w="13"/><text x="52.4688%" y="495.50"></text></g><g><title>bytes::bytes_mut::BytesMut::advance_unchecked (6 samples, 0.02%)</title><rect x="52.4333%" y="613" width="0.0198%" height="15" fill="rgb(242,55,13)" fg:x="15892" fg:w="6"/><text x="52.6833%" y="623.50"></text></g><g><title>&lt;tun::async::codec::TunPacketCodec as tokio_util::codec::decoder::Decoder&gt;::decode (249 samples, 0.82%)</title><rect x="51.6744%" y="645" width="0.8215%" height="15" fill="rgb(242,112,31)" fg:x="15662" fg:w="249"/><text x="51.9244%" y="655.50"></text></g><g><title>bytes::bytes_mut::BytesMut::split_to (71 samples, 0.23%)</title><rect x="52.2617%" y="629" width="0.2343%" height="15" fill="rgb(249,192,27)" fg:x="15840" fg:w="71"/><text x="52.5117%" y="639.50"></text></g><g><title>malloc (13 samples, 0.04%)</title><rect x="52.4531%" y="613" width="0.0429%" height="15" fill="rgb(208,204,44)" fg:x="15898" fg:w="13"/><text x="52.7031%" y="623.50"></text></g><g><title>__alloc_pages (7 samples, 0.02%)</title><rect x="53.3439%" y="533" width="0.0231%" height="15" fill="rgb(208,93,54)" fg:x="16168" fg:w="7"/><text x="53.5939%" y="543.50"></text></g><g><title>[libc.so.6] (235 samples, 0.78%)</title><rect x="52.5982%" y="629" width="0.7753%" height="15" fill="rgb(242,1,31)" fg:x="15942" fg:w="235"/><text x="52.8482%" y="639.50"></text></g><g><title>asm_exc_page_fault (12 samples, 0.04%)</title><rect x="53.3340%" y="613" width="0.0396%" height="15" fill="rgb(241,83,25)" fg:x="16165" fg:w="12"/><text x="53.5840%" y="623.50"></text></g><g><title>exc_page_fault (12 samples, 0.04%)</title><rect x="53.3340%" y="597" width="0.0396%" height="15" fill="rgb(205,169,50)" fg:x="16165" fg:w="12"/><text x="53.5840%" y="607.50"></text></g><g><title>do_user_addr_fault (12 samples, 0.04%)</title><rect x="53.3340%" y="581" width="0.0396%" height="15" fill="rgb(239,186,37)" fg:x="16165" fg:w="12"/><text x="53.5840%" y="591.50"></text></g><g><title>handle_mm_fault (11 samples, 0.04%)</title><rect x="53.3373%" y="565" width="0.0363%" height="15" fill="rgb(205,221,10)" fg:x="16166" fg:w="11"/><text x="53.5873%" y="575.50"></text></g><g><title>__handle_mm_fault (10 samples, 0.03%)</title><rect x="53.3406%" y="549" width="0.0330%" height="15" fill="rgb(218,196,15)" fg:x="16167" fg:w="10"/><text x="53.5906%" y="559.50"></text></g><g><title>[libc.so.6] (90 samples, 0.30%)</title><rect x="53.5485%" y="597" width="0.2969%" height="15" fill="rgb(218,196,35)" fg:x="16230" fg:w="90"/><text x="53.7985%" y="607.50"></text></g><g><title>entry_SYSCALL_64 (44 samples, 0.15%)</title><rect x="53.8454%" y="597" width="0.1452%" height="15" fill="rgb(233,63,24)" fg:x="16320" fg:w="44"/><text x="54.0954%" y="607.50"></text></g><g><title>__x64_sys_read (8 samples, 0.03%)</title><rect x="54.0368%" y="565" width="0.0264%" height="15" fill="rgb(225,8,4)" fg:x="16378" fg:w="8"/><text x="54.2868%" y="575.50"></text></g><g><title>__fdget_pos (59 samples, 0.19%)</title><rect x="54.1291%" y="549" width="0.1947%" height="15" fill="rgb(234,105,35)" fg:x="16406" fg:w="59"/><text x="54.3791%" y="559.50"></text></g><g><title>__fget_light (59 samples, 0.19%)</title><rect x="54.1291%" y="533" width="0.1947%" height="15" fill="rgb(236,21,32)" fg:x="16406" fg:w="59"/><text x="54.3791%" y="543.50"></text></g><g><title>__fget_files (45 samples, 0.15%)</title><rect x="54.1753%" y="517" width="0.1485%" height="15" fill="rgb(228,109,6)" fg:x="16420" fg:w="45"/><text x="54.4253%" y="527.50"></text></g><g><title>fput_many (11 samples, 0.04%)</title><rect x="54.3238%" y="549" width="0.0363%" height="15" fill="rgb(229,215,31)" fg:x="16465" fg:w="11"/><text x="54.5738%" y="559.50"></text></g><g><title>fsnotify_perm.part.0 (16 samples, 0.05%)</title><rect x="54.4030%" y="533" width="0.0528%" height="15" fill="rgb(221,52,54)" fg:x="16489" fg:w="16"/><text x="54.6530%" y="543.50"></text></g><g><title>iov_iter_init (6 samples, 0.02%)</title><rect x="54.4855%" y="517" width="0.0198%" height="15" fill="rgb(252,129,43)" fg:x="16514" fg:w="6"/><text x="54.7355%" y="527.50"></text></g><g><title>__raw_callee_save___pv_queued_spin_unlock (16 samples, 0.05%)</title><rect x="54.8682%" y="485" width="0.0528%" height="15" fill="rgb(248,183,27)" fg:x="16630" fg:w="16"/><text x="55.1182%" y="495.50"></text></g><g><title>_raw_spin_lock (21 samples, 0.07%)</title><rect x="54.9210%" y="485" width="0.0693%" height="15" fill="rgb(250,0,22)" fg:x="16646" fg:w="21"/><text x="55.1710%" y="495.50"></text></g><g><title>skb_release_data (69 samples, 0.23%)</title><rect x="54.9903%" y="469" width="0.2277%" height="15" fill="rgb(213,166,10)" fg:x="16667" fg:w="69"/><text x="55.2403%" y="479.50"></text></g><g><title>kfree (52 samples, 0.17%)</title><rect x="55.0464%" y="453" width="0.1716%" height="15" fill="rgb(207,163,36)" fg:x="16684" fg:w="52"/><text x="55.2964%" y="463.50"></text></g><g><title>__slab_free.constprop.0 (34 samples, 0.11%)</title><rect x="55.1057%" y="437" width="0.1122%" height="15" fill="rgb(208,122,22)" fg:x="16702" fg:w="34"/><text x="55.3557%" y="447.50"></text></g><g><title>consume_skb (71 samples, 0.23%)</title><rect x="54.9903%" y="485" width="0.2343%" height="15" fill="rgb(207,104,49)" fg:x="16667" fg:w="71"/><text x="55.2403%" y="495.50"></text></g><g><title>__slab_free.constprop.0 (35 samples, 0.12%)</title><rect x="55.3070%" y="469" width="0.1155%" height="15" fill="rgb(248,211,50)" fg:x="16763" fg:w="35"/><text x="55.5570%" y="479.50"></text></g><g><title>_raw_spin_lock_irqsave (4 samples, 0.01%)</title><rect x="55.4093%" y="453" width="0.0132%" height="15" fill="rgb(217,13,45)" fg:x="16794" fg:w="4"/><text x="55.6593%" y="463.50"></text></g><g><title>free_unref_page (6 samples, 0.02%)</title><rect x="55.4225%" y="469" width="0.0198%" height="15" fill="rgb(211,216,49)" fg:x="16798" fg:w="6"/><text x="55.6725%" y="479.50"></text></g><g><title>kmem_cache_free.part.0 (65 samples, 0.21%)</title><rect x="55.2311%" y="485" width="0.2145%" height="15" fill="rgb(221,58,53)" fg:x="16740" fg:w="65"/><text x="55.4811%" y="495.50"></text></g><g><title>copy_user_enhanced_fast_string (257 samples, 0.85%)</title><rect x="55.7656%" y="437" width="0.8479%" height="15" fill="rgb(220,112,41)" fg:x="16902" fg:w="257"/><text x="56.0156%" y="447.50"></text></g><g><title>_copy_to_iter (356 samples, 1.17%)</title><rect x="55.6468%" y="453" width="1.1746%" height="15" fill="rgb(236,38,28)" fg:x="16866" fg:w="356"/><text x="55.8968%" y="463.50"></text></g><g><title>copy_user_generic_unrolled (63 samples, 0.21%)</title><rect x="56.6135%" y="437" width="0.2079%" height="15" fill="rgb(227,195,22)" fg:x="17159" fg:w="63"/><text x="56.8635%" y="447.50"></text></g><g><title>__check_heap_object (28 samples, 0.09%)</title><rect x="57.0458%" y="421" width="0.0924%" height="15" fill="rgb(214,55,33)" fg:x="17290" fg:w="28"/><text x="57.2958%" y="431.50"></text></g><g><title>__virt_addr_valid (75 samples, 0.25%)</title><rect x="57.1381%" y="421" width="0.2475%" height="15" fill="rgb(248,80,13)" fg:x="17318" fg:w="75"/><text x="57.3881%" y="431.50"></text></g><g><title>tun_do_read (857 samples, 2.83%)</title><rect x="54.5910%" y="501" width="2.8275%" height="15" fill="rgb(238,52,6)" fg:x="16546" fg:w="857"/><text x="54.8410%" y="511.50">tu..</text></g><g><title>skb_copy_datagram_iter (598 samples, 1.97%)</title><rect x="55.4456%" y="485" width="1.9730%" height="15" fill="rgb(224,198,47)" fg:x="16805" fg:w="598"/><text x="55.6956%" y="495.50">s..</text></g><g><title>__skb_datagram_iter (598 samples, 1.97%)</title><rect x="55.4456%" y="469" width="1.9730%" height="15" fill="rgb(233,171,20)" fg:x="16805" fg:w="598"/><text x="55.6956%" y="479.50">_..</text></g><g><title>simple_copy_to_iter (181 samples, 0.60%)</title><rect x="56.8214%" y="453" width="0.5972%" height="15" fill="rgb(241,30,25)" fg:x="17222" fg:w="181"/><text x="57.0714%" y="463.50"></text></g><g><title>__check_object_size (175 samples, 0.58%)</title><rect x="56.8412%" y="437" width="0.5774%" height="15" fill="rgb(207,171,38)" fg:x="17228" fg:w="175"/><text x="57.0912%" y="447.50"></text></g><g><title>check_stack_object (10 samples, 0.03%)</title><rect x="57.3856%" y="421" width="0.0330%" height="15" fill="rgb(234,70,1)" fg:x="17393" fg:w="10"/><text x="57.6356%" y="431.50"></text></g><g><title>new_sync_read (955 samples, 3.15%)</title><rect x="54.4558%" y="533" width="3.1509%" height="15" fill="rgb(232,178,18)" fg:x="16505" fg:w="955"/><text x="54.7058%" y="543.50">new..</text></g><g><title>tun_chr_read_iter (940 samples, 3.10%)</title><rect x="54.5053%" y="517" width="3.1014%" height="15" fill="rgb(241,78,40)" fg:x="16520" fg:w="940"/><text x="54.7553%" y="527.50">tun..</text></g><g><title>tun_get (57 samples, 0.19%)</title><rect x="57.4186%" y="501" width="0.1881%" height="15" fill="rgb(222,35,25)" fg:x="17403" fg:w="57"/><text x="57.6686%" y="511.50"></text></g><g><title>ksys_read (1,079 samples, 3.56%)</title><rect x="54.0631%" y="565" width="3.5600%" height="15" fill="rgb(207,92,16)" fg:x="16386" fg:w="1079"/><text x="54.3131%" y="575.50">ksys..</text></g><g><title>vfs_read (989 samples, 3.26%)</title><rect x="54.3601%" y="549" width="3.2631%" height="15" fill="rgb(216,59,51)" fg:x="16476" fg:w="989"/><text x="54.6101%" y="559.50">vfs..</text></g><g><title>entry_SYSCALL_64_after_hwframe (1,111 samples, 3.67%)</title><rect x="53.9906%" y="597" width="3.6656%" height="15" fill="rgb(213,80,28)" fg:x="16364" fg:w="1111"/><text x="54.2406%" y="607.50">entr..</text></g><g><title>do_syscall_64 (1,104 samples, 3.64%)</title><rect x="54.0137%" y="581" width="3.6425%" height="15" fill="rgb(220,93,7)" fg:x="16371" fg:w="1104"/><text x="54.2637%" y="591.50">do_s..</text></g><g><title>syscall_exit_to_user_mode (7 samples, 0.02%)</title><rect x="57.6330%" y="565" width="0.0231%" height="15" fill="rgb(225,24,44)" fg:x="17468" fg:w="7"/><text x="57.8830%" y="575.50"></text></g><g><title>exit_to_user_mode_prepare (4 samples, 0.01%)</title><rect x="57.6429%" y="549" width="0.0132%" height="15" fill="rgb(243,74,40)" fg:x="17471" fg:w="4"/><text x="57.8929%" y="559.50"></text></g><g><title>read (1,270 samples, 4.19%)</title><rect x="53.4726%" y="613" width="4.1902%" height="15" fill="rgb(228,39,7)" fg:x="16207" fg:w="1270"/><text x="53.7226%" y="623.50">read</text></g><g><title>tokio::io::async_fd::AsyncFdReadyMutGuard&lt;Inner&gt;::try_io (1,302 samples, 4.30%)</title><rect x="53.3736%" y="629" width="4.2958%" height="15" fill="rgb(227,79,8)" fg:x="16177" fg:w="1302"/><text x="53.6236%" y="639.50">tokio..</text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness (11 samples, 0.04%)</title><rect x="57.8145%" y="597" width="0.0363%" height="15" fill="rgb(236,58,11)" fg:x="17523" fg:w="11"/><text x="58.0645%" y="607.50"></text></g><g><title>&lt;tun::async::device::AsyncDevice as tokio::io::async_read::AsyncRead&gt;::poll_read (1,624 samples, 5.36%)</title><rect x="52.4960%" y="645" width="5.3581%" height="15" fill="rgb(249,63,35)" fg:x="15911" fg:w="1624"/><text x="52.7460%" y="655.50">&lt;tun::a..</text></g><g><title>tokio::runtime::io::registration::Registration::poll_read_ready (56 samples, 0.18%)</title><rect x="57.6693%" y="629" width="0.1848%" height="15" fill="rgb(252,114,16)" fg:x="17479" fg:w="56"/><text x="57.9193%" y="639.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (44 samples, 0.15%)</title><rect x="57.7089%" y="613" width="0.1452%" height="15" fill="rgb(254,151,24)" fg:x="17491" fg:w="44"/><text x="57.9589%" y="623.50"></text></g><g><title>tracing::__macro_support::__is_enabled (7 samples, 0.02%)</title><rect x="57.8541%" y="645" width="0.0231%" height="15" fill="rgb(253,54,39)" fg:x="17535" fg:w="7"/><text x="58.1041%" y="655.50"></text></g><g><title>[libc.so.6] (182 samples, 0.60%)</title><rect x="60.0713%" y="533" width="0.6005%" height="15" fill="rgb(243,25,45)" fg:x="18207" fg:w="182"/><text x="60.3213%" y="543.50"></text></g><g><title>entry_SYSCALL_64 (82 samples, 0.27%)</title><rect x="60.6717%" y="533" width="0.2705%" height="15" fill="rgb(234,134,9)" fg:x="18389" fg:w="82"/><text x="60.9217%" y="543.50"></text></g><g><title>__x64_sys_write (18 samples, 0.06%)</title><rect x="61.1205%" y="501" width="0.0594%" height="15" fill="rgb(227,166,31)" fg:x="18525" fg:w="18"/><text x="61.3705%" y="511.50"></text></g><g><title>__f_unlock_pos (4 samples, 0.01%)</title><rect x="61.3250%" y="485" width="0.0132%" height="15" fill="rgb(245,143,41)" fg:x="18587" fg:w="4"/><text x="61.5750%" y="495.50"></text></g><g><title>__fget_light (135 samples, 0.45%)</title><rect x="61.4339%" y="469" width="0.4454%" height="15" fill="rgb(238,181,32)" fg:x="18620" fg:w="135"/><text x="61.6839%" y="479.50"></text></g><g><title>__fget_files (110 samples, 0.36%)</title><rect x="61.5164%" y="453" width="0.3629%" height="15" fill="rgb(224,113,18)" fg:x="18645" fg:w="110"/><text x="61.7664%" y="463.50"></text></g><g><title>__fdget_pos (206 samples, 0.68%)</title><rect x="61.3382%" y="485" width="0.6797%" height="15" fill="rgb(240,229,28)" fg:x="18591" fg:w="206"/><text x="61.5882%" y="495.50"></text></g><g><title>mutex_lock (42 samples, 0.14%)</title><rect x="61.8793%" y="469" width="0.1386%" height="15" fill="rgb(250,185,3)" fg:x="18755" fg:w="42"/><text x="62.1293%" y="479.50"></text></g><g><title>fput_many (28 samples, 0.09%)</title><rect x="62.0245%" y="485" width="0.0924%" height="15" fill="rgb(212,59,25)" fg:x="18799" fg:w="28"/><text x="62.2745%" y="495.50"></text></g><g><title>mutex_unlock (27 samples, 0.09%)</title><rect x="62.1169%" y="485" width="0.0891%" height="15" fill="rgb(221,87,20)" fg:x="18827" fg:w="27"/><text x="62.3669%" y="495.50"></text></g><g><title>__fsnotify_parent (34 samples, 0.11%)</title><rect x="62.4930%" y="469" width="0.1122%" height="15" fill="rgb(213,74,28)" fg:x="18941" fg:w="34"/><text x="62.7430%" y="479.50"></text></g><g><title>down_write (57 samples, 0.19%)</title><rect x="62.8592%" y="437" width="0.1881%" height="15" fill="rgb(224,132,34)" fg:x="19052" fg:w="57"/><text x="63.1092%" y="447.50"></text></g><g><title>ext4_generic_write_checks (44 samples, 0.15%)</title><rect x="63.0473%" y="437" width="0.1452%" height="15" fill="rgb(222,101,24)" fg:x="19109" fg:w="44"/><text x="63.2973%" y="447.50"></text></g><g><title>generic_write_checks (34 samples, 0.11%)</title><rect x="63.0803%" y="421" width="0.1122%" height="15" fill="rgb(254,142,4)" fg:x="19119" fg:w="34"/><text x="63.3303%" y="431.50"></text></g><g><title>generic_write_check_limits (10 samples, 0.03%)</title><rect x="63.1595%" y="405" width="0.0330%" height="15" fill="rgb(230,229,49)" fg:x="19143" fg:w="10"/><text x="63.4095%" y="415.50"></text></g><g><title>file_modified (22 samples, 0.07%)</title><rect x="63.1925%" y="437" width="0.0726%" height="15" fill="rgb(238,70,47)" fg:x="19153" fg:w="22"/><text x="63.4425%" y="447.50"></text></g><g><title>file_remove_privs (14 samples, 0.05%)</title><rect x="63.2188%" y="421" width="0.0462%" height="15" fill="rgb(231,160,17)" fg:x="19161" fg:w="14"/><text x="63.4688%" y="431.50"></text></g><g><title>current_time (38 samples, 0.13%)</title><rect x="63.3475%" y="421" width="0.1254%" height="15" fill="rgb(218,68,53)" fg:x="19200" fg:w="38"/><text x="63.5975%" y="431.50"></text></g><g><title>ktime_get_coarse_real_ts64 (20 samples, 0.07%)</title><rect x="63.4069%" y="405" width="0.0660%" height="15" fill="rgb(236,111,10)" fg:x="19218" fg:w="20"/><text x="63.6569%" y="415.50"></text></g><g><title>file_update_time (67 samples, 0.22%)</title><rect x="63.2650%" y="437" width="0.2211%" height="15" fill="rgb(224,34,41)" fg:x="19175" fg:w="67"/><text x="63.5150%" y="447.50"></text></g><g><title>generic_update_time (4 samples, 0.01%)</title><rect x="63.4729%" y="421" width="0.0132%" height="15" fill="rgb(241,118,19)" fg:x="19238" fg:w="4"/><text x="63.7229%" y="431.50"></text></g><g><title>__mark_inode_dirty (4 samples, 0.01%)</title><rect x="63.4729%" y="405" width="0.0132%" height="15" fill="rgb(238,129,25)" fg:x="19238" fg:w="4"/><text x="63.7229%" y="415.50"></text></g><g><title>ext4_dirty_inode (4 samples, 0.01%)</title><rect x="63.4729%" y="389" width="0.0132%" height="15" fill="rgb(238,22,31)" fg:x="19238" fg:w="4"/><text x="63.7229%" y="399.50"></text></g><g><title>__cond_resched (30 samples, 0.10%)</title><rect x="63.7006%" y="421" width="0.0990%" height="15" fill="rgb(222,174,48)" fg:x="19307" fg:w="30"/><text x="63.9506%" y="431.50"></text></g><g><title>rcu_all_qs (25 samples, 0.08%)</title><rect x="63.7170%" y="405" width="0.0825%" height="15" fill="rgb(206,152,40)" fg:x="19312" fg:w="25"/><text x="63.9670%" y="415.50"></text></g><g><title>balance_dirty_pages_ratelimited (33 samples, 0.11%)</title><rect x="63.7995%" y="421" width="0.1089%" height="15" fill="rgb(218,99,54)" fg:x="19337" fg:w="33"/><text x="64.0495%" y="431.50"></text></g><g><title>copy_user_enhanced_fast_string (136 samples, 0.45%)</title><rect x="64.3142%" y="405" width="0.4487%" height="15" fill="rgb(220,174,26)" fg:x="19493" fg:w="136"/><text x="64.5642%" y="415.50"></text></g><g><title>copy_page_from_iter_atomic (262 samples, 0.86%)</title><rect x="63.9084%" y="421" width="0.8644%" height="15" fill="rgb(245,116,9)" fg:x="19370" fg:w="262"/><text x="64.1584%" y="431.50"></text></g><g><title>clean_bdev_aliases (13 samples, 0.04%)</title><rect x="65.2117%" y="389" width="0.0429%" height="15" fill="rgb(209,72,35)" fg:x="19765" fg:w="13"/><text x="65.4617%" y="399.50"></text></g><g><title>pagevec_lookup_range (12 samples, 0.04%)</title><rect x="65.2150%" y="373" width="0.0396%" height="15" fill="rgb(226,126,21)" fg:x="19766" fg:w="12"/><text x="65.4650%" y="383.50"></text></g><g><title>find_get_pages_range (11 samples, 0.04%)</title><rect x="65.2183%" y="357" width="0.0363%" height="15" fill="rgb(227,192,1)" fg:x="19767" fg:w="11"/><text x="65.4683%" y="367.50"></text></g><g><title>xas_find (5 samples, 0.02%)</title><rect x="65.2380%" y="341" width="0.0165%" height="15" fill="rgb(237,180,29)" fg:x="19773" fg:w="5"/><text x="65.4880%" y="351.50"></text></g><g><title>create_page_buffers (42 samples, 0.14%)</title><rect x="65.2545%" y="389" width="0.1386%" height="15" fill="rgb(230,197,35)" fg:x="19778" fg:w="42"/><text x="65.5045%" y="399.50"></text></g><g><title>create_empty_buffers (25 samples, 0.08%)</title><rect x="65.3106%" y="373" width="0.0825%" height="15" fill="rgb(246,193,31)" fg:x="19795" fg:w="25"/><text x="65.5606%" y="383.50"></text></g><g><title>alloc_page_buffers (18 samples, 0.06%)</title><rect x="65.3337%" y="357" width="0.0594%" height="15" fill="rgb(241,36,4)" fg:x="19802" fg:w="18"/><text x="65.5837%" y="367.50"></text></g><g><title>alloc_buffer_head (15 samples, 0.05%)</title><rect x="65.3436%" y="341" width="0.0495%" height="15" fill="rgb(241,130,17)" fg:x="19805" fg:w="15"/><text x="65.5936%" y="351.50"></text></g><g><title>kmem_cache_alloc (9 samples, 0.03%)</title><rect x="65.3634%" y="325" width="0.0297%" height="15" fill="rgb(206,137,32)" fg:x="19811" fg:w="9"/><text x="65.6134%" y="335.50"></text></g><g><title>__dquot_alloc_space (9 samples, 0.03%)</title><rect x="65.4459%" y="357" width="0.0297%" height="15" fill="rgb(237,228,51)" fg:x="19836" fg:w="9"/><text x="65.6959%" y="367.50"></text></g><g><title>ext4_da_reserve_space (23 samples, 0.08%)</title><rect x="65.4360%" y="373" width="0.0759%" height="15" fill="rgb(243,6,42)" fg:x="19833" fg:w="23"/><text x="65.6860%" y="383.50"></text></g><g><title>ext4_claim_free_clusters (8 samples, 0.03%)</title><rect x="65.4855%" y="357" width="0.0264%" height="15" fill="rgb(251,74,28)" fg:x="19848" fg:w="8"/><text x="65.7355%" y="367.50"></text></g><g><title>percpu_counter_add_batch (5 samples, 0.02%)</title><rect x="65.4954%" y="341" width="0.0165%" height="15" fill="rgb(218,20,49)" fg:x="19851" fg:w="5"/><text x="65.7454%" y="351.50"></text></g><g><title>__es_insert_extent (14 samples, 0.05%)</title><rect x="65.5218%" y="357" width="0.0462%" height="15" fill="rgb(238,28,14)" fg:x="19859" fg:w="14"/><text x="65.7718%" y="367.50"></text></g><g><title>ext4_es_insert_delayed_block (22 samples, 0.07%)</title><rect x="65.5119%" y="373" width="0.0726%" height="15" fill="rgb(229,40,46)" fg:x="19856" fg:w="22"/><text x="65.7619%" y="383.50"></text></g><g><title>ext4_da_get_block_prep (72 samples, 0.24%)</title><rect x="65.3931%" y="389" width="0.2376%" height="15" fill="rgb(244,195,20)" fg:x="19820" fg:w="72"/><text x="65.6431%" y="399.50"></text></g><g><title>ext4_es_lookup_extent (14 samples, 0.05%)</title><rect x="65.5845%" y="373" width="0.0462%" height="15" fill="rgb(253,56,35)" fg:x="19878" fg:w="14"/><text x="65.8345%" y="383.50"></text></g><g><title>percpu_counter_add_batch (6 samples, 0.02%)</title><rect x="65.6109%" y="357" width="0.0198%" height="15" fill="rgb(210,149,44)" fg:x="19886" fg:w="6"/><text x="65.8609%" y="367.50"></text></g><g><title>__block_write_begin_int (249 samples, 0.82%)</title><rect x="65.0566%" y="405" width="0.8215%" height="15" fill="rgb(240,135,12)" fg:x="19718" fg:w="249"/><text x="65.3066%" y="415.50"></text></g><g><title>zero_user_segments (75 samples, 0.25%)</title><rect x="65.6307%" y="389" width="0.2475%" height="15" fill="rgb(251,24,50)" fg:x="19892" fg:w="75"/><text x="65.8807%" y="399.50"></text></g><g><title>memset_erms (72 samples, 0.24%)</title><rect x="65.6406%" y="373" width="0.2376%" height="15" fill="rgb(243,200,47)" fg:x="19895" fg:w="72"/><text x="65.8906%" y="383.50"></text></g><g><title>ext4_nonda_switch (39 samples, 0.13%)</title><rect x="65.8781%" y="405" width="0.1287%" height="15" fill="rgb(224,166,26)" fg:x="19967" fg:w="39"/><text x="66.1281%" y="415.50"></text></g><g><title>PageHuge (16 samples, 0.05%)</title><rect x="66.4588%" y="373" width="0.0528%" height="15" fill="rgb(233,0,47)" fg:x="20143" fg:w="16"/><text x="66.7088%" y="383.50"></text></g><g><title>__list_del_entry_valid (4 samples, 0.01%)</title><rect x="66.5743%" y="341" width="0.0132%" height="15" fill="rgb(253,80,5)" fg:x="20178" fg:w="4"/><text x="66.8243%" y="351.50"></text></g><g><title>node_dirty_ok (9 samples, 0.03%)</title><rect x="66.5875%" y="341" width="0.0297%" height="15" fill="rgb(214,133,25)" fg:x="20182" fg:w="9"/><text x="66.8375%" y="351.50"></text></g><g><title>__alloc_pages (37 samples, 0.12%)</title><rect x="66.5116%" y="373" width="0.1221%" height="15" fill="rgb(209,27,14)" fg:x="20159" fg:w="37"/><text x="66.7616%" y="383.50"></text></g><g><title>get_page_from_freelist (26 samples, 0.09%)</title><rect x="66.5479%" y="357" width="0.0858%" height="15" fill="rgb(219,102,51)" fg:x="20170" fg:w="26"/><text x="66.7979%" y="367.50"></text></g><g><title>rmqueue_bulk (5 samples, 0.02%)</title><rect x="66.6172%" y="341" width="0.0165%" height="15" fill="rgb(237,18,16)" fg:x="20191" fg:w="5"/><text x="66.8672%" y="351.50"></text></g><g><title>charge_memcg (6 samples, 0.02%)</title><rect x="66.6700%" y="325" width="0.0198%" height="15" fill="rgb(241,85,17)" fg:x="20207" fg:w="6"/><text x="66.9200%" y="335.50"></text></g><g><title>mem_cgroup_charge_statistics.constprop.0 (6 samples, 0.02%)</title><rect x="66.6700%" y="309" width="0.0198%" height="15" fill="rgb(236,90,42)" fg:x="20207" fg:w="6"/><text x="66.9200%" y="319.50"></text></g><g><title>cgroup_rstat_updated (4 samples, 0.01%)</title><rect x="66.6766%" y="293" width="0.0132%" height="15" fill="rgb(249,57,21)" fg:x="20209" fg:w="4"/><text x="66.9266%" y="303.50"></text></g><g><title>__mem_cgroup_charge (18 samples, 0.06%)</title><rect x="66.6667%" y="341" width="0.0594%" height="15" fill="rgb(243,12,36)" fg:x="20206" fg:w="18"/><text x="66.9167%" y="351.50"></text></g><g><title>get_mem_cgroup_from_mm (11 samples, 0.04%)</title><rect x="66.6898%" y="325" width="0.0363%" height="15" fill="rgb(253,128,47)" fg:x="20213" fg:w="11"/><text x="66.9398%" y="335.50"></text></g><g><title>__mod_lruvec_page_state (13 samples, 0.04%)</title><rect x="66.7261%" y="341" width="0.0429%" height="15" fill="rgb(207,33,20)" fg:x="20224" fg:w="13"/><text x="66.9761%" y="351.50"></text></g><g><title>__mod_lruvec_state (6 samples, 0.02%)</title><rect x="66.7492%" y="325" width="0.0198%" height="15" fill="rgb(233,215,35)" fg:x="20231" fg:w="6"/><text x="66.9992%" y="335.50"></text></g><g><title>__mod_node_page_state (5 samples, 0.02%)</title><rect x="66.7524%" y="309" width="0.0165%" height="15" fill="rgb(249,188,52)" fg:x="20232" fg:w="5"/><text x="67.0024%" y="319.50"></text></g><g><title>xa_get_order (8 samples, 0.03%)</title><rect x="66.7788%" y="341" width="0.0264%" height="15" fill="rgb(225,12,32)" fg:x="20240" fg:w="8"/><text x="67.0288%" y="351.50"></text></g><g><title>xas_load (5 samples, 0.02%)</title><rect x="66.7887%" y="325" width="0.0165%" height="15" fill="rgb(247,98,14)" fg:x="20243" fg:w="5"/><text x="67.0387%" y="335.50"></text></g><g><title>xas_find_conflict (8 samples, 0.03%)</title><rect x="66.8052%" y="341" width="0.0264%" height="15" fill="rgb(247,219,48)" fg:x="20248" fg:w="8"/><text x="67.0552%" y="351.50"></text></g><g><title>workingset_update_node (5 samples, 0.02%)</title><rect x="66.8448%" y="325" width="0.0165%" height="15" fill="rgb(253,60,48)" fg:x="20260" fg:w="5"/><text x="67.0948%" y="335.50"></text></g><g><title>__add_to_page_cache_locked (79 samples, 0.26%)</title><rect x="66.6337%" y="357" width="0.2606%" height="15" fill="rgb(245,15,52)" fg:x="20196" fg:w="79"/><text x="66.8837%" y="367.50"></text></g><g><title>xas_store (19 samples, 0.06%)</title><rect x="66.8316%" y="341" width="0.0627%" height="15" fill="rgb(220,133,28)" fg:x="20256" fg:w="19"/><text x="67.0816%" y="351.50"></text></g><g><title>xas_create (10 samples, 0.03%)</title><rect x="66.8613%" y="325" width="0.0330%" height="15" fill="rgb(217,180,4)" fg:x="20265" fg:w="10"/><text x="67.1113%" y="335.50"></text></g><g><title>xas_alloc (6 samples, 0.02%)</title><rect x="66.8745%" y="309" width="0.0198%" height="15" fill="rgb(251,24,1)" fg:x="20269" fg:w="6"/><text x="67.1245%" y="319.50"></text></g><g><title>add_to_page_cache_lru (103 samples, 0.34%)</title><rect x="66.6337%" y="373" width="0.3398%" height="15" fill="rgb(212,185,49)" fg:x="20196" fg:w="103"/><text x="66.8837%" y="383.50"></text></g><g><title>lru_cache_add (24 samples, 0.08%)</title><rect x="66.8943%" y="357" width="0.0792%" height="15" fill="rgb(215,175,22)" fg:x="20275" fg:w="24"/><text x="67.1443%" y="367.50"></text></g><g><title>__pagevec_lru_add (15 samples, 0.05%)</title><rect x="66.9240%" y="341" width="0.0495%" height="15" fill="rgb(250,205,14)" fg:x="20284" fg:w="15"/><text x="67.1740%" y="351.50"></text></g><g><title>release_pages (4 samples, 0.01%)</title><rect x="66.9603%" y="325" width="0.0132%" height="15" fill="rgb(225,211,22)" fg:x="20295" fg:w="4"/><text x="67.2103%" y="335.50"></text></g><g><title>pagecache_get_page (449 samples, 1.48%)</title><rect x="66.0365%" y="389" width="1.4814%" height="15" fill="rgb(251,179,42)" fg:x="20015" fg:w="449"/><text x="66.2865%" y="399.50"></text></g><g><title>xas_load (164 samples, 0.54%)</title><rect x="66.9768%" y="373" width="0.5411%" height="15" fill="rgb(208,216,51)" fg:x="20300" fg:w="164"/><text x="67.2268%" y="383.50"></text></g><g><title>xas_start (42 samples, 0.14%)</title><rect x="67.3793%" y="357" width="0.1386%" height="15" fill="rgb(235,36,11)" fg:x="20422" fg:w="42"/><text x="67.6293%" y="367.50"></text></g><g><title>grab_cache_page_write_begin (471 samples, 1.55%)</title><rect x="66.0068%" y="405" width="1.5540%" height="15" fill="rgb(213,189,28)" fg:x="20006" fg:w="471"/><text x="66.2568%" y="415.50"></text></g><g><title>wait_for_stable_page (13 samples, 0.04%)</title><rect x="67.5179%" y="389" width="0.0429%" height="15" fill="rgb(227,203,42)" fg:x="20464" fg:w="13"/><text x="67.7679%" y="399.50"></text></g><g><title>ext4_da_write_begin (853 samples, 2.81%)</title><rect x="64.7728%" y="421" width="2.8143%" height="15" fill="rgb(244,72,36)" fg:x="19632" fg:w="853"/><text x="65.0228%" y="431.50">ex..</text></g><g><title>wait_for_stable_page (8 samples, 0.03%)</title><rect x="67.5608%" y="405" width="0.0264%" height="15" fill="rgb(213,53,17)" fg:x="20477" fg:w="8"/><text x="67.8108%" y="415.50"></text></g><g><title>ext4_da_write_end (56 samples, 0.18%)</title><rect x="67.5872%" y="421" width="0.1848%" height="15" fill="rgb(207,167,3)" fg:x="20485" fg:w="56"/><text x="67.8372%" y="431.50"></text></g><g><title>fault_in_iov_iter_readable (127 samples, 0.42%)</title><rect x="67.7719%" y="421" width="0.4190%" height="15" fill="rgb(216,98,30)" fg:x="20541" fg:w="127"/><text x="68.0219%" y="431.50"></text></g><g><title>fault_in_readable (107 samples, 0.35%)</title><rect x="67.8379%" y="405" width="0.3530%" height="15" fill="rgb(236,123,15)" fg:x="20561" fg:w="107"/><text x="68.0879%" y="415.50"></text></g><g><title>__get_user_nocheck_1 (80 samples, 0.26%)</title><rect x="67.9270%" y="389" width="0.2639%" height="15" fill="rgb(248,81,50)" fg:x="20588" fg:w="80"/><text x="68.1770%" y="399.50"></text></g><g><title>__mark_inode_dirty (4 samples, 0.01%)</title><rect x="68.7090%" y="389" width="0.0132%" height="15" fill="rgb(214,120,4)" fg:x="20825" fg:w="4"/><text x="68.9590%" y="399.50"></text></g><g><title>__mod_lruvec_page_state (4 samples, 0.01%)</title><rect x="68.9201%" y="357" width="0.0132%" height="15" fill="rgb(208,179,34)" fg:x="20889" fg:w="4"/><text x="69.1701%" y="367.50"></text></g><g><title>__xa_set_mark (6 samples, 0.02%)</title><rect x="68.9333%" y="357" width="0.0198%" height="15" fill="rgb(227,140,7)" fg:x="20893" fg:w="6"/><text x="69.1833%" y="367.50"></text></g><g><title>__set_page_dirty (16 samples, 0.05%)</title><rect x="68.9168%" y="373" width="0.0528%" height="15" fill="rgb(214,22,6)" fg:x="20888" fg:w="16"/><text x="69.1668%" y="383.50"></text></g><g><title>percpu_counter_add_batch (5 samples, 0.02%)</title><rect x="68.9531%" y="357" width="0.0165%" height="15" fill="rgb(207,137,27)" fg:x="20899" fg:w="5"/><text x="69.2031%" y="367.50"></text></g><g><title>_raw_spin_unlock_irqrestore (4 samples, 0.01%)</title><rect x="68.9696%" y="373" width="0.0132%" height="15" fill="rgb(210,8,46)" fg:x="20904" fg:w="4"/><text x="69.2196%" y="383.50"></text></g><g><title>page_mapping (4 samples, 0.01%)</title><rect x="68.9894%" y="373" width="0.0132%" height="15" fill="rgb(240,16,54)" fg:x="20910" fg:w="4"/><text x="69.2394%" y="383.50"></text></g><g><title>__block_commit_write.constprop.0.isra.0 (166 samples, 0.55%)</title><rect x="68.4582%" y="405" width="0.5477%" height="15" fill="rgb(211,209,29)" fg:x="20749" fg:w="166"/><text x="68.7082%" y="415.50"></text></g><g><title>mark_buffer_dirty (86 samples, 0.28%)</title><rect x="68.7222%" y="389" width="0.2837%" height="15" fill="rgb(226,228,24)" fg:x="20829" fg:w="86"/><text x="68.9722%" y="399.50"></text></g><g><title>kmem_cache_free.part.0 (50 samples, 0.16%)</title><rect x="69.3820%" y="357" width="0.1650%" height="15" fill="rgb(222,84,9)" fg:x="21029" fg:w="50"/><text x="69.6320%" y="367.50"></text></g><g><title>memcg_slab_free_hook (5 samples, 0.02%)</title><rect x="69.5305%" y="341" width="0.0165%" height="15" fill="rgb(234,203,30)" fg:x="21074" fg:w="5"/><text x="69.7805%" y="351.50"></text></g><g><title>__wake_up_common (15 samples, 0.05%)</title><rect x="69.8868%" y="325" width="0.0495%" height="15" fill="rgb(238,109,14)" fg:x="21182" fg:w="15"/><text x="70.1368%" y="335.50"></text></g><g><title>_raw_spin_lock_irqsave (66 samples, 0.22%)</title><rect x="69.9363%" y="325" width="0.2178%" height="15" fill="rgb(233,206,34)" fg:x="21197" fg:w="66"/><text x="70.1863%" y="335.50"></text></g><g><title>__ext4_journal_stop (313 samples, 1.03%)</title><rect x="69.2468%" y="389" width="1.0327%" height="15" fill="rgb(220,167,47)" fg:x="20988" fg:w="313"/><text x="69.4968%" y="399.50"></text></g><g><title>jbd2_journal_stop (305 samples, 1.01%)</title><rect x="69.2732%" y="373" width="1.0063%" height="15" fill="rgb(238,105,10)" fg:x="20996" fg:w="305"/><text x="69.5232%" y="383.50"></text></g><g><title>stop_this_handle (222 samples, 0.73%)</title><rect x="69.5470%" y="357" width="0.7325%" height="15" fill="rgb(213,227,17)" fg:x="21079" fg:w="222"/><text x="69.7970%" y="367.50"></text></g><g><title>__wake_up_common_lock (148 samples, 0.49%)</title><rect x="69.7912%" y="341" width="0.4883%" height="15" fill="rgb(217,132,38)" fg:x="21153" fg:w="148"/><text x="70.0412%" y="351.50"></text></g><g><title>_raw_spin_unlock_irqrestore (38 samples, 0.13%)</title><rect x="70.1541%" y="325" width="0.1254%" height="15" fill="rgb(242,146,4)" fg:x="21263" fg:w="38"/><text x="70.4041%" y="335.50"></text></g><g><title>__raw_callee_save___pv_queued_spin_unlock (38 samples, 0.13%)</title><rect x="70.1541%" y="309" width="0.1254%" height="15" fill="rgb(212,61,9)" fg:x="21263" fg:w="38"/><text x="70.4041%" y="319.50"></text></g><g><title>ext4_journal_check_start (18 samples, 0.06%)</title><rect x="70.4345%" y="357" width="0.0594%" height="15" fill="rgb(247,126,22)" fg:x="21348" fg:w="18"/><text x="70.6845%" y="367.50"></text></g><g><title>kmem_cache_alloc (119 samples, 0.39%)</title><rect x="70.6952%" y="341" width="0.3926%" height="15" fill="rgb(220,196,2)" fg:x="21427" fg:w="119"/><text x="70.9452%" y="351.50"></text></g><g><title>memset_erms (57 samples, 0.19%)</title><rect x="70.8997%" y="325" width="0.1881%" height="15" fill="rgb(208,46,4)" fg:x="21489" fg:w="57"/><text x="71.1497%" y="335.50"></text></g><g><title>_raw_read_lock (60 samples, 0.20%)</title><rect x="71.5992%" y="325" width="0.1980%" height="15" fill="rgb(252,104,46)" fg:x="21701" fg:w="60"/><text x="71.8492%" y="335.50"></text></g><g><title>__ext4_journal_start_sb (501 samples, 1.65%)</title><rect x="70.3586%" y="373" width="1.6530%" height="15" fill="rgb(237,152,48)" fg:x="21325" fg:w="501"/><text x="70.6086%" y="383.50"></text></g><g><title>jbd2__journal_start (460 samples, 1.52%)</title><rect x="70.4939%" y="357" width="1.5177%" height="15" fill="rgb(221,59,37)" fg:x="21366" fg:w="460"/><text x="70.7439%" y="367.50"></text></g><g><title>start_this_handle (280 samples, 0.92%)</title><rect x="71.0878%" y="341" width="0.9238%" height="15" fill="rgb(209,202,51)" fg:x="21546" fg:w="280"/><text x="71.3378%" y="351.50"></text></g><g><title>add_transaction_credits (65 samples, 0.21%)</title><rect x="71.7972%" y="325" width="0.2145%" height="15" fill="rgb(228,81,30)" fg:x="21761" fg:w="65"/><text x="72.0472%" y="335.50"></text></g><g><title>__brelse (40 samples, 0.13%)</title><rect x="73.0938%" y="341" width="0.1320%" height="15" fill="rgb(227,42,39)" fg:x="22154" fg:w="40"/><text x="73.3438%" y="351.50"></text></g><g><title>__ext4_handle_dirty_metadata (23 samples, 0.08%)</title><rect x="73.2258%" y="341" width="0.0759%" height="15" fill="rgb(221,26,2)" fg:x="22194" fg:w="23"/><text x="73.4758%" y="351.50"></text></g><g><title>jbd2_journal_dirty_metadata (8 samples, 0.03%)</title><rect x="73.2753%" y="325" width="0.0264%" height="15" fill="rgb(254,61,31)" fg:x="22209" fg:w="8"/><text x="73.5253%" y="335.50"></text></g><g><title>__raw_callee_save___pv_queued_spin_unlock (38 samples, 0.13%)</title><rect x="73.3017%" y="341" width="0.1254%" height="15" fill="rgb(222,173,38)" fg:x="22217" fg:w="38"/><text x="73.5517%" y="351.50"></text></g><g><title>_raw_spin_lock (44 samples, 0.15%)</title><rect x="73.4270%" y="341" width="0.1452%" height="15" fill="rgb(218,50,12)" fg:x="22255" fg:w="44"/><text x="73.6770%" y="351.50"></text></g><g><title>ext4_fc_track_template (35 samples, 0.12%)</title><rect x="73.6712%" y="325" width="0.1155%" height="15" fill="rgb(223,88,40)" fg:x="22329" fg:w="35"/><text x="73.9212%" y="335.50"></text></g><g><title>ext4_fc_track_inode (78 samples, 0.26%)</title><rect x="73.5788%" y="341" width="0.2573%" height="15" fill="rgb(237,54,19)" fg:x="22301" fg:w="78"/><text x="73.8288%" y="351.50"></text></g><g><title>ext4_inode_journal_mode (15 samples, 0.05%)</title><rect x="73.7867%" y="325" width="0.0495%" height="15" fill="rgb(251,129,25)" fg:x="22364" fg:w="15"/><text x="74.0367%" y="335.50"></text></g><g><title>__crc32c_le (12 samples, 0.04%)</title><rect x="74.3575%" y="293" width="0.0396%" height="15" fill="rgb(238,97,19)" fg:x="22537" fg:w="12"/><text x="74.6075%" y="303.50"></text></g><g><title>chksum_update (1,334 samples, 4.40%)</title><rect x="74.1694%" y="309" width="4.4013%" height="15" fill="rgb(240,169,18)" fg:x="22480" fg:w="1334"/><text x="74.4194%" y="319.50">chksu..</text></g><g><title>crc32_body (1,265 samples, 4.17%)</title><rect x="74.3970%" y="293" width="4.1737%" height="15" fill="rgb(230,187,49)" fg:x="22549" fg:w="1265"/><text x="74.6470%" y="303.50">crc32..</text></g><g><title>ext4_inode_csum_set (1,483 samples, 4.89%)</title><rect x="73.8362%" y="341" width="4.8929%" height="15" fill="rgb(209,44,26)" fg:x="22379" fg:w="1483"/><text x="74.0862%" y="351.50">ext4_i..</text></g><g><title>ext4_inode_csum (1,452 samples, 4.79%)</title><rect x="73.9384%" y="325" width="4.7907%" height="15" fill="rgb(244,0,6)" fg:x="22410" fg:w="1452"/><text x="74.1884%" y="335.50">ext4_i..</text></g><g><title>crypto_shash_update (48 samples, 0.16%)</title><rect x="78.5707%" y="309" width="0.1584%" height="15" fill="rgb(248,18,21)" fg:x="23814" fg:w="48"/><text x="78.8207%" y="319.50"></text></g><g><title>ext4_mark_iloc_dirty (2,068 samples, 6.82%)</title><rect x="72.0875%" y="357" width="6.8231%" height="15" fill="rgb(245,180,19)" fg:x="21849" fg:w="2068"/><text x="72.3375%" y="367.50">ext4_mark..</text></g><g><title>map_id_up (51 samples, 0.17%)</title><rect x="78.7423%" y="341" width="0.1683%" height="15" fill="rgb(252,118,36)" fg:x="23866" fg:w="51"/><text x="78.9923%" y="351.50"></text></g><g><title>errseq_check (24 samples, 0.08%)</title><rect x="79.0986%" y="325" width="0.0792%" height="15" fill="rgb(210,224,19)" fg:x="23974" fg:w="24"/><text x="79.3486%" y="335.50"></text></g><g><title>__ext4_journal_get_write_access (114 samples, 0.38%)</title><rect x="78.9798%" y="341" width="0.3761%" height="15" fill="rgb(218,30,24)" fg:x="23938" fg:w="114"/><text x="79.2298%" y="351.50"></text></g><g><title>jbd2_journal_get_write_access (54 samples, 0.18%)</title><rect x="79.1778%" y="325" width="0.1782%" height="15" fill="rgb(219,75,50)" fg:x="23998" fg:w="54"/><text x="79.4278%" y="335.50"></text></g><g><title>jbd2_write_access_granted.part.0 (45 samples, 0.15%)</title><rect x="79.2075%" y="309" width="0.1485%" height="15" fill="rgb(234,72,50)" fg:x="24007" fg:w="45"/><text x="79.4575%" y="319.50"></text></g><g><title>__getblk_gfp (110 samples, 0.36%)</title><rect x="79.7882%" y="309" width="0.3629%" height="15" fill="rgb(219,100,48)" fg:x="24183" fg:w="110"/><text x="80.0382%" y="319.50"></text></g><g><title>__find_get_block (98 samples, 0.32%)</title><rect x="79.8278%" y="293" width="0.3233%" height="15" fill="rgb(253,5,41)" fg:x="24195" fg:w="98"/><text x="80.0778%" y="303.50"></text></g><g><title>mark_page_accessed (19 samples, 0.06%)</title><rect x="80.0884%" y="277" width="0.0627%" height="15" fill="rgb(247,181,11)" fg:x="24274" fg:w="19"/><text x="80.3384%" y="287.50"></text></g><g><title>ext4_get_group_desc (22 samples, 0.07%)</title><rect x="80.1511%" y="309" width="0.0726%" height="15" fill="rgb(222,223,25)" fg:x="24293" fg:w="22"/><text x="80.4011%" y="319.50"></text></g><g><title>__mark_inode_dirty (3,406 samples, 11.24%)</title><rect x="69.0059%" y="405" width="11.2376%" height="15" fill="rgb(214,198,28)" fg:x="20915" fg:w="3406"/><text x="69.2559%" y="415.50">__mark_inode_dirty</text></g><g><title>ext4_dirty_inode (3,020 samples, 9.96%)</title><rect x="70.2795%" y="389" width="9.9640%" height="15" fill="rgb(230,46,43)" fg:x="21301" fg:w="3020"/><text x="70.5295%" y="399.50">ext4_dirty_ino..</text></g><g><title>__ext4_mark_inode_dirty (2,495 samples, 8.23%)</title><rect x="72.0116%" y="373" width="8.2319%" height="15" fill="rgb(233,65,53)" fg:x="21826" fg:w="2495"/><text x="72.2616%" y="383.50">__ext4_mark..</text></g><g><title>ext4_reserve_inode_write (404 samples, 1.33%)</title><rect x="78.9106%" y="357" width="1.3329%" height="15" fill="rgb(221,121,27)" fg:x="23917" fg:w="404"/><text x="79.1606%" y="367.50"></text></g><g><title>ext4_get_inode_loc (269 samples, 0.89%)</title><rect x="79.3560%" y="341" width="0.8875%" height="15" fill="rgb(247,70,47)" fg:x="24052" fg:w="269"/><text x="79.6060%" y="351.50"></text></g><g><title>__ext4_get_inode_loc (257 samples, 0.85%)</title><rect x="79.3956%" y="325" width="0.8479%" height="15" fill="rgb(228,85,35)" fg:x="24064" fg:w="257"/><text x="79.6456%" y="335.50"></text></g><g><title>ext4_inode_table (6 samples, 0.02%)</title><rect x="80.2237%" y="309" width="0.0198%" height="15" fill="rgb(209,50,18)" fg:x="24315" fg:w="6"/><text x="80.4737%" y="319.50"></text></g><g><title>generic_perform_write (5,136 samples, 16.95%)</title><rect x="63.4861%" y="437" width="16.9455%" height="15" fill="rgb(250,19,35)" fg:x="19242" fg:w="5136"/><text x="63.7361%" y="447.50">generic_perform_write</text></g><g><title>generic_write_end (3,710 samples, 12.24%)</title><rect x="68.1910%" y="421" width="12.2406%" height="15" fill="rgb(253,107,29)" fg:x="20668" fg:w="3710"/><text x="68.4410%" y="431.50">generic_write_end</text></g><g><title>unlock_page (57 samples, 0.19%)</title><rect x="80.2435%" y="405" width="0.1881%" height="15" fill="rgb(252,179,29)" fg:x="24321" fg:w="57"/><text x="80.4935%" y="415.50"></text></g><g><title>ext4_buffered_write_iter (5,416 samples, 17.87%)</title><rect x="62.7041%" y="453" width="17.8693%" height="15" fill="rgb(238,194,6)" fg:x="19005" fg:w="5416"/><text x="62.9541%" y="463.50">ext4_buffered_write_iter</text></g><g><title>up_write (43 samples, 0.14%)</title><rect x="80.4316%" y="437" width="0.1419%" height="15" fill="rgb(238,164,29)" fg:x="24378" fg:w="43"/><text x="80.6816%" y="447.50"></text></g><g><title>ext4_file_write_iter (44 samples, 0.15%)</title><rect x="80.5734%" y="453" width="0.1452%" height="15" fill="rgb(224,25,9)" fg:x="24421" fg:w="44"/><text x="80.8234%" y="463.50"></text></g><g><title>new_sync_write (5,495 samples, 18.13%)</title><rect x="62.6118%" y="469" width="18.1299%" height="15" fill="rgb(244,153,23)" fg:x="18977" fg:w="5495"/><text x="62.8618%" y="479.50">new_sync_write</text></g><g><title>iov_iter_init (7 samples, 0.02%)</title><rect x="80.7186%" y="453" width="0.0231%" height="15" fill="rgb(212,203,14)" fg:x="24465" fg:w="7"/><text x="80.9686%" y="463.50"></text></g><g><title>rw_verify_area (6 samples, 0.02%)</title><rect x="80.7417%" y="469" width="0.0198%" height="15" fill="rgb(220,164,20)" fg:x="24472" fg:w="6"/><text x="80.9917%" y="479.50"></text></g><g><title>ksys_write (5,947 samples, 19.62%)</title><rect x="61.1798%" y="501" width="19.6212%" height="15" fill="rgb(222,203,48)" fg:x="18543" fg:w="5947"/><text x="61.4298%" y="511.50">ksys_write</text></g><g><title>vfs_write (5,636 samples, 18.60%)</title><rect x="62.2059%" y="485" width="18.5951%" height="15" fill="rgb(215,159,22)" fg:x="18854" fg:w="5636"/><text x="62.4559%" y="495.50">vfs_write</text></g><g><title>security_file_permission (12 samples, 0.04%)</title><rect x="80.7615%" y="469" width="0.0396%" height="15" fill="rgb(216,183,47)" fg:x="24478" fg:w="12"/><text x="81.0115%" y="479.50"></text></g><g><title>syscall_enter_from_user_mode (17 samples, 0.06%)</title><rect x="80.8011%" y="501" width="0.0561%" height="15" fill="rgb(229,195,25)" fg:x="24490" fg:w="17"/><text x="81.0511%" y="511.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (6,058 samples, 19.99%)</title><rect x="60.9423%" y="533" width="19.9875%" height="15" fill="rgb(224,132,51)" fg:x="18471" fg:w="6058"/><text x="61.1923%" y="543.50">entry_SYSCALL_64_after_hwframe</text></g><g><title>do_syscall_64 (6,026 samples, 19.88%)</title><rect x="61.0479%" y="517" width="19.8819%" height="15" fill="rgb(240,63,7)" fg:x="18503" fg:w="6026"/><text x="61.2979%" y="527.50">do_syscall_64</text></g><g><title>syscall_exit_to_user_mode (22 samples, 0.07%)</title><rect x="80.8572%" y="501" width="0.0726%" height="15" fill="rgb(249,182,41)" fg:x="24507" fg:w="22"/><text x="81.1072%" y="511.50"></text></g><g><title>exit_to_user_mode_prepare (13 samples, 0.04%)</title><rect x="80.8869%" y="485" width="0.0429%" height="15" fill="rgb(243,47,26)" fg:x="24516" fg:w="13"/><text x="81.1369%" y="495.50"></text></g><g><title>&lt;std::io::stdio::StdoutRaw as std::io::Write&gt;::write_all (6,509 samples, 21.48%)</title><rect x="59.5203%" y="565" width="21.4755%" height="15" fill="rgb(233,48,2)" fg:x="18040" fg:w="6509"/><text x="59.7703%" y="575.50">&lt;std::io::stdio::StdoutRaw as std:..</text></g><g><title>__write (6,445 samples, 21.26%)</title><rect x="59.7314%" y="549" width="21.2643%" height="15" fill="rgb(244,165,34)" fg:x="18104" fg:w="6445"/><text x="59.9814%" y="559.50">__write</text></g><g><title>syscall_return_via_sysret (20 samples, 0.07%)</title><rect x="80.9298%" y="533" width="0.0660%" height="15" fill="rgb(207,89,7)" fg:x="24529" fg:w="20"/><text x="81.1798%" y="543.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (6,801 samples, 22.44%)</title><rect x="59.1441%" y="581" width="22.4389%" height="15" fill="rgb(244,117,36)" fg:x="17926" fg:w="6801"/><text x="59.3941%" y="591.50">&lt;std::io::stdio::StdoutLock as std::..</text></g><g><title>[libc.so.6] (178 samples, 0.59%)</title><rect x="80.9957%" y="565" width="0.5873%" height="15" fill="rgb(226,144,34)" fg:x="24549" fg:w="178"/><text x="81.2457%" y="575.50"></text></g><g><title>intel_pmu_disable_all (28 samples, 0.09%)</title><rect x="82.2198%" y="405" width="0.0924%" height="15" fill="rgb(213,23,19)" fg:x="24920" fg:w="28"/><text x="82.4698%" y="415.50"></text></g><g><title>__perf_event_task_sched_out (44 samples, 0.15%)</title><rect x="82.1769%" y="421" width="0.1452%" height="15" fill="rgb(217,75,12)" fg:x="24907" fg:w="44"/><text x="82.4269%" y="431.50"></text></g><g><title>update_curr (8 samples, 0.03%)</title><rect x="82.3551%" y="389" width="0.0264%" height="15" fill="rgb(224,159,17)" fg:x="24961" fg:w="8"/><text x="82.6051%" y="399.50"></text></g><g><title>cpuacct_charge (6 samples, 0.02%)</title><rect x="82.3617%" y="373" width="0.0198%" height="15" fill="rgb(217,118,1)" fg:x="24963" fg:w="6"/><text x="82.6117%" y="383.50"></text></g><g><title>dequeue_entity (14 samples, 0.05%)</title><rect x="82.3518%" y="405" width="0.0462%" height="15" fill="rgb(232,180,48)" fg:x="24960" fg:w="14"/><text x="82.6018%" y="415.50"></text></g><g><title>update_load_avg (5 samples, 0.02%)</title><rect x="82.3815%" y="389" width="0.0165%" height="15" fill="rgb(230,27,33)" fg:x="24969" fg:w="5"/><text x="82.6315%" y="399.50"></text></g><g><title>dequeue_task_fair (22 samples, 0.07%)</title><rect x="82.3287%" y="421" width="0.0726%" height="15" fill="rgb(205,31,21)" fg:x="24953" fg:w="22"/><text x="82.5787%" y="431.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (32 samples, 0.11%)</title><rect x="82.4277%" y="389" width="0.1056%" height="15" fill="rgb(253,59,4)" fg:x="24983" fg:w="32"/><text x="82.6777%" y="399.50"></text></g><g><title>__perf_event_task_sched_in (37 samples, 0.12%)</title><rect x="82.4211%" y="405" width="0.1221%" height="15" fill="rgb(224,201,9)" fg:x="24981" fg:w="37"/><text x="82.6711%" y="415.50"></text></g><g><title>finish_task_switch.isra.0 (48 samples, 0.16%)</title><rect x="82.4013%" y="421" width="0.1584%" height="15" fill="rgb(229,206,30)" fg:x="24975" fg:w="48"/><text x="82.6513%" y="431.50"></text></g><g><title>pick_next_task_fair (16 samples, 0.05%)</title><rect x="82.5629%" y="421" width="0.0528%" height="15" fill="rgb(212,67,47)" fg:x="25024" fg:w="16"/><text x="82.8129%" y="431.50"></text></g><g><title>newidle_balance (12 samples, 0.04%)</title><rect x="82.5761%" y="405" width="0.0396%" height="15" fill="rgb(211,96,50)" fg:x="25028" fg:w="12"/><text x="82.8261%" y="415.50"></text></g><g><title>pick_next_task_idle (13 samples, 0.04%)</title><rect x="82.6157%" y="421" width="0.0429%" height="15" fill="rgb(252,114,18)" fg:x="25040" fg:w="13"/><text x="82.8657%" y="431.50"></text></g><g><title>__update_idle_core (9 samples, 0.03%)</title><rect x="82.6289%" y="405" width="0.0297%" height="15" fill="rgb(223,58,37)" fg:x="25044" fg:w="9"/><text x="82.8789%" y="415.50"></text></g><g><title>put_prev_task_fair (7 samples, 0.02%)</title><rect x="82.6586%" y="421" width="0.0231%" height="15" fill="rgb(237,70,4)" fg:x="25053" fg:w="7"/><text x="82.9086%" y="431.50"></text></g><g><title>futex_wait_queue_me (194 samples, 0.64%)</title><rect x="82.0581%" y="469" width="0.6401%" height="15" fill="rgb(244,85,46)" fg:x="24871" fg:w="194"/><text x="82.3081%" y="479.50"></text></g><g><title>schedule (187 samples, 0.62%)</title><rect x="82.0812%" y="453" width="0.6170%" height="15" fill="rgb(223,39,52)" fg:x="24878" fg:w="187"/><text x="82.3312%" y="463.50"></text></g><g><title>__schedule (178 samples, 0.59%)</title><rect x="82.1109%" y="437" width="0.5873%" height="15" fill="rgb(218,200,14)" fg:x="24887" fg:w="178"/><text x="82.3609%" y="447.50"></text></g><g><title>update_rq_clock (5 samples, 0.02%)</title><rect x="82.6817%" y="421" width="0.0165%" height="15" fill="rgb(208,171,16)" fg:x="25060" fg:w="5"/><text x="82.9317%" y="431.50"></text></g><g><title>sched_clock_cpu (4 samples, 0.01%)</title><rect x="82.6850%" y="405" width="0.0132%" height="15" fill="rgb(234,200,18)" fg:x="25061" fg:w="4"/><text x="82.9350%" y="415.50"></text></g><g><title>read_hv_sched_clock_tsc (4 samples, 0.01%)</title><rect x="82.6850%" y="389" width="0.0132%" height="15" fill="rgb(228,45,11)" fg:x="25061" fg:w="4"/><text x="82.9350%" y="399.50"></text></g><g><title>__x64_sys_futex (240 samples, 0.79%)</title><rect x="81.9691%" y="517" width="0.7918%" height="15" fill="rgb(237,182,11)" fg:x="24844" fg:w="240"/><text x="82.2191%" y="527.50"></text></g><g><title>do_futex (235 samples, 0.78%)</title><rect x="81.9855%" y="501" width="0.7753%" height="15" fill="rgb(241,175,49)" fg:x="24849" fg:w="235"/><text x="82.2355%" y="511.50"></text></g><g><title>futex_wait (225 samples, 0.74%)</title><rect x="82.0185%" y="485" width="0.7424%" height="15" fill="rgb(247,38,35)" fg:x="24859" fg:w="225"/><text x="82.2685%" y="495.50"></text></g><g><title>futex_wait_setup (19 samples, 0.06%)</title><rect x="82.6982%" y="469" width="0.0627%" height="15" fill="rgb(228,39,49)" fg:x="25065" fg:w="19"/><text x="82.9482%" y="479.50"></text></g><g><title>__get_user_8 (8 samples, 0.03%)</title><rect x="82.8335%" y="469" width="0.0264%" height="15" fill="rgb(226,101,26)" fg:x="25106" fg:w="8"/><text x="83.0835%" y="479.50"></text></g><g><title>__rseq_handle_notify_resume (19 samples, 0.06%)</title><rect x="82.8071%" y="485" width="0.0627%" height="15" fill="rgb(206,141,19)" fg:x="25098" fg:w="19"/><text x="83.0571%" y="495.50"></text></g><g><title>mem_cgroup_handle_over_high (7 samples, 0.02%)</title><rect x="82.8797%" y="485" width="0.0231%" height="15" fill="rgb(211,200,13)" fg:x="25120" fg:w="7"/><text x="83.1297%" y="495.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (297 samples, 0.98%)</title><rect x="81.9361%" y="549" width="0.9799%" height="15" fill="rgb(241,121,6)" fg:x="24834" fg:w="297"/><text x="82.1861%" y="559.50"></text></g><g><title>do_syscall_64 (292 samples, 0.96%)</title><rect x="81.9526%" y="533" width="0.9634%" height="15" fill="rgb(234,221,29)" fg:x="24839" fg:w="292"/><text x="82.2026%" y="543.50"></text></g><g><title>syscall_exit_to_user_mode (47 samples, 0.16%)</title><rect x="82.7609%" y="517" width="0.1551%" height="15" fill="rgb(229,136,5)" fg:x="25084" fg:w="47"/><text x="83.0109%" y="527.50"></text></g><g><title>exit_to_user_mode_prepare (43 samples, 0.14%)</title><rect x="82.7741%" y="501" width="0.1419%" height="15" fill="rgb(238,36,11)" fg:x="25088" fg:w="43"/><text x="83.0241%" y="511.50"></text></g><g><title>switch_fpu_return (4 samples, 0.01%)</title><rect x="82.9028%" y="485" width="0.0132%" height="15" fill="rgb(251,55,41)" fg:x="25127" fg:w="4"/><text x="83.1528%" y="495.50"></text></g><g><title>std::sys::pal::unix::locks::futex_mutex::Mutex::lock_contended (407 samples, 1.34%)</title><rect x="81.5830%" y="581" width="1.3428%" height="15" fill="rgb(242,34,40)" fg:x="24727" fg:w="407"/><text x="81.8330%" y="591.50"></text></g><g><title>syscall (309 samples, 1.02%)</title><rect x="81.9064%" y="565" width="1.0195%" height="15" fill="rgb(215,42,17)" fg:x="24825" fg:w="309"/><text x="82.1564%" y="575.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.02%)</title><rect x="82.9490%" y="565" width="0.0165%" height="15" fill="rgb(207,44,46)" fg:x="25141" fg:w="5"/><text x="83.1990%" y="575.50"></text></g><g><title>entry_SYSCALL_64 (4 samples, 0.01%)</title><rect x="82.9655%" y="565" width="0.0132%" height="15" fill="rgb(211,206,28)" fg:x="25146" fg:w="4"/><text x="83.2155%" y="575.50"></text></g><g><title>__task_rq_lock (8 samples, 0.03%)</title><rect x="83.3218%" y="453" width="0.0264%" height="15" fill="rgb(237,167,16)" fg:x="25254" fg:w="8"/><text x="83.5718%" y="463.50"></text></g><g><title>_raw_spin_lock (8 samples, 0.03%)</title><rect x="83.3218%" y="437" width="0.0264%" height="15" fill="rgb(233,66,6)" fg:x="25254" fg:w="8"/><text x="83.5718%" y="447.50"></text></g><g><title>__pv_queued_spin_lock_slowpath (8 samples, 0.03%)</title><rect x="83.3218%" y="421" width="0.0264%" height="15" fill="rgb(246,123,29)" fg:x="25254" fg:w="8"/><text x="83.5718%" y="431.50"></text></g><g><title>__smp_call_single_queue (4 samples, 0.01%)</title><rect x="83.3680%" y="437" width="0.0132%" height="15" fill="rgb(209,62,40)" fg:x="25268" fg:w="4"/><text x="83.6180%" y="447.50"></text></g><g><title>llist_add_batch (4 samples, 0.01%)</title><rect x="83.3680%" y="421" width="0.0132%" height="15" fill="rgb(218,4,25)" fg:x="25268" fg:w="4"/><text x="83.6180%" y="431.50"></text></g><g><title>__x64_sys_futex (122 samples, 0.40%)</title><rect x="82.9886%" y="533" width="0.4025%" height="15" fill="rgb(253,91,49)" fg:x="25153" fg:w="122"/><text x="83.2386%" y="543.50"></text></g><g><title>do_futex (117 samples, 0.39%)</title><rect x="83.0050%" y="517" width="0.3860%" height="15" fill="rgb(228,155,29)" fg:x="25158" fg:w="117"/><text x="83.2550%" y="527.50"></text></g><g><title>futex_wake (112 samples, 0.37%)</title><rect x="83.0215%" y="501" width="0.3695%" height="15" fill="rgb(243,57,37)" fg:x="25163" fg:w="112"/><text x="83.2715%" y="511.50"></text></g><g><title>wake_up_q (87 samples, 0.29%)</title><rect x="83.1040%" y="485" width="0.2870%" height="15" fill="rgb(244,167,17)" fg:x="25188" fg:w="87"/><text x="83.3540%" y="495.50"></text></g><g><title>try_to_wake_up (87 samples, 0.29%)</title><rect x="83.1040%" y="469" width="0.2870%" height="15" fill="rgb(207,181,38)" fg:x="25188" fg:w="87"/><text x="83.3540%" y="479.50"></text></g><g><title>ttwu_queue_wakelist (10 samples, 0.03%)</title><rect x="83.3581%" y="453" width="0.0330%" height="15" fill="rgb(211,8,23)" fg:x="25265" fg:w="10"/><text x="83.6081%" y="463.50"></text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write_all (7,549 samples, 24.91%)</title><rect x="58.4909%" y="613" width="24.9068%" height="15" fill="rgb(235,11,44)" fg:x="17728" fg:w="7549"/><text x="58.7409%" y="623.50">&lt;std::io::stdio::Stdout as std::io::Writ..</text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_all (7,524 samples, 24.82%)</title><rect x="58.5734%" y="597" width="24.8243%" height="15" fill="rgb(248,18,52)" fg:x="17753" fg:w="7524"/><text x="58.8234%" y="607.50">&lt;&amp;std::io::stdio::Stdout as std::io::Wri..</text></g><g><title>syscall (143 samples, 0.47%)</title><rect x="82.9259%" y="581" width="0.4718%" height="15" fill="rgb(208,4,7)" fg:x="25134" fg:w="143"/><text x="83.1759%" y="591.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (127 samples, 0.42%)</title><rect x="82.9787%" y="565" width="0.4190%" height="15" fill="rgb(240,17,39)" fg:x="25150" fg:w="127"/><text x="83.2287%" y="575.50"></text></g><g><title>do_syscall_64 (125 samples, 0.41%)</title><rect x="82.9853%" y="549" width="0.4124%" height="15" fill="rgb(207,170,3)" fg:x="25152" fg:w="125"/><text x="83.2353%" y="559.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_fmt (13 samples, 0.04%)</title><rect x="84.1565%" y="597" width="0.0429%" height="15" fill="rgb(236,100,52)" fg:x="25507" fg:w="13"/><text x="84.4065%" y="607.50"></text></g><g><title>&lt;tracing_core::event::Event as tracing_log::NormalizeEvent&gt;::normalized_metadata (47 samples, 0.16%)</title><rect x="84.1994%" y="597" width="0.1551%" height="15" fill="rgb(246,78,51)" fg:x="25520" fg:w="47"/><text x="84.4494%" y="607.50"></text></g><g><title>tracing_log::level_to_cs (20 samples, 0.07%)</title><rect x="84.2885%" y="581" width="0.0660%" height="15" fill="rgb(211,17,15)" fg:x="25547" fg:w="20"/><text x="84.5385%" y="591.50"></text></g><g><title>&lt;tracing_core::event::Event as tracing_subscriber::field::RecordFields&gt;::record (8 samples, 0.03%)</title><rect x="84.3545%" y="597" width="0.0264%" height="15" fill="rgb(209,59,46)" fg:x="25567" fg:w="8"/><text x="84.6045%" y="607.50"></text></g><g><title>&lt;tracing_subscriber::fmt::time::datetime::DateTime as core::convert::From&lt;std::time::SystemTime&gt;&gt;::from (151 samples, 0.50%)</title><rect x="84.4700%" y="581" width="0.4982%" height="15" fill="rgb(210,92,25)" fg:x="25602" fg:w="151"/><text x="84.7200%" y="591.50"></text></g><g><title>std::time::SystemTime::duration_since (29 samples, 0.10%)</title><rect x="84.8725%" y="565" width="0.0957%" height="15" fill="rgb(238,174,52)" fg:x="25724" fg:w="29"/><text x="85.1225%" y="575.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::sub_timespec (14 samples, 0.05%)</title><rect x="84.9220%" y="549" width="0.0462%" height="15" fill="rgb(230,73,7)" fg:x="25739" fg:w="14"/><text x="85.1720%" y="559.50"></text></g><g><title>core::fmt::Formatter::write_fmt (15 samples, 0.05%)</title><rect x="85.3542%" y="549" width="0.0495%" height="15" fill="rgb(243,124,40)" fg:x="25870" fg:w="15"/><text x="85.6042%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (164 samples, 0.54%)</title><rect x="86.1196%" y="533" width="0.5411%" height="15" fill="rgb(244,170,11)" fg:x="26102" fg:w="164"/><text x="86.3696%" y="543.50"></text></g><g><title>[libc.so.6] (55 samples, 0.18%)</title><rect x="86.4793%" y="517" width="0.1815%" height="15" fill="rgb(207,114,54)" fg:x="26211" fg:w="55"/><text x="86.7293%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (27 samples, 0.09%)</title><rect x="86.8851%" y="517" width="0.0891%" height="15" fill="rgb(205,42,20)" fg:x="26334" fg:w="27"/><text x="87.1351%" y="527.50"></text></g><g><title>[libc.so.6] (5 samples, 0.02%)</title><rect x="86.9577%" y="501" width="0.0165%" height="15" fill="rgb(230,30,28)" fg:x="26356" fg:w="5"/><text x="87.2077%" y="511.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for isize&gt;::fmt (130 samples, 0.43%)</title><rect x="86.6673%" y="533" width="0.4289%" height="15" fill="rgb(205,73,54)" fg:x="26268" fg:w="130"/><text x="86.9173%" y="543.50"></text></g><g><title>core::fmt::Formatter::pad_integral (37 samples, 0.12%)</title><rect x="86.9742%" y="517" width="0.1221%" height="15" fill="rgb(254,227,23)" fg:x="26361" fg:w="37"/><text x="87.2242%" y="527.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (5 samples, 0.02%)</title><rect x="87.0797%" y="501" width="0.0165%" height="15" fill="rgb(228,202,34)" fg:x="26393" fg:w="5"/><text x="87.3297%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (22 samples, 0.07%)</title><rect x="87.4889%" y="517" width="0.0726%" height="15" fill="rgb(222,225,37)" fg:x="26517" fg:w="22"/><text x="87.7389%" y="527.50"></text></g><g><title>[libc.so.6] (10 samples, 0.03%)</title><rect x="87.5285%" y="501" width="0.0330%" height="15" fill="rgb(221,14,54)" fg:x="26529" fg:w="10"/><text x="87.7785%" y="511.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (178 samples, 0.59%)</title><rect x="87.0962%" y="533" width="0.5873%" height="15" fill="rgb(254,102,2)" fg:x="26398" fg:w="178"/><text x="87.3462%" y="543.50"></text></g><g><title>core::fmt::Formatter::pad_integral (37 samples, 0.12%)</title><rect x="87.5615%" y="517" width="0.1221%" height="15" fill="rgb(232,104,17)" fg:x="26539" fg:w="37"/><text x="87.8115%" y="527.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (10 samples, 0.03%)</title><rect x="87.6505%" y="501" width="0.0330%" height="15" fill="rgb(250,220,14)" fg:x="26566" fg:w="10"/><text x="87.9005%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (55 samples, 0.18%)</title><rect x="88.0300%" y="517" width="0.1815%" height="15" fill="rgb(241,158,9)" fg:x="26681" fg:w="55"/><text x="88.2800%" y="527.50"></text></g><g><title>[libc.so.6] (24 samples, 0.08%)</title><rect x="88.1322%" y="501" width="0.0792%" height="15" fill="rgb(246,9,43)" fg:x="26712" fg:w="24"/><text x="88.3822%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_char (35 samples, 0.12%)</title><rect x="88.7822%" y="501" width="0.1155%" height="15" fill="rgb(206,73,33)" fg:x="26909" fg:w="35"/><text x="89.0322%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (30 samples, 0.10%)</title><rect x="88.8977%" y="501" width="0.0990%" height="15" fill="rgb(222,79,8)" fg:x="26944" fg:w="30"/><text x="89.1477%" y="511.50"></text></g><g><title>[libc.so.6] (8 samples, 0.03%)</title><rect x="88.9703%" y="485" width="0.0264%" height="15" fill="rgb(234,8,54)" fg:x="26966" fg:w="8"/><text x="89.2203%" y="495.50"></text></g><g><title>core::fmt::write (1,271 samples, 4.19%)</title><rect x="84.9682%" y="581" width="4.1935%" height="15" fill="rgb(209,134,38)" fg:x="25753" fg:w="1271"/><text x="85.2182%" y="591.50">core:..</text></g><g><title>&lt;tracing_subscriber::fmt::time::datetime::DateTime as core::fmt::Display&gt;::fmt (1,238 samples, 4.08%)</title><rect x="85.0770%" y="565" width="4.0846%" height="15" fill="rgb(230,127,29)" fg:x="25786" fg:w="1238"/><text x="85.3270%" y="575.50">&lt;tra..</text></g><g><title>core::fmt::write (1,139 samples, 3.76%)</title><rect x="85.4037%" y="549" width="3.7580%" height="15" fill="rgb(242,44,41)" fg:x="25885" fg:w="1139"/><text x="85.6537%" y="559.50">core..</text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u8&gt;::fmt (448 samples, 1.48%)</title><rect x="87.6835%" y="533" width="1.4781%" height="15" fill="rgb(222,56,43)" fg:x="26576" fg:w="448"/><text x="87.9335%" y="543.50"></text></g><g><title>core::fmt::Formatter::pad_integral (288 samples, 0.95%)</title><rect x="88.2114%" y="517" width="0.9502%" height="15" fill="rgb(238,39,47)" fg:x="26736" fg:w="288"/><text x="88.4614%" y="527.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (50 samples, 0.16%)</title><rect x="88.9967%" y="501" width="0.1650%" height="15" fill="rgb(226,79,43)" fg:x="26974" fg:w="50"/><text x="89.2467%" y="511.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (342 samples, 1.13%)</title><rect x="89.1616%" y="581" width="1.1284%" height="15" fill="rgb(242,105,53)" fg:x="27024" fg:w="342"/><text x="89.4116%" y="591.50"></text></g><g><title>clock_gettime (300 samples, 0.99%)</title><rect x="89.3002%" y="565" width="0.9898%" height="15" fill="rgb(251,132,46)" fg:x="27066" fg:w="300"/><text x="89.5502%" y="575.50"></text></g><g><title>__vdso_clock_gettime (244 samples, 0.81%)</title><rect x="89.4850%" y="549" width="0.8050%" height="15" fill="rgb(231,77,14)" fg:x="27122" fg:w="244"/><text x="89.7350%" y="559.50"></text></g><g><title>&lt;tracing_subscriber::fmt::time::SystemTime as tracing_subscriber::fmt::time::FormatTime&gt;::format_time (1,797 samples, 5.93%)</title><rect x="84.3809%" y="597" width="5.9289%" height="15" fill="rgb(240,135,9)" fg:x="25575" fg:w="1797"/><text x="84.6309%" y="607.50">&lt;tracing..</text></g><g><title>std::time::SystemTime::now (6 samples, 0.02%)</title><rect x="90.2900%" y="581" width="0.0198%" height="15" fill="rgb(248,109,14)" fg:x="27366" fg:w="6"/><text x="90.5400%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (78 samples, 0.26%)</title><rect x="91.0060%" y="581" width="0.2573%" height="15" fill="rgb(227,146,52)" fg:x="27583" fg:w="78"/><text x="91.2560%" y="591.50"></text></g><g><title>[libc.so.6] (35 samples, 0.12%)</title><rect x="91.1478%" y="565" width="0.1155%" height="15" fill="rgb(232,54,3)" fg:x="27626" fg:w="35"/><text x="91.3978%" y="575.50"></text></g><g><title>&lt;nu_ansi_term::ansi::Prefix as core::fmt::Display&gt;::fmt (4 samples, 0.01%)</title><rect x="91.2633%" y="581" width="0.0132%" height="15" fill="rgb(229,201,43)" fg:x="27661" fg:w="4"/><text x="91.5133%" y="591.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (4 samples, 0.01%)</title><rect x="91.4184%" y="549" width="0.0132%" height="15" fill="rgb(252,161,33)" fg:x="27708" fg:w="4"/><text x="91.6684%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (35 samples, 0.12%)</title><rect x="91.4316%" y="549" width="0.1155%" height="15" fill="rgb(226,146,40)" fg:x="27712" fg:w="35"/><text x="91.6816%" y="559.50"></text></g><g><title>[libc.so.6] (25 samples, 0.08%)</title><rect x="91.4646%" y="533" width="0.0825%" height="15" fill="rgb(219,47,25)" fg:x="27722" fg:w="25"/><text x="91.7146%" y="543.50"></text></g><g><title>&lt;str as core::fmt::Display&gt;::fmt (6 samples, 0.02%)</title><rect x="91.5471%" y="549" width="0.0198%" height="15" fill="rgb(250,135,13)" fg:x="27747" fg:w="6"/><text x="91.7971%" y="559.50"></text></g><g><title>&lt;nu_ansi_term::ansi::Suffix as core::fmt::Display&gt;::fmt (104 samples, 0.34%)</title><rect x="91.2765%" y="581" width="0.3431%" height="15" fill="rgb(219,229,18)" fg:x="27665" fg:w="104"/><text x="91.5265%" y="591.50"></text></g><g><title>core::fmt::write (84 samples, 0.28%)</title><rect x="91.3425%" y="565" width="0.2771%" height="15" fill="rgb(217,152,27)" fg:x="27685" fg:w="84"/><text x="91.5925%" y="575.50"></text></g><g><title>core::fmt::Formatter::pad (16 samples, 0.05%)</title><rect x="91.5669%" y="549" width="0.0528%" height="15" fill="rgb(225,71,47)" fg:x="27753" fg:w="16"/><text x="91.8169%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (61 samples, 0.20%)</title><rect x="91.8044%" y="565" width="0.2013%" height="15" fill="rgb(220,139,14)" fg:x="27825" fg:w="61"/><text x="92.0544%" y="575.50"></text></g><g><title>[libc.so.6] (39 samples, 0.13%)</title><rect x="91.8770%" y="549" width="0.1287%" height="15" fill="rgb(247,54,32)" fg:x="27847" fg:w="39"/><text x="92.1270%" y="559.50"></text></g><g><title>&lt;core::fmt::Formatter as core::fmt::Write&gt;::write_str (10 samples, 0.03%)</title><rect x="92.0057%" y="565" width="0.0330%" height="15" fill="rgb(252,131,39)" fg:x="27886" fg:w="10"/><text x="92.2557%" y="575.50"></text></g><g><title>core::fmt::Formatter::write_fmt (16 samples, 0.05%)</title><rect x="92.0387%" y="565" width="0.0528%" height="15" fill="rgb(210,108,39)" fg:x="27896" fg:w="16"/><text x="92.2887%" y="575.50"></text></g><g><title>&lt;nu_ansi_term::ansi::Prefix as core::fmt::Display&gt;::fmt (8 samples, 0.03%)</title><rect x="92.4775%" y="549" width="0.0264%" height="15" fill="rgb(205,23,29)" fg:x="28029" fg:w="8"/><text x="92.7275%" y="559.50"></text></g><g><title>core::fmt::Formatter::write_fmt (11 samples, 0.04%)</title><rect x="92.5996%" y="533" width="0.0363%" height="15" fill="rgb(246,139,46)" fg:x="28066" fg:w="11"/><text x="92.8496%" y="543.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (10 samples, 0.03%)</title><rect x="92.8272%" y="517" width="0.0330%" height="15" fill="rgb(250,81,26)" fg:x="28135" fg:w="10"/><text x="93.0772%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (28 samples, 0.09%)</title><rect x="92.8602%" y="517" width="0.0924%" height="15" fill="rgb(214,104,7)" fg:x="28145" fg:w="28"/><text x="93.1102%" y="527.50"></text></g><g><title>[libc.so.6] (17 samples, 0.06%)</title><rect x="92.8965%" y="501" width="0.0561%" height="15" fill="rgb(233,189,8)" fg:x="28156" fg:w="17"/><text x="93.1465%" y="511.50"></text></g><g><title>&lt;str as core::fmt::Display&gt;::fmt (10 samples, 0.03%)</title><rect x="92.9526%" y="517" width="0.0330%" height="15" fill="rgb(228,141,17)" fg:x="28173" fg:w="10"/><text x="93.2026%" y="527.50"></text></g><g><title>&lt;nu_ansi_term::ansi::Suffix as core::fmt::Display&gt;::fmt (176 samples, 0.58%)</title><rect x="92.5039%" y="549" width="0.5807%" height="15" fill="rgb(247,157,1)" fg:x="28037" fg:w="176"/><text x="92.7539%" y="559.50"></text></g><g><title>core::fmt::write (136 samples, 0.45%)</title><rect x="92.6359%" y="533" width="0.4487%" height="15" fill="rgb(249,225,5)" fg:x="28077" fg:w="136"/><text x="92.8859%" y="543.50"></text></g><g><title>core::fmt::Formatter::pad (30 samples, 0.10%)</title><rect x="92.9856%" y="517" width="0.0990%" height="15" fill="rgb(242,55,13)" fg:x="28183" fg:w="30"/><text x="93.2356%" y="527.50"></text></g><g><title>core::fmt::Formatter::write_fmt (23 samples, 0.08%)</title><rect x="93.5267%" y="533" width="0.0759%" height="15" fill="rgb(230,49,50)" fg:x="28347" fg:w="23"/><text x="93.7767%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_char (25 samples, 0.08%)</title><rect x="94.2657%" y="517" width="0.0825%" height="15" fill="rgb(241,111,38)" fg:x="28571" fg:w="25"/><text x="94.5157%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (81 samples, 0.27%)</title><rect x="94.3482%" y="517" width="0.2672%" height="15" fill="rgb(252,155,4)" fg:x="28596" fg:w="81"/><text x="94.5982%" y="527.50"></text></g><g><title>[libc.so.6] (23 samples, 0.08%)</title><rect x="94.5396%" y="501" width="0.0759%" height="15" fill="rgb(212,69,32)" fg:x="28654" fg:w="23"/><text x="94.7896%" y="511.50"></text></g><g><title>&lt;nu_ansi_term::display::AnsiGenericString&lt;str&gt; as core::fmt::Display&gt;::fmt (915 samples, 3.02%)</title><rect x="91.6197%" y="581" width="3.0189%" height="15" fill="rgb(243,107,47)" fg:x="27769" fg:w="915"/><text x="91.8697%" y="591.50">&lt;nu..</text></g><g><title>core::fmt::write (772 samples, 2.55%)</title><rect x="92.0915%" y="565" width="2.5471%" height="15" fill="rgb(247,130,12)" fg:x="27912" fg:w="772"/><text x="92.3415%" y="575.50">co..</text></g><g><title>nu_ansi_term::ansi::&lt;impl nu_ansi_term::style::Style&gt;::write_prefix (471 samples, 1.55%)</title><rect x="93.0846%" y="549" width="1.5540%" height="15" fill="rgb(233,74,16)" fg:x="28213" fg:w="471"/><text x="93.3346%" y="559.50"></text></g><g><title>core::fmt::write (314 samples, 1.04%)</title><rect x="93.6026%" y="533" width="1.0360%" height="15" fill="rgb(208,58,18)" fg:x="28370" fg:w="314"/><text x="93.8526%" y="543.50"></text></g><g><title>&lt;char as core::fmt::Display&gt;::fmt (7 samples, 0.02%)</title><rect x="94.6155%" y="517" width="0.0231%" height="15" fill="rgb(242,225,1)" fg:x="28677" fg:w="7"/><text x="94.8655%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (31 samples, 0.10%)</title><rect x="94.9718%" y="533" width="0.1023%" height="15" fill="rgb(249,39,40)" fg:x="28785" fg:w="31"/><text x="95.2218%" y="543.50"></text></g><g><title>[libc.so.6] (17 samples, 0.06%)</title><rect x="95.0180%" y="517" width="0.0561%" height="15" fill="rgb(207,72,44)" fg:x="28799" fg:w="17"/><text x="95.2680%" y="527.50"></text></g><g><title>&lt;core::fmt::Formatter as core::fmt::Write&gt;::write_str (7 samples, 0.02%)</title><rect x="95.0741%" y="533" width="0.0231%" height="15" fill="rgb(215,193,12)" fg:x="28816" fg:w="7"/><text x="95.3241%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_fmt (6 samples, 0.02%)</title><rect x="95.0972%" y="533" width="0.0198%" height="15" fill="rgb(248,41,39)" fg:x="28823" fg:w="6"/><text x="95.3472%" y="543.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (6 samples, 0.02%)</title><rect x="95.4898%" y="485" width="0.0198%" height="15" fill="rgb(253,85,4)" fg:x="28942" fg:w="6"/><text x="95.7398%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (19 samples, 0.06%)</title><rect x="95.5096%" y="485" width="0.0627%" height="15" fill="rgb(243,70,31)" fg:x="28948" fg:w="19"/><text x="95.7596%" y="495.50"></text></g><g><title>[libc.so.6] (7 samples, 0.02%)</title><rect x="95.5492%" y="469" width="0.0231%" height="15" fill="rgb(253,195,26)" fg:x="28960" fg:w="7"/><text x="95.7992%" y="479.50"></text></g><g><title>&lt;nu_ansi_term::ansi::Suffix as core::fmt::Display&gt;::fmt (88 samples, 0.29%)</title><rect x="95.3281%" y="517" width="0.2903%" height="15" fill="rgb(243,42,11)" fg:x="28893" fg:w="88"/><text x="95.5781%" y="527.50"></text></g><g><title>core::fmt::write (69 samples, 0.23%)</title><rect x="95.3908%" y="501" width="0.2277%" height="15" fill="rgb(239,66,17)" fg:x="28912" fg:w="69"/><text x="95.6408%" y="511.50"></text></g><g><title>core::fmt::Formatter::pad (12 samples, 0.04%)</title><rect x="95.5789%" y="485" width="0.0396%" height="15" fill="rgb(217,132,21)" fg:x="28969" fg:w="12"/><text x="95.8289%" y="495.50"></text></g><g><title>core::fmt::write (112 samples, 0.37%)</title><rect x="95.8197%" y="501" width="0.3695%" height="15" fill="rgb(252,202,21)" fg:x="29042" fg:w="112"/><text x="96.0697%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (52 samples, 0.17%)</title><rect x="96.0177%" y="485" width="0.1716%" height="15" fill="rgb(233,98,36)" fg:x="29102" fg:w="52"/><text x="96.2677%" y="495.50"></text></g><g><title>[libc.so.6] (26 samples, 0.09%)</title><rect x="96.1035%" y="469" width="0.0858%" height="15" fill="rgb(216,153,54)" fg:x="29128" fg:w="26"/><text x="96.3535%" y="479.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::FmtLevel as core::fmt::Display&gt;::fmt (553 samples, 1.82%)</title><rect x="94.6386%" y="581" width="1.8245%" height="15" fill="rgb(250,99,7)" fg:x="28684" fg:w="553"/><text x="94.8886%" y="591.50">&lt;..</text></g><g><title>core::fmt::write (512 samples, 1.69%)</title><rect x="94.7738%" y="565" width="1.6893%" height="15" fill="rgb(207,56,50)" fg:x="28725" fg:w="512"/><text x="95.0238%" y="575.50"></text></g><g><title>&lt;nu_ansi_term::display::AnsiGenericString&lt;str&gt; as core::fmt::Display&gt;::fmt (484 samples, 1.60%)</title><rect x="94.8662%" y="549" width="1.5969%" height="15" fill="rgb(244,61,34)" fg:x="28753" fg:w="484"/><text x="95.1162%" y="559.50"></text></g><g><title>core::fmt::write (408 samples, 1.35%)</title><rect x="95.1170%" y="533" width="1.3461%" height="15" fill="rgb(241,50,38)" fg:x="28829" fg:w="408"/><text x="95.3670%" y="543.50"></text></g><g><title>nu_ansi_term::ansi::&lt;impl nu_ansi_term::style::Style&gt;::write_prefix (256 samples, 0.84%)</title><rect x="95.6185%" y="517" width="0.8446%" height="15" fill="rgb(212,166,30)" fg:x="28981" fg:w="256"/><text x="95.8685%" y="527.50"></text></g><g><title>nu_ansi_term::ansi::&lt;impl nu_ansi_term::style::Color&gt;::write_foreground_code (83 samples, 0.27%)</title><rect x="96.1893%" y="501" width="0.2738%" height="15" fill="rgb(249,127,32)" fg:x="29154" fg:w="83"/><text x="96.4393%" y="511.50"></text></g><g><title>core::fmt::write (68 samples, 0.22%)</title><rect x="96.2387%" y="485" width="0.2244%" height="15" fill="rgb(209,103,0)" fg:x="29169" fg:w="68"/><text x="96.4887%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (34 samples, 0.11%)</title><rect x="96.3509%" y="469" width="0.1122%" height="15" fill="rgb(238,209,51)" fg:x="29203" fg:w="34"/><text x="96.6009%" y="479.50"></text></g><g><title>[libc.so.6] (16 samples, 0.05%)</title><rect x="96.4103%" y="453" width="0.0528%" height="15" fill="rgb(237,56,23)" fg:x="29221" fg:w="16"/><text x="96.6603%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_fmt (11 samples, 0.04%)</title><rect x="96.7270%" y="565" width="0.0363%" height="15" fill="rgb(215,153,46)" fg:x="29317" fg:w="11"/><text x="96.9770%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_char (15 samples, 0.05%)</title><rect x="97.1197%" y="549" width="0.0495%" height="15" fill="rgb(224,49,31)" fg:x="29436" fg:w="15"/><text x="97.3697%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (61 samples, 0.20%)</title><rect x="97.1692%" y="549" width="0.2013%" height="15" fill="rgb(250,18,42)" fg:x="29451" fg:w="61"/><text x="97.4192%" y="559.50"></text></g><g><title>[libc.so.6] (22 samples, 0.07%)</title><rect x="97.2978%" y="533" width="0.0726%" height="15" fill="rgb(215,176,39)" fg:x="29490" fg:w="22"/><text x="97.5478%" y="543.50"></text></g><g><title>core::fmt::write (2,142 samples, 7.07%)</title><rect x="90.3098%" y="597" width="7.0672%" height="15" fill="rgb(223,77,29)" fg:x="27372" fg:w="2142"/><text x="90.5598%" y="607.50">core::fmt..</text></g><g><title>nu_ansi_term::ansi::&lt;impl nu_ansi_term::style::Style&gt;::write_prefix (276 samples, 0.91%)</title><rect x="96.4664%" y="581" width="0.9106%" height="15" fill="rgb(234,94,52)" fg:x="29238" fg:w="276"/><text x="96.7164%" y="591.50"></text></g><g><title>core::fmt::write (186 samples, 0.61%)</title><rect x="96.7633%" y="565" width="0.6137%" height="15" fill="rgb(220,154,50)" fg:x="29328" fg:w="186"/><text x="97.0133%" y="575.50"></text></g><g><title>&lt;core::fmt::Arguments as tracing_core::field::Value&gt;::record (11 samples, 0.04%)</title><rect x="97.4760%" y="581" width="0.0363%" height="15" fill="rgb(212,11,10)" fg:x="29544" fg:w="11"/><text x="97.7260%" y="591.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::Writer as core::fmt::Write&gt;::write_fmt (4 samples, 0.01%)</title><rect x="97.6806%" y="565" width="0.0132%" height="15" fill="rgb(205,166,19)" fg:x="29606" fg:w="4"/><text x="97.9306%" y="575.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (44 samples, 0.15%)</title><rect x="97.7597%" y="549" width="0.1452%" height="15" fill="rgb(244,198,16)" fg:x="29630" fg:w="44"/><text x="98.0097%" y="559.50"></text></g><g><title>&lt;core::fmt::Arguments as core::fmt::Debug&gt;::fmt (5 samples, 0.02%)</title><rect x="97.9049%" y="549" width="0.0165%" height="15" fill="rgb(219,69,12)" fg:x="29674" fg:w="5"/><text x="98.1549%" y="559.50"></text></g><g><title>core::fmt::write (133 samples, 0.44%)</title><rect x="97.6938%" y="565" width="0.4388%" height="15" fill="rgb(245,30,7)" fg:x="29610" fg:w="133"/><text x="97.9438%" y="575.50"></text></g><g><title>core::fmt::write (64 samples, 0.21%)</title><rect x="97.9214%" y="549" width="0.2112%" height="15" fill="rgb(218,221,48)" fg:x="29679" fg:w="64"/><text x="98.1714%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (35 samples, 0.12%)</title><rect x="98.0171%" y="533" width="0.1155%" height="15" fill="rgb(216,66,15)" fg:x="29708" fg:w="35"/><text x="98.2671%" y="543.50"></text></g><g><title>[libc.so.6] (27 samples, 0.09%)</title><rect x="98.0435%" y="517" width="0.0891%" height="15" fill="rgb(226,122,50)" fg:x="29716" fg:w="27"/><text x="98.2935%" y="527.50"></text></g><g><title>tracing_core::field::Field::name (20 samples, 0.07%)</title><rect x="98.1326%" y="565" width="0.0660%" height="15" fill="rgb(239,156,16)" fg:x="29743" fg:w="20"/><text x="98.3826%" y="575.50"></text></g><g><title>tracing_core::field::ValueSet::record (250 samples, 0.82%)</title><rect x="97.3770%" y="597" width="0.8248%" height="15" fill="rgb(224,27,38)" fg:x="29514" fg:w="250"/><text x="97.6270%" y="607.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::DefaultVisitor as tracing_core::field::Visit&gt;::record_debug (209 samples, 0.69%)</title><rect x="97.5123%" y="581" width="0.6896%" height="15" fill="rgb(224,39,27)" fg:x="29555" fg:w="209"/><text x="97.7623%" y="591.50"></text></g><g><title>tracing_subscriber::fmt::format::Writer::write_fmt (42 samples, 0.14%)</title><rect x="98.2019%" y="597" width="0.1386%" height="15" fill="rgb(215,92,29)" fg:x="29764" fg:w="42"/><text x="98.4519%" y="607.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::Format&lt;tracing_subscriber::fmt::format::Full,T&gt; as tracing_subscriber::fmt::format::FormatEvent&lt;S,N&gt;&gt;::format_event (4,678 samples, 15.43%)</title><rect x="83.3977%" y="613" width="15.4344%" height="15" fill="rgb(207,159,16)" fg:x="25277" fg:w="4678"/><text x="83.6477%" y="623.50">&lt;tracing_subscriber::fmt..</text></g><g><title>tracing_subscriber::layer::context::Context&lt;S&gt;::event_scope (149 samples, 0.49%)</title><rect x="98.3404%" y="597" width="0.4916%" height="15" fill="rgb(238,163,47)" fg:x="29806" fg:w="149"/><text x="98.5904%" y="607.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::current_span (113 samples, 0.37%)</title><rect x="98.4592%" y="581" width="0.3728%" height="15" fill="rgb(219,91,49)" fg:x="29842" fg:w="113"/><text x="98.7092%" y="591.50"></text></g><g><title>&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_event (12,384 samples, 40.86%)</title><rect x="58.0257%" y="629" width="40.8592%" height="15" fill="rgb(227,167,31)" fg:x="17587" fg:w="12384"/><text x="58.2757%" y="639.50">&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subs..</text></g><g><title>std::io::stdio::stdout (16 samples, 0.05%)</title><rect x="98.8320%" y="613" width="0.0528%" height="15" fill="rgb(234,80,54)" fg:x="29955" fg:w="16"/><text x="99.0820%" y="623.50"></text></g><g><title>&lt;tracing_subscriber::fmt::Subscriber&lt;N,E,F,W&gt; as tracing_core::subscriber::Subscriber&gt;::event_enabled (12 samples, 0.04%)</title><rect x="98.9673%" y="613" width="0.0396%" height="15" fill="rgb(212,114,2)" fg:x="29996" fg:w="12"/><text x="99.2173%" y="623.50"></text></g><g><title>&lt;tokio_util::codec::framed_impl::FramedImpl&lt;T,U,R&gt; as futures_core::stream::Stream&gt;::poll_next (14,571 samples, 48.07%)</title><rect x="50.9816%" y="661" width="48.0748%" height="15" fill="rgb(234,50,24)" fg:x="15452" fg:w="14571"/><text x="51.2316%" y="671.50">&lt;tokio_util::codec::framed_impl::FramedImpl&lt;T,U,R&gt; as futures_core::stream::Str..</text></g><g><title>tracing_core::event::Event::dispatch (12,481 samples, 41.18%)</title><rect x="57.8772%" y="645" width="41.1792%" height="15" fill="rgb(221,68,8)" fg:x="17542" fg:w="12481"/><text x="58.1272%" y="655.50">tracing_core::event::Event::dispatch</text></g><g><title>tracing_core::dispatcher::get_default (52 samples, 0.17%)</title><rect x="98.8848%" y="629" width="0.1716%" height="15" fill="rgb(254,180,31)" fg:x="29971" fg:w="52"/><text x="99.1348%" y="639.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::event_enabled (15 samples, 0.05%)</title><rect x="99.0069%" y="613" width="0.0495%" height="15" fill="rgb(247,130,50)" fg:x="30008" fg:w="15"/><text x="99.2569%" y="623.50"></text></g><g><title>futures_util::lock::bilock::BiLock&lt;T&gt;::poll_lock (32 samples, 0.11%)</title><rect x="99.0663%" y="661" width="0.1056%" height="15" fill="rgb(211,109,4)" fg:x="30026" fg:w="32"/><text x="99.3163%" y="671.50"></text></g><g><title>malloc (6 samples, 0.02%)</title><rect x="99.1521%" y="645" width="0.0198%" height="15" fill="rgb(238,50,21)" fg:x="30052" fg:w="6"/><text x="99.4021%" y="655.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::schedule (10 samples, 0.03%)</title><rect x="99.1785%" y="645" width="0.0330%" height="15" fill="rgb(225,57,45)" fg:x="30060" fg:w="10"/><text x="99.4285%" y="655.50"></text></g><g><title>tokio::runtime::context::with_scheduler (9 samples, 0.03%)</title><rect x="99.1818%" y="629" width="0.0297%" height="15" fill="rgb(209,196,50)" fg:x="30061" fg:w="9"/><text x="99.4318%" y="639.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_local (6 samples, 0.02%)</title><rect x="99.1917%" y="613" width="0.0198%" height="15" fill="rgb(242,140,13)" fg:x="30064" fg:w="6"/><text x="99.4417%" y="623.50"></text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (14,744 samples, 48.65%)</title><rect x="50.5823%" y="677" width="48.6456%" height="15" fill="rgb(217,111,7)" fg:x="15331" fg:w="14744"/><text x="50.8323%" y="687.50">futures_util::stream::stream::StreamExt::poll_next_unpin</text></g><g><title>tokio::runtime::task::waker::wake_by_val (17 samples, 0.06%)</title><rect x="99.1719%" y="661" width="0.0561%" height="15" fill="rgb(253,193,51)" fg:x="30058" fg:w="17"/><text x="99.4219%" y="671.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_notified_by_val (4 samples, 0.01%)</title><rect x="99.2148%" y="645" width="0.0132%" height="15" fill="rgb(252,70,29)" fg:x="30071" fg:w="4"/><text x="99.4648%" y="655.50"></text></g><g><title>proxy::main::{{closure}}::{{closure}} (20,273 samples, 66.89%)</title><rect x="32.4260%" y="693" width="66.8877%" height="15" fill="rgb(232,127,12)" fg:x="9828" fg:w="20273"/><text x="32.6760%" y="703.50">proxy::main::{{closure}}::{{closure}}</text></g><g><title>tun::async::codec::TunPacket::new (26 samples, 0.09%)</title><rect x="99.2280%" y="677" width="0.0858%" height="15" fill="rgb(211,180,21)" fg:x="30075" fg:w="26"/><text x="99.4780%" y="687.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::convert::From&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;::from (4 samples, 0.01%)</title><rect x="99.3005%" y="661" width="0.0132%" height="15" fill="rgb(229,72,13)" fg:x="30097" fg:w="4"/><text x="99.5505%" y="671.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (21,223 samples, 70.02%)</title><rect x="29.3213%" y="709" width="70.0221%" height="15" fill="rgb(240,211,49)" fg:x="8887" fg:w="21223"/><text x="29.5713%" y="719.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::task::core::TaskIdGuard::enter (9 samples, 0.03%)</title><rect x="99.3137%" y="693" width="0.0297%" height="15" fill="rgb(219,149,40)" fg:x="30101" fg:w="9"/><text x="99.5637%" y="703.50"></text></g><g><title>tokio::runtime::task::state::State::ref_dec (13 samples, 0.04%)</title><rect x="99.3434%" y="709" width="0.0429%" height="15" fill="rgb(210,127,46)" fg:x="30110" fg:w="13"/><text x="99.5934%" y="719.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_idle (20 samples, 0.07%)</title><rect x="99.3863%" y="709" width="0.0660%" height="15" fill="rgb(220,106,7)" fg:x="30123" fg:w="20"/><text x="99.6363%" y="719.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (27,679 samples, 91.32%)</title><rect x="8.1890%" y="725" width="91.3227%" height="15" fill="rgb(249,31,22)" fg:x="2482" fg:w="27679"/><text x="8.4390%" y="735.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::task::state::State::transition_to_running (18 samples, 0.06%)</title><rect x="99.4523%" y="709" width="0.0594%" height="15" fill="rgb(253,1,49)" fg:x="30143" fg:w="18"/><text x="99.7023%" y="719.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (28,050 samples, 92.55%)</title><rect x="7.0606%" y="741" width="92.5468%" height="15" fill="rgb(227,144,33)" fg:x="2140" fg:w="28050"/><text x="7.3106%" y="751.50">tokio::runtime::scheduler::multi_thread::worker::Context::run_task</text></g><g><title>tokio::runtime::task::raw::poll (29 samples, 0.10%)</title><rect x="99.5117%" y="725" width="0.0957%" height="15" fill="rgb(249,163,44)" fg:x="30161" fg:w="29"/><text x="99.7617%" y="735.50"></text></g><g><title>[libc.so.6] (30,123 samples, 99.39%)</title><rect x="0.2936%" y="933" width="99.3863%" height="15" fill="rgb(234,15,39)" fg:x="89" fg:w="30123"/><text x="0.5436%" y="943.50">[libc.so.6]</text></g><g><title>[libc.so.6] (30,123 samples, 99.39%)</title><rect x="0.2936%" y="917" width="99.3863%" height="15" fill="rgb(207,66,16)" fg:x="89" fg:w="30123"/><text x="0.5436%" y="927.50">[libc.so.6]</text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (30,123 samples, 99.39%)</title><rect x="0.2936%" y="901" width="99.3863%" height="15" fill="rgb(233,112,24)" fg:x="89" fg:w="30123"/><text x="0.5436%" y="911.50">std::sys::pal::unix::thread::Thread::new::thread_start</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (30,123 samples, 99.39%)</title><rect x="0.2936%" y="885" width="99.3863%" height="15" fill="rgb(230,90,22)" fg:x="89" fg:w="30123"/><text x="0.5436%" y="895.50">core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (30,119 samples, 99.37%)</title><rect x="0.3068%" y="869" width="99.3731%" height="15" fill="rgb(229,61,13)" fg:x="93" fg:w="30119"/><text x="0.5568%" y="879.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>tokio::runtime::blocking::pool::Inner::run (30,119 samples, 99.37%)</title><rect x="0.3068%" y="853" width="99.3731%" height="15" fill="rgb(225,57,24)" fg:x="93" fg:w="30119"/><text x="0.5568%" y="863.50">tokio::runtime::blocking::pool::Inner::run</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (30,097 samples, 99.30%)</title><rect x="0.3794%" y="837" width="99.3005%" height="15" fill="rgb(208,169,48)" fg:x="115" fg:w="30097"/><text x="0.6294%" y="847.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (30,097 samples, 99.30%)</title><rect x="0.3794%" y="821" width="99.3005%" height="15" fill="rgb(244,218,51)" fg:x="115" fg:w="30097"/><text x="0.6294%" y="831.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run (30,097 samples, 99.30%)</title><rect x="0.3794%" y="805" width="99.3005%" height="15" fill="rgb(214,148,10)" fg:x="115" fg:w="30097"/><text x="0.6294%" y="815.50">tokio::runtime::scheduler::multi_thread::worker::run</text></g><g><title>tokio::runtime::context::runtime::enter_runtime (30,097 samples, 99.30%)</title><rect x="0.3794%" y="789" width="99.3005%" height="15" fill="rgb(225,174,27)" fg:x="115" fg:w="30097"/><text x="0.6294%" y="799.50">tokio::runtime::context::runtime::enter_runtime</text></g><g><title>tokio::runtime::context::set_scheduler (30,097 samples, 99.30%)</title><rect x="0.3794%" y="773" width="99.3005%" height="15" fill="rgb(230,96,26)" fg:x="115" fg:w="30097"/><text x="0.6294%" y="783.50">tokio::runtime::context::set_scheduler</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (30,097 samples, 99.30%)</title><rect x="0.3794%" y="757" width="99.3005%" height="15" fill="rgb(232,10,30)" fg:x="115" fg:w="30097"/><text x="0.6294%" y="767.50">tokio::runtime::scheduler::multi_thread::worker::Context::run</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::maintenance (22 samples, 0.07%)</title><rect x="99.6074%" y="741" width="0.0726%" height="15" fill="rgb(222,8,50)" fg:x="30190" fg:w="22"/><text x="99.8574%" y="751.50"></text></g><g><title>&lt;std::io::stdio::StdoutRaw as std::io::Write&gt;::write_all (7 samples, 0.02%)</title><rect x="99.6866%" y="917" width="0.0231%" height="15" fill="rgb(213,81,27)" fg:x="30214" fg:w="7"/><text x="99.9366%" y="927.50"></text></g><g><title>__write (7 samples, 0.02%)</title><rect x="99.6866%" y="901" width="0.0231%" height="15" fill="rgb(245,50,10)" fg:x="30214" fg:w="7"/><text x="99.9366%" y="911.50"></text></g><g><title>entry_SYSCALL_64 (5 samples, 0.02%)</title><rect x="99.6932%" y="885" width="0.0165%" height="15" fill="rgb(216,100,18)" fg:x="30216" fg:w="5"/><text x="99.9432%" y="895.50"></text></g><g><title>__write (13 samples, 0.04%)</title><rect x="99.7130%" y="917" width="0.0429%" height="15" fill="rgb(236,147,54)" fg:x="30222" fg:w="13"/><text x="99.9630%" y="927.50"></text></g><g><title>entry_SYSCALL_64 (13 samples, 0.04%)</title><rect x="99.7130%" y="901" width="0.0429%" height="15" fill="rgb(205,143,26)" fg:x="30222" fg:w="13"/><text x="99.9630%" y="911.50"></text></g><g><title>[unknown] (33 samples, 0.11%)</title><rect x="99.6800%" y="933" width="0.1089%" height="15" fill="rgb(236,26,9)" fg:x="30212" fg:w="33"/><text x="99.9300%" y="943.50"></text></g><g><title>tokio::io::async_fd::AsyncFdReadyMutGuard&lt;Inner&gt;::try_io (7 samples, 0.02%)</title><rect x="99.7657%" y="917" width="0.0231%" height="15" fill="rgb(221,165,53)" fg:x="30238" fg:w="7"/><text x="100.0157%" y="927.50"></text></g><g><title>writev (7 samples, 0.02%)</title><rect x="99.7657%" y="901" width="0.0231%" height="15" fill="rgb(214,110,17)" fg:x="30238" fg:w="7"/><text x="100.0157%" y="911.50"></text></g><g><title>entry_SYSCALL_64 (7 samples, 0.02%)</title><rect x="99.7657%" y="885" width="0.0231%" height="15" fill="rgb(237,197,12)" fg:x="30238" fg:w="7"/><text x="100.0157%" y="895.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (22 samples, 0.07%)</title><rect x="99.7888%" y="933" width="0.0726%" height="15" fill="rgb(205,84,17)" fg:x="30245" fg:w="22"/><text x="100.0388%" y="943.50"></text></g><g><title>entry_SYSCALL_64_safe_stack (32 samples, 0.11%)</title><rect x="99.8614%" y="933" width="0.1056%" height="15" fill="rgb(237,18,45)" fg:x="30267" fg:w="32"/><text x="100.1114%" y="943.50"></text></g><g><title>all (30,309 samples, 100%)</title><rect x="0.0000%" y="965" width="100.0000%" height="15" fill="rgb(221,87,14)" fg:x="0" fg:w="30309"/><text x="0.2500%" y="975.50"></text></g><g><title>tokio-runtime-w (30,278 samples, 99.90%)</title><rect x="0.1023%" y="949" width="99.8977%" height="15" fill="rgb(238,186,15)" fg:x="31" fg:w="30278"/><text x="0.3523%" y="959.50">tokio-runtime-w</text></g><g><title>syscall_return_via_sysret (9 samples, 0.03%)</title><rect x="99.9703%" y="933" width="0.0297%" height="15" fill="rgb(208,115,11)" fg:x="30300" fg:w="9"/><text x="100.2203%" y="943.50"></text></g></svg></svg>